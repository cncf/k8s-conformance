  I1006 10:54:48.721943      24 e2e.go:109] Starting e2e run "8e4a5c1b-e1c8-4795-a43a-8c67c9ce2a95" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1759748087 - will randomize all specs

Will run 419 of 6735 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1006 10:54:48.972733 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 10:54:48.974750 24 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1006 10:54:49.012116 24 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1006 10:54:49.016965 24 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I1006 10:54:49.017074 24 e2e.go:245] e2e test version: v1.33.5
  I1006 10:54:49.019052 24 e2e.go:254] kube-apiserver version: v1.33.5-ckp
  I1006 10:54:49.019246 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 10:54:49.024002 24 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.051 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 10/06/25 10:54:49.233
  I1006 10:54:49.233344 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 10:54:49.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 10:54:49.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 10:54:49.262
  STEP: Creating projection with secret that has name secret-emptykey-test-afb33f0f-11ae-4b54-921c-3b32b44c1e3a @ 10/06/25 10:54:49.267
  I1006 10:54:49.270234 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8291" for this suite. @ 10/06/25 10:54:49.275
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 10/06/25 10:54:49.285
  I1006 10:54:49.285643 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename endpointslice @ 10/06/25 10:54:49.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 10:54:49.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 10:54:49.312
  STEP: getting /apis @ 10/06/25 10:54:49.316
  STEP: getting /apis/discovery.k8s.io @ 10/06/25 10:54:49.322
  STEP: getting /apis/discovery.k8s.iov1 @ 10/06/25 10:54:49.324
  STEP: creating @ 10/06/25 10:54:49.325
  STEP: getting @ 10/06/25 10:54:49.35
  STEP: listing @ 10/06/25 10:54:49.354
  STEP: watching @ 10/06/25 10:54:49.358
  I1006 10:54:49.358932 24 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 10/06/25 10:54:49.36
  STEP: cluster-wide watching @ 10/06/25 10:54:49.364
  I1006 10:54:49.364202 24 endpointslice.go:459] starting watch
  STEP: patching @ 10/06/25 10:54:49.365
  STEP: updating @ 10/06/25 10:54:49.372
  I1006 10:54:49.388324 24 endpointslice.go:482] waiting for watch events with expected annotations
  I1006 10:54:49.388629 24 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 10/06/25 10:54:49.388
  STEP: deleting a collection @ 10/06/25 10:54:49.403
  I1006 10:54:49.421381 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-433" for this suite. @ 10/06/25 10:54:49.426
• [0.150 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 10/06/25 10:54:49.436
  I1006 10:54:49.436290 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 10:54:49.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 10:54:49.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 10:54:49.463
  STEP: Creating the pod @ 10/06/25 10:54:49.469
  I1006 10:54:52.033262 24 pod_client.go:173] Successfully updated pod "annotationupdate1d0293a6-709e-4d63-96fa-3234d26b826f"
  I1006 10:54:54.053275 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6569" for this suite. @ 10/06/25 10:54:54.061
• [4.633 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 10/06/25 10:54:54.072
  I1006 10:54:54.072638 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename cronjob @ 10/06/25 10:54:54.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 10:54:54.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 10:54:54.105
  STEP: Creating a ReplaceConcurrent cronjob @ 10/06/25 10:54:54.108
  STEP: Ensuring a job is scheduled @ 10/06/25 10:54:54.115
  STEP: Ensuring exactly one is scheduled @ 10/06/25 10:55:00.129
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/06/25 10:55:00.131
  STEP: Ensuring the job is replaced with a new one @ 10/06/25 10:55:00.136
  STEP: Removing cronjob @ 10/06/25 10:56:00.141
  I1006 10:56:00.167656 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8680" for this suite. @ 10/06/25 10:56:00.174
• [66.117 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 10/06/25 10:56:00.188
  I1006 10:56:00.188343 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 10:56:00.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 10:56:00.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 10:56:00.215
  STEP: Setting up server cert @ 10/06/25 10:56:00.244
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 10:56:00.833
  STEP: Deploying the webhook pod @ 10/06/25 10:56:00.846
  STEP: Wait for the deployment to be ready @ 10/06/25 10:56:00.866
  I1006 10:56:00.873195 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 10/06/25 10:56:02.883
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 10:56:02.921
  I1006 10:56:03.922630 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 10/06/25 10:56:03.927
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/06/25 10:56:03.952
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 10/06/25 10:56:03.961
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/06/25 10:56:03.975
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 10/06/25 10:56:03.988
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/06/25 10:56:04.001
  I1006 10:56:04.088672 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8749" for this suite. @ 10/06/25 10:56:04.103
  STEP: Destroying namespace "webhook-markers-8794" for this suite. @ 10/06/25 10:56:04.12
• [3.941 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 10/06/25 10:56:04.129
  I1006 10:56:04.129250 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename taint-single-pod @ 10/06/25 10:56:04.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 10:56:04.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 10:56:04.155
  I1006 10:56:04.157957 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I1006 10:57:04.158757 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I1006 10:57:04.164081 24 taints.go:144] Starting informer...
  STEP: Starting pod... @ 10/06/25 10:57:04.164
  I1006 10:57:04.381651 24 taints.go:294] Pod is running on cncf-1-33-script-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/06/25 10:57:04.381
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/06/25 10:57:04.4
  STEP: Waiting short time to make sure Pod is queued for deletion @ 10/06/25 10:57:04.403
  I1006 10:57:04.403824 24 taints.go:313] Pod wasn't evicted. Proceeding
  I1006 10:57:04.404143 24 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/06/25 10:57:04.421
  STEP: Waiting some time to make sure that toleration time passed. @ 10/06/25 10:57:04.425
  I1006 10:58:19.425486 24 taints.go:329] Pod wasn't evicted. Test successful
  I1006 10:58:19.425989 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-8262" for this suite. @ 10/06/25 10:58:19.429
• [135.316 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 10/06/25 10:58:19.445
  I1006 10:58:19.445614 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 10:58:19.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 10:58:19.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 10:58:19.467
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 10:58:19.47
  STEP: Saw pod success @ 10/06/25 10:58:23.499
  I1006 10:58:23.501799 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod downwardapi-volume-daa659ea-b9cf-488b-b6d1-56de50bbc3f2 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 10:58:23.516
  I1006 10:58:23.541838 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5869" for this suite. @ 10/06/25 10:58:23.545
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 10/06/25 10:58:23.553
  I1006 10:58:23.553955 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/06/25 10:58:23.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 10:58:23.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 10:58:23.575
  STEP: set up a multi version CRD @ 10/06/25 10:58:23.578
  I1006 10:58:23.579763 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: mark a version not serverd @ 10/06/25 10:58:26.995
  STEP: check the unserved version gets removed @ 10/06/25 10:58:27.016
  STEP: check the other version is not changed @ 10/06/25 10:58:27.771
  I1006 10:58:30.424770 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3969" for this suite. @ 10/06/25 10:58:30.433
• [6.886 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 10/06/25 10:58:30.44
  I1006 10:58:30.440708 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 10:58:30.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 10:58:30.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 10:58:30.473
  I1006 10:58:30.517954 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2251" for this suite. @ 10/06/25 10:58:30.534
• [0.102 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 10/06/25 10:58:30.542
  I1006 10:58:30.542753 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 10:58:30.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 10:58:30.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 10:58:30.564
  STEP: Creating resourceQuota "e2e-rq-status-zzrpd" @ 10/06/25 10:58:30.576
  I1006 10:58:30.586705 24 resource_quota.go:1106] Resource quota "e2e-rq-status-zzrpd" reports spec: hard cpu limit of 500m
  I1006 10:58:30.586803 24 resource_quota.go:1108] Resource quota "e2e-rq-status-zzrpd" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-zzrpd" /status @ 10/06/25 10:58:30.586
  STEP: Confirm /status for "e2e-rq-status-zzrpd" resourceQuota via watch @ 10/06/25 10:58:30.596
  I1006 10:58:30.598324 24 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-zzrpd" in namespace "resourcequota-4200" with hard status: v1.ResourceList(nil)
  I1006 10:58:30.598566 24 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-zzrpd" in namespace "resourcequota-4200" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1006 10:58:30.598596 24 resource_quota.go:1145] ResourceQuota "e2e-rq-status-zzrpd" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 10/06/25 10:58:30.6
  I1006 10:58:30.609828 24 resource_quota.go:1156] Resource quota "e2e-rq-status-zzrpd" reports spec: hard cpu limit of 1
  I1006 10:58:30.609888 24 resource_quota.go:1157] Resource quota "e2e-rq-status-zzrpd" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-zzrpd" /status @ 10/06/25 10:58:30.609
  STEP: Confirm /status for "e2e-rq-status-zzrpd" resourceQuota via watch @ 10/06/25 10:58:30.619
  I1006 10:58:30.621319 24 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-zzrpd" in namespace "resourcequota-4200" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1006 10:58:30.621450 24 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-zzrpd" in namespace "resourcequota-4200" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1006 10:58:30.621596 24 resource_quota.go:1189] ResourceQuota "e2e-rq-status-zzrpd" /status was patched
  STEP: Get "e2e-rq-status-zzrpd" /status @ 10/06/25 10:58:30.621
  I1006 10:58:30.625009 24 resource_quota.go:1200] Resourcequota "e2e-rq-status-zzrpd" reports status: hard cpu of 1
  I1006 10:58:30.625082 24 resource_quota.go:1202] Resourcequota "e2e-rq-status-zzrpd" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-zzrpd" /status before checking Spec is unchanged @ 10/06/25 10:58:30.627
  I1006 10:58:30.634322 24 resource_quota.go:1222] Resourcequota "e2e-rq-status-zzrpd" reports status: hard cpu of 2
  I1006 10:58:30.634449 24 resource_quota.go:1224] Resourcequota "e2e-rq-status-zzrpd" reports status: hard memory of 2Gi
  I1006 10:58:30.636449 24 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-zzrpd" in namespace "resourcequota-4200" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1006 10:58:30.639199 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6ee28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6ee58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6ee88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:58:35.640028 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012890b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012890e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289110), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:58:40.641756 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6ef90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6efc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6eff0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:58:45.641167 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289200), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289230), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:58:50.641185 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289320), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289350), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289380), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:58:55.642166 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289470), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012894a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012894d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:00.639786 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f128), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f158), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f188), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:05.640726 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012895c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012895f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289620), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:10.641144 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289710), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289740), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289770), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:15.641221 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289860), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289890), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012898c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:20.641894 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012899b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012899e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289a10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:25.641537 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289b00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289b30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289b60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:30.641012 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289c50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289c80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289cb0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:35.641104 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f260), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f290), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f2c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:40.641813 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f3b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f3e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f410), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:45.641634 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f500), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f530), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:50.641418 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f668), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f698), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f6c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 10:59:55.642094 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f7d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f800), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6f830), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:00.641589 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004be0768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004be0798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004be07c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:05.640739 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004be08a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004be08d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004be0900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:10.640355 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289dd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289e00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289e30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:15.642974 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004be09f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004be0a20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004be0a50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:20.641747 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289f20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001289f50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06000), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:25.642429 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d060c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d060f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:30.640638 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d060c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:35.640341 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d061c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:40.641114 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d062e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:45.640157 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:50.643316 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007000a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007000f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000700120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:00:55.641285 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d065b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:00.641690 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000700210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000700240), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000700270), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:05.640687 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d066f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06720), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06750), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:10.640780 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:15.641551 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e0d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:20.642176 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e2b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:25.642952 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06978), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d069a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d069f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:30.644789 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e3c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e3f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:35.641373 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e4f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e570), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:40.640154 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007003a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007003d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000700408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:45.640051 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e690), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:50.641823 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06b40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06b70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06ba0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:01:55.640830 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e7b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e7e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:00.641572 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06cc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06cf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06d20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:05.640736 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06de0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06e28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06e70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:10.640780 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000700528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000700558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000700588), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:15.641113 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06f78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06fa8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d06fd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:20.641851 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000700798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007007f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000700858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:25.641791 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d070f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d07128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d07158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:30.642442 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e9a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e9d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:35.643403 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e0a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:40.641620 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012880a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012880d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:45.641138 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e1f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:50.640879 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012881f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:02:55.641258 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:03:00.641961 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288498), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:03:05.642454 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e3c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e3f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:03:10.641650 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012885b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012885e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:03:15.662471 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e4e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:03:20.641876 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012886f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288720), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001288750), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:03:25.640910 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-zzrpd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zzrpd", GenerateName:"", Namespace:"resourcequota-4200", SelfLink:"", UID:"f1cec362-f6a5-46da-9c3e-80d874d0785a", ResourceVersion:"45478", Generation:0, CreationTimestamp:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zzrpd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 10, 58, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c6e690), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1006 11:03:30.640619 24 resource_quota.go:1264] ResourceQuota "e2e-rq-status-zzrpd" Spec was unchanged and /status reset
  I1006 11:03:30.640991 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4200" for this suite. @ 10/06/25 11:03:30.644
• [300.109 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 10/06/25 11:03:30.652
  I1006 11:03:30.652677 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename dns @ 10/06/25 11:03:30.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:03:30.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:03:30.669
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 10/06/25 11:03:30.681
  I1006 11:03:30.691170 24 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2530  dd586fee-2e38-4b41-976f-2f15d8c8a485 45942 1 2025-10-06 11:03:30 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-10-06 11:03:30 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-48khg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-48khg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 10/06/25 11:03:32.698
  I1006 11:03:32.699259 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2530 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:03:32.699530 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:03:32.699781 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/dns-2530/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I1006 11:03:32.770010 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 10/06/25 11:03:32.77
  I1006 11:03:32.770105 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2530 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:03:32.770118 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:03:32.770180 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/dns-2530/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I1006 11:03:32.828425 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 11:03:32.828596 24 dns.go:451] Deleting pod test-dns-nameservers...
  I1006 11:03:32.849938 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2530" for this suite. @ 10/06/25 11:03:32.853
• [2.211 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 10/06/25 11:03:32.865
  I1006 11:03:32.865392 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename statefulset @ 10/06/25 11:03:32.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:03:32.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:03:32.884
  STEP: Creating service test in namespace statefulset-9095 @ 10/06/25 11:03:32.887
  STEP: Creating stateful set ss in namespace statefulset-9095 @ 10/06/25 11:03:32.893
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9095 @ 10/06/25 11:03:32.906
  I1006 11:03:32.908935 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I1006 11:03:42.910148 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 10/06/25 11:03:42.91
  I1006 11:03:42.912816 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-9095 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1006 11:03:43.054651 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1006 11:03:43.054719 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1006 11:03:43.054742 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1006 11:03:43.058429 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1006 11:03:53.062132 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1006 11:03:53.062201 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I1006 11:03:53.082931 24 resource.go:168] POD   NODE                PHASE    GRACE  CONDITIONS
  I1006 11:03:53.083011 24 resource.go:175] ss-0  cncf-1-33-script-2  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:34 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:32 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:32 +0000 UTC  }]
  I1006 11:03:53.083022 24 resource.go:178] 
  I1006 11:03:53.083032 24 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 1
  I1006 11:03:54.089520 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.991929734s
  I1006 11:03:55.093407 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.986199792s
  I1006 11:03:56.096996 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.982207504s
  I1006 11:03:57.101009 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.978675255s
  I1006 11:03:58.105865 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.974627508s
  I1006 11:03:59.110439 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.968953668s
  I1006 11:04:00.116055 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.965257419s
  I1006 11:04:01.120719 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.959570138s
  I1006 11:04:02.125067 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 955.02652ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9095 @ 10/06/25 11:04:03.125
  I1006 11:04:03.130032 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-9095 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1006 11:04:03.296842 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1006 11:04:03.296944 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1006 11:04:03.296966 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1006 11:04:03.297270 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-9095 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1006 11:04:03.443322 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1006 11:04:03.443486 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1006 11:04:03.443501 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1006 11:04:03.443573 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-9095 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1006 11:04:03.578156 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1006 11:04:03.578513 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1006 11:04:03.578537 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1006 11:04:03.582788 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1006 11:04:03.582869 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1006 11:04:03.582885 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 10/06/25 11:04:03.582
  I1006 11:04:03.586232 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-9095 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1006 11:04:03.731865 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1006 11:04:03.731951 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1006 11:04:03.731973 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1006 11:04:03.732060 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-9095 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1006 11:04:03.901056 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1006 11:04:03.901122 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1006 11:04:03.901139 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1006 11:04:03.901236 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-9095 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1006 11:04:04.052534 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1006 11:04:04.052599 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1006 11:04:04.052615 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1006 11:04:04.052630 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I1006 11:04:04.055976 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1006 11:04:14.063796 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1006 11:04:14.063875 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1006 11:04:14.063890 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1006 11:04:14.092622 24 resource.go:168] POD   NODE                PHASE    GRACE  CONDITIONS
  I1006 11:04:14.092742 24 resource.go:175] ss-0  cncf-1-33-script-2  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:34 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:32 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:04:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:04:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:32 +0000 UTC  }]
  I1006 11:04:14.092787 24 resource.go:175] ss-1  cncf-1-33-script-3  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:54 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:53 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:04:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:04:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:53 +0000 UTC  }]
  I1006 11:04:14.092823 24 resource.go:175] ss-2  cncf-1-33-script-2  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:54 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:53 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:04:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:04:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:03:53 +0000 UTC  }]
  I1006 11:04:14.092842 24 resource.go:178] 
  I1006 11:04:14.092853 24 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  I1006 11:04:15.098206 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 8.982867753s
  I1006 11:04:16.114686 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.977468095s
  I1006 11:04:17.120283 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.96112326s
  I1006 11:04:18.126474 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.955435748s
  I1006 11:04:19.132586 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.948370466s
  I1006 11:04:20.138529 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.942310098s
  I1006 11:04:21.142353 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.936869045s
  I1006 11:04:22.146670 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.933408484s
  I1006 11:04:23.151407 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 929.121817ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9095 @ 10/06/25 11:04:24.151
  I1006 11:04:24.155897 24 rest.go:153] Scaling statefulset ss to 0
  I1006 11:04:24.161313 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1006 11:04:24.163968 24 statefulset.go:138] Deleting all statefulset in ns statefulset-9095
  I1006 11:04:24.166215 24 rest.go:153] Scaling statefulset ss to 0
  I1006 11:04:24.169717 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1006 11:04:24.171690 24 rest.go:91] Deleting statefulset ss
  I1006 11:04:24.187142 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9095" for this suite. @ 10/06/25 11:04:24.201
• [51.348 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 10/06/25 11:04:24.213
  I1006 11:04:24.213278 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 11:04:24.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:04:24.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:04:24.23
  STEP: Setting up server cert @ 10/06/25 11:04:24.256
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 11:04:24.799
  STEP: Deploying the webhook pod @ 10/06/25 11:04:24.807
  STEP: Wait for the deployment to be ready @ 10/06/25 11:04:24.828
  I1006 11:04:24.839839 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 11:04:26.849
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 11:04:26.878
  I1006 11:04:27.878354 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 10/06/25 11:04:27.881
  STEP: create a pod that should be updated by the webhook @ 10/06/25 11:04:27.903
  I1006 11:04:28.012436 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1391" for this suite. @ 10/06/25 11:04:28.021
  STEP: Destroying namespace "webhook-markers-7890" for this suite. @ 10/06/25 11:04:28.043
• [3.842 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 10/06/25 11:04:28.056
  I1006 11:04:28.056398 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:04:28.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:04:28.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:04:28.073
  STEP: Creating configMap configmap-7305/configmap-test-66eb6eee-ea05-48d4-b7f2-d821c28df770 @ 10/06/25 11:04:28.076
  STEP: Creating a pod to test consume configMaps @ 10/06/25 11:04:28.087
  STEP: Saw pod success @ 10/06/25 11:04:32.107
  I1006 11:04:32.109798 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-configmaps-ed9102bc-2352-41ed-860c-4d1d8a3c258d container env-test: <nil>
  STEP: delete the pod @ 10/06/25 11:04:32.126
  I1006 11:04:32.147063 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7305" for this suite. @ 10/06/25 11:04:32.149
• [4.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 10/06/25 11:04:32.156
  I1006 11:04:32.156882 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-probe @ 10/06/25 11:04:32.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:04:32.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:04:32.176
  STEP: Creating pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368 @ 10/06/25 11:04:32.179
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/06/25 11:04:34.197
  I1006 11:04:34.200245 24 container_probe.go:1748] Initial restart count of pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b is 0
  I1006 11:04:34.202982 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:36.206526 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:38.211227 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:40.218772 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:42.225416 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:44.231649 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:46.240982 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:48.249585 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:50.256242 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:52.260398 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:54.265105 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:56.269754 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:04:58.275399 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:00.279851 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:02.283391 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:04.288465 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:06.293372 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:08.298235 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:10.303200 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:12.308257 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:14.313965 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:16.319257 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:18.323433 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:20.327658 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:22.332069 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:24.336325 24 container_probe.go:1758] Get pod busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b in namespace container-probe-5368
  I1006 11:05:24.336375 24 container_probe.go:1762] Restart count of pod container-probe-5368/busybox-c09c8e4c-ddbe-4dd8-8573-4fa2e72fcf1b is now 1 (50.13593992s elapsed)
  STEP: deleting the pod @ 10/06/25 11:05:24.336
  I1006 11:05:24.349396 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5368" for this suite. @ 10/06/25 11:05:24.358
• [52.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 10/06/25 11:05:24.367
  I1006 11:05:24.367971 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 11:05:24.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:05:24.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:05:24.385
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:05:24.394
  STEP: Saw pod success @ 10/06/25 11:05:28.422
  I1006 11:05:28.426598 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-11d33a99-3615-4efc-837f-c6dba733d6c2 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:05:28.435
  I1006 11:05:28.458360 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2960" for this suite. @ 10/06/25 11:05:28.462
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 10/06/25 11:05:28.479
  I1006 11:05:28.479506 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 11:05:28.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:05:28.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:05:28.505
  STEP: Setting up server cert @ 10/06/25 11:05:28.534
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 11:05:29.369
  STEP: Deploying the webhook pod @ 10/06/25 11:05:29.376
  STEP: Wait for the deployment to be ready @ 10/06/25 11:05:29.395
  I1006 11:05:29.406637 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 11:05:31.418
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 11:05:31.454
  I1006 11:05:32.454404 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 10/06/25 11:05:32.457
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/06/25 11:05:32.457
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 10/06/25 11:05:32.48
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 10/06/25 11:05:33.49
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/06/25 11:05:33.49
  STEP: Having no error when timeout is longer than webhook latency @ 10/06/25 11:05:34.532
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/06/25 11:05:34.532
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 10/06/25 11:05:39.577
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/06/25 11:05:39.577
  I1006 11:05:44.720116 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9323" for this suite. @ 10/06/25 11:05:44.723
  STEP: Destroying namespace "webhook-markers-4426" for this suite. @ 10/06/25 11:05:44.733
• [16.261 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 10/06/25 11:05:44.741
  I1006 11:05:44.741677 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 11:05:44.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:05:44.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:05:44.758
  STEP: creating a collection of services @ 10/06/25 11:05:44.766
  I1006 11:05:44.766724 24 service.go:3666] Creating e2e-svc-a-lwwwx
  I1006 11:05:44.798853 24 service.go:3666] Creating e2e-svc-b-zkjn2
  I1006 11:05:44.828330 24 service.go:3666] Creating e2e-svc-c-j5m84
  STEP: deleting service collection @ 10/06/25 11:05:44.864
  I1006 11:05:44.969268 24 service.go:3701] Collection of services has been deleted
  I1006 11:05:44.969853 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2195" for this suite. @ 10/06/25 11:05:44.978
• [0.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 10/06/25 11:05:44.988
  I1006 11:05:44.988628 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 11:05:44.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:05:45.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:05:45.016
  STEP: Creating Pod @ 10/06/25 11:05:45.021
  STEP: Reading file content from the nginx-container @ 10/06/25 11:05:47.046
  I1006 11:05:47.046722 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-265 PodName:pod-sharedvolume-0f49646d-a4e6-4716-9eb8-c5a9a5e5a1f0 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:05:47.046899 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:05:47.047225 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/emptydir-265/pods/pod-sharedvolume-0f49646d-a4e6-4716-9eb8-c5a9a5e5a1f0/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I1006 11:05:47.093857 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 11:05:47.093938 24 exec_util.go:112] Exec stderr: ""
  I1006 11:05:47.094405 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-265" for this suite. @ 10/06/25 11:05:47.098
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 10/06/25 11:05:47.105
  I1006 11:05:47.105062 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:05:47.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:05:47.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:05:47.124
  STEP: creating Agnhost RC @ 10/06/25 11:05:47.128
  I1006 11:05:47.128769 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4659 create -f -'
  I1006 11:05:47.292905 24 builder.go:146] stderr: ""
  I1006 11:05:47.292995 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/06/25 11:05:47.293
  I1006 11:05:48.296983 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1006 11:05:48.297043 24 framework.go:733] Found 0 / 1
  I1006 11:05:49.297699 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1006 11:05:49.297798 24 framework.go:733] Found 1 / 1
  I1006 11:05:49.297832 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 10/06/25 11:05:49.297
  I1006 11:05:49.300769 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1006 11:05:49.300835 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1006 11:05:49.300898 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4659 patch pod agnhost-primary-twldw -p {"metadata":{"annotations":{"x":"y"}}}'
  I1006 11:05:49.394461 24 builder.go:146] stderr: ""
  I1006 11:05:49.394528 24 builder.go:147] stdout: "pod/agnhost-primary-twldw patched\n"
  STEP: checking annotations @ 10/06/25 11:05:49.394
  I1006 11:05:49.397897 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1006 11:05:49.397945 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1006 11:05:49.398098 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4659" for this suite. @ 10/06/25 11:05:49.4
• [2.306 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 10/06/25 11:05:49.411
  I1006 11:05:49.411846 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:05:49.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:05:49.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:05:49.432
  STEP: creating the pod @ 10/06/25 11:05:49.436
  I1006 11:05:49.436736 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-6494 create -f -'
  I1006 11:05:49.613521 24 builder.go:146] stderr: ""
  I1006 11:05:49.613653 24 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 10/06/25 11:05:51.625
  I1006 11:05:51.625313 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-6494 label pods pause testing-label=testing-label-value'
  I1006 11:05:51.722353 24 builder.go:146] stderr: ""
  I1006 11:05:51.722439 24 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 10/06/25 11:05:51.722
  I1006 11:05:51.722912 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-6494 get pod pause -L testing-label'
  I1006 11:05:51.804211 24 builder.go:146] stderr: ""
  I1006 11:05:51.804298 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 10/06/25 11:05:51.804
  I1006 11:05:51.804727 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-6494 label pods pause testing-label-'
  I1006 11:05:51.898107 24 builder.go:146] stderr: ""
  I1006 11:05:51.898184 24 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 10/06/25 11:05:51.898
  I1006 11:05:51.898411 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-6494 get pod pause -L testing-label'
  I1006 11:05:51.975038 24 builder.go:146] stderr: ""
  I1006 11:05:51.975099 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 10/06/25 11:05:51.975
  I1006 11:05:51.975466 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-6494 delete --grace-period=0 --force -f -'
  I1006 11:05:52.085111 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1006 11:05:52.085170 24 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1006 11:05:52.085254 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-6494 get rc,svc -l name=pause --no-headers'
  I1006 11:05:52.174056 24 builder.go:146] stderr: "No resources found in kubectl-6494 namespace.\n"
  I1006 11:05:52.174130 24 builder.go:147] stdout: ""
  I1006 11:05:52.174207 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-6494 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1006 11:05:52.248961 24 builder.go:146] stderr: ""
  I1006 11:05:52.249029 24 builder.go:147] stdout: ""
  I1006 11:05:52.249363 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6494" for this suite. @ 10/06/25 11:05:52.253
• [2.848 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 10/06/25 11:05:52.261
  I1006 11:05:52.261736 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:05:52.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:05:52.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:05:52.287
  STEP: Creating configMap that has name configmap-test-emptyKey-5d7c3a50-03e5-429c-b86f-da05b1a2a4ad @ 10/06/25 11:05:52.29
  I1006 11:05:52.292425 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3496" for this suite. @ 10/06/25 11:05:52.354
• [0.101 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 10/06/25 11:05:52.362
  I1006 11:05:52.362435 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename var-expansion @ 10/06/25 11:05:52.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:05:52.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:05:52.39
  STEP: Creating a pod to test env composition @ 10/06/25 11:05:52.393
  STEP: Saw pod success @ 10/06/25 11:05:56.416
  I1006 11:05:56.419377 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod var-expansion-de98536c-7d69-48d0-9ab8-582ea8d400f7 container dapi-container: <nil>
  STEP: delete the pod @ 10/06/25 11:05:56.424
  I1006 11:05:56.449077 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9970" for this suite. @ 10/06/25 11:05:56.452
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 10/06/25 11:05:56.458
  I1006 11:05:56.458994 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/06/25 11:05:56.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:05:56.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:05:56.473
  I1006 11:05:56.477132 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:05:59.581082 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7353" for this suite. @ 10/06/25 11:05:59.584
• [3.132 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 10/06/25 11:05:59.59
  I1006 11:05:59.590912 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/06/25 11:05:59.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:05:59.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:05:59.613
  I1006 11:05:59.615826 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:06:02.674727 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2745" for this suite. @ 10/06/25 11:06:02.678
• [3.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 10/06/25 11:06:02.684
  I1006 11:06:02.684971 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename subpath @ 10/06/25 11:06:02.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:06:02.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:06:02.708
  STEP: Setting up data @ 10/06/25 11:06:02.711
  STEP: Creating pod pod-subpath-test-projected-9nrr @ 10/06/25 11:06:02.724
  STEP: Creating a pod to test atomic-volume-subpath @ 10/06/25 11:06:02.724
  STEP: Saw pod success @ 10/06/25 11:06:26.804
  I1006 11:06:26.807200 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-subpath-test-projected-9nrr container test-container-subpath-projected-9nrr: <nil>
  STEP: delete the pod @ 10/06/25 11:06:26.813
  STEP: Deleting pod pod-subpath-test-projected-9nrr @ 10/06/25 11:06:26.836
  I1006 11:06:26.836304 24 delete.go:62] Deleting pod "pod-subpath-test-projected-9nrr" in namespace "subpath-6015"
  I1006 11:06:26.838633 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6015" for this suite. @ 10/06/25 11:06:26.841
• [24.167 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 10/06/25 11:06:26.851
  I1006 11:06:26.852001 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename ingress @ 10/06/25 11:06:26.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:06:26.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:06:26.866
  STEP: getting /apis @ 10/06/25 11:06:26.87
  STEP: getting /apis/networking.k8s.io @ 10/06/25 11:06:26.874
  STEP: getting /apis/networking.k8s.iov1 @ 10/06/25 11:06:26.875
  STEP: creating @ 10/06/25 11:06:26.876
  STEP: getting @ 10/06/25 11:06:26.902
  STEP: listing @ 10/06/25 11:06:26.905
  STEP: watching @ 10/06/25 11:06:26.907
  I1006 11:06:26.907853 24 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 10/06/25 11:06:26.908
  STEP: cluster-wide watching @ 10/06/25 11:06:26.911
  I1006 11:06:26.911823 24 ingress.go:198] starting watch
  STEP: patching @ 10/06/25 11:06:26.913
  STEP: updating @ 10/06/25 11:06:26.92
  I1006 11:06:26.936736 24 ingress.go:221] waiting for watch events with expected annotations
  I1006 11:06:26.936888 24 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 10/06/25 11:06:26.937
  STEP: updating /status @ 10/06/25 11:06:26.943
  STEP: get /status @ 10/06/25 11:06:26.954
  STEP: deleting @ 10/06/25 11:06:26.957
  STEP: deleting a collection @ 10/06/25 11:06:26.97
  I1006 11:06:26.984087 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6958" for this suite. @ 10/06/25 11:06:26.986
• [0.151 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 10/06/25 11:06:27.002
  I1006 11:06:27.002926 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 11:06:27.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:06:27.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:06:27.021
  STEP: Setting up server cert @ 10/06/25 11:06:27.047
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 11:06:27.282
  STEP: Deploying the webhook pod @ 10/06/25 11:06:27.293
  STEP: Wait for the deployment to be ready @ 10/06/25 11:06:27.309
  I1006 11:06:27.320288 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 11:06:29.328
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 11:06:29.358
  I1006 11:06:30.359146 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/06/25 11:06:30.363
  I1006 11:06:30.427427 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9455" for this suite. @ 10/06/25 11:06:30.431
  STEP: Destroying namespace "webhook-markers-8444" for this suite. @ 10/06/25 11:06:30.442
• [3.453 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 10/06/25 11:06:30.457
  I1006 11:06:30.458100 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename dns @ 10/06/25 11:06:30.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:06:30.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:06:30.472
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9568.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-9568.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 10/06/25 11:06:30.475
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9568.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9568.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 10/06/25 11:06:30.475
  STEP: creating a pod to probe /etc/hosts @ 10/06/25 11:06:30.475
  STEP: submitting the pod to kubernetes @ 10/06/25 11:06:30.475
  STEP: retrieving the pod @ 10/06/25 11:06:32.497
  STEP: looking for the results for each expected name from probers @ 10/06/25 11:06:32.499
  I1006 11:06:32.511494 24 dns_common.go:546] DNS probes using dns-9568/dns-test-5ef2e02a-ea40-4ff7-96de-a6adaf74bb94 succeeded

  STEP: deleting the pod @ 10/06/25 11:06:32.511
  I1006 11:06:32.527223 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9568" for this suite. @ 10/06/25 11:06:32.529
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 10/06/25 11:06:32.55
  I1006 11:06:32.550357 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/06/25 11:06:32.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:06:32.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:06:32.571
  STEP: creating a target pod @ 10/06/25 11:06:32.574
  STEP: adding an ephemeral container @ 10/06/25 11:06:34.603
  STEP: verifying the pod's generation is 2 @ 10/06/25 11:06:36.629
  STEP: checking pod container endpoints @ 10/06/25 11:06:36.632
  I1006 11:06:36.632469 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5096 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:06:36.632665 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:06:36.632810 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-5096/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I1006 11:06:36.686896 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 11:06:36.686964 24 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 10/06/25 11:06:36.693
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 10/06/25 11:06:36.7
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 10/06/25 11:06:36.716
  I1006 11:06:36.720135 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5096" for this suite. @ 10/06/25 11:06:36.723
• [4.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 10/06/25 11:06:36.732
  I1006 11:06:36.732054 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:06:36.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:06:36.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:06:36.749
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/06/25 11:06:36.753
  I1006 11:06:36.753808 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-2743 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1006 11:06:36.844382 24 builder.go:146] stderr: ""
  I1006 11:06:36.844470 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 10/06/25 11:06:36.844
  I1006 11:06:36.844769 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-2743 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1006 11:06:36.933774 24 builder.go:146] stderr: ""
  I1006 11:06:36.933854 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/06/25 11:06:36.933
  I1006 11:06:36.936667 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-2743 delete pods e2e-test-httpd-pod'
  I1006 11:06:39.051921 24 builder.go:146] stderr: ""
  I1006 11:06:39.051990 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1006 11:06:39.052207 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2743" for this suite. @ 10/06/25 11:06:39.056
• [2.331 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 10/06/25 11:06:39.063
  I1006 11:06:39.063183 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 11:06:39.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:06:39.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:06:39.096
  STEP: Creating a job @ 10/06/25 11:06:39.099
  STEP: Ensuring active pods == parallelism @ 10/06/25 11:06:39.107
  STEP: delete a job @ 10/06/25 11:06:41.115
  STEP: deleting Job.batch foo in namespace job-4289, will wait for the garbage collector to delete the pods @ 10/06/25 11:06:41.115
  I1006 11:06:41.176362 24 resources.go:139] Deleting Job.batch foo took: 6.982428ms
  I1006 11:06:41.276645 24 resources.go:163] Terminating Job.batch foo pods took: 100.273381ms
  STEP: Ensuring job was deleted @ 10/06/25 11:06:42.077
  I1006 11:06:42.079935 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4289" for this suite. @ 10/06/25 11:06:42.083
• [3.027 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 10/06/25 11:06:42.09
  I1006 11:06:42.090624 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 11:06:42.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:06:42.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:06:42.121
  STEP: Creating a pod to test emptydir volume type on node default medium @ 10/06/25 11:06:42.124
  STEP: Saw pod success @ 10/06/25 11:06:46.157
  I1006 11:06:46.160026 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-054b06d1-fd8a-4b5e-b865-c0193621d3b2 container test-container: <nil>
  STEP: delete the pod @ 10/06/25 11:06:46.178
  I1006 11:06:46.200291 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-608" for this suite. @ 10/06/25 11:06:46.204
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 10/06/25 11:06:46.213
  I1006 11:06:46.213199 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename deployment @ 10/06/25 11:06:46.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:06:46.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:06:46.231
  I1006 11:06:46.239424 24 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1006 11:06:46.250350 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I1006 11:06:51.323784 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/06/25 11:06:51.324
  I1006 11:06:51.324097 24 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I1006 11:06:51.331122 24 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1006 11:06:51.343905 24 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1006 11:06:53.350961 24 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1006 11:06:53.353303 24 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1006 11:06:53.360374 24 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5874",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a32a5ea-1a3b-49c0-8d25-fc0b776c31ad",
      ResourceVersion: (string) (len=5) "47184",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895345611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1006 11:06:53.364230 24 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5874",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c14bcf3-19dd-4765-abd2-222498d0b288",
      ResourceVersion: (string) (len=5) "47174",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895345611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "9a32a5ea-1a3b-49c0-8d25-fc0b776c31ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 61 33 32 61 35  65 61 2d 31 61 33 62 2d  |\"9a32a5ea-1a3b-|
              00000120  34 39 63 30 2d 38 64 32  35 2d 66 63 30 62 37 37  |49c0-8d25-fc0b77|
              00000130  36 63 33 31 61 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6c31ad\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 11:06:53.377079 24 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1006 11:06:53.377481 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5874",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f91f80e1-ea1b-4328-ac29-89ef503d1675",
      ResourceVersion: (string) (len=5) "47183",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895345606,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "9a32a5ea-1a3b-49c0-8d25-fc0b776c31ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 39 61 33 32 61 35 65  |"uid\":\"9a32a5e|
              000000b0  61 2d 31 61 33 62 2d 34  39 63 30 2d 38 64 32 35  |a-1a3b-49c0-8d25|
              000000c0  2d 66 63 30 62 37 37 36  63 33 31 61 64 5c 22 7d  |-fc0b776c31ad\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 11:06:53.383554 24 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-zgzk4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-zgzk4",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-5874",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f63eda3e-1369-4f06-beba-b2ce8f6f0686",
      ResourceVersion: (string) (len=5) "47173",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895345611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "7c14bcf3-19dd-4765-abd2-222498d0b288",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 63  31 34 62 63 66 33 2d 31  |d\":\"7c14bcf3-1|
              00000090  39 64 64 2d 34 37 36 35  2d 61 62 64 32 2d 32 32  |9dd-4765-abd2-22|
              000000a0  32 34 39 38 64 30 62 32  38 38 5c 22 7d 22 3a 7b  |2498d0b288\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 35  5c 22 7d 22 3a 7b 22 2e  |.244.1.5\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5fmf5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5fmf5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895345611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=10) "10.244.1.5",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.5"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895345611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895345612,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://d2351f5cd64318453d2735ad5f775e86ed8defd774e13c2b821ba6281bfee3bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5fmf5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 11:06:53.385204 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5874" for this suite. @ 10/06/25 11:06:53.389
• [7.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 10/06/25 11:06:53.396
  I1006 11:06:53.396395 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename runtimeclass @ 10/06/25 11:06:53.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:06:53.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:06:53.419
  I1006 11:06:55.459091 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3732" for this suite. @ 10/06/25 11:06:55.462
• [2.074 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 10/06/25 11:06:55.47
  I1006 11:06:55.470180 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/06/25 11:06:55.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:06:55.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:06:55.493
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 10/06/25 11:06:55.496
  I1006 11:06:55.497248 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:06:56.779453 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:07:02.091790 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2624" for this suite. @ 10/06/25 11:07:02.101
• [6.639 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 10/06/25 11:07:02.109
  I1006 11:07:02.109704 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 11:07:02.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:07:02.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:07:02.135
  STEP: fetching services @ 10/06/25 11:07:02.143
  I1006 11:07:02.147368 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9405" for this suite. @ 10/06/25 11:07:02.203
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 10/06/25 11:07:02.211
  I1006 11:07:02.212026 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:07:02.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:07:02.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:07:02.238
  STEP: Creating configMap with name configmap-test-upd-52ca4c58-8b74-44a1-b26f-8832857b5a09 @ 10/06/25 11:07:02.303
  STEP: Creating the pod @ 10/06/25 11:07:02.311
  STEP: Waiting for pod with text data @ 10/06/25 11:07:04.337
  STEP: Waiting for pod with binary data @ 10/06/25 11:07:04.343
  I1006 11:07:04.349750 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4446" for this suite. @ 10/06/25 11:07:04.354
• [2.155 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 10/06/25 11:07:04.367
  I1006 11:07:04.367989 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 11:07:04.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:07:04.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:07:04.388
  STEP: creating service in namespace services-6042 @ 10/06/25 11:07:04.392
  STEP: creating service affinity-nodeport in namespace services-6042 @ 10/06/25 11:07:04.392
  I1006 11:07:04.461157 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I1006 11:07:06.482829 24 resource.go:361] Creating new exec pod
  I1006 11:07:08.507469 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6042 exec execpod-affinityz7955 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1006 11:07:08.618569 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.97.221.98) 80 port [tcp/http] succeeded!\n"
  I1006 11:07:08.618631 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 11:07:08.618729 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6042 exec execpod-affinityz7955 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.221.98 80'
  I1006 11:07:08.724652 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.221.98 80\nConnection to 10.97.221.98 80 port [tcp/http] succeeded!\n"
  I1006 11:07:08.724706 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 11:07:08.724788 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6042 exec execpod-affinityz7955 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.108.172 30157'
  I1006 11:07:08.837129 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.108.172 30157\nConnection to 172.16.108.172 30157 port [tcp/*] succeeded!\n"
  I1006 11:07:08.837197 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 11:07:08.837447 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6042 exec execpod-affinityz7955 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.109.240 30157'
  I1006 11:07:08.953261 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.109.240 30157\nConnection to 172.16.109.240 30157 port [tcp/*] succeeded!\n"
  I1006 11:07:08.953315 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 11:07:08.953378 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6042 exec execpod-affinityz7955 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/ ; done'
  I1006 11:07:09.170385 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:30157/\n"
  I1006 11:07:09.170461 24 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5\naffinity-nodeport-85dffb5fc7-dkhc5"
  I1006 11:07:09.170482 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170495 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170506 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170516 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170534 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170544 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170554 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170564 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170605 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170613 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170621 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170631 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170641 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170650 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170685 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170707 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dkhc5
  I1006 11:07:09.170902 24 service.go:4352] Cleaning up the exec pod
  I1006 11:07:09.283244 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6042" for this suite. @ 10/06/25 11:07:09.292
• [4.932 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 10/06/25 11:07:09.299
  I1006 11:07:09.299921 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:07:09.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:07:09.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:07:09.33
  STEP: Creating configMap with name projected-configmap-test-volume-map-746d7ba2-17eb-40ba-a290-dfdd13a41009 @ 10/06/25 11:07:09.333
  STEP: Creating a pod to test consume configMaps @ 10/06/25 11:07:09.34
  STEP: Saw pod success @ 10/06/25 11:07:13.362
  I1006 11:07:13.365287 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-projected-configmaps-c3ce9dcf-0ac7-4b65-a8da-3190219465e8 container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 11:07:13.37
  I1006 11:07:13.394052 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6542" for this suite. @ 10/06/25 11:07:13.398
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 10/06/25 11:07:13.406
  I1006 11:07:13.406468 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sched-preemption @ 10/06/25 11:07:13.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:07:13.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:07:13.425
  I1006 11:07:13.453798 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I1006 11:08:13.458655 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/06/25 11:08:13.461
  STEP: Adding a custom resource @ 10/06/25 11:08:13.461
  I1006 11:08:13.485328 24 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I1006 11:08:13.496133 24 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 10/06/25 11:08:13.496
  I1006 11:08:13.529806 24 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I1006 11:08:13.543549 24 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/06/25 11:08:13.543
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 10/06/25 11:08:15.562
  STEP: Removing a custom resource @ 10/06/25 11:08:19.61
  STEP: Removing a custom resource @ 10/06/25 11:08:19.626
  I1006 11:08:19.645762 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1957" for this suite. @ 10/06/25 11:08:19.649
• [66.250 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 10/06/25 11:08:19.656
  I1006 11:08:19.656664 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pods @ 10/06/25 11:08:19.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:08:19.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:08:19.685
  STEP: Saw pod success @ 10/06/25 11:08:25.762
  I1006 11:08:25.764951 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod client-envvars-d6627149-9223-4462-90c4-4d83ddf3651f container env3cont: <nil>
  STEP: delete the pod @ 10/06/25 11:08:25.771
  I1006 11:08:25.793651 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1939" for this suite. @ 10/06/25 11:08:25.797
• [6.148 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 10/06/25 11:08:25.804
  I1006 11:08:25.804963 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename cronjob @ 10/06/25 11:08:25.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:08:25.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:08:25.827
  STEP: Creating a cronjob @ 10/06/25 11:08:25.83
  STEP: creating @ 10/06/25 11:08:25.83
  STEP: getting @ 10/06/25 11:08:25.842
  STEP: listing @ 10/06/25 11:08:25.845
  STEP: watching @ 10/06/25 11:08:25.847
  I1006 11:08:25.847797 24 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 10/06/25 11:08:25.848
  STEP: cluster-wide watching @ 10/06/25 11:08:25.851
  I1006 11:08:25.851888 24 cronjob.go:407] starting watch
  STEP: patching @ 10/06/25 11:08:25.853
  STEP: updating @ 10/06/25 11:08:25.865
  I1006 11:08:25.874657 24 cronjob.go:431] waiting for watch events with expected annotations
  I1006 11:08:25.874726 24 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 10/06/25 11:08:25.874
  STEP: updating /status @ 10/06/25 11:08:25.885
  STEP: get /status @ 10/06/25 11:08:25.89
  STEP: deleting @ 10/06/25 11:08:25.892
  STEP: deleting a collection @ 10/06/25 11:08:25.908
  I1006 11:08:25.917074 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7448" for this suite. @ 10/06/25 11:08:25.919
• [0.122 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 10/06/25 11:08:25.927
  I1006 11:08:25.927122 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:08:25.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:08:25.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:08:25.952
  STEP: creating all guestbook components @ 10/06/25 11:08:25.954
  I1006 11:08:25.954983 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1006 11:08:25.955061 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 create -f -'
  I1006 11:08:26.120318 24 builder.go:146] stderr: ""
  I1006 11:08:26.120363 24 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1006 11:08:26.120402 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1006 11:08:26.120558 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 create -f -'
  I1006 11:08:26.282448 24 builder.go:146] stderr: ""
  I1006 11:08:26.282510 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1006 11:08:26.282573 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1006 11:08:26.282664 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 create -f -'
  I1006 11:08:26.440229 24 builder.go:146] stderr: ""
  I1006 11:08:26.440292 24 builder.go:147] stdout: "service/frontend created\n"
  I1006 11:08:26.440569 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1006 11:08:26.440764 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 create -f -'
  I1006 11:08:26.547503 24 builder.go:146] stderr: ""
  I1006 11:08:26.547564 24 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1006 11:08:26.547636 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1006 11:08:26.547856 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 create -f -'
  I1006 11:08:26.659667 24 builder.go:146] stderr: ""
  I1006 11:08:26.659725 24 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1006 11:08:26.659795 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1006 11:08:26.660128 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 create -f -'
  I1006 11:08:26.787842 24 builder.go:146] stderr: ""
  I1006 11:08:26.788062 24 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 10/06/25 11:08:26.788
  I1006 11:08:26.788120 24 kubectl.go:2275] Waiting for all frontend pods to be Running.
  I1006 11:08:31.838630 24 kubectl.go:2279] Waiting for frontend to serve content.
  I1006 11:08:31.850595 24 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I1006 11:08:31.862948 24 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 10/06/25 11:08:31.872
  I1006 11:08:31.872134 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 delete --grace-period=0 --force -f -'
  I1006 11:08:31.978960 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1006 11:08:31.979034 24 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 10/06/25 11:08:31.979
  I1006 11:08:31.979170 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 delete --grace-period=0 --force -f -'
  I1006 11:08:32.078738 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1006 11:08:32.078843 24 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/06/25 11:08:32.078
  I1006 11:08:32.079259 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 delete --grace-period=0 --force -f -'
  I1006 11:08:32.192168 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1006 11:08:32.192213 24 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/06/25 11:08:32.192
  I1006 11:08:32.192583 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 delete --grace-period=0 --force -f -'
  I1006 11:08:32.261436 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1006 11:08:32.261497 24 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/06/25 11:08:32.261
  I1006 11:08:32.261662 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 delete --grace-period=0 --force -f -'
  I1006 11:08:32.354465 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1006 11:08:32.354546 24 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/06/25 11:08:32.354
  I1006 11:08:32.354817 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9402 delete --grace-period=0 --force -f -'
  I1006 11:08:32.455007 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1006 11:08:32.455075 24 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1006 11:08:32.455226 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9402" for this suite. @ 10/06/25 11:08:32.459
• [6.539 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 10/06/25 11:08:32.466
  I1006 11:08:32.466127 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 11:08:32.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:08:32.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:08:32.496
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:08:32.499
  STEP: Saw pod success @ 10/06/25 11:08:36.524
  I1006 11:08:36.526458 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-b74a84fd-0b61-4d37-b6fa-a5ff6c7e3f58 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:08:36.532
  I1006 11:08:36.554449 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8901" for this suite. @ 10/06/25 11:08:36.558
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 10/06/25 11:08:36.566
  I1006 11:08:36.566723 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:08:36.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:08:36.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:08:36.594
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:08:36.597
  STEP: Saw pod success @ 10/06/25 11:08:40.64
  I1006 11:08:40.643724 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-42b38203-09b3-40ef-ae20-7c21e3c0eeca container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:08:40.658
  I1006 11:08:40.684899 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9799" for this suite. @ 10/06/25 11:08:40.688
• [4.129 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 10/06/25 11:08:40.696
  I1006 11:08:40.696386 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename cronjob @ 10/06/25 11:08:40.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:08:40.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:08:40.714
  STEP: Creating a ForbidConcurrent cronjob @ 10/06/25 11:08:40.718
  STEP: Ensuring a job is scheduled @ 10/06/25 11:08:40.725
  STEP: Ensuring exactly one is scheduled @ 10/06/25 11:09:00.73
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/06/25 11:09:00.732
  STEP: Ensuring no more jobs are scheduled @ 10/06/25 11:09:00.735
  STEP: Removing cronjob @ 10/06/25 11:09:00.738
  I1006 11:09:00.745473 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1511" for this suite. @ 10/06/25 11:09:00.748
• [20.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 10/06/25 11:09:00.759
  I1006 11:09:00.759294 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename prestop @ 10/06/25 11:09:00.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:09:00.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:09:00.781
  STEP: Creating server pod server in namespace prestop-4699 @ 10/06/25 11:09:00.783
  STEP: Waiting for pods to come up. @ 10/06/25 11:09:00.791
  STEP: Creating tester pod tester in namespace prestop-4699 @ 10/06/25 11:09:02.802
  STEP: Deleting pre-stop pod @ 10/06/25 11:09:04.823
  I1006 11:09:09.834816 24 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 10/06/25 11:09:09.835
  I1006 11:09:09.851355 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4699" for this suite. @ 10/06/25 11:09:09.854
• [9.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 10/06/25 11:09:09.862
  I1006 11:09:09.862148 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:09:09.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:09:09.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:09:09.891
  STEP: creating a ConfigMap @ 10/06/25 11:09:09.894
  STEP: fetching the ConfigMap @ 10/06/25 11:09:09.9
  STEP: patching the ConfigMap @ 10/06/25 11:09:09.903
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 10/06/25 11:09:09.909
  STEP: deleting the ConfigMap by collection with a label selector @ 10/06/25 11:09:09.912
  STEP: listing all ConfigMaps in test namespace @ 10/06/25 11:09:09.92
  I1006 11:09:09.923242 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-662" for this suite. @ 10/06/25 11:09:09.957
• [0.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 10/06/25 11:09:09.964
  I1006 11:09:09.964740 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replicaset @ 10/06/25 11:09:09.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:09:09.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:09:09.991
  STEP: Create a Replicaset @ 10/06/25 11:09:10
  STEP: Verify that the required pods have come up. @ 10/06/25 11:09:10.008
  I1006 11:09:10.011860 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I1006 11:09:15.073144 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/06/25 11:09:15.073
  STEP: Getting /status @ 10/06/25 11:09:15.073
  I1006 11:09:15.078420 24 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 10/06/25 11:09:15.078
  I1006 11:09:15.092250 24 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 10/06/25 11:09:15.092
  I1006 11:09:15.095577 24 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I1006 11:09:15.095744 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I1006 11:09:15.095861 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I1006 11:09:15.096376 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I1006 11:09:15.096572 24 replica_set.go:688] Found replicaset test-rs in namespace replicaset-6357 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1006 11:09:15.096641 24 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 10/06/25 11:09:15.096
  I1006 11:09:15.097075 24 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1006 11:09:15.110135 24 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 10/06/25 11:09:15.11
  I1006 11:09:15.114170 24 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I1006 11:09:15.114513 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I1006 11:09:15.114640 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I1006 11:09:15.114898 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I1006 11:09:15.114966 24 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-6357 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1006 11:09:15.115266 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I1006 11:09:15.117945 24 replica_set.go:724] Found replicaset test-rs in namespace replicaset-6357 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1006 11:09:15.118033 24 replica_set.go:735] Replicaset test-rs has a patched status
  I1006 11:09:15.118352 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6357" for this suite. @ 10/06/25 11:09:15.123
• [5.167 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 10/06/25 11:09:15.132
  I1006 11:09:15.132521 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-probe @ 10/06/25 11:09:15.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:09:15.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:09:15.167
  STEP: Creating pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364 @ 10/06/25 11:09:15.173
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/06/25 11:09:17.214
  I1006 11:09:17.217455 24 container_probe.go:1748] Initial restart count of pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c is 0
  I1006 11:09:17.220075 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:19.223952 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:21.228191 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:23.232410 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:25.237438 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:27.242927 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:29.247344 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:31.251332 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:33.256164 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:35.261037 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:37.264187 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:39.267829 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:41.273513 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:43.278618 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:45.282803 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:47.285730 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:49.290171 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:51.294655 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:53.298756 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:55.303469 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:57.308685 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:09:59.313913 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:01.318459 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:03.323029 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:05.328605 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:07.336655 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:09.340055 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:11.344403 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:13.347235 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:15.351979 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:17.356425 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:19.359860 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:21.363785 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:23.368377 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:25.372408 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:27.377105 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:29.381063 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:31.386470 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:33.391667 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:35.396877 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:37.402549 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:39.407945 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:41.413774 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:43.419447 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:45.425093 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:47.430589 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:49.435311 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:51.439881 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:53.444639 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:55.449094 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:57.452979 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:10:59.458277 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:01.464597 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:03.472007 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:05.477872 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:07.483445 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:09.488424 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:11.493166 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:13.499316 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:15.507860 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:17.512540 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:19.518214 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:21.524004 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:23.528778 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:25.533966 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:27.538915 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:29.544412 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:31.548751 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:33.553935 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:35.559791 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:37.565051 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:39.568077 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:41.572879 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:43.577297 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:45.581402 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:47.585811 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:49.589940 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:51.594284 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:53.599591 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:55.605844 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:57.611878 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:11:59.615732 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:01.620106 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:03.626084 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:05.630245 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:07.633952 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:09.639385 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:11.646274 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:13.651474 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:15.656856 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:17.663019 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:19.671860 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:21.678109 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:23.684692 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:25.688752 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:27.692936 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:29.697242 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:31.701209 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:33.705872 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:35.712028 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:37.716619 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:39.721579 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:41.727695 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:43.731488 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:45.736398 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:47.741271 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:49.747163 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:51.751908 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:53.755882 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:55.760256 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:57.765976 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:12:59.770809 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:13:01.776187 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:13:03.782058 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:13:05.786459 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:13:07.790734 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:13:09.795742 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:13:11.801348 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:13:13.808400 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  I1006 11:13:15.816218 24 container_probe.go:1758] Get pod liveness-55a32465-f651-4aa4-8fa3-79377ac84a6c in namespace container-probe-2364
  STEP: deleting the pod @ 10/06/25 11:13:17.817
  I1006 11:13:17.844458 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2364" for this suite. @ 10/06/25 11:13:17.849
• [242.730 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 10/06/25 11:13:17.863
  I1006 11:13:17.863707 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 11:13:17.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:13:17.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:13:17.887
  STEP: Setting up server cert @ 10/06/25 11:13:17.917
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 11:13:18.289
  STEP: Deploying the webhook pod @ 10/06/25 11:13:18.297
  STEP: Wait for the deployment to be ready @ 10/06/25 11:13:18.322
  I1006 11:13:18.337683 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 11:13:20.352
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 11:13:20.384
  I1006 11:13:21.384941 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/06/25 11:13:21.397
  I1006 11:13:21.488115 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9975" for this suite. @ 10/06/25 11:13:21.511
  STEP: Destroying namespace "webhook-markers-5580" for this suite. @ 10/06/25 11:13:21.548
• [3.717 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 10/06/25 11:13:21.581
  I1006 11:13:21.581953 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 11:13:21.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:13:21.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:13:21.622
  STEP: Setting up server cert @ 10/06/25 11:13:21.66
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 11:13:22.284
  STEP: Deploying the webhook pod @ 10/06/25 11:13:22.297
  STEP: Wait for the deployment to be ready @ 10/06/25 11:13:22.317
  I1006 11:13:22.337446 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 11:13:24.346
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 11:13:24.377
  I1006 11:13:25.377641 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1006 11:13:25.381307 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4209-crds.webhook.example.com via the AdmissionRegistration API @ 10/06/25 11:13:25.897
  STEP: Creating a custom resource while v1 is storage version @ 10/06/25 11:13:25.919
  STEP: Patching Custom Resource Definition to set v2 as storage @ 10/06/25 11:13:27.964
  STEP: Patching the custom resource while v2 is storage version @ 10/06/25 11:13:27.975
  I1006 11:13:28.605369 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6274" for this suite. @ 10/06/25 11:13:28.609
  STEP: Destroying namespace "webhook-markers-3802" for this suite. @ 10/06/25 11:13:28.617
• [7.043 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 10/06/25 11:13:28.625
  I1006 11:13:28.625350 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename watch @ 10/06/25 11:13:28.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:13:28.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:13:28.642
  STEP: getting a starting resourceVersion @ 10/06/25 11:13:28.644
  STEP: starting a background goroutine to produce watch events @ 10/06/25 11:13:28.646
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 10/06/25 11:13:28.646
  I1006 11:13:31.434763 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2472" for this suite. @ 10/06/25 11:13:31.48
• [2.909 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 10/06/25 11:13:31.541
  I1006 11:13:31.541362 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename field-validation @ 10/06/25 11:13:31.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:13:31.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:13:31.558
  STEP: apply creating a deployment @ 10/06/25 11:13:31.564
  I1006 11:13:31.573351 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5812" for this suite. @ 10/06/25 11:13:31.581
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 10/06/25 11:13:31.59
  I1006 11:13:31.590200 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pods @ 10/06/25 11:13:31.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:13:31.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:13:31.615
  STEP: creating the pod @ 10/06/25 11:13:31.618
  STEP: submitting the pod to kubernetes @ 10/06/25 11:13:31.618
  STEP: verifying the pod is in kubernetes @ 10/06/25 11:13:33.637
  STEP: updating the pod @ 10/06/25 11:13:33.639
  I1006 11:13:34.152860 24 pod_client.go:173] Successfully updated pod "pod-update-66136765-9865-4194-aaeb-5f54863fe908"
  STEP: verifying the updated pod is in kubernetes @ 10/06/25 11:13:34.156
  I1006 11:13:34.159005 24 pods.go:391] Pod update OK
  I1006 11:13:34.159240 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-212" for this suite. @ 10/06/25 11:13:34.162
• [2.584 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 10/06/25 11:13:34.175
  I1006 11:13:34.175438 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/06/25 11:13:34.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:13:34.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:13:34.194
  I1006 11:13:34.197849 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/06/25 11:13:35.544
  I1006 11:13:35.544387 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-535 --namespace=crd-publish-openapi-535 create -f -'
  I1006 11:13:37.661236 24 builder.go:146] stderr: ""
  I1006 11:13:37.661311 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8836-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1006 11:13:37.661404 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-535 --namespace=crd-publish-openapi-535 delete e2e-test-crd-publish-openapi-8836-crds test-cr'
  I1006 11:13:37.741408 24 builder.go:146] stderr: ""
  I1006 11:13:37.741480 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8836-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1006 11:13:37.741624 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-535 --namespace=crd-publish-openapi-535 apply -f -'
  I1006 11:13:37.827266 24 builder.go:146] stderr: ""
  I1006 11:13:37.827308 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8836-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1006 11:13:37.827353 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-535 --namespace=crd-publish-openapi-535 delete e2e-test-crd-publish-openapi-8836-crds test-cr'
  I1006 11:13:37.900680 24 builder.go:146] stderr: ""
  I1006 11:13:37.900739 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8836-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 10/06/25 11:13:37.9
  I1006 11:13:37.900836 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-535 explain e2e-test-crd-publish-openapi-8836-crds'
  I1006 11:13:37.977815 24 builder.go:146] stderr: ""
  I1006 11:13:37.977901 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8836-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I1006 11:13:39.236978 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-535" for this suite. @ 10/06/25 11:13:39.244
• [5.077 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 10/06/25 11:13:39.253
  I1006 11:13:39.253044 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename namespaces @ 10/06/25 11:13:39.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:13:39.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:13:39.271
  STEP: Read namespace status @ 10/06/25 11:13:39.274
  I1006 11:13:39.277909 24 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 10/06/25 11:13:39.277
  I1006 11:13:39.285210 24 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 10/06/25 11:13:39.285
  I1006 11:13:39.300158 24 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1006 11:13:39.300378 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7177" for this suite. @ 10/06/25 11:13:39.346
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 10/06/25 11:13:39.358
  I1006 11:13:39.358194 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:13:39.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:13:39.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:13:39.374
  STEP: Creating configMap with name cm-test-opt-del-30bf7368-a4cf-4ff2-a6a9-960547dfbc5d @ 10/06/25 11:13:39.445
  STEP: Creating configMap with name cm-test-opt-upd-db0b3492-9fad-4ef6-bd0c-2fb67af46b31 @ 10/06/25 11:13:39.455
  STEP: Creating the pod @ 10/06/25 11:13:39.461
  STEP: Deleting configmap cm-test-opt-del-30bf7368-a4cf-4ff2-a6a9-960547dfbc5d @ 10/06/25 11:13:41.514
  STEP: Updating configmap cm-test-opt-upd-db0b3492-9fad-4ef6-bd0c-2fb67af46b31 @ 10/06/25 11:13:41.522
  STEP: Creating configMap with name cm-test-opt-create-4d730d3f-2887-4d2b-8c48-110fc0425a12 @ 10/06/25 11:13:41.529
  STEP: waiting to observe update in volume @ 10/06/25 11:13:41.536
  I1006 11:14:55.837504 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9613" for this suite. @ 10/06/25 11:14:55.843
• [76.494 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 10/06/25 11:14:55.852
  I1006 11:14:55.852756 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 11:14:55.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:14:55.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:14:55.873
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 10/06/25 11:14:55.877
  STEP: Saw pod success @ 10/06/25 11:14:59.918
  I1006 11:14:59.922614 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-32f398c9-5488-402f-82e6-ee3cacf5c0d0 container test-container: <nil>
  STEP: delete the pod @ 10/06/25 11:14:59.944
  I1006 11:14:59.968724 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3249" for this suite. @ 10/06/25 11:14:59.974
• [4.135 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 10/06/25 11:14:59.987
  I1006 11:14:59.987843 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/06/25 11:14:59.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:15:00.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:15:00.009
  STEP: set up a multi version CRD @ 10/06/25 11:15:00.013
  I1006 11:15:00.014052 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: rename a version @ 10/06/25 11:15:03.353
  STEP: check the new version name is served @ 10/06/25 11:15:03.374
  STEP: check the old version name is removed @ 10/06/25 11:15:04.168
  STEP: check the other version is not changed @ 10/06/25 11:15:04.856
  I1006 11:15:07.557100 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4898" for this suite. @ 10/06/25 11:15:07.565
• [7.589 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 10/06/25 11:15:07.576
  I1006 11:15:07.576974 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/06/25 11:15:07.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:15:07.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:15:07.598
  STEP: fetching the /apis discovery document @ 10/06/25 11:15:07.603
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 10/06/25 11:15:07.604
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 10/06/25 11:15:07.604
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 10/06/25 11:15:07.605
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 10/06/25 11:15:07.605
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 10/06/25 11:15:07.605
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 10/06/25 11:15:07.606
  I1006 11:15:07.606614 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-805" for this suite. @ 10/06/25 11:15:07.667
• [0.106 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 10/06/25 11:15:07.682
  I1006 11:15:07.682549 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 11:15:07.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:15:07.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:15:07.699
  STEP: creating service in namespace services-9178 @ 10/06/25 11:15:07.702
  STEP: creating service affinity-clusterip-transition in namespace services-9178 @ 10/06/25 11:15:07.702
  I1006 11:15:07.748126 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I1006 11:15:09.761538 24 resource.go:361] Creating new exec pod
  I1006 11:15:11.781523 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-9178 exec execpod-affinity276fh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1006 11:15:11.908021 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.100.100.88) 80 port [tcp/http] succeeded!\n"
  I1006 11:15:11.908084 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 11:15:11.908168 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-9178 exec execpod-affinity276fh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.100.100.88 80'
  I1006 11:15:12.047996 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.100.100.88 80\nConnection to 10.100.100.88 80 port [tcp/http] succeeded!\n"
  I1006 11:15:12.048056 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 11:15:12.057955 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-9178 exec execpod-affinity276fh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/ ; done'
  I1006 11:15:12.296325 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n"
  I1006 11:15:12.296419 24 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-mt4cs\naffinity-clusterip-transition-5cffb65545-hjxbb\naffinity-clusterip-transition-5cffb65545-mt4cs\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-mt4cs\naffinity-clusterip-transition-5cffb65545-mt4cs\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-mt4cs\naffinity-clusterip-transition-5cffb65545-mt4cs\naffinity-clusterip-transition-5cffb65545-mt4cs\naffinity-clusterip-transition-5cffb65545-hjxbb\naffinity-clusterip-transition-5cffb65545-hjxbb\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-hjxbb"
  I1006 11:15:12.296465 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-mt4cs
  I1006 11:15:12.296533 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-hjxbb
  I1006 11:15:12.296543 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-mt4cs
  I1006 11:15:12.296812 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.296823 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-mt4cs
  I1006 11:15:12.296832 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-mt4cs
  I1006 11:15:12.296849 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.296857 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.296885 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.296905 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-mt4cs
  I1006 11:15:12.296914 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-mt4cs
  I1006 11:15:12.296920 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-mt4cs
  I1006 11:15:12.296926 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-hjxbb
  I1006 11:15:12.296932 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-hjxbb
  I1006 11:15:12.296938 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.296944 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-hjxbb
  I1006 11:15:12.310914 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-9178 exec execpod-affinity276fh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/ ; done'
  I1006 11:15:12.521627 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.100.100.88:80/\n"
  I1006 11:15:12.521754 24 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh\naffinity-clusterip-transition-5cffb65545-99vzh"
  I1006 11:15:12.521782 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521802 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521819 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521834 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521849 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521864 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521878 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521892 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521908 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521922 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521934 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521949 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521963 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521977 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.521990 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.522004 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-99vzh
  I1006 11:15:12.522102 24 service.go:4352] Cleaning up the exec pod
  I1006 11:15:12.595272 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9178" for this suite. @ 10/06/25 11:15:12.605
• [4.944 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 10/06/25 11:15:12.626
  I1006 11:15:12.626256 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-probe @ 10/06/25 11:15:12.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:15:12.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:15:12.638
  I1006 11:15:36.705810 24 container_probe.go:91] Container started at 2025-10-06 11:15:13 +0000 UTC, pod became ready at 2025-10-06 11:15:35 +0000 UTC
  I1006 11:15:36.706058 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4535" for this suite. @ 10/06/25 11:15:36.709
• [24.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 10/06/25 11:15:36.724
  I1006 11:15:36.724677 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename statefulset @ 10/06/25 11:15:36.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:15:36.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:15:36.747
  STEP: Creating service test in namespace statefulset-9303 @ 10/06/25 11:15:36.752
  STEP: Creating a new StatefulSet @ 10/06/25 11:15:36.765
  I1006 11:15:36.781489 24 wait.go:44] Found 0 stateful pods, waiting for 3
  I1006 11:15:46.782858 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1006 11:15:46.791668 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1006 11:15:46.791694 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/06/25 11:15:46.875
  I1006 11:15:46.885039 24 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 10/06/25 11:15:46.885
  STEP: Not applying an update when the partition is greater than the number of replicas @ 10/06/25 11:15:56.893
  STEP: Performing a canary update @ 10/06/25 11:15:56.893
  I1006 11:15:56.904748 24 statefulset.go:2542] Updating stateful set ss2
  I1006 11:15:56.917709 24 wait.go:74] Waiting for Pod statefulset-9303/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 10/06/25 11:16:06.911
  I1006 11:16:06.964361 24 wait.go:44] Found 2 stateful pods, waiting for 3
  I1006 11:16:16.962861 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1006 11:16:16.963048 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1006 11:16:16.963125 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 10/06/25 11:16:16.968
  I1006 11:16:16.987206 24 statefulset.go:2542] Updating stateful set ss2
  I1006 11:16:17.004360 24 wait.go:74] Waiting for Pod statefulset-9303/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1006 11:16:27.010032 24 statefulset.go:2542] Updating stateful set ss2
  I1006 11:16:27.022997 24 wait.go:56] Waiting for StatefulSet statefulset-9303/ss2 to complete update
  I1006 11:16:27.023094 24 wait.go:63] Waiting for Pod statefulset-9303/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1006 11:16:37.019210 24 statefulset.go:138] Deleting all statefulset in ns statefulset-9303
  I1006 11:16:37.021936 24 rest.go:153] Scaling statefulset ss2 to 0
  I1006 11:16:47.042640 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1006 11:16:47.046486 24 rest.go:91] Deleting statefulset ss2
  I1006 11:16:47.063160 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9303" for this suite. @ 10/06/25 11:16:47.067
• [70.357 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 10/06/25 11:16:47.082
  I1006 11:16:47.082188 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/06/25 11:16:47.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:16:47.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:16:47.114
  STEP: create the container to handle the HTTPGet hook request. @ 10/06/25 11:16:47.169
  STEP: create the pod with lifecycle hook @ 10/06/25 11:16:49.197
  STEP: delete the pod with lifecycle hook @ 10/06/25 11:16:51.224
  STEP: check prestop hook @ 10/06/25 11:16:53.246
  I1006 11:16:53.265399 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7907" for this suite. @ 10/06/25 11:16:53.269
• [6.200 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 10/06/25 11:16:53.282
  I1006 11:16:53.282909 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:16:53.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:16:53.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:16:53.301
  STEP: Creating configMap with name configmap-test-upd-3107f352-da2b-4a32-8d60-4ff68b5a8bb1 @ 10/06/25 11:16:53.37
  STEP: Creating the pod @ 10/06/25 11:16:53.381
  STEP: Updating configmap configmap-test-upd-3107f352-da2b-4a32-8d60-4ff68b5a8bb1 @ 10/06/25 11:16:55.424
  STEP: waiting to observe update in volume @ 10/06/25 11:16:55.431
  I1006 11:18:21.776174 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9243" for this suite. @ 10/06/25 11:18:21.78
• [88.505 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 10/06/25 11:18:21.788
  I1006 11:18:21.788509 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 11:18:21.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:18:21.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:18:21.804
  STEP: Counting existing ResourceQuota @ 10/06/25 11:18:21.809
  STEP: Creating a ResourceQuota @ 10/06/25 11:18:26.815
  STEP: Ensuring resource quota status is calculated @ 10/06/25 11:18:26.83
  STEP: Creating a ReplicaSet @ 10/06/25 11:18:28.834
  STEP: Ensuring resource quota status captures replicaset creation @ 10/06/25 11:18:28.851
  STEP: Deleting a ReplicaSet @ 10/06/25 11:18:30.856
  STEP: Ensuring resource quota status released usage @ 10/06/25 11:18:30.864
  I1006 11:18:32.870192 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5877" for this suite. @ 10/06/25 11:18:32.873
• [11.093 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 10/06/25 11:18:32.882
  I1006 11:18:32.882102 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-watch @ 10/06/25 11:18:32.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:18:32.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:18:32.901
  I1006 11:18:32.904941 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Creating first CR  @ 10/06/25 11:18:35.445
  I1006 11:18:35.454025 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-06T11:18:35Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-06T11:18:35Z]] name:name1 resourceVersion:50026 uid:7ae30e63-3bbb-481c-8748-a6d8e7f92d8c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 10/06/25 11:18:45.454
  I1006 11:18:45.462106 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-06T11:18:45Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-06T11:18:45Z]] name:name2 resourceVersion:50047 uid:c018e357-b771-4d8a-8405-7795845208d6] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 10/06/25 11:18:55.462
  I1006 11:18:55.469371 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-06T11:18:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-06T11:18:55Z]] name:name1 resourceVersion:50064 uid:7ae30e63-3bbb-481c-8748-a6d8e7f92d8c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 10/06/25 11:19:05.469
  I1006 11:19:05.484805 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-06T11:18:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-06T11:19:05Z]] name:name2 resourceVersion:50080 uid:c018e357-b771-4d8a-8405-7795845208d6] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 10/06/25 11:19:15.485
  I1006 11:19:15.497415 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-06T11:18:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-06T11:18:55Z]] name:name1 resourceVersion:50097 uid:7ae30e63-3bbb-481c-8748-a6d8e7f92d8c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 10/06/25 11:19:25.498
  I1006 11:19:25.509392 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-06T11:18:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-06T11:19:05Z]] name:name2 resourceVersion:50113 uid:c018e357-b771-4d8a-8405-7795845208d6] num:map[num1:9223372036854775807 num2:1000000]]}
  I1006 11:19:36.028977 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6817" for this suite. @ 10/06/25 11:19:36.032
• [63.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 10/06/25 11:19:36.043
  I1006 11:19:36.043166 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 11:19:36.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:19:36.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:19:36.061
  STEP: Creating secret with name secret-test-ccf4097a-b7c6-4ee7-a5b8-b3aeede16bd5 @ 10/06/25 11:19:36.064
  STEP: Creating a pod to test consume secrets @ 10/06/25 11:19:36.07
  STEP: Saw pod success @ 10/06/25 11:19:40.11
  I1006 11:19:40.112754 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-secrets-1117b3b4-9df7-465d-9294-83dd3646a7fe container secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 11:19:40.119
  I1006 11:19:40.144293 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5305" for this suite. @ 10/06/25 11:19:40.147
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 10/06/25 11:19:40.154
  I1006 11:19:40.154312 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/06/25 11:19:40.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:19:40.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:19:40.179
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 10/06/25 11:19:40.181
  I1006 11:19:40.182497 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:19:41.506586 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:19:46.691635 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5898" for this suite. @ 10/06/25 11:19:46.698
• [6.556 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 10/06/25 11:19:46.709
  I1006 11:19:46.709933 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:19:46.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:19:46.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:19:46.73
  STEP: starting the proxy server @ 10/06/25 11:19:46.733
  I1006 11:19:46.734086 24 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9027 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 10/06/25 11:19:46.785
  I1006 11:19:46.794075 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1006 11:19:46.797242 24 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:46411

  I1006 11:19:46.797288 24 kubectl.go:2232] kubectl proxy stderr: W1006 11:19:46.785093     339 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-9027" for this suite. @ 10/06/25 11:19:46.797
• [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 10/06/25 11:19:46.809
  I1006 11:19:46.809342 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:19:46.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:19:46.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:19:46.827
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:19:46.83
  STEP: Saw pod success @ 10/06/25 11:19:50.854
  I1006 11:19:50.857279 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-ebaf49f9-005f-4c5e-8625-f771376e6ae6 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:19:50.864
  I1006 11:19:50.887529 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4774" for this suite. @ 10/06/25 11:19:50.891
• [4.095 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 10/06/25 11:19:50.904
  I1006 11:19:50.904884 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubelet-test @ 10/06/25 11:19:50.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:19:50.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:19:50.923
  I1006 11:19:52.954502 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4931" for this suite. @ 10/06/25 11:19:52.958
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 10/06/25 11:19:52.964
  I1006 11:19:52.964209 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 11:19:52.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:19:52.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:19:52.982
  STEP: Creating secret with name secret-test-c2d02aa9-ae52-4099-86f3-0b536e5217c2 @ 10/06/25 11:19:52.986
  STEP: Creating a pod to test consume secrets @ 10/06/25 11:19:52.992
  STEP: Saw pod success @ 10/06/25 11:19:57.021
  I1006 11:19:57.024092 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-secrets-0f4a394d-8812-41f7-a835-111128d14de3 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 11:19:57.037
  I1006 11:19:57.061268 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8155" for this suite. @ 10/06/25 11:19:57.063
• [4.107 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 10/06/25 11:19:57.071
  I1006 11:19:57.071276 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 11:19:57.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:19:57.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:19:57.092
  STEP: Creating the pod @ 10/06/25 11:19:57.094
  I1006 11:19:59.652223 24 pod_client.go:173] Successfully updated pod "labelsupdate9669caf6-e322-4147-a770-c07652b78f3a"
  I1006 11:20:03.673169 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2099" for this suite. @ 10/06/25 11:20:03.677
• [6.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 10/06/25 11:20:03.69
  I1006 11:20:03.691096 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:20:03.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:20:03.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:20:03.709
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:20:03.713
  STEP: Saw pod success @ 10/06/25 11:20:07.742
  I1006 11:20:07.744965 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod downwardapi-volume-b427daed-7c54-4177-b6dd-f4aa531b131d container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:20:07.754
  I1006 11:20:07.773295 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4151" for this suite. @ 10/06/25 11:20:07.776
• [4.093 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 10/06/25 11:20:07.784
  I1006 11:20:07.784102 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename csistoragecapacity @ 10/06/25 11:20:07.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:20:07.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:20:07.801
  STEP: getting /apis @ 10/06/25 11:20:07.813
  STEP: getting /apis/storage.k8s.io @ 10/06/25 11:20:07.818
  STEP: getting /apis/storage.k8s.io/v1 @ 10/06/25 11:20:07.819
  STEP: creating @ 10/06/25 11:20:07.82
  STEP: watching @ 10/06/25 11:20:07.84
  I1006 11:20:07.840596 24 csistoragecapacity.go:143] starting watch
  STEP: getting @ 10/06/25 11:20:07.849
  STEP: listing in namespace @ 10/06/25 11:20:07.852
  STEP: listing across namespaces @ 10/06/25 11:20:07.854
  STEP: patching @ 10/06/25 11:20:07.857
  STEP: updating @ 10/06/25 11:20:07.863
  I1006 11:20:07.874177 24 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1006 11:20:07.874305 24 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 10/06/25 11:20:07.874
  STEP: deleting a collection @ 10/06/25 11:20:07.884
  I1006 11:20:07.898358 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3157" for this suite. @ 10/06/25 11:20:07.901
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 10/06/25 11:20:07.908
  I1006 11:20:07.908456 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:20:07.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:20:07.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:20:07.932
  STEP: Creating configMap with name configmap-test-volume-656683d8-c2bb-4d77-8d27-a67074d9f6de @ 10/06/25 11:20:07.937
  STEP: Creating a pod to test consume configMaps @ 10/06/25 11:20:07.944
  STEP: Saw pod success @ 10/06/25 11:20:11.977
  I1006 11:20:11.980178 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-configmaps-208a58f6-8d5e-4f56-8156-8891306484ae container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 11:20:11.985
  I1006 11:20:12.005746 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2556" for this suite. @ 10/06/25 11:20:12.008
• [4.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 10/06/25 11:20:12.017
  I1006 11:20:12.017153 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 11:20:12.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:20:12.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:20:12.041
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/06/25 11:20:12.044
  STEP: Saw pod success @ 10/06/25 11:20:16.073
  I1006 11:20:16.076001 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-7a81d88d-6959-4334-8441-e26a39a0b597 container test-container: <nil>
  STEP: delete the pod @ 10/06/25 11:20:16.082
  I1006 11:20:16.106973 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4223" for this suite. @ 10/06/25 11:20:16.11
• [4.099 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 10/06/25 11:20:16.115
  I1006 11:20:16.115838 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename var-expansion @ 10/06/25 11:20:16.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:20:16.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:20:16.134
  STEP: creating the pod @ 10/06/25 11:20:16.137
  STEP: waiting for pod running @ 10/06/25 11:20:16.146
  STEP: creating a file in subpath @ 10/06/25 11:20:18.161
  I1006 11:20:18.165488 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-585 PodName:var-expansion-48d4a817-8886-4995-9ea7-98ce42174988 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:20:18.166122 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:20:18.166431 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/var-expansion-585/pods/var-expansion-48d4a817-8886-4995-9ea7-98ce42174988/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I1006 11:20:18.222083 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 10/06/25 11:20:18.222
  I1006 11:20:18.224914 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-585 PodName:var-expansion-48d4a817-8886-4995-9ea7-98ce42174988 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:20:18.224957 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:20:18.225022 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/var-expansion-585/pods/var-expansion-48d4a817-8886-4995-9ea7-98ce42174988/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I1006 11:20:18.264083 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 10/06/25 11:20:18.264
  I1006 11:20:18.789757 24 pod_client.go:173] Successfully updated pod "var-expansion-48d4a817-8886-4995-9ea7-98ce42174988"
  STEP: waiting for annotated pod running @ 10/06/25 11:20:18.79
  STEP: deleting the pod gracefully @ 10/06/25 11:20:18.793
  I1006 11:20:18.793532 24 delete.go:62] Deleting pod "var-expansion-48d4a817-8886-4995-9ea7-98ce42174988" in namespace "var-expansion-585"
  I1006 11:20:18.804522 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-48d4a817-8886-4995-9ea7-98ce42174988" to be fully deleted
  I1006 11:20:50.881030 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-585" for this suite. @ 10/06/25 11:20:50.884
• [34.779 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 10/06/25 11:20:50.895
  I1006 11:20:50.895517 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 11:20:50.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:20:50.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:20:50.918
  STEP: Setting up server cert @ 10/06/25 11:20:50.938
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 11:20:51.82
  STEP: Deploying the webhook pod @ 10/06/25 11:20:51.829
  STEP: Wait for the deployment to be ready @ 10/06/25 11:20:51.849
  I1006 11:20:51.862595 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 11:20:53.875
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 11:20:53.908
  I1006 11:20:54.908889 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 10/06/25 11:20:54.913
  STEP: Creating a custom resource definition that should be denied by the webhook @ 10/06/25 11:20:54.937
  I1006 11:20:54.937278 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:20:55.016650 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4969" for this suite. @ 10/06/25 11:20:55.027
  STEP: Destroying namespace "webhook-markers-2150" for this suite. @ 10/06/25 11:20:55.034
• [4.146 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 10/06/25 11:20:55.042
  I1006 11:20:55.042150 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 11:20:55.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:20:55.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:20:55.063
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:20:55.066
  STEP: Saw pod success @ 10/06/25 11:20:57.087
  I1006 11:20:57.090559 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-93f3cbe0-614f-4114-b017-399561db46d3 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:20:57.096
  I1006 11:20:57.126340 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-345" for this suite. @ 10/06/25 11:20:57.129
• [2.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 10/06/25 11:20:57.138
  I1006 11:20:57.138672 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename svc-latency @ 10/06/25 11:20:57.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:20:57.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:20:57.155
  I1006 11:20:57.160509 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:20:57.171392 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I1006 11:20:59.176767      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:20:59.178502      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:20:59.301414 24 service_latency.go:351] Created: latency-svc-n9bxc
  I1006 11:20:59.310611 24 service_latency.go:358] Got endpoints: latency-svc-n9bxc [34.774506ms]
  I1006 11:20:59.343299 24 service_latency.go:351] Created: latency-svc-n29z2
  I1006 11:20:59.351605 24 service_latency.go:358] Got endpoints: latency-svc-n29z2 [40.878243ms]
  I1006 11:20:59.358960 24 service_latency.go:351] Created: latency-svc-fjphx
  I1006 11:20:59.374439 24 service_latency.go:358] Got endpoints: latency-svc-fjphx [63.454241ms]
  I1006 11:20:59.377103 24 service_latency.go:351] Created: latency-svc-fbxd8
  I1006 11:20:59.387948 24 service_latency.go:358] Got endpoints: latency-svc-fbxd8 [76.954384ms]
  I1006 11:20:59.397126 24 service_latency.go:351] Created: latency-svc-dqvnw
  I1006 11:20:59.429921 24 service_latency.go:358] Got endpoints: latency-svc-dqvnw [118.717886ms]
  I1006 11:20:59.437467 24 service_latency.go:351] Created: latency-svc-qrs6g
  I1006 11:20:59.460950 24 service_latency.go:351] Created: latency-svc-g5qpw
  I1006 11:20:59.461103 24 service_latency.go:358] Got endpoints: latency-svc-qrs6g [149.957539ms]
  I1006 11:20:59.470953 24 service_latency.go:351] Created: latency-svc-7d92z
  I1006 11:20:59.476132 24 service_latency.go:358] Got endpoints: latency-svc-g5qpw [164.932958ms]
  I1006 11:20:59.477525 24 service_latency.go:358] Got endpoints: latency-svc-7d92z [166.376118ms]
  I1006 11:20:59.493729 24 service_latency.go:351] Created: latency-svc-dllxq
  I1006 11:20:59.500920 24 service_latency.go:358] Got endpoints: latency-svc-dllxq [189.649271ms]
  I1006 11:20:59.505255 24 service_latency.go:351] Created: latency-svc-2cm4z
  I1006 11:20:59.517192 24 service_latency.go:358] Got endpoints: latency-svc-2cm4z [205.943165ms]
  I1006 11:20:59.543749 24 service_latency.go:351] Created: latency-svc-tr6hj
  I1006 11:20:59.548442 24 service_latency.go:351] Created: latency-svc-4glk5
  I1006 11:20:59.565205 24 service_latency.go:358] Got endpoints: latency-svc-4glk5 [253.858546ms]
  I1006 11:20:59.565329 24 service_latency.go:358] Got endpoints: latency-svc-tr6hj [254.008627ms]
  I1006 11:20:59.577543 24 service_latency.go:351] Created: latency-svc-mnlqg
  I1006 11:20:59.592034 24 service_latency.go:358] Got endpoints: latency-svc-mnlqg [280.574142ms]
  I1006 11:20:59.593215 24 service_latency.go:351] Created: latency-svc-46ltk
  I1006 11:20:59.604676 24 service_latency.go:358] Got endpoints: latency-svc-46ltk [293.208162ms]
  I1006 11:20:59.609617 24 service_latency.go:351] Created: latency-svc-hn5ls
  I1006 11:20:59.621857 24 service_latency.go:358] Got endpoints: latency-svc-hn5ls [310.443457ms]
  I1006 11:20:59.624457 24 service_latency.go:351] Created: latency-svc-6sj6d
  I1006 11:20:59.635171 24 service_latency.go:351] Created: latency-svc-d8xfk
  I1006 11:20:59.657683 24 service_latency.go:358] Got endpoints: latency-svc-d8xfk [305.966642ms]
  I1006 11:20:59.657712 24 service_latency.go:358] Got endpoints: latency-svc-6sj6d [346.287242ms]
  I1006 11:20:59.676720 24 service_latency.go:351] Created: latency-svc-zsvd2
  I1006 11:20:59.685224 24 service_latency.go:358] Got endpoints: latency-svc-zsvd2 [310.661789ms]
  I1006 11:20:59.690678 24 service_latency.go:351] Created: latency-svc-gwtn8
  I1006 11:20:59.719772 24 service_latency.go:358] Got endpoints: latency-svc-gwtn8 [331.335769ms]
  I1006 11:20:59.738987 24 service_latency.go:351] Created: latency-svc-z9wfd
  I1006 11:20:59.756902 24 service_latency.go:358] Got endpoints: latency-svc-z9wfd [326.425298ms]
  I1006 11:20:59.756967 24 service_latency.go:351] Created: latency-svc-hkl7m
  I1006 11:20:59.769668 24 service_latency.go:358] Got endpoints: latency-svc-hkl7m [308.516008ms]
  I1006 11:20:59.776975 24 service_latency.go:351] Created: latency-svc-x92h2
  I1006 11:20:59.789702 24 service_latency.go:358] Got endpoints: latency-svc-x92h2 [313.477355ms]
  I1006 11:20:59.798376 24 service_latency.go:351] Created: latency-svc-lwnfq
  I1006 11:20:59.813082 24 service_latency.go:358] Got endpoints: latency-svc-lwnfq [335.466819ms]
  I1006 11:20:59.814739 24 service_latency.go:351] Created: latency-svc-lwk2d
  I1006 11:20:59.824899 24 service_latency.go:358] Got endpoints: latency-svc-lwk2d [323.8849ms]
  I1006 11:20:59.834197 24 service_latency.go:351] Created: latency-svc-z8dx4
  I1006 11:20:59.846024 24 service_latency.go:358] Got endpoints: latency-svc-z8dx4 [328.700174ms]
  I1006 11:20:59.856389 24 service_latency.go:351] Created: latency-svc-ww8cb
  I1006 11:20:59.874943 24 service_latency.go:358] Got endpoints: latency-svc-ww8cb [309.634257ms]
  I1006 11:20:59.875435 24 service_latency.go:351] Created: latency-svc-nr6kp
  I1006 11:20:59.889130 24 service_latency.go:358] Got endpoints: latency-svc-nr6kp [323.729536ms]
  I1006 11:20:59.908062 24 service_latency.go:351] Created: latency-svc-5sgwh
  I1006 11:20:59.917760 24 service_latency.go:358] Got endpoints: latency-svc-5sgwh [325.579004ms]
  I1006 11:20:59.930232 24 service_latency.go:351] Created: latency-svc-lxzcw
  I1006 11:20:59.944680 24 service_latency.go:358] Got endpoints: latency-svc-lxzcw [339.802664ms]
  I1006 11:20:59.948415 24 service_latency.go:351] Created: latency-svc-lcp8t
  I1006 11:20:59.963526 24 service_latency.go:351] Created: latency-svc-8xhgn
  I1006 11:20:59.964265 24 service_latency.go:358] Got endpoints: latency-svc-lcp8t [342.011523ms]
  I1006 11:20:59.988433 24 service_latency.go:358] Got endpoints: latency-svc-8xhgn [330.662874ms]
  I1006 11:20:59.989459 24 service_latency.go:351] Created: latency-svc-l96q7
  I1006 11:21:00.002739 24 service_latency.go:358] Got endpoints: latency-svc-l96q7 [344.42663ms]
  I1006 11:21:00.011172 24 service_latency.go:351] Created: latency-svc-p7g5c
  I1006 11:21:00.024762 24 service_latency.go:358] Got endpoints: latency-svc-p7g5c [339.43387ms]
  I1006 11:21:00.030428 24 service_latency.go:351] Created: latency-svc-c88wb
  I1006 11:21:00.047675 24 service_latency.go:358] Got endpoints: latency-svc-c88wb [327.75752ms]
  I1006 11:21:00.048642 24 service_latency.go:351] Created: latency-svc-z96l8
  I1006 11:21:00.065025 24 service_latency.go:358] Got endpoints: latency-svc-z96l8 [308.024548ms]
  I1006 11:21:00.068681 24 service_latency.go:351] Created: latency-svc-rl6k9
  I1006 11:21:00.074050 24 service_latency.go:358] Got endpoints: latency-svc-rl6k9 [304.268569ms]
  I1006 11:21:00.081955 24 service_latency.go:351] Created: latency-svc-b96g6
  I1006 11:21:00.100517 24 service_latency.go:358] Got endpoints: latency-svc-b96g6 [310.746004ms]
  I1006 11:21:00.108134 24 service_latency.go:351] Created: latency-svc-bvf89
  I1006 11:21:00.116518 24 service_latency.go:358] Got endpoints: latency-svc-bvf89 [303.365857ms]
  I1006 11:21:00.128797 24 service_latency.go:351] Created: latency-svc-wmqq5
  I1006 11:21:00.137207 24 service_latency.go:358] Got endpoints: latency-svc-wmqq5 [312.237735ms]
  I1006 11:21:00.147221 24 service_latency.go:351] Created: latency-svc-clcrs
  I1006 11:21:00.156818 24 service_latency.go:358] Got endpoints: latency-svc-clcrs [310.716278ms]
  I1006 11:21:00.175315 24 service_latency.go:351] Created: latency-svc-gzkh4
  I1006 11:21:00.181237 24 service_latency.go:358] Got endpoints: latency-svc-gzkh4 [306.209633ms]
  I1006 11:21:00.191215 24 service_latency.go:351] Created: latency-svc-lzc5l
  I1006 11:21:00.214029 24 service_latency.go:358] Got endpoints: latency-svc-lzc5l [324.813209ms]
  I1006 11:21:00.214809 24 service_latency.go:351] Created: latency-svc-w6xtg
  I1006 11:21:00.225059 24 service_latency.go:358] Got endpoints: latency-svc-w6xtg [307.198015ms]
  I1006 11:21:00.237641 24 service_latency.go:351] Created: latency-svc-k4vc8
  I1006 11:21:00.245036 24 service_latency.go:358] Got endpoints: latency-svc-k4vc8 [300.25436ms]
  I1006 11:21:00.262955 24 service_latency.go:351] Created: latency-svc-9cp9b
  I1006 11:21:00.274200 24 service_latency.go:358] Got endpoints: latency-svc-9cp9b [309.787157ms]
  I1006 11:21:00.274989 24 service_latency.go:351] Created: latency-svc-j6pmt
  I1006 11:21:00.290964 24 service_latency.go:358] Got endpoints: latency-svc-j6pmt [302.416983ms]
  I1006 11:21:00.306473 24 service_latency.go:351] Created: latency-svc-xqpn5
  I1006 11:21:00.313394 24 service_latency.go:358] Got endpoints: latency-svc-xqpn5 [310.545164ms]
  I1006 11:21:00.326131 24 service_latency.go:351] Created: latency-svc-q2ttx
  I1006 11:21:00.337769 24 service_latency.go:358] Got endpoints: latency-svc-q2ttx [312.879727ms]
  I1006 11:21:00.341968 24 service_latency.go:351] Created: latency-svc-g6bhs
  I1006 11:21:00.357006 24 service_latency.go:358] Got endpoints: latency-svc-g6bhs [309.218441ms]
  I1006 11:21:00.367606 24 service_latency.go:351] Created: latency-svc-6xjx5
  I1006 11:21:00.380537 24 service_latency.go:358] Got endpoints: latency-svc-6xjx5 [315.406701ms]
  I1006 11:21:00.405775 24 service_latency.go:351] Created: latency-svc-xjx8r
  I1006 11:21:00.417364 24 service_latency.go:358] Got endpoints: latency-svc-xjx8r [343.230848ms]
  I1006 11:21:00.430363 24 service_latency.go:351] Created: latency-svc-w6d2w
  I1006 11:21:00.449660 24 service_latency.go:358] Got endpoints: latency-svc-w6d2w [349.063502ms]
  I1006 11:21:00.455849 24 service_latency.go:351] Created: latency-svc-pcgsk
  I1006 11:21:00.468712 24 service_latency.go:358] Got endpoints: latency-svc-pcgsk [352.100378ms]
  I1006 11:21:00.479080 24 service_latency.go:351] Created: latency-svc-ws9c9
  I1006 11:21:00.504269 24 service_latency.go:351] Created: latency-svc-f4x4h
  I1006 11:21:00.513089 24 service_latency.go:358] Got endpoints: latency-svc-ws9c9 [375.76704ms]
  I1006 11:21:00.520686 24 service_latency.go:351] Created: latency-svc-wmzk9
  I1006 11:21:00.537249 24 service_latency.go:351] Created: latency-svc-d9fp4
  I1006 11:21:00.559312 24 service_latency.go:351] Created: latency-svc-2kfkb
  I1006 11:21:00.561633 24 service_latency.go:358] Got endpoints: latency-svc-f4x4h [404.747656ms]
  I1006 11:21:00.571629 24 service_latency.go:351] Created: latency-svc-zkf4r
  I1006 11:21:00.588829 24 service_latency.go:351] Created: latency-svc-sndcx
  I1006 11:21:00.603635 24 service_latency.go:351] Created: latency-svc-z8w6c
  I1006 11:21:00.613605 24 service_latency.go:358] Got endpoints: latency-svc-wmzk9 [432.274429ms]
  I1006 11:21:00.621818 24 service_latency.go:351] Created: latency-svc-2hnmv
  I1006 11:21:00.642406 24 service_latency.go:351] Created: latency-svc-zbmbt
  I1006 11:21:00.658378 24 service_latency.go:351] Created: latency-svc-7xrvl
  I1006 11:21:00.658476 24 service_latency.go:358] Got endpoints: latency-svc-d9fp4 [444.341713ms]
  I1006 11:21:00.679938 24 service_latency.go:351] Created: latency-svc-kf72z
  I1006 11:21:00.713071 24 service_latency.go:351] Created: latency-svc-spg7d
  I1006 11:21:00.713109 24 service_latency.go:358] Got endpoints: latency-svc-2kfkb [487.971181ms]
  I1006 11:21:00.720704 24 service_latency.go:351] Created: latency-svc-nccvg
  I1006 11:21:00.748689 24 service_latency.go:351] Created: latency-svc-lr6bd
  I1006 11:21:00.761176 24 service_latency.go:351] Created: latency-svc-9n92b
  I1006 11:21:00.761777 24 service_latency.go:358] Got endpoints: latency-svc-zkf4r [516.650978ms]
  I1006 11:21:00.783740 24 service_latency.go:351] Created: latency-svc-cg5rw
  I1006 11:21:00.788533 24 service_latency.go:351] Created: latency-svc-vzhkd
  I1006 11:21:00.813013 24 service_latency.go:358] Got endpoints: latency-svc-sndcx [538.723277ms]
  I1006 11:21:00.816779 24 service_latency.go:351] Created: latency-svc-xvhwt
  I1006 11:21:00.834471 24 service_latency.go:351] Created: latency-svc-q6s6g
  I1006 11:21:00.845539 24 service_latency.go:351] Created: latency-svc-8nk62
  I1006 11:21:00.855924 24 service_latency.go:351] Created: latency-svc-gwx2f
  I1006 11:21:00.858085 24 service_latency.go:358] Got endpoints: latency-svc-z8w6c [567.024503ms]
  I1006 11:21:00.892168 24 service_latency.go:351] Created: latency-svc-bz5ct
  I1006 11:21:00.908126 24 service_latency.go:358] Got endpoints: latency-svc-2hnmv [594.657295ms]
  I1006 11:21:00.936663 24 service_latency.go:351] Created: latency-svc-ckhbr
  I1006 11:21:00.961737 24 service_latency.go:358] Got endpoints: latency-svc-zbmbt [623.812631ms]
  I1006 11:21:00.990453 24 service_latency.go:351] Created: latency-svc-lzgtc
  I1006 11:21:01.009290 24 service_latency.go:358] Got endpoints: latency-svc-7xrvl [652.175933ms]
  I1006 11:21:01.033247 24 service_latency.go:351] Created: latency-svc-r8xqq
  I1006 11:21:01.065876 24 service_latency.go:358] Got endpoints: latency-svc-kf72z [685.224248ms]
  I1006 11:21:01.089819 24 service_latency.go:351] Created: latency-svc-47dpr
  I1006 11:21:01.117420 24 service_latency.go:358] Got endpoints: latency-svc-spg7d [699.726149ms]
  I1006 11:21:01.145473 24 service_latency.go:351] Created: latency-svc-ktghk
  I1006 11:21:01.164102 24 service_latency.go:358] Got endpoints: latency-svc-nccvg [714.21307ms]
  I1006 11:21:01.190860 24 service_latency.go:351] Created: latency-svc-lnlxf
  I1006 11:21:01.216944 24 service_latency.go:358] Got endpoints: latency-svc-lr6bd [747.988202ms]
  I1006 11:21:01.249222 24 service_latency.go:351] Created: latency-svc-gzqtd
  I1006 11:21:01.263976 24 service_latency.go:358] Got endpoints: latency-svc-9n92b [750.655199ms]
  I1006 11:21:01.292933 24 service_latency.go:351] Created: latency-svc-wdrfz
  I1006 11:21:01.313724 24 service_latency.go:358] Got endpoints: latency-svc-cg5rw [751.79234ms]
  I1006 11:21:01.358796 24 service_latency.go:358] Got endpoints: latency-svc-vzhkd [745.116322ms]
  I1006 11:21:01.361820 24 service_latency.go:351] Created: latency-svc-jvct9
  I1006 11:21:01.382851 24 service_latency.go:351] Created: latency-svc-b69hx
  I1006 11:21:01.411673 24 service_latency.go:358] Got endpoints: latency-svc-xvhwt [752.703103ms]
  I1006 11:21:01.446349 24 service_latency.go:351] Created: latency-svc-dnq9l
  I1006 11:21:01.464404 24 service_latency.go:358] Got endpoints: latency-svc-q6s6g [751.044326ms]
  I1006 11:21:01.487547 24 service_latency.go:351] Created: latency-svc-5mxr5
  I1006 11:21:01.511373 24 service_latency.go:358] Got endpoints: latency-svc-8nk62 [749.478944ms]
  I1006 11:21:01.536873 24 service_latency.go:351] Created: latency-svc-8dlfq
  I1006 11:21:01.563994 24 service_latency.go:358] Got endpoints: latency-svc-gwx2f [750.861148ms]
  I1006 11:21:01.589580 24 service_latency.go:351] Created: latency-svc-twg78
  I1006 11:21:01.616598 24 service_latency.go:358] Got endpoints: latency-svc-bz5ct [758.175064ms]
  I1006 11:21:01.647742 24 service_latency.go:351] Created: latency-svc-8xq7c
  I1006 11:21:01.665150 24 service_latency.go:358] Got endpoints: latency-svc-ckhbr [756.931111ms]
  I1006 11:21:01.691549 24 service_latency.go:351] Created: latency-svc-m9bpv
  I1006 11:21:01.714144 24 service_latency.go:358] Got endpoints: latency-svc-lzgtc [752.224982ms]
  I1006 11:21:01.740276 24 service_latency.go:351] Created: latency-svc-lps9t
  I1006 11:21:01.762198 24 service_latency.go:358] Got endpoints: latency-svc-r8xqq [752.729789ms]
  I1006 11:21:01.807395 24 service_latency.go:351] Created: latency-svc-f5k6s
  I1006 11:21:01.810008 24 service_latency.go:358] Got endpoints: latency-svc-47dpr [744.036317ms]
  I1006 11:21:01.840468 24 service_latency.go:351] Created: latency-svc-7sprl
  I1006 11:21:01.856830 24 service_latency.go:358] Got endpoints: latency-svc-ktghk [739.304249ms]
  I1006 11:21:01.893589 24 service_latency.go:351] Created: latency-svc-9f49s
  I1006 11:21:01.911374 24 service_latency.go:358] Got endpoints: latency-svc-lnlxf [747.175463ms]
  I1006 11:21:01.961635 24 service_latency.go:351] Created: latency-svc-n2btv
  I1006 11:21:01.970008 24 service_latency.go:358] Got endpoints: latency-svc-gzqtd [752.767334ms]
  I1006 11:21:02.011429 24 service_latency.go:358] Got endpoints: latency-svc-wdrfz [747.357592ms]
  I1006 11:21:02.011720 24 service_latency.go:351] Created: latency-svc-tdcz5
  I1006 11:21:02.045291 24 service_latency.go:351] Created: latency-svc-6wbvw
  I1006 11:21:02.056699 24 service_latency.go:358] Got endpoints: latency-svc-jvct9 [742.666571ms]
  I1006 11:21:02.083868 24 service_latency.go:351] Created: latency-svc-p4djx
  I1006 11:21:02.110198 24 service_latency.go:358] Got endpoints: latency-svc-b69hx [751.070814ms]
  I1006 11:21:02.137271 24 service_latency.go:351] Created: latency-svc-rxdh6
  I1006 11:21:02.157878 24 service_latency.go:358] Got endpoints: latency-svc-dnq9l [745.786783ms]
  I1006 11:21:02.183732 24 service_latency.go:351] Created: latency-svc-btrh2
  I1006 11:21:02.212708 24 service_latency.go:358] Got endpoints: latency-svc-5mxr5 [747.998068ms]
  I1006 11:21:02.234022 24 service_latency.go:351] Created: latency-svc-g7zgz
  I1006 11:21:02.258618 24 service_latency.go:358] Got endpoints: latency-svc-8dlfq [746.954327ms]
  I1006 11:21:02.284001 24 service_latency.go:351] Created: latency-svc-nl5hq
  I1006 11:21:02.307111 24 service_latency.go:358] Got endpoints: latency-svc-twg78 [742.829622ms]
  I1006 11:21:02.331169 24 service_latency.go:351] Created: latency-svc-wclhg
  I1006 11:21:02.358217 24 service_latency.go:358] Got endpoints: latency-svc-8xq7c [741.403577ms]
  I1006 11:21:02.382776 24 service_latency.go:351] Created: latency-svc-mxmkd
  I1006 11:21:02.407639 24 service_latency.go:358] Got endpoints: latency-svc-m9bpv [742.409303ms]
  I1006 11:21:02.432732 24 service_latency.go:351] Created: latency-svc-pswr8
  I1006 11:21:02.457183 24 service_latency.go:358] Got endpoints: latency-svc-lps9t [742.964659ms]
  I1006 11:21:02.479116 24 service_latency.go:351] Created: latency-svc-pb8mp
  I1006 11:21:02.512889 24 service_latency.go:358] Got endpoints: latency-svc-f5k6s [750.408329ms]
  I1006 11:21:02.540959 24 service_latency.go:351] Created: latency-svc-jz4tn
  I1006 11:21:02.561716 24 service_latency.go:358] Got endpoints: latency-svc-7sprl [751.642365ms]
  I1006 11:21:02.583072 24 service_latency.go:351] Created: latency-svc-nwz9s
  I1006 11:21:02.607978 24 service_latency.go:358] Got endpoints: latency-svc-9f49s [751.051227ms]
  I1006 11:21:02.638324 24 service_latency.go:351] Created: latency-svc-97nx4
  I1006 11:21:02.657943 24 service_latency.go:358] Got endpoints: latency-svc-n2btv [746.420394ms]
  I1006 11:21:02.683184 24 service_latency.go:351] Created: latency-svc-vf9sl
  I1006 11:21:02.708169 24 service_latency.go:358] Got endpoints: latency-svc-tdcz5 [738.033644ms]
  I1006 11:21:02.733367 24 service_latency.go:351] Created: latency-svc-m7dgn
  I1006 11:21:02.759241 24 service_latency.go:358] Got endpoints: latency-svc-6wbvw [747.709175ms]
  I1006 11:21:02.786532 24 service_latency.go:351] Created: latency-svc-sfwz2
  I1006 11:21:02.811266 24 service_latency.go:358] Got endpoints: latency-svc-p4djx [754.48168ms]
  I1006 11:21:02.833803 24 service_latency.go:351] Created: latency-svc-jrcfp
  I1006 11:21:02.857083 24 service_latency.go:358] Got endpoints: latency-svc-rxdh6 [746.808087ms]
  I1006 11:21:02.887966 24 service_latency.go:351] Created: latency-svc-dqxgz
  I1006 11:21:02.906939 24 service_latency.go:358] Got endpoints: latency-svc-btrh2 [748.906599ms]
  I1006 11:21:02.930251 24 service_latency.go:351] Created: latency-svc-nzpzc
  I1006 11:21:02.966105 24 service_latency.go:358] Got endpoints: latency-svc-g7zgz [753.319641ms]
  I1006 11:21:02.989895 24 service_latency.go:351] Created: latency-svc-d6df8
  I1006 11:21:03.007134 24 service_latency.go:358] Got endpoints: latency-svc-nl5hq [748.367811ms]
  I1006 11:21:03.033324 24 service_latency.go:351] Created: latency-svc-ttldh
  I1006 11:21:03.062509 24 service_latency.go:358] Got endpoints: latency-svc-wclhg [755.265852ms]
  I1006 11:21:03.082792 24 service_latency.go:351] Created: latency-svc-r9d54
  I1006 11:21:03.109989 24 service_latency.go:358] Got endpoints: latency-svc-mxmkd [751.693762ms]
  I1006 11:21:03.134390 24 service_latency.go:351] Created: latency-svc-55hdx
  I1006 11:21:03.160109 24 service_latency.go:358] Got endpoints: latency-svc-pswr8 [752.183733ms]
  I1006 11:21:03.190747 24 service_latency.go:351] Created: latency-svc-kjkds
  I1006 11:21:03.210222 24 service_latency.go:358] Got endpoints: latency-svc-pb8mp [752.965046ms]
  I1006 11:21:03.238536 24 service_latency.go:351] Created: latency-svc-mpskf
  I1006 11:21:03.260134 24 service_latency.go:358] Got endpoints: latency-svc-jz4tn [747.138537ms]
  I1006 11:21:03.290037 24 service_latency.go:351] Created: latency-svc-lvm67
  I1006 11:21:03.311047 24 service_latency.go:358] Got endpoints: latency-svc-nwz9s [749.232979ms]
  I1006 11:21:03.336176 24 service_latency.go:351] Created: latency-svc-9xjpc
  I1006 11:21:03.363393 24 service_latency.go:358] Got endpoints: latency-svc-97nx4 [755.330421ms]
  I1006 11:21:03.388906 24 service_latency.go:351] Created: latency-svc-sgp88
  I1006 11:21:03.411389 24 service_latency.go:358] Got endpoints: latency-svc-vf9sl [753.33726ms]
  I1006 11:21:03.435241 24 service_latency.go:351] Created: latency-svc-4s6qx
  I1006 11:21:03.459280 24 service_latency.go:358] Got endpoints: latency-svc-m7dgn [751.036197ms]
  I1006 11:21:03.480865 24 service_latency.go:351] Created: latency-svc-ffsbw
  I1006 11:21:03.510701 24 service_latency.go:358] Got endpoints: latency-svc-sfwz2 [751.377818ms]
  I1006 11:21:03.535680 24 service_latency.go:351] Created: latency-svc-bvgrf
  I1006 11:21:03.560735 24 service_latency.go:358] Got endpoints: latency-svc-jrcfp [749.273618ms]
  I1006 11:21:03.585946 24 service_latency.go:351] Created: latency-svc-wqqsj
  I1006 11:21:03.620203 24 service_latency.go:358] Got endpoints: latency-svc-dqxgz [763.024431ms]
  I1006 11:21:03.646036 24 service_latency.go:351] Created: latency-svc-rwc7v
  I1006 11:21:03.664557 24 service_latency.go:358] Got endpoints: latency-svc-nzpzc [757.541333ms]
  I1006 11:21:03.692173 24 service_latency.go:351] Created: latency-svc-77nd9
  I1006 11:21:03.711477 24 service_latency.go:358] Got endpoints: latency-svc-d6df8 [745.280409ms]
  I1006 11:21:03.738782 24 service_latency.go:351] Created: latency-svc-55m7c
  I1006 11:21:03.764134 24 service_latency.go:358] Got endpoints: latency-svc-ttldh [756.890732ms]
  I1006 11:21:03.792643 24 service_latency.go:351] Created: latency-svc-vjwzx
  I1006 11:21:03.816501 24 service_latency.go:358] Got endpoints: latency-svc-r9d54 [753.847792ms]
  I1006 11:21:03.846726 24 service_latency.go:351] Created: latency-svc-7cb8n
  I1006 11:21:03.859050 24 service_latency.go:358] Got endpoints: latency-svc-55hdx [748.8777ms]
  I1006 11:21:03.892553 24 service_latency.go:351] Created: latency-svc-q72xn
  I1006 11:21:03.915864 24 service_latency.go:358] Got endpoints: latency-svc-kjkds [755.6647ms]
  I1006 11:21:03.955352 24 service_latency.go:351] Created: latency-svc-nfwbm
  I1006 11:21:03.965639 24 service_latency.go:358] Got endpoints: latency-svc-mpskf [755.334327ms]
  I1006 11:21:03.996739 24 service_latency.go:351] Created: latency-svc-8wbpw
  I1006 11:21:04.015353 24 service_latency.go:358] Got endpoints: latency-svc-lvm67 [754.897743ms]
  I1006 11:21:04.041196 24 service_latency.go:351] Created: latency-svc-w97pp
  I1006 11:21:04.065793 24 service_latency.go:358] Got endpoints: latency-svc-9xjpc [754.636217ms]
  I1006 11:21:04.121893 24 service_latency.go:358] Got endpoints: latency-svc-sgp88 [758.385744ms]
  I1006 11:21:04.131181 24 service_latency.go:351] Created: latency-svc-z7cw4
  I1006 11:21:04.161654 24 service_latency.go:358] Got endpoints: latency-svc-4s6qx [750.025989ms]
  I1006 11:21:04.170059 24 service_latency.go:351] Created: latency-svc-f7m6z
  I1006 11:21:04.199313 24 service_latency.go:351] Created: latency-svc-ltc2h
  I1006 11:21:04.210694 24 service_latency.go:358] Got endpoints: latency-svc-ffsbw [751.201004ms]
  I1006 11:21:04.245263 24 service_latency.go:351] Created: latency-svc-c972k
  I1006 11:21:04.259426 24 service_latency.go:358] Got endpoints: latency-svc-bvgrf [748.649837ms]
  I1006 11:21:04.293887 24 service_latency.go:351] Created: latency-svc-589z8
  I1006 11:21:04.308922 24 service_latency.go:358] Got endpoints: latency-svc-wqqsj [748.053468ms]
  I1006 11:21:04.341645 24 service_latency.go:351] Created: latency-svc-6tbwn
  I1006 11:21:04.362172 24 service_latency.go:358] Got endpoints: latency-svc-rwc7v [741.869236ms]
  I1006 11:21:04.397218 24 service_latency.go:351] Created: latency-svc-6dtrk
  I1006 11:21:04.411479 24 service_latency.go:358] Got endpoints: latency-svc-77nd9 [746.484695ms]
  I1006 11:21:04.450440 24 service_latency.go:351] Created: latency-svc-fw99b
  I1006 11:21:04.459404 24 service_latency.go:358] Got endpoints: latency-svc-55m7c [747.846499ms]
  I1006 11:21:04.497942 24 service_latency.go:351] Created: latency-svc-n9pt5
  I1006 11:21:04.509638 24 service_latency.go:358] Got endpoints: latency-svc-vjwzx [745.404087ms]
  I1006 11:21:04.538630 24 service_latency.go:351] Created: latency-svc-55d5z
  I1006 11:21:04.561507 24 service_latency.go:358] Got endpoints: latency-svc-7cb8n [744.884752ms]
  I1006 11:21:04.604628 24 service_latency.go:351] Created: latency-svc-jvv66
  I1006 11:21:04.612827 24 service_latency.go:358] Got endpoints: latency-svc-q72xn [753.668008ms]
  I1006 11:21:04.646750 24 service_latency.go:351] Created: latency-svc-wx75w
  I1006 11:21:04.658548 24 service_latency.go:358] Got endpoints: latency-svc-nfwbm [742.094526ms]
  I1006 11:21:04.689619 24 service_latency.go:351] Created: latency-svc-78czv
  I1006 11:21:04.708974 24 service_latency.go:358] Got endpoints: latency-svc-8wbpw [743.08953ms]
  I1006 11:21:04.743074 24 service_latency.go:351] Created: latency-svc-ws5qz
  I1006 11:21:04.758513 24 service_latency.go:358] Got endpoints: latency-svc-w97pp [742.833808ms]
  I1006 11:21:04.789975 24 service_latency.go:351] Created: latency-svc-7djbs
  I1006 11:21:04.809030 24 service_latency.go:358] Got endpoints: latency-svc-z7cw4 [742.96888ms]
  I1006 11:21:04.838226 24 service_latency.go:351] Created: latency-svc-smwvm
  I1006 11:21:04.861368 24 service_latency.go:358] Got endpoints: latency-svc-f7m6z [739.402044ms]
  I1006 11:21:04.891747 24 service_latency.go:351] Created: latency-svc-bl2kc
  I1006 11:21:04.910064 24 service_latency.go:358] Got endpoints: latency-svc-ltc2h [748.33659ms]
  I1006 11:21:04.945503 24 service_latency.go:351] Created: latency-svc-7mn94
  I1006 11:21:04.957174 24 service_latency.go:358] Got endpoints: latency-svc-c972k [746.361366ms]
  I1006 11:21:04.986231 24 service_latency.go:351] Created: latency-svc-8rmhj
  I1006 11:21:05.009261 24 service_latency.go:358] Got endpoints: latency-svc-589z8 [749.72377ms]
  I1006 11:21:05.046491 24 service_latency.go:351] Created: latency-svc-5lbjz
  I1006 11:21:05.059426 24 service_latency.go:358] Got endpoints: latency-svc-6tbwn [750.361663ms]
  I1006 11:21:05.086951 24 service_latency.go:351] Created: latency-svc-f8fhj
  I1006 11:21:05.111352 24 service_latency.go:358] Got endpoints: latency-svc-6dtrk [749.045702ms]
  I1006 11:21:05.136307 24 service_latency.go:351] Created: latency-svc-ddqqc
  I1006 11:21:05.163507 24 service_latency.go:358] Got endpoints: latency-svc-fw99b [751.930451ms]
  I1006 11:21:05.188625 24 service_latency.go:351] Created: latency-svc-vmlf8
  I1006 11:21:05.211613 24 service_latency.go:358] Got endpoints: latency-svc-n9pt5 [752.117116ms]
  I1006 11:21:05.238051 24 service_latency.go:351] Created: latency-svc-blzqc
  I1006 11:21:05.265501 24 service_latency.go:358] Got endpoints: latency-svc-55d5z [755.72098ms]
  I1006 11:21:05.290974 24 service_latency.go:351] Created: latency-svc-zsxgb
  I1006 11:21:05.316182 24 service_latency.go:358] Got endpoints: latency-svc-jvv66 [754.569709ms]
  I1006 11:21:05.342098 24 service_latency.go:351] Created: latency-svc-52b26
  I1006 11:21:05.370823 24 service_latency.go:358] Got endpoints: latency-svc-wx75w [757.904942ms]
  I1006 11:21:05.413830 24 service_latency.go:358] Got endpoints: latency-svc-78czv [755.141194ms]
  I1006 11:21:05.417169 24 service_latency.go:351] Created: latency-svc-mfx8l
  I1006 11:21:05.443801 24 service_latency.go:351] Created: latency-svc-6f8ss
  I1006 11:21:05.462342 24 service_latency.go:358] Got endpoints: latency-svc-ws5qz [753.265419ms]
  I1006 11:21:05.490506 24 service_latency.go:351] Created: latency-svc-dbk6g
  I1006 11:21:05.512255 24 service_latency.go:358] Got endpoints: latency-svc-7djbs [753.616193ms]
  I1006 11:21:05.535008 24 service_latency.go:351] Created: latency-svc-jf5gp
  I1006 11:21:05.565369 24 service_latency.go:358] Got endpoints: latency-svc-smwvm [756.211368ms]
  I1006 11:21:05.595784 24 service_latency.go:351] Created: latency-svc-xd859
  I1006 11:21:05.611682 24 service_latency.go:358] Got endpoints: latency-svc-bl2kc [749.846926ms]
  I1006 11:21:05.635060 24 service_latency.go:351] Created: latency-svc-6qb7g
  I1006 11:21:05.662631 24 service_latency.go:358] Got endpoints: latency-svc-7mn94 [752.449305ms]
  I1006 11:21:05.699130 24 service_latency.go:351] Created: latency-svc-j2gc9
  I1006 11:21:05.711961 24 service_latency.go:358] Got endpoints: latency-svc-8rmhj [754.322722ms]
  I1006 11:21:05.738378 24 service_latency.go:351] Created: latency-svc-bnznd
  I1006 11:21:05.761996 24 service_latency.go:358] Got endpoints: latency-svc-5lbjz [752.63666ms]
  I1006 11:21:05.790180 24 service_latency.go:351] Created: latency-svc-29m7q
  I1006 11:21:05.812798 24 service_latency.go:358] Got endpoints: latency-svc-f8fhj [753.290366ms]
  I1006 11:21:05.844894 24 service_latency.go:351] Created: latency-svc-57b9f
  I1006 11:21:05.865973 24 service_latency.go:358] Got endpoints: latency-svc-ddqqc [754.494433ms]
  I1006 11:21:05.890862 24 service_latency.go:351] Created: latency-svc-rbpw2
  I1006 11:21:05.918796 24 service_latency.go:358] Got endpoints: latency-svc-vmlf8 [755.155337ms]
  I1006 11:21:05.946616 24 service_latency.go:351] Created: latency-svc-cjnv6
  I1006 11:21:05.963425 24 service_latency.go:358] Got endpoints: latency-svc-blzqc [751.72952ms]
  I1006 11:21:05.988725 24 service_latency.go:351] Created: latency-svc-vhdlr
  I1006 11:21:06.014801 24 service_latency.go:358] Got endpoints: latency-svc-zsxgb [748.653404ms]
  I1006 11:21:06.042024 24 service_latency.go:351] Created: latency-svc-v4bl4
  I1006 11:21:06.060208 24 service_latency.go:358] Got endpoints: latency-svc-52b26 [743.56247ms]
  I1006 11:21:06.091333 24 service_latency.go:351] Created: latency-svc-mv2jz
  I1006 11:21:06.108850 24 service_latency.go:358] Got endpoints: latency-svc-mfx8l [737.935161ms]
  I1006 11:21:06.146008 24 service_latency.go:351] Created: latency-svc-8q4lw
  I1006 11:21:06.161789 24 service_latency.go:358] Got endpoints: latency-svc-6f8ss [747.894697ms]
  I1006 11:21:06.189267 24 service_latency.go:351] Created: latency-svc-hqgs4
  I1006 11:21:06.210724 24 service_latency.go:358] Got endpoints: latency-svc-dbk6g [748.032119ms]
  I1006 11:21:06.241601 24 service_latency.go:351] Created: latency-svc-xx9dl
  I1006 11:21:06.260039 24 service_latency.go:358] Got endpoints: latency-svc-jf5gp [747.583722ms]
  I1006 11:21:06.291358 24 service_latency.go:351] Created: latency-svc-6z4p2
  I1006 11:21:06.309160 24 service_latency.go:358] Got endpoints: latency-svc-xd859 [743.711123ms]
  I1006 11:21:06.373321 24 service_latency.go:351] Created: latency-svc-7gqbk
  I1006 11:21:06.374731 24 service_latency.go:358] Got endpoints: latency-svc-6qb7g [762.672385ms]
  I1006 11:21:06.410200 24 service_latency.go:351] Created: latency-svc-mt9c4
  I1006 11:21:06.413909 24 service_latency.go:358] Got endpoints: latency-svc-j2gc9 [751.172102ms]
  I1006 11:21:06.443478 24 service_latency.go:351] Created: latency-svc-drf4z
  I1006 11:21:06.489136 24 service_latency.go:358] Got endpoints: latency-svc-bnznd [777.061407ms]
  I1006 11:21:06.513552 24 service_latency.go:358] Got endpoints: latency-svc-29m7q [751.440116ms]
  I1006 11:21:06.521745 24 service_latency.go:351] Created: latency-svc-lqlmv
  I1006 11:21:06.543155 24 service_latency.go:351] Created: latency-svc-wmndf
  I1006 11:21:06.556811 24 service_latency.go:358] Got endpoints: latency-svc-57b9f [743.899197ms]
  I1006 11:21:06.582612 24 service_latency.go:351] Created: latency-svc-xpk4x
  I1006 11:21:06.609252 24 service_latency.go:358] Got endpoints: latency-svc-rbpw2 [743.166993ms]
  I1006 11:21:06.637147 24 service_latency.go:351] Created: latency-svc-lzqmq
  I1006 11:21:06.657191 24 service_latency.go:358] Got endpoints: latency-svc-cjnv6 [738.318158ms]
  I1006 11:21:06.685787 24 service_latency.go:351] Created: latency-svc-z7jcg
  I1006 11:21:06.708274 24 service_latency.go:358] Got endpoints: latency-svc-vhdlr [744.74297ms]
  I1006 11:21:06.751090 24 service_latency.go:351] Created: latency-svc-sf6s2
  I1006 11:21:06.756299 24 service_latency.go:358] Got endpoints: latency-svc-v4bl4 [741.368381ms]
  I1006 11:21:06.784138 24 service_latency.go:351] Created: latency-svc-m29v9
  I1006 11:21:06.818396 24 service_latency.go:358] Got endpoints: latency-svc-mv2jz [758.113032ms]
  I1006 11:21:06.842148 24 service_latency.go:351] Created: latency-svc-gjrfz
  I1006 11:21:06.855781 24 service_latency.go:358] Got endpoints: latency-svc-8q4lw [746.675665ms]
  I1006 11:21:06.880963 24 service_latency.go:351] Created: latency-svc-x889b
  I1006 11:21:06.907397 24 service_latency.go:358] Got endpoints: latency-svc-hqgs4 [745.405851ms]
  I1006 11:21:06.938801 24 service_latency.go:351] Created: latency-svc-n5k6s
  I1006 11:21:06.960581 24 service_latency.go:358] Got endpoints: latency-svc-xx9dl [749.725588ms]
  I1006 11:21:06.985067 24 service_latency.go:351] Created: latency-svc-8hh2c
  I1006 11:21:07.008123 24 service_latency.go:358] Got endpoints: latency-svc-6z4p2 [747.996085ms]
  I1006 11:21:07.041086 24 service_latency.go:351] Created: latency-svc-pqr4s
  I1006 11:21:07.056960 24 service_latency.go:358] Got endpoints: latency-svc-7gqbk [747.711941ms]
  I1006 11:21:07.082871 24 service_latency.go:351] Created: latency-svc-hxqb4
  I1006 11:21:07.116672 24 service_latency.go:358] Got endpoints: latency-svc-mt9c4 [741.855908ms]
  I1006 11:21:07.154170 24 service_latency.go:351] Created: latency-svc-pqm4r
  I1006 11:21:07.163912 24 service_latency.go:358] Got endpoints: latency-svc-drf4z [749.880917ms]
  I1006 11:21:07.206953 24 service_latency.go:358] Got endpoints: latency-svc-lqlmv [717.722624ms]
  I1006 11:21:07.258696 24 service_latency.go:358] Got endpoints: latency-svc-wmndf [745.058643ms]
  I1006 11:21:07.312079 24 service_latency.go:358] Got endpoints: latency-svc-xpk4x [755.213204ms]
  I1006 11:21:07.369577 24 service_latency.go:358] Got endpoints: latency-svc-lzqmq [760.250782ms]
  I1006 11:21:07.416778 24 service_latency.go:358] Got endpoints: latency-svc-z7jcg [759.476423ms]
  I1006 11:21:07.460576 24 service_latency.go:358] Got endpoints: latency-svc-sf6s2 [752.039744ms]
  I1006 11:21:07.514328 24 service_latency.go:358] Got endpoints: latency-svc-m29v9 [757.791292ms]
  I1006 11:21:07.557499 24 service_latency.go:358] Got endpoints: latency-svc-gjrfz [739.035238ms]
  I1006 11:21:07.614287 24 service_latency.go:358] Got endpoints: latency-svc-x889b [758.412875ms]
  I1006 11:21:07.660177 24 service_latency.go:358] Got endpoints: latency-svc-n5k6s [752.685905ms]
  I1006 11:21:07.715356 24 service_latency.go:358] Got endpoints: latency-svc-8hh2c [754.713653ms]
  I1006 11:21:07.762858 24 service_latency.go:358] Got endpoints: latency-svc-pqr4s [754.38462ms]
  I1006 11:21:07.807378 24 service_latency.go:358] Got endpoints: latency-svc-hxqb4 [750.366596ms]
  I1006 11:21:07.857961 24 service_latency.go:358] Got endpoints: latency-svc-pqm4r [741.234048ms]
  I1006 11:21:07.858116 24 service_latency.go:114] Latencies: [40.878243ms 63.454241ms 76.954384ms 118.717886ms 149.957539ms 164.932958ms 166.376118ms 189.649271ms 205.943165ms 253.858546ms 254.008627ms 280.574142ms 293.208162ms 300.25436ms 302.416983ms 303.365857ms 304.268569ms 305.966642ms 306.209633ms 307.198015ms 308.024548ms 308.516008ms 309.218441ms 309.634257ms 309.787157ms 310.443457ms 310.545164ms 310.661789ms 310.716278ms 310.746004ms 312.237735ms 312.879727ms 313.477355ms 315.406701ms 323.729536ms 323.8849ms 324.813209ms 325.579004ms 326.425298ms 327.75752ms 328.700174ms 330.662874ms 331.335769ms 335.466819ms 339.43387ms 339.802664ms 342.011523ms 343.230848ms 344.42663ms 346.287242ms 349.063502ms 352.100378ms 375.76704ms 404.747656ms 432.274429ms 444.341713ms 487.971181ms 516.650978ms 538.723277ms 567.024503ms 594.657295ms 623.812631ms 652.175933ms 685.224248ms 699.726149ms 714.21307ms 717.722624ms 737.935161ms 738.033644ms 738.318158ms 739.035238ms 739.304249ms 739.402044ms 741.234048ms 741.368381ms 741.403577ms 741.855908ms 741.869236ms 742.094526ms 742.409303ms 742.666571ms 742.829622ms 742.833808ms 742.964659ms 742.96888ms 743.08953ms 743.166993ms 743.56247ms 743.711123ms 743.899197ms 744.036317ms 744.74297ms 744.884752ms 745.058643ms 745.116322ms 745.280409ms 745.404087ms 745.405851ms 745.786783ms 746.361366ms 746.420394ms 746.484695ms 746.675665ms 746.808087ms 746.954327ms 747.138537ms 747.175463ms 747.357592ms 747.583722ms 747.709175ms 747.711941ms 747.846499ms 747.894697ms 747.988202ms 747.996085ms 747.998068ms 748.032119ms 748.053468ms 748.33659ms 748.367811ms 748.649837ms 748.653404ms 748.8777ms 748.906599ms 749.045702ms 749.232979ms 749.273618ms 749.478944ms 749.72377ms 749.725588ms 749.846926ms 749.880917ms 750.025989ms 750.361663ms 750.366596ms 750.408329ms 750.655199ms 750.861148ms 751.036197ms 751.044326ms 751.051227ms 751.070814ms 751.172102ms 751.201004ms 751.377818ms 751.440116ms 751.642365ms 751.693762ms 751.72952ms 751.79234ms 751.930451ms 752.039744ms 752.117116ms 752.183733ms 752.224982ms 752.449305ms 752.63666ms 752.685905ms 752.703103ms 752.729789ms 752.767334ms 752.965046ms 753.265419ms 753.290366ms 753.319641ms 753.33726ms 753.616193ms 753.668008ms 753.847792ms 754.322722ms 754.38462ms 754.48168ms 754.494433ms 754.569709ms 754.636217ms 754.713653ms 754.897743ms 755.141194ms 755.155337ms 755.213204ms 755.265852ms 755.330421ms 755.334327ms 755.6647ms 755.72098ms 756.211368ms 756.890732ms 756.931111ms 757.541333ms 757.791292ms 757.904942ms 758.113032ms 758.175064ms 758.385744ms 758.412875ms 759.476423ms 760.250782ms 762.672385ms 763.024431ms 777.061407ms]
  I1006 11:21:07.858130 24 service_latency.go:118] 50 %ile: 746.420394ms
  I1006 11:21:07.858174 24 service_latency.go:119] 90 %ile: 755.265852ms
  I1006 11:21:07.858184 24 service_latency.go:120] 99 %ile: 763.024431ms
  I1006 11:21:07.858191 24 service_latency.go:121] Total sample count: 200
  I1006 11:21:07.858353 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-5871" for this suite. @ 10/06/25 11:21:07.865
• [10.736 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 10/06/25 11:21:07.875
  I1006 11:21:07.875942 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 11:21:07.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:07.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:07.899
  STEP: Counting existing ResourceQuota @ 10/06/25 11:21:07.903
  STEP: Creating a ResourceQuota @ 10/06/25 11:21:12.92
  STEP: Ensuring resource quota status is calculated @ 10/06/25 11:21:12.935
  STEP: Creating a Pod that fits quota @ 10/06/25 11:21:14.942
  STEP: Ensuring ResourceQuota status captures the pod usage @ 10/06/25 11:21:14.977
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 10/06/25 11:21:17.007
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 10/06/25 11:21:17.01
  STEP: Ensuring a pod cannot update its resource requirements @ 10/06/25 11:21:17.013
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 10/06/25 11:21:17.018
  STEP: Deleting the pod @ 10/06/25 11:21:19.021
  STEP: Ensuring resource quota status released the pod usage @ 10/06/25 11:21:19.05
  I1006 11:21:21.059312 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9842" for this suite. @ 10/06/25 11:21:21.063
• [13.202 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 10/06/25 11:21:21.081
  I1006 11:21:21.081899 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/06/25 11:21:21.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:21.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:21.102
  STEP: Cleaning up the secret @ 10/06/25 11:21:23.172
  STEP: Cleaning up the configmap @ 10/06/25 11:21:23.18
  STEP: Cleaning up the pod @ 10/06/25 11:21:23.191
  I1006 11:21:23.208062 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8376" for this suite. @ 10/06/25 11:21:23.212
• [2.138 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 10/06/25 11:21:23.22
  I1006 11:21:23.220115 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename podtemplate @ 10/06/25 11:21:23.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:23.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:23.242
  I1006 11:21:23.277121 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6742" for this suite. @ 10/06/25 11:21:23.313
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 10/06/25 11:21:23.321
  I1006 11:21:23.321194 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:21:23.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:23.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:23.337
  STEP: Creating configMap with name configmap-test-volume-map-44f73a46-94a0-4eff-bb9b-850df3403065 @ 10/06/25 11:21:23.348
  STEP: Creating a pod to test consume configMaps @ 10/06/25 11:21:23.355
  STEP: Saw pod success @ 10/06/25 11:21:27.378
  I1006 11:21:27.380973 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-configmaps-273e7c30-5488-4902-b91a-fb4d9b9bad5c container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 11:21:27.386
  I1006 11:21:27.407074 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2040" for this suite. @ 10/06/25 11:21:27.41
• [4.097 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 10/06/25 11:21:27.419
  I1006 11:21:27.419149 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/06/25 11:21:27.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:27.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:27.437
  STEP: getting /apis @ 10/06/25 11:21:27.447
  STEP: getting /apis/admissionregistration.k8s.io @ 10/06/25 11:21:27.452
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/06/25 11:21:27.453
  STEP: creating @ 10/06/25 11:21:27.454
  STEP: getting @ 10/06/25 11:21:27.476
  STEP: listing @ 10/06/25 11:21:27.485
  STEP: watching @ 10/06/25 11:21:27.488
  I1006 11:21:27.488877 24 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 10/06/25 11:21:27.49
  STEP: updating @ 10/06/25 11:21:27.496
  I1006 11:21:27.505754 24 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 10/06/25 11:21:27.506
  STEP: deleting a collection @ 10/06/25 11:21:27.518
  I1006 11:21:27.537695 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7128" for this suite. @ 10/06/25 11:21:27.541
• [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 10/06/25 11:21:27.548
  I1006 11:21:27.548988 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pod-network-test @ 10/06/25 11:21:27.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:27.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:27.574
  STEP: Performing setup for networking test in namespace pod-network-test-9592 @ 10/06/25 11:21:27.578
  STEP: creating a selector @ 10/06/25 11:21:27.578
  STEP: Creating the service pods in kubernetes @ 10/06/25 11:21:27.578
  I1006 11:21:27.578163 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/06/25 11:21:41.727
  I1006 11:21:43.779221 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1006 11:21:43.779264 24 utils.go:495] Going to poll 10.244.1.48 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I1006 11:21:43.782229 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.48:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9592 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:21:43.782264 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:21:43.782392 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9592/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.48%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I1006 11:21:43.841767 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 11:21:43.841883 24 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I1006 11:21:43.842040 24 utils.go:495] Going to poll 10.244.2.99 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I1006 11:21:43.846424 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.99:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9592 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:21:43.846623 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:21:43.847069 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9592/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.99%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I1006 11:21:43.902681 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 11:21:43.902751 24 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I1006 11:21:43.902902 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9592" for this suite. @ 10/06/25 11:21:43.906
• [16.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 10/06/25 11:21:43.916
  I1006 11:21:43.916842 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename security-context @ 10/06/25 11:21:43.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:43.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:43.946
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/06/25 11:21:43.95
  STEP: Saw pod success @ 10/06/25 11:21:47.984
  I1006 11:21:47.987388 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod security-context-601edc9c-14ba-4d96-9cd5-00bbda76c52b container test-container: <nil>
  STEP: delete the pod @ 10/06/25 11:21:48.002
  I1006 11:21:48.033133 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6742" for this suite. @ 10/06/25 11:21:48.036
• [4.127 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 10/06/25 11:21:48.044
  I1006 11:21:48.044089 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename field-validation @ 10/06/25 11:21:48.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:48.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:48.062
  I1006 11:21:48.065641 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:21:51.154190 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4123" for this suite. @ 10/06/25 11:21:51.157
• [3.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 10/06/25 11:21:51.166
  I1006 11:21:51.166968 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:21:51.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:51.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:51.193
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:21:51.196
  STEP: Saw pod success @ 10/06/25 11:21:55.217
  I1006 11:21:55.221421 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-1cc83321-20f4-4af9-964c-6029a52a24e9 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:21:55.228
  I1006 11:21:55.251800 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3646" for this suite. @ 10/06/25 11:21:55.255
• [4.095 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 10/06/25 11:21:55.261
  I1006 11:21:55.261800 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pv @ 10/06/25 11:21:55.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:55.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:55.286
  STEP: Creating initial PV and PVC @ 10/06/25 11:21:55.289
  I1006 11:21:55.289549 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6901" @ 10/06/25 11:21:55.306
  STEP: Listing PVCs in namespace "pv-6901" @ 10/06/25 11:21:55.317
  STEP: Reading "pvc-92gsd" Status @ 10/06/25 11:21:55.321
  STEP: Reading "pv-6901-gc8d5" Status @ 10/06/25 11:21:55.324
  STEP: Patching "pvc-92gsd" Status @ 10/06/25 11:21:55.327
  STEP: Patching "pv-6901-gc8d5" Status @ 10/06/25 11:21:55.334
  STEP: Updating "pvc-92gsd" Status @ 10/06/25 11:21:55.367
  STEP: Updating "pv-6901-gc8d5" Status @ 10/06/25 11:21:55.384
  I1006 11:21:55.400652 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1006 11:21:55.401034 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-92gsd"
  I1006 11:21:55.409806 24 pv.go:193] Deleting PersistentVolume "pv-6901-gc8d5"
  I1006 11:21:55.424513 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6901" for this suite. @ 10/06/25 11:21:55.427
• [0.173 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 10/06/25 11:21:55.435
  I1006 11:21:55.435270 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:21:55.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:55.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:55.459
  STEP: validating cluster-info @ 10/06/25 11:21:55.467
  I1006 11:21:55.467216 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-3376 cluster-info'
  I1006 11:21:55.538080 24 builder.go:146] stderr: ""
  I1006 11:21:55.538142 24 builder.go:147] stdout: "Kubernetes control plane is running at https://10.96.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1006 11:21:55.538398 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3376" for this suite. @ 10/06/25 11:21:55.542
• [0.115 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 10/06/25 11:21:55.55
  I1006 11:21:55.550466 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 11:21:55.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:21:55.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:21:55.575
  STEP: Counting existing ResourceQuota @ 10/06/25 11:21:55.579
  STEP: Creating a ResourceQuota @ 10/06/25 11:22:00.583
  STEP: Ensuring resource quota status is calculated @ 10/06/25 11:22:00.594
  STEP: Creating a ReplicationController @ 10/06/25 11:22:02.599
  STEP: Ensuring resource quota status captures replication controller creation @ 10/06/25 11:22:02.618
  STEP: Deleting a ReplicationController @ 10/06/25 11:22:04.623
  STEP: Ensuring resource quota status released usage @ 10/06/25 11:22:04.631
  I1006 11:22:06.635898 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9439" for this suite. @ 10/06/25 11:22:06.64
• [11.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 10/06/25 11:22:06.649
  I1006 11:22:06.650120 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 11:22:06.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:22:06.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:22:06.667
  STEP: Creating a job @ 10/06/25 11:22:06.672
  STEP: Ensure pods equal to parallelism count is attached to the job @ 10/06/25 11:22:06.678
  STEP: patching /status @ 10/06/25 11:22:08.685
  STEP: updating /status @ 10/06/25 11:22:08.695
  STEP: get /status @ 10/06/25 11:22:08.701
  I1006 11:22:08.703753 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9826" for this suite. @ 10/06/25 11:22:08.706
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 10/06/25 11:22:08.718
  I1006 11:22:08.718770 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/06/25 11:22:08.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:22:08.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:22:08.735
  I1006 11:22:08.738122 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:22:09.291413 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1562" for this suite. @ 10/06/25 11:22:09.298
• [0.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 10/06/25 11:22:09.317
  I1006 11:22:09.317156 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename init-container @ 10/06/25 11:22:09.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:22:09.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:22:09.341
  STEP: creating the pod @ 10/06/25 11:22:09.346
  I1006 11:22:09.346200 24 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I1006 11:22:12.545087 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5237" for this suite. @ 10/06/25 11:22:12.548
• [3.238 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 10/06/25 11:22:12.555
  I1006 11:22:12.555535 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename svcaccounts @ 10/06/25 11:22:12.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:22:12.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:22:12.59
  STEP: reading a file in the container @ 10/06/25 11:22:14.629
  I1006 11:22:14.629987 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7320 pod-service-account-5cb21e9b-e77f-4672-bf98-5296d59d8579 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 10/06/25 11:22:14.766
  I1006 11:22:14.766505 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7320 pod-service-account-5cb21e9b-e77f-4672-bf98-5296d59d8579 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 10/06/25 11:22:14.873
  I1006 11:22:14.873646 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7320 pod-service-account-5cb21e9b-e77f-4672-bf98-5296d59d8579 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1006 11:22:15.001075 24 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-7320"
  I1006 11:22:15.003818 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7320" for this suite. @ 10/06/25 11:22:15.007
• [2.463 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 10/06/25 11:22:15.019
  I1006 11:22:15.019351 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename endpointslice @ 10/06/25 11:22:15.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:22:15.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:22:15.039
  I1006 11:22:15.071439      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:22:17.075786      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:22:17.113014      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:22:17.186207 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6918" for this suite. @ 10/06/25 11:22:17.19
• [2.179 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 10/06/25 11:22:17.198
  I1006 11:22:17.198346 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:22:17.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:22:17.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:22:17.223
  STEP: Creating projection with secret that has name projected-secret-test-map-42ce14e6-9956-44c6-91f0-ea5801548cd6 @ 10/06/25 11:22:17.227
  STEP: Creating a pod to test consume secrets @ 10/06/25 11:22:17.234
  STEP: Saw pod success @ 10/06/25 11:22:21.256
  I1006 11:22:21.258896 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-projected-secrets-51659890-8e3f-444b-b863-db6ee4c4c56f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 11:22:21.265
  I1006 11:22:21.291410 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3965" for this suite. @ 10/06/25 11:22:21.295
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 10/06/25 11:22:21.307
  I1006 11:22:21.307793 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pod-network-test @ 10/06/25 11:22:21.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:22:21.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:22:21.326
  STEP: Performing setup for networking test in namespace pod-network-test-9085 @ 10/06/25 11:22:21.329
  STEP: creating a selector @ 10/06/25 11:22:21.33
  STEP: Creating the service pods in kubernetes @ 10/06/25 11:22:21.33
  I1006 11:22:21.330077 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/06/25 11:22:33.47
  I1006 11:22:35.489925 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1006 11:22:35.490026 24 networking.go:42] Breadth first check of 10.244.1.54 on host 172.16.108.172...
  I1006 11:22:35.492258 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.55:9080/dial?request=hostname&protocol=udp&host=10.244.1.54&port=8081&tries=1'] Namespace:pod-network-test-9085 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:22:35.492397 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:22:35.492602 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9085/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.55%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.54%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I1006 11:22:35.557918 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 11:22:35.558026 24 utils.go:355] Waiting for responses: map[]
  I1006 11:22:35.558039 24 utils.go:359] reached 10.244.1.54 after 0/1 tries
  I1006 11:22:35.558051 24 networking.go:42] Breadth first check of 10.244.2.103 on host 172.16.109.240...
  I1006 11:22:35.561576 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.55:9080/dial?request=hostname&protocol=udp&host=10.244.2.103&port=8081&tries=1'] Namespace:pod-network-test-9085 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:22:35.561641 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:22:35.561711 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9085/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.55%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.103%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I1006 11:22:35.613282 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 11:22:35.613359 24 utils.go:355] Waiting for responses: map[]
  I1006 11:22:35.613371 24 utils.go:359] reached 10.244.2.103 after 0/1 tries
  I1006 11:22:35.613380 24 networking.go:53] Going to retry 0 out of 2 pods....
  I1006 11:22:35.613628 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9085" for this suite. @ 10/06/25 11:22:35.617
• [14.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 10/06/25 11:22:35.633
  I1006 11:22:35.633911 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 11:22:35.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:22:35.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:22:35.653
  STEP: Setting up server cert @ 10/06/25 11:22:35.682
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 11:22:36.264
  STEP: Deploying the webhook pod @ 10/06/25 11:22:36.272
  STEP: Wait for the deployment to be ready @ 10/06/25 11:22:36.299
  I1006 11:22:36.309190 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 11:22:38.32
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 11:22:38.351
  I1006 11:22:39.351784 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/06/25 11:22:39.355
  STEP: create a pod that should be denied by the webhook @ 10/06/25 11:22:39.383
  STEP: create a pod that causes the webhook to hang @ 10/06/25 11:22:39.399
  STEP: create a configmap that should be denied by the webhook @ 10/06/25 11:22:49.407
  STEP: create a configmap that should be admitted by the webhook @ 10/06/25 11:22:49.417
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/06/25 11:22:49.429
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/06/25 11:22:49.436
  STEP: create a namespace that bypass the webhook @ 10/06/25 11:22:49.441
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 10/06/25 11:22:49.455
  I1006 11:22:49.555784 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9477" for this suite. @ 10/06/25 11:22:49.563
  STEP: Destroying namespace "webhook-markers-8884" for this suite. @ 10/06/25 11:22:49.575
  STEP: Destroying namespace "exempted-namespace-6233" for this suite. @ 10/06/25 11:22:49.582
• [13.956 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 10/06/25 11:22:49.591
  I1006 11:22:49.591088 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename security-context-test @ 10/06/25 11:22:49.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:22:49.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:22:49.616
  I1006 11:22:53.645945 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1848" for this suite. @ 10/06/25 11:22:53.649
• [4.071 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 10/06/25 11:22:53.662
  I1006 11:22:53.662270 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 11:22:53.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:22:53.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:22:53.682
  STEP: Counting existing ResourceQuota @ 10/06/25 11:22:53.685
  STEP: Creating a ResourceQuota @ 10/06/25 11:22:58.689
  STEP: Ensuring resource quota status is calculated @ 10/06/25 11:22:58.696
  STEP: Creating a Service @ 10/06/25 11:23:00.699
  STEP: Creating a NodePort Service @ 10/06/25 11:23:00.737
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 10/06/25 11:23:00.786
  STEP: Ensuring resource quota status captures service creation @ 10/06/25 11:23:00.851
  STEP: Deleting Services @ 10/06/25 11:23:02.855
  STEP: Ensuring resource quota status released usage @ 10/06/25 11:23:02.931
  I1006 11:23:04.934264 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8283" for this suite. @ 10/06/25 11:23:04.937
• [11.286 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 10/06/25 11:23:04.948
  I1006 11:23:04.948684 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sched-pred @ 10/06/25 11:23:04.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:23:04.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:23:04.964
  I1006 11:23:04.967070 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1006 11:23:05.042530 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I1006 11:23:05.045391 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf-1-33-script-2 before test
  I1006 11:23:05.048732 24 predicates.go:958] kube-flannel-ds-ndkcd from kube-flannel started at 2025-10-06 08:20:52 +0000 UTC (1 container statuses recorded)
  I1006 11:23:05.048766 24 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I1006 11:23:05.048778 24 predicates.go:958] kube-proxy-h8g5d from kube-system started at 2025-10-06 08:20:52 +0000 UTC (1 container statuses recorded)
  I1006 11:23:05.048788 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I1006 11:23:05.048825 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-10-06 10:54:46 +0000 UTC (1 container statuses recorded)
  I1006 11:23:05.048834 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I1006 11:23:05.048844 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7c4e1e919750475a-qdnd8 from sonobuoy started at 2025-10-06 10:54:47 +0000 UTC (2 container statuses recorded)
  I1006 11:23:05.048853 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 11:23:05.048861 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I1006 11:23:05.048898 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf-1-33-script-3 before test
  I1006 11:23:05.051913 24 predicates.go:958] kube-flannel-ds-c4mh7 from kube-flannel started at 2025-10-06 08:20:57 +0000 UTC (1 container statuses recorded)
  I1006 11:23:05.051960 24 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I1006 11:23:05.051975 24 predicates.go:958] kube-proxy-8nts5 from kube-system started at 2025-10-06 08:20:57 +0000 UTC (1 container statuses recorded)
  I1006 11:23:05.051987 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I1006 11:23:05.051999 24 predicates.go:958] sonobuoy-e2e-job-67c3ae163130406a from sonobuoy started at 2025-10-06 10:54:46 +0000 UTC (2 container statuses recorded)
  I1006 11:23:05.052009 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I1006 11:23:05.052019 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 11:23:05.052029 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7c4e1e919750475a-r8kjw from sonobuoy started at 2025-10-06 10:54:47 +0000 UTC (2 container statuses recorded)
  I1006 11:23:05.052039 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 11:23:05.052048 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 10/06/25 11:23:05.052
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.186be31b20aa0d39], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 10/06/25 11:23:05.085
  I1006 11:23:06.074970 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9931" for this suite. @ 10/06/25 11:23:06.078
• [1.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 10/06/25 11:23:06.087
  I1006 11:23:06.087123 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename daemonsets @ 10/06/25 11:23:06.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:23:06.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:23:06.11
  STEP: Creating a simple DaemonSet "daemon-set" @ 10/06/25 11:23:06.183
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/06/25 11:23:06.194
  I1006 11:23:06.279523 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:23:06.282762 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 11:23:06.282820 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  I1006 11:23:07.199320 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:23:07.201825 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 11:23:07.201864 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  I1006 11:23:08.200422 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:23:08.203328 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1006 11:23:08.203358 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 10/06/25 11:23:08.206
  I1006 11:23:08.300174 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:23:08.303492 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1006 11:23:08.304097 24 fixtures.go:131] Node cncf-1-33-script-3 is running 0 daemon pod, expected 1
  I1006 11:23:09.230398 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:23:09.234379 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1006 11:23:09.234442 24 fixtures.go:131] Node cncf-1-33-script-3 is running 0 daemon pod, expected 1
  I1006 11:23:10.228461 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:23:10.231385 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1006 11:23:10.231424 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 10/06/25 11:23:10.231
  STEP: Deleting DaemonSet "daemon-set" @ 10/06/25 11:23:10.235
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4313, will wait for the garbage collector to delete the pods @ 10/06/25 11:23:10.235
  I1006 11:23:10.296455 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.706191ms
  I1006 11:23:10.397051 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.591508ms
  I1006 11:23:11.603382 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 11:23:11.603422 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1006 11:23:11.606389 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53812"},"items":null}

  I1006 11:23:11.608620 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53812"},"items":null}

  I1006 11:23:11.615213 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4313" for this suite. @ 10/06/25 11:23:11.617
• [5.536 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 10/06/25 11:23:11.623
  I1006 11:23:11.623676 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename security-context @ 10/06/25 11:23:11.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:23:11.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:23:11.646
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/06/25 11:23:11.648
  STEP: Saw pod success @ 10/06/25 11:23:15.673
  I1006 11:23:15.675955 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod security-context-24c5d835-1766-4607-bf6a-00ef09b5c4fa container test-container: <nil>
  STEP: delete the pod @ 10/06/25 11:23:15.68
  I1006 11:23:15.714192 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8473" for this suite. @ 10/06/25 11:23:15.717
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 10/06/25 11:23:15.725
  I1006 11:23:15.725668 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename dns @ 10/06/25 11:23:15.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:23:15.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:23:15.744
  STEP: Creating a test headless service @ 10/06/25 11:23:15.749
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2352.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-2352.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 10/06/25 11:23:15.755
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2352.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2352.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 10/06/25 11:23:15.755
  STEP: creating a pod to probe DNS @ 10/06/25 11:23:15.755
  STEP: submitting the pod to kubernetes @ 10/06/25 11:23:15.756
  STEP: retrieving the pod @ 10/06/25 11:23:17.784
  STEP: looking for the results for each expected name from probers @ 10/06/25 11:23:17.786
  I1006 11:23:17.800864 24 dns_common.go:546] DNS probes using dns-2352/dns-test-38b0a565-9437-4090-aeb5-7fff60e72f3c succeeded

  STEP: deleting the pod @ 10/06/25 11:23:17.801
  STEP: deleting the test headless service @ 10/06/25 11:23:17.823
  I1006 11:23:17.840236 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2352" for this suite. @ 10/06/25 11:23:17.847
• [2.130 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 10/06/25 11:23:17.856
  I1006 11:23:17.856166 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 11:23:17.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:23:17.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:23:17.878
  STEP: Creating secret with name secret-test-map-4b25c9ef-6a88-4617-9417-465db8b35930 @ 10/06/25 11:23:17.882
  STEP: Creating a pod to test consume secrets @ 10/06/25 11:23:17.889
  STEP: Saw pod success @ 10/06/25 11:23:21.909
  I1006 11:23:21.911951 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-secrets-2413d7f5-318b-4a0f-90de-7c1c9a6b21f6 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 11:23:21.917
  I1006 11:23:21.942005 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7581" for this suite. @ 10/06/25 11:23:21.945
• [4.097 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 10/06/25 11:23:21.952
  I1006 11:23:21.952875 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:23:21.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:23:21.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:23:21.968
  STEP: Creating projection with secret that has name projected-secret-test-f8185a9a-1965-496a-a473-6ff0d4df112c @ 10/06/25 11:23:21.973
  STEP: Creating a pod to test consume secrets @ 10/06/25 11:23:21.98
  STEP: Saw pod success @ 10/06/25 11:23:26.009
  I1006 11:23:26.013031 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-projected-secrets-1a42fc32-c33d-4a1d-a0d4-50611f938b26 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 11:23:26.017
  I1006 11:23:26.035262 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6811" for this suite. @ 10/06/25 11:23:26.038
• [4.099 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 10/06/25 11:23:26.051
  I1006 11:23:26.051759 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:23:26.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:23:26.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:23:26.073
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:23:26.076
  STEP: Saw pod success @ 10/06/25 11:23:30.106
  I1006 11:23:30.109760 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-93d9cc25-8736-4729-a696-70abbaae34d1 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:23:30.115
  I1006 11:23:30.138207 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7854" for this suite. @ 10/06/25 11:23:30.143
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 10/06/25 11:23:30.163
  I1006 11:23:30.163826 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 11:23:30.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:23:30.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:23:30.187
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/06/25 11:23:30.191
  STEP: Saw pod success @ 10/06/25 11:23:34.218
  I1006 11:23:34.222026 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-b110e7b9-679d-4178-a56e-6d45ce243c55 container test-container: <nil>
  STEP: delete the pod @ 10/06/25 11:23:34.227
  I1006 11:23:34.247376 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1405" for this suite. @ 10/06/25 11:23:34.251
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 10/06/25 11:23:34.273
  I1006 11:23:34.273711 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 11:23:34.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:23:34.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:23:34.301
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:23:34.305
  STEP: Saw pod success @ 10/06/25 11:23:38.336
  I1006 11:23:38.339015 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-d0ef47fb-1fc5-4561-be32-c379d72acf15 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:23:38.344
  I1006 11:23:38.361831 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4521" for this suite. @ 10/06/25 11:23:38.365
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 10/06/25 11:23:38.373
  I1006 11:23:38.373821 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sched-preemption @ 10/06/25 11:23:38.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:23:38.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:23:38.392
  I1006 11:23:38.421864 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I1006 11:24:38.427039 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/06/25 11:24:38.429
  I1006 11:24:38.429850 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/06/25 11:24:38.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:24:38.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:24:38.445
  I1006 11:24:38.466042 24 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1006 11:24:38.469127 24 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 10/06/25 11:24:38.519
  STEP: Removing a custom resource @ 10/06/25 11:24:38.528
  I1006 11:24:38.536544 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8112" for this suite. @ 10/06/25 11:24:38.539
  I1006 11:24:38.549726 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-395" for this suite. @ 10/06/25 11:24:38.642
• [60.278 seconds]
------------------------------
S
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 10/06/25 11:24:38.653
  I1006 11:24:38.653198 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename limitrange @ 10/06/25 11:24:38.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:24:38.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:24:38.676
  STEP: Creating LimitRange "e2e-limitrange-ltlrx" in namespace "limitrange-9183" @ 10/06/25 11:24:38.679
  STEP: Creating another limitRange in another namespace @ 10/06/25 11:24:38.687
  I1006 11:24:38.702850 24 limit_range.go:299] Namespace "e2e-limitrange-ltlrx-1024" created
  I1006 11:24:38.702917 24 limit_range.go:300] Creating LimitRange "e2e-limitrange-ltlrx" in namespace "e2e-limitrange-ltlrx-1024"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-ltlrx" @ 10/06/25 11:24:38.709
  I1006 11:24:38.712172 24 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-ltlrx" in "limitrange-9183" namespace @ 10/06/25 11:24:38.712
  I1006 11:24:38.726611 24 limit_range.go:335] LimitRange "e2e-limitrange-ltlrx" has been patched
  STEP: Delete LimitRange "e2e-limitrange-ltlrx" by Collection with labelSelector: "e2e-limitrange-ltlrx=patched" @ 10/06/25 11:24:38.726
  STEP: Confirm that the limitRange "e2e-limitrange-ltlrx" has been deleted @ 10/06/25 11:24:38.735
  I1006 11:24:38.735650 24 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1006 11:24:38.738202 24 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-ltlrx=patched"
  I1006 11:24:38.738291 24 limit_range.go:344] LimitRange "e2e-limitrange-ltlrx" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-ltlrx" @ 10/06/25 11:24:38.738
  I1006 11:24:38.740901 24 limit_range.go:350] Found 1 limitRange
  I1006 11:24:38.741182 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9183" for this suite. @ 10/06/25 11:24:38.744
  STEP: Destroying namespace "e2e-limitrange-ltlrx-1024" for this suite. @ 10/06/25 11:24:38.749
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 10/06/25 11:24:38.761
  I1006 11:24:38.761055 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename field-validation @ 10/06/25 11:24:38.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:24:38.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:24:38.778
  I1006 11:24:38.780862 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:24:41.329839      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I1006 11:24:41.329865      24 warnings.go:110] "Warning: unknown field \"beta\""
  I1006 11:24:41.329872      24 warnings.go:110] "Warning: unknown field \"delta\""
  I1006 11:24:41.329879      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I1006 11:24:41.329889      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I1006 11:24:41.873398 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7989" for this suite. @ 10/06/25 11:24:41.876
• [3.122 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 10/06/25 11:24:41.883
  I1006 11:24:41.883515 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:24:41.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:24:41.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:24:41.9
  STEP: validating api versions @ 10/06/25 11:24:41.902
  I1006 11:24:41.902509 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-923 api-versions'
  I1006 11:24:41.963837 24 builder.go:146] stderr: ""
  I1006 11:24:41.963884 24 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1006 11:24:41.963995 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-923" for this suite. @ 10/06/25 11:24:41.977
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 10/06/25 11:24:41.983
  I1006 11:24:41.983767 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename statefulset @ 10/06/25 11:24:41.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:24:42.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:24:42.008
  STEP: Creating service test in namespace statefulset-3349 @ 10/06/25 11:24:42.011
  STEP: Creating a new StatefulSet @ 10/06/25 11:24:42.018
  I1006 11:24:42.031380 24 wait.go:44] Found 0 stateful pods, waiting for 3
  I1006 11:24:52.035351 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1006 11:24:52.035395 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1006 11:24:52.035408 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1006 11:24:52.046312 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-3349 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1006 11:24:52.167940 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1006 11:24:52.167997 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1006 11:24:52.168011 24 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/06/25 11:25:02.177
  I1006 11:25:02.193144 24 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 10/06/25 11:25:02.193
  STEP: Updating Pods in reverse ordinal order @ 10/06/25 11:25:12.203
  I1006 11:25:12.205943 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-3349 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1006 11:25:12.365256 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1006 11:25:12.365319 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1006 11:25:12.365333 24 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 10/06/25 11:25:22.381
  I1006 11:25:22.381908 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-3349 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1006 11:25:22.547007 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1006 11:25:22.547125 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1006 11:25:22.547151 24 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1006 11:25:32.568258 24 statefulset.go:2542] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 10/06/25 11:25:42.575
  I1006 11:25:42.578739 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-3349 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1006 11:25:42.723479 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1006 11:25:42.723563 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1006 11:25:42.723581 24 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1006 11:25:52.737566 24 statefulset.go:138] Deleting all statefulset in ns statefulset-3349
  I1006 11:25:52.740434 24 rest.go:153] Scaling statefulset ss2 to 0
  I1006 11:26:02.757751 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1006 11:26:02.759511 24 rest.go:91] Deleting statefulset ss2
  I1006 11:26:02.773939 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3349" for this suite. @ 10/06/25 11:26:02.777
• [80.806 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 10/06/25 11:26:02.789
  I1006 11:26:02.789443 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename field-validation @ 10/06/25 11:26:02.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:26:02.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:26:02.813
  STEP: apply creating a deployment @ 10/06/25 11:26:02.816
  I1006 11:26:02.824372 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2272" for this suite. @ 10/06/25 11:26:02.878
• [0.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 10/06/25 11:26:02.886
  I1006 11:26:02.887141 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubelet-test @ 10/06/25 11:26:02.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:26:02.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:26:02.912
  I1006 11:26:02.951628 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7330" for this suite. @ 10/06/25 11:26:02.978
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 10/06/25 11:26:02.986
  I1006 11:26:02.986299 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename init-container @ 10/06/25 11:26:02.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:26:03.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:26:03.004
  STEP: creating the pod @ 10/06/25 11:26:03.009
  I1006 11:26:03.009226 24 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I1006 11:26:07.895439 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1225" for this suite. @ 10/06/25 11:26:07.902
• [4.925 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 10/06/25 11:26:07.912
  I1006 11:26:07.912115 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubelet-test @ 10/06/25 11:26:07.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:26:07.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:26:07.946
  I1006 11:26:09.993855 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3201" for this suite. @ 10/06/25 11:26:09.996
• [2.091 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 10/06/25 11:26:10.004
  I1006 11:26:10.004091 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 11:26:10.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:26:10.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:26:10.029
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 10/06/25 11:26:10.033
  STEP: Awaiting for the job to fail as there are failed indexes @ 10/06/25 11:26:10.042
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 10/06/25 11:26:28.102
  I1006 11:26:28.107124 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-611" for this suite. @ 10/06/25 11:26:28.118
• [18.126 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 10/06/25 11:26:28.131
  I1006 11:26:28.131697 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 11:26:28.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:26:28.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:26:28.155
  STEP: Creating secret with name secret-test-map-e4f39018-68a2-4cc0-bd7f-b6700f982616 @ 10/06/25 11:26:28.159
  STEP: Creating a pod to test consume secrets @ 10/06/25 11:26:28.167
  STEP: Saw pod success @ 10/06/25 11:26:32.2
  I1006 11:26:32.203820 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-secrets-13bd8430-c760-4e58-a1c3-96b0af778d3b container secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 11:26:32.209
  I1006 11:26:32.236924 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2794" for this suite. @ 10/06/25 11:26:32.242
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 10/06/25 11:26:32.256
  I1006 11:26:32.256821 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:26:32.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:26:32.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:26:32.339
  STEP: Creating the pod @ 10/06/25 11:26:32.344
  I1006 11:26:34.898711 24 pod_client.go:173] Successfully updated pod "labelsupdatec979958f-63c3-450e-86ab-d5e51a0b7a2d"
  I1006 11:26:36.920731 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1549" for this suite. @ 10/06/25 11:26:36.924
• [4.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 10/06/25 11:26:36.934
  I1006 11:26:36.934453 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename watch @ 10/06/25 11:26:36.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:26:36.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:26:36.989
  STEP: creating a watch on configmaps with a certain label @ 10/06/25 11:26:36.993
  STEP: creating a new configmap @ 10/06/25 11:26:36.994
  STEP: modifying the configmap once @ 10/06/25 11:26:37.002
  STEP: changing the label value of the configmap @ 10/06/25 11:26:37.011
  STEP: Expecting to observe a delete notification for the watched object @ 10/06/25 11:26:37.029
  I1006 11:26:37.030339 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2001  c3f3b808-e563-4428-8520-e9899809c9b1 55056 0 2025-10-06 11:26:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-06 11:26:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 11:26:37.030696 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2001  c3f3b808-e563-4428-8520-e9899809c9b1 55057 0 2025-10-06 11:26:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-06 11:26:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 11:26:37.030943 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2001  c3f3b808-e563-4428-8520-e9899809c9b1 55059 0 2025-10-06 11:26:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-06 11:26:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 10/06/25 11:26:37.031
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 10/06/25 11:26:37.041
  STEP: changing the label value of the configmap back @ 10/06/25 11:26:47.044
  STEP: modifying the configmap a third time @ 10/06/25 11:26:47.057
  STEP: deleting the configmap @ 10/06/25 11:26:47.067
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 10/06/25 11:26:47.075
  I1006 11:26:47.075792 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2001  c3f3b808-e563-4428-8520-e9899809c9b1 55097 0 2025-10-06 11:26:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-06 11:26:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 11:26:47.076143 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2001  c3f3b808-e563-4428-8520-e9899809c9b1 55098 0 2025-10-06 11:26:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-06 11:26:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 11:26:47.076453 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2001  c3f3b808-e563-4428-8520-e9899809c9b1 55099 0 2025-10-06 11:26:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-06 11:26:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 11:26:47.077101 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2001" for this suite. @ 10/06/25 11:26:47.08
• [10.154 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 10/06/25 11:26:47.088
  I1006 11:26:47.088641 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename dns @ 10/06/25 11:26:47.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:26:47.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:26:47.105
  STEP: Creating a test externalName service @ 10/06/25 11:26:47.111
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3289.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3289.svc.cluster.local; sleep 1; done
   @ 10/06/25 11:26:47.125
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3289.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3289.svc.cluster.local; sleep 1; done
   @ 10/06/25 11:26:47.125
  STEP: creating a pod to probe DNS @ 10/06/25 11:26:47.125
  STEP: submitting the pod to kubernetes @ 10/06/25 11:26:47.125
  STEP: retrieving the pod @ 10/06/25 11:26:49.156
  STEP: looking for the results for each expected name from probers @ 10/06/25 11:26:49.16
  I1006 11:26:49.169607 24 dns_common.go:571] DNS probes using dns-test-27f8b73d-fa42-414b-9c1b-37a9e3e8b9a0 succeeded

  STEP: changing the externalName to bar.example.com @ 10/06/25 11:26:49.169
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3289.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3289.svc.cluster.local; sleep 1; done
   @ 10/06/25 11:26:49.179
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3289.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3289.svc.cluster.local; sleep 1; done
   @ 10/06/25 11:26:49.179
  STEP: creating a second pod to probe DNS @ 10/06/25 11:26:49.179
  STEP: submitting the pod to kubernetes @ 10/06/25 11:26:49.179
  STEP: retrieving the pod @ 10/06/25 11:26:51.198
  STEP: looking for the results for each expected name from probers @ 10/06/25 11:26:51.2
  I1006 11:26:51.206635 24 dns_common.go:571] DNS probes using dns-test-ed09c8fa-b74f-44d7-9051-4f233e0a8d33 succeeded

  STEP: changing the service to type=ClusterIP @ 10/06/25 11:26:51.206
  I1006 11:26:51.237182      24 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3289.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-3289.svc.cluster.local; sleep 1; done
   @ 10/06/25 11:26:51.237
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3289.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3289.svc.cluster.local; sleep 1; done
   @ 10/06/25 11:26:51.237
  STEP: creating a third pod to probe DNS @ 10/06/25 11:26:51.237
  STEP: submitting the pod to kubernetes @ 10/06/25 11:26:51.246
  STEP: retrieving the pod @ 10/06/25 11:26:53.268
  STEP: looking for the results for each expected name from probers @ 10/06/25 11:26:53.271
  I1006 11:26:53.279458 24 dns_common.go:571] DNS probes using dns-test-1a255a01-35b8-4ecf-86a2-532a2a4d493e succeeded

  STEP: deleting the pod @ 10/06/25 11:26:53.279
  STEP: deleting the pod @ 10/06/25 11:26:53.296
  STEP: deleting the pod @ 10/06/25 11:26:53.312
  STEP: deleting the test externalName service @ 10/06/25 11:26:53.332
  I1006 11:26:53.366726 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3289" for this suite. @ 10/06/25 11:26:53.37
• [6.289 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 10/06/25 11:26:53.378
  I1006 11:26:53.378079 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename var-expansion @ 10/06/25 11:26:53.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:26:53.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:26:53.404
  I1006 11:26:55.423147 24 delete.go:62] Deleting pod "var-expansion-ebc1b022-69d9-4ba5-a7f4-242d667a8ff8" in namespace "var-expansion-3293"
  I1006 11:26:55.433077 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-ebc1b022-69d9-4ba5-a7f4-242d667a8ff8" to be fully deleted
  I1006 11:26:57.439167 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3293" for this suite. @ 10/06/25 11:26:57.442
• [4.072 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 10/06/25 11:26:57.45
  I1006 11:26:57.450796 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 11:26:57.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:26:57.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:26:57.474
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 10/06/25 11:26:57.477
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 10/06/25 11:26:57.484
  STEP: Ensure that the job reaches completions @ 10/06/25 11:27:01.494
  STEP: Verifying that the only appropriately index succeeded @ 10/06/25 11:27:01.5
  I1006 11:27:01.502185 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1636" for this suite. @ 10/06/25 11:27:01.505
• [4.065 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 10/06/25 11:27:01.515
  I1006 11:27:01.515674 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 11:27:01.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:27:01.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:27:01.541
  STEP: Creating a job @ 10/06/25 11:27:01.545
  STEP: Ensuring active pods == parallelism @ 10/06/25 11:27:01.554
  STEP: Orphaning one of the Job's Pods @ 10/06/25 11:27:03.562
  I1006 11:27:04.085799 24 pod_client.go:173] Successfully updated pod "adopt-release-82msm"
  STEP: Checking that the Job readopts the Pod @ 10/06/25 11:27:04.085
  STEP: Removing the labels from the Job's Pod @ 10/06/25 11:27:06.095
  I1006 11:27:06.617574 24 pod_client.go:173] Successfully updated pod "adopt-release-82msm"
  STEP: Checking that the Job releases the Pod @ 10/06/25 11:27:06.617
  I1006 11:27:08.635929 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1114" for this suite. @ 10/06/25 11:27:08.64
• [7.139 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 10/06/25 11:27:08.654
  I1006 11:27:08.654913 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:27:08.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:27:08.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:27:08.675
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:27:08.678
  STEP: Saw pod success @ 10/06/25 11:27:12.704
  I1006 11:27:12.709999 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-81f11829-9959-4ab8-a710-45769dfc9760 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:27:12.715
  I1006 11:27:12.732878 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9099" for this suite. @ 10/06/25 11:27:12.735
• [4.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 10/06/25 11:27:12.742
  I1006 11:27:12.742430 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename certificates @ 10/06/25 11:27:12.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:27:12.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:27:12.758
  STEP: getting /apis @ 10/06/25 11:27:14.808
  STEP: getting /apis/certificates.k8s.io @ 10/06/25 11:27:14.814
  STEP: getting /apis/certificates.k8s.io/v1 @ 10/06/25 11:27:14.816
  STEP: creating @ 10/06/25 11:27:14.817
  STEP: getting @ 10/06/25 11:27:14.843
  STEP: listing @ 10/06/25 11:27:14.846
  STEP: watching @ 10/06/25 11:27:14.85
  I1006 11:27:14.850090 24 certificates.go:316] starting watch
  STEP: patching @ 10/06/25 11:27:14.851
  STEP: updating @ 10/06/25 11:27:14.865
  I1006 11:27:14.887326 24 certificates.go:332] waiting for watch events with expected annotations
  I1006 11:27:14.887429 24 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 10/06/25 11:27:14.887
  STEP: patching /approval @ 10/06/25 11:27:14.89
  STEP: updating /approval @ 10/06/25 11:27:14.898
  STEP: getting /status @ 10/06/25 11:27:14.909
  STEP: patching /status @ 10/06/25 11:27:14.911
  STEP: updating /status @ 10/06/25 11:27:14.921
  STEP: deleting @ 10/06/25 11:27:14.933
  STEP: deleting a collection @ 10/06/25 11:27:14.954
  I1006 11:27:14.970554 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2337" for this suite. @ 10/06/25 11:27:14.973
• [2.242 seconds]
------------------------------
S
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 10/06/25 11:27:14.984
  I1006 11:27:14.984296 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename hostport @ 10/06/25 11:27:14.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:27:15.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:27:15.012
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 10/06/25 11:27:15.074
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.16.108.172 on the node which pod1 resides and expect scheduled @ 10/06/25 11:27:17.091
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.16.108.172 but use UDP protocol on the node which pod2 resides @ 10/06/25 11:27:19.106
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 10/06/25 11:27:23.143
  I1006 11:27:23.143852 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.16.108.172 http://127.0.0.1:54323/hostname] Namespace:hostport-2286 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:27:23.143881 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:27:23.143980 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/hostport-2286/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.16.108.172+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I1006 11:27:23.201557 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.16.108.172, port: 54323 @ 10/06/25 11:27:23.201
  I1006 11:27:23.201684 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.16.108.172:54323/hostname] Namespace:hostport-2286 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:27:23.201693 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:27:23.201777 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/hostport-2286/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.16.108.172%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I1006 11:27:23.243092 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.16.108.172, port: 54323 UDP @ 10/06/25 11:27:23.243
  I1006 11:27:23.243247 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.16.108.172 54323] Namespace:hostport-2286 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:27:23.243256 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:27:23.243328 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/hostport-2286/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.16.108.172+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I1006 11:27:28.290222 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 11:27:28.290473 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2286" for this suite. @ 10/06/25 11:27:28.294
• [13.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 10/06/25 11:27:28.308
  I1006 11:27:28.308651 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename events @ 10/06/25 11:27:28.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:27:28.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:27:28.335
  STEP: creating a test event @ 10/06/25 11:27:28.338
  STEP: listing all events in all namespaces @ 10/06/25 11:27:28.345
  STEP: patching the test event @ 10/06/25 11:27:28.349
  STEP: fetching the test event @ 10/06/25 11:27:28.365
  STEP: updating the test event @ 10/06/25 11:27:28.368
  STEP: getting the test event @ 10/06/25 11:27:28.378
  STEP: deleting the test event @ 10/06/25 11:27:28.38
  STEP: listing all events in all namespaces @ 10/06/25 11:27:28.388
  I1006 11:27:28.392731 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9293" for this suite. @ 10/06/25 11:27:28.396
• [0.095 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 10/06/25 11:27:28.404
  I1006 11:27:28.404151 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename subpath @ 10/06/25 11:27:28.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:27:28.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:27:28.428
  STEP: Setting up data @ 10/06/25 11:27:28.431
  STEP: Creating pod pod-subpath-test-downwardapi-r4cp @ 10/06/25 11:27:28.445
  STEP: Creating a pod to test atomic-volume-subpath @ 10/06/25 11:27:28.445
  STEP: Saw pod success @ 10/06/25 11:27:52.533
  I1006 11:27:52.535253 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-subpath-test-downwardapi-r4cp container test-container-subpath-downwardapi-r4cp: <nil>
  STEP: delete the pod @ 10/06/25 11:27:52.551
  STEP: Deleting pod pod-subpath-test-downwardapi-r4cp @ 10/06/25 11:27:52.57
  I1006 11:27:52.571016 24 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-r4cp" in namespace "subpath-7957"
  I1006 11:27:52.573858 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7957" for this suite. @ 10/06/25 11:27:52.577
• [24.186 seconds]
------------------------------
SSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 10/06/25 11:27:52.59
  I1006 11:27:52.590160 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename conformance-tests @ 10/06/25 11:27:52.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:27:52.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:27:52.61
  STEP: Getting node addresses @ 10/06/25 11:27:52.613
  I1006 11:27:52.613627 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1006 11:27:52.678274 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2886" for this suite. @ 10/06/25 11:27:52.681
• [0.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 10/06/25 11:27:52.694
  I1006 11:27:52.695015 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename ingressclass @ 10/06/25 11:27:52.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:27:52.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:27:52.713
  STEP: getting /apis @ 10/06/25 11:27:52.717
  STEP: getting /apis/networking.k8s.io @ 10/06/25 11:27:52.72
  STEP: getting /apis/networking.k8s.iov1 @ 10/06/25 11:27:52.721
  STEP: creating @ 10/06/25 11:27:52.722
  STEP: getting @ 10/06/25 11:27:52.747
  STEP: listing @ 10/06/25 11:27:52.75
  STEP: watching @ 10/06/25 11:27:52.753
  I1006 11:27:52.753143 24 ingressclass.go:348] starting watch
  STEP: patching @ 10/06/25 11:27:52.754
  STEP: updating @ 10/06/25 11:27:52.762
  I1006 11:27:52.780966 24 ingressclass.go:364] waiting for watch events with expected annotations
  I1006 11:27:52.781093 24 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 10/06/25 11:27:52.781
  STEP: deleting a collection @ 10/06/25 11:27:52.793
  I1006 11:27:52.809849 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9381" for this suite. @ 10/06/25 11:27:52.812
• [0.124 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 10/06/25 11:27:52.819
  I1006 11:27:52.819186 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename statefulset @ 10/06/25 11:27:52.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:27:52.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:27:52.835
  STEP: Creating service test in namespace statefulset-2593 @ 10/06/25 11:27:52.839
  STEP: Creating statefulset ss in namespace statefulset-2593 @ 10/06/25 11:27:52.849
  I1006 11:27:52.863947 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I1006 11:28:02.867973 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 10/06/25 11:28:02.874
  STEP: Getting /status @ 10/06/25 11:28:02.884
  I1006 11:28:02.890902 24 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 10/06/25 11:28:02.89
  I1006 11:28:02.920141 24 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 10/06/25 11:28:02.92
  I1006 11:28:02.923658 24 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I1006 11:28:02.923720 24 statefulset.go:1126] Found Statefulset ss in namespace statefulset-2593 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1006 11:28:02.923931 24 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 10/06/25 11:28:02.924
  I1006 11:28:02.924193 24 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1006 11:28:02.934922 24 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 10/06/25 11:28:02.934
  I1006 11:28:02.937632 24 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I1006 11:28:02.937772 24 statefulset.go:138] Deleting all statefulset in ns statefulset-2593
  I1006 11:28:02.941274 24 rest.go:153] Scaling statefulset ss to 0
  I1006 11:28:12.963581 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1006 11:28:12.965848 24 rest.go:91] Deleting statefulset ss
  I1006 11:28:12.979000 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2593" for this suite. @ 10/06/25 11:28:12.985
• [20.173 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 10/06/25 11:28:12.992
  I1006 11:28:12.992811 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename watch @ 10/06/25 11:28:12.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:28:13.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:28:13.011
  STEP: creating a new configmap @ 10/06/25 11:28:13.015
  STEP: modifying the configmap once @ 10/06/25 11:28:13.02
  STEP: modifying the configmap a second time @ 10/06/25 11:28:13.03
  STEP: deleting the configmap @ 10/06/25 11:28:13.038
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 10/06/25 11:28:13.05
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 10/06/25 11:28:13.052
  I1006 11:28:13.052775 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5865  b97070f1-017d-423a-a0e5-b62ea78b3c16 55726 0 2025-10-06 11:28:13 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-10-06 11:28:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 11:28:13.052995 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5865  b97070f1-017d-423a-a0e5-b62ea78b3c16 55727 0 2025-10-06 11:28:13 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-10-06 11:28:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 11:28:13.053277 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5865" for this suite. @ 10/06/25 11:28:13.086
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 10/06/25 11:28:13.094
  I1006 11:28:13.094292 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename field-validation @ 10/06/25 11:28:13.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:28:13.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:28:13.119
  I1006 11:28:13.123172 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 11:28:15.661684      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I1006 11:28:15.661772      24 warnings.go:110] "Warning: unknown field \"beta\""
  I1006 11:28:15.661784      24 warnings.go:110] "Warning: unknown field \"delta\""
  I1006 11:28:15.661800      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I1006 11:28:15.661810      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I1006 11:28:16.201976 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3792" for this suite. @ 10/06/25 11:28:16.205
• [3.118 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 10/06/25 11:28:16.213
  I1006 11:28:16.213241 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-probe @ 10/06/25 11:28:16.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:28:16.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:28:16.234
  STEP: Creating pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481 @ 10/06/25 11:28:16.238
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/06/25 11:28:18.265
  I1006 11:28:18.268075 24 container_probe.go:1748] Initial restart count of pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 is 0
  I1006 11:28:18.270902 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:20.274529 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:22.279235 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:24.282844 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:26.287296 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:28.291464 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:30.294997 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:32.301122 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:34.307118 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:36.312970 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:38.318959 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:40.323735 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:42.328121 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:44.332062 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:46.335776 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:48.340225 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:50.345921 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:52.350886 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:54.354769 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:56.360544 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:28:58.364674 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:00.369447 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:02.373765 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:04.377849 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:06.381506 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:08.386541 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:10.391222 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:12.396014 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:14.401488 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:16.407118 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:18.412049 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:20.417599 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:22.422707 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:24.427830 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:26.433437 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:28.438429 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:30.446757 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:32.451594 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:34.456400 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:36.459762 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:38.463300 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:40.466445 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:42.469446 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:44.474392 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:46.479088 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:48.483591 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:50.487527 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:52.492888 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:54.496385 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:56.502528 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:29:58.506416 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:00.510328 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:02.516539 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:04.521915 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:06.528082 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:08.532002 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:10.535626 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:12.540235 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:14.544945 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:16.549537 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:18.554418 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:20.558300 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:22.561804 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:24.565955 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:26.570027 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:28.574871 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:30.579753 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:32.584947 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:34.589138 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:36.593993 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:38.598860 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:40.603980 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:42.608013 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:44.611332 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:46.615852 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:48.620909 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:50.625807 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:52.630668 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:54.634550 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:56.638175 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:30:58.641867 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:00.645062 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:02.649305 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:04.652788 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:06.656259 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:08.660183 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:10.664702 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:12.669141 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:14.673496 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:16.677541 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:18.680920 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:20.684243 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:22.689094 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:24.693159 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:26.698028 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:28.702083 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:30.705682 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:32.708919 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:34.713409 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:36.716665 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:38.721334 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:40.724949 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:42.729153 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:44.733081 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:46.738241 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:48.741727 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:50.745830 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:52.749691 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:54.753192 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:56.757071 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:31:58.761914 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:32:00.766307 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:32:02.770308 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:32:04.775707 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:32:06.779778 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:32:08.785731 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:32:10.791972 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:32:12.798080 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:32:14.804893 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  I1006 11:32:16.810669 24 container_probe.go:1758] Get pod test-grpc-df5a6a28-6a14-4579-9960-1e3cc66627c2 in namespace container-probe-2481
  STEP: deleting the pod @ 10/06/25 11:32:18.81
  I1006 11:32:18.835712 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2481" for this suite. @ 10/06/25 11:32:18.84
• [242.635 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 10/06/25 11:32:18.848
  I1006 11:32:18.848969 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:32:18.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:32:18.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:32:18.877
  STEP: Creating configMap with name projected-configmap-test-volume-8dcf9fb2-b783-4806-bec9-5afdd5e5b3fc @ 10/06/25 11:32:18.879
  STEP: Creating a pod to test consume configMaps @ 10/06/25 11:32:18.886
  STEP: Saw pod success @ 10/06/25 11:32:20.906
  I1006 11:32:20.909058 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-projected-configmaps-b22f209c-efb9-4ea4-8a0d-fad52fc7b107 container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 11:32:20.925
  I1006 11:32:20.949752 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5518" for this suite. @ 10/06/25 11:32:20.953
• [2.113 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 10/06/25 11:32:20.961
  I1006 11:32:20.961829 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename svcaccounts @ 10/06/25 11:32:20.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:32:20.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:32:20.979
  I1006 11:32:20.985914 24 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-1468"
  I1006 11:32:20.992722 24 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-1468"
  STEP: waiting for a new root ca configmap created @ 10/06/25 11:32:21.493
  I1006 11:32:21.496521 24 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-1468"
  I1006 11:32:21.503784 24 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-1468"
  STEP: waiting for the root ca configmap reconciled @ 10/06/25 11:32:22.004
  I1006 11:32:22.007643 24 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-1468"
  I1006 11:32:22.007768 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1468" for this suite. @ 10/06/25 11:32:22.01
• [1.057 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 10/06/25 11:32:22.018
  I1006 11:32:22.018925 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename disruption @ 10/06/25 11:32:22.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:32:22.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:32:22.039
  STEP: Waiting for the pdb to be processed @ 10/06/25 11:32:22.052
  STEP: Updating PodDisruptionBudget status @ 10/06/25 11:32:24.055
  STEP: Waiting for all pods to be running @ 10/06/25 11:32:24.069
  I1006 11:32:24.075936 24 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 10/06/25 11:32:26.074
  STEP: Waiting for the pdb to be processed @ 10/06/25 11:32:26.086
  STEP: Patching PodDisruptionBudget status @ 10/06/25 11:32:26.093
  STEP: Waiting for the pdb to be processed @ 10/06/25 11:32:26.104
  I1006 11:32:26.105892 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9436" for this suite. @ 10/06/25 11:32:26.123
• [4.113 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 10/06/25 11:32:26.131
  I1006 11:32:26.131680 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:32:26.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:32:26.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:32:26.149
  STEP: Creating configMap with name configmap-test-volume-map-3f4704f6-be7c-4d0d-9cb2-5bd89f8c3c59 @ 10/06/25 11:32:26.154
  STEP: Creating a pod to test consume configMaps @ 10/06/25 11:32:26.161
  STEP: Saw pod success @ 10/06/25 11:32:30.249
  I1006 11:32:30.251460 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-configmaps-b4772baf-0141-449f-8029-9f7558d96375 container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 11:32:30.269
  I1006 11:32:30.291115 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9733" for this suite. @ 10/06/25 11:32:30.294
• [4.170 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 10/06/25 11:32:30.302
  I1006 11:32:30.302304 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 11:32:30.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:32:30.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:32:30.327
  STEP: Creating Indexed job @ 10/06/25 11:32:30.33
  STEP: Ensuring job reaches completions @ 10/06/25 11:32:30.35
  STEP: Ensuring pods with index for job exist @ 10/06/25 11:32:38.372
  I1006 11:32:38.376110 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2809" for this suite. @ 10/06/25 11:32:38.379
• [8.084 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 10/06/25 11:32:38.387
  I1006 11:32:38.387248 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 11:32:38.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:32:38.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:32:38.415
  STEP: Creating a pod to test downward api env vars @ 10/06/25 11:32:38.418
  STEP: Saw pod success @ 10/06/25 11:32:42.448
  I1006 11:32:42.450924 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downward-api-540af409-9b42-43ba-956a-5fbdbdfe56e4 container dapi-container: <nil>
  STEP: delete the pod @ 10/06/25 11:32:42.455
  I1006 11:32:42.477288 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4374" for this suite. @ 10/06/25 11:32:42.48
• [4.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 10/06/25 11:32:42.488
  I1006 11:32:42.488645 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sched-pred @ 10/06/25 11:32:42.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:32:42.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:32:42.512
  I1006 11:32:42.516324 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1006 11:32:42.584583 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I1006 11:32:42.587340 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf-1-33-script-2 before test
  I1006 11:32:42.591139 24 predicates.go:958] indexed-job-1-xdqlc from job-2809 started at 2025-10-06 11:32:30 +0000 UTC (1 container statuses recorded)
  I1006 11:32:42.591192 24 predicates.go:960] 	Container c ready: false, restart count 0
  I1006 11:32:42.591206 24 predicates.go:958] indexed-job-2-49mch from job-2809 started at 2025-10-06 11:32:33 +0000 UTC (1 container statuses recorded)
  I1006 11:32:42.591217 24 predicates.go:960] 	Container c ready: false, restart count 0
  I1006 11:32:42.591233 24 predicates.go:958] kube-flannel-ds-ndkcd from kube-flannel started at 2025-10-06 08:20:52 +0000 UTC (1 container statuses recorded)
  I1006 11:32:42.591243 24 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I1006 11:32:42.591254 24 predicates.go:958] kube-proxy-h8g5d from kube-system started at 2025-10-06 08:20:52 +0000 UTC (1 container statuses recorded)
  I1006 11:32:42.591264 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I1006 11:32:42.591373 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-10-06 10:54:46 +0000 UTC (1 container statuses recorded)
  I1006 11:32:42.591416 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I1006 11:32:42.591427 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7c4e1e919750475a-qdnd8 from sonobuoy started at 2025-10-06 10:54:47 +0000 UTC (2 container statuses recorded)
  I1006 11:32:42.591438 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 11:32:42.591446 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I1006 11:32:42.591456 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf-1-33-script-3 before test
  I1006 11:32:42.594854 24 predicates.go:958] indexed-job-0-2dm85 from job-2809 started at 2025-10-06 11:32:30 +0000 UTC (1 container statuses recorded)
  I1006 11:32:42.594887 24 predicates.go:960] 	Container c ready: false, restart count 0
  I1006 11:32:42.594900 24 predicates.go:958] indexed-job-3-62nkg from job-2809 started at 2025-10-06 11:32:33 +0000 UTC (1 container statuses recorded)
  I1006 11:32:42.594910 24 predicates.go:960] 	Container c ready: false, restart count 0
  I1006 11:32:42.594920 24 predicates.go:958] kube-flannel-ds-c4mh7 from kube-flannel started at 2025-10-06 08:20:57 +0000 UTC (1 container statuses recorded)
  I1006 11:32:42.594929 24 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I1006 11:32:42.594940 24 predicates.go:958] kube-proxy-8nts5 from kube-system started at 2025-10-06 08:20:57 +0000 UTC (1 container statuses recorded)
  I1006 11:32:42.595039 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I1006 11:32:42.595074 24 predicates.go:958] sonobuoy-e2e-job-67c3ae163130406a from sonobuoy started at 2025-10-06 10:54:46 +0000 UTC (2 container statuses recorded)
  I1006 11:32:42.595083 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I1006 11:32:42.595091 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 11:32:42.595101 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7c4e1e919750475a-r8kjw from sonobuoy started at 2025-10-06 10:54:47 +0000 UTC (2 container statuses recorded)
  I1006 11:32:42.595110 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 11:32:42.595118 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/06/25 11:32:42.595
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/06/25 11:32:44.624
  STEP: Trying to apply a random label on the found node. @ 10/06/25 11:32:44.64
  STEP: verifying the node has the label kubernetes.io/e2e-53b9144a-c24a-4ee1-b6a0-cdd5fe2e3c54 95 @ 10/06/25 11:32:44.652
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 10/06/25 11:32:44.654
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.16.108.172 on the node which pod4 resides and expect not scheduled @ 10/06/25 11:32:46.67
  STEP: removing the label kubernetes.io/e2e-53b9144a-c24a-4ee1-b6a0-cdd5fe2e3c54 off the node cncf-1-33-script-2 @ 10/06/25 11:37:46.68
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-53b9144a-c24a-4ee1-b6a0-cdd5fe2e3c54 @ 10/06/25 11:37:46.696
  I1006 11:37:46.699970 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1437" for this suite. @ 10/06/25 11:37:46.702
• [304.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 10/06/25 11:37:46.711
  I1006 11:37:46.711594 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 11:37:46.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:37:46.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:37:46.728
  I1006 11:37:46.783028 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5916" for this suite. @ 10/06/25 11:37:46.786
• [0.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 10/06/25 11:37:46.793
  I1006 11:37:46.793594 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replicaset @ 10/06/25 11:37:46.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:37:46.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:37:46.818
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 10/06/25 11:37:46.821
  STEP: When a replicaset with a matching selector is created @ 10/06/25 11:37:48.84
  STEP: Then the orphan pod is adopted @ 10/06/25 11:37:48.848
  STEP: When the matched label of one of its pods change @ 10/06/25 11:37:49.854
  I1006 11:37:49.857190 24 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/06/25 11:37:49.874
  I1006 11:37:49.887467 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4966" for this suite. @ 10/06/25 11:37:49.895
• [3.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 10/06/25 11:37:49.917
  I1006 11:37:49.917325 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replication-controller @ 10/06/25 11:37:49.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:37:49.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:37:49.942
  I1006 11:37:49.945140 24 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 10/06/25 11:37:50.956
  STEP: Checking rc "condition-test" has the desired failure condition set @ 10/06/25 11:37:50.964
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 10/06/25 11:37:51.97
  I1006 11:37:51.981441 24 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 10/06/25 11:37:51.981
  I1006 11:37:51.991888 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1529" for this suite. @ 10/06/25 11:37:51.995
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 10/06/25 11:37:52.003
  I1006 11:37:52.003650 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/06/25 11:37:52.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:37:52.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:37:52.018
  I1006 11:37:52.026645 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 10/06/25 11:37:53.293
  I1006 11:37:53.293562 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 --namespace=crd-publish-openapi-9717 create -f -'
  I1006 11:37:55.392542 24 builder.go:146] stderr: ""
  I1006 11:37:55.392591 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1006 11:37:55.392639 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 --namespace=crd-publish-openapi-9717 delete e2e-test-crd-publish-openapi-4-crds test-foo'
  I1006 11:37:55.480451 24 builder.go:146] stderr: ""
  I1006 11:37:55.480545 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1006 11:37:55.480603 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 --namespace=crd-publish-openapi-9717 apply -f -'
  I1006 11:37:55.558144 24 builder.go:146] stderr: ""
  I1006 11:37:55.558191 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1006 11:37:55.558256 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 --namespace=crd-publish-openapi-9717 delete e2e-test-crd-publish-openapi-4-crds test-foo'
  I1006 11:37:55.628641 24 builder.go:146] stderr: ""
  I1006 11:37:55.628687 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 10/06/25 11:37:55.628
  I1006 11:37:55.628798 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 --namespace=crd-publish-openapi-9717 create -f -'
  I1006 11:37:55.697288 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 10/06/25 11:37:55.697
  I1006 11:37:55.697430 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 --namespace=crd-publish-openapi-9717 create -f -'
  I1006 11:37:55.766201 24 builder.go:135] rc: 1
  I1006 11:37:55.766506 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 --namespace=crd-publish-openapi-9717 apply -f -'
  I1006 11:37:55.838264 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 10/06/25 11:37:55.838
  I1006 11:37:55.838446 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 --namespace=crd-publish-openapi-9717 create -f -'
  I1006 11:37:55.913588 24 builder.go:135] rc: 1
  I1006 11:37:55.913807 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 --namespace=crd-publish-openapi-9717 apply -f -'
  I1006 11:37:55.985173 24 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 10/06/25 11:37:55.985
  I1006 11:37:55.985599 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 explain e2e-test-crd-publish-openapi-4-crds'
  I1006 11:37:56.051828 24 builder.go:146] stderr: ""
  I1006 11:37:56.051987 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 10/06/25 11:37:56.052
  I1006 11:37:56.053016 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 explain e2e-test-crd-publish-openapi-4-crds.metadata'
  I1006 11:37:56.131619 24 builder.go:146] stderr: ""
  I1006 11:37:56.131904 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1006 11:37:56.132176 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 explain e2e-test-crd-publish-openapi-4-crds.spec'
  I1006 11:37:56.194052 24 builder.go:146] stderr: ""
  I1006 11:37:56.194214 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1006 11:37:56.194340 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 explain e2e-test-crd-publish-openapi-4-crds.spec.bars'
  I1006 11:37:56.255401 24 builder.go:146] stderr: ""
  I1006 11:37:56.255460 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 10/06/25 11:37:56.255
  I1006 11:37:56.255777 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-9717 explain e2e-test-crd-publish-openapi-4-crds.spec.bars2'
  I1006 11:37:56.318243 24 builder.go:135] rc: 1
  I1006 11:37:57.596283 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9717" for this suite. @ 10/06/25 11:37:57.606
• [5.612 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 10/06/25 11:37:57.615
  I1006 11:37:57.615581 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 11:37:57.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:37:57.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:37:57.641
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:37:57.643
  STEP: Saw pod success @ 10/06/25 11:37:59.664
  I1006 11:37:59.666693 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-91bf6f30-b62c-46de-afab-fc3a1db8598b container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:37:59.687
  I1006 11:37:59.712211 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6189" for this suite. @ 10/06/25 11:37:59.716
• [2.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 10/06/25 11:37:59.725
  I1006 11:37:59.725410 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename chunking @ 10/06/25 11:37:59.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:37:59.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:37:59.751
  STEP: creating a large number of resources @ 10/06/25 11:37:59.754
  I1006 11:38:09.586261      24 request.go:752] "Waited before sending request" delay="1.001135031s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.96.0.1:443/api/v1/namespaces/chunking-6119/podtemplates"
  STEP: retrieving those results in paged fashion several times @ 10/06/25 11:38:17.439
  I1006 11:38:17.481840 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1006 11:38:17.531377 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1006 11:38:17.581639 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1006 11:38:17.631021 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1006 11:38:17.681510 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1006 11:38:17.731666 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1006 11:38:17.780893 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1006 11:38:17.832020 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1006 11:38:17.881108 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1006 11:38:17.934095 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1006 11:38:17.982477 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1006 11:38:18.032072 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1006 11:38:18.081316 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1006 11:38:18.132101 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1006 11:38:18.181834 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1006 11:38:18.233092 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1006 11:38:18.280879 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1006 11:38:18.331426 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1006 11:38:18.381180 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1006 11:38:18.431995 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1006 11:38:18.480950 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1006 11:38:18.531489 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1006 11:38:18.582505 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1006 11:38:18.631179 24 chunking.go:98] Retrieved 9/17 results with rv 57539 and continue 
  I1006 11:38:18.680934 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1006 11:38:18.731548 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1006 11:38:18.781231 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1006 11:38:18.834677 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1006 11:38:18.881331 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1006 11:38:18.931805 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1006 11:38:18.981568 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1006 11:38:19.031595 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1006 11:38:19.081257 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1006 11:38:19.133323 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1006 11:38:19.182559 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1006 11:38:19.231900 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1006 11:38:19.282632 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1006 11:38:19.331914 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1006 11:38:19.382560 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1006 11:38:19.438552 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1006 11:38:19.480766 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1006 11:38:19.532531 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1006 11:38:19.581205 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1006 11:38:19.632553 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1006 11:38:19.682462 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1006 11:38:19.732900 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1006 11:38:19.783089 24 chunking.go:98] Retrieved 17/17 results with rv 57539 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1MzksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1006 11:38:19.832299 24 chunking.go:98] Retrieved 9/17 results with rv 57539 and continue 
  I1006 11:38:19.883002 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1006 11:38:19.932175 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1006 11:38:19.985031 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1006 11:38:20.032216 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1006 11:38:20.081465 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1006 11:38:20.130882 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1006 11:38:20.182021 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1006 11:38:20.231848 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1006 11:38:20.281380 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1006 11:38:20.332050 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1006 11:38:20.381913 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1006 11:38:20.434641 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1006 11:38:20.482560 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1006 11:38:20.532948 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1006 11:38:20.581643 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1006 11:38:20.631731 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1006 11:38:20.682790 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1006 11:38:20.731707 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1006 11:38:20.781986 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1006 11:38:20.832274 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1006 11:38:20.882098 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1006 11:38:20.931411 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1006 11:38:20.982335 24 chunking.go:98] Retrieved 17/17 results with rv 57542 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc1NDIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1006 11:38:21.031158 24 chunking.go:98] Retrieved 9/17 results with rv 57542 and continue 
  STEP: retrieving those results all at once @ 10/06/25 11:38:21.031
  I1006 11:38:21.086680 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6119" for this suite. @ 10/06/25 11:38:21.131
• [21.459 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 10/06/25 11:38:21.184
  I1006 11:38:21.184800 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/06/25 11:38:21.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:38:21.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:38:21.211
  I1006 11:38:21.219878 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7681" for this suite. @ 10/06/25 11:38:21.232
• [0.056 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 10/06/25 11:38:21.241
  I1006 11:38:21.241107 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename deployment @ 10/06/25 11:38:21.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:38:21.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:38:21.266
  I1006 11:38:21.280464 24 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  I1006 11:38:26.293288 24 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/06/25 11:38:26.293
  I1006 11:38:26.293428 24 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 10/06/25 11:38:26.403
  I1006 11:38:26.420710 24 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5576",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e9fb9c3-f852-4482-bce4-e7bfc0bc84b8",
      ResourceVersion: (string) (len=5) "57597",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1006 11:38:26.432775 24 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5576",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60d79e4e-edf9-4c41-b7d1-e2f430a09b30",
      ResourceVersion: (string) (len=5) "57602",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "7e9fb9c3-f852-4482-bce4-e7bfc0bc84b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 65 39 66 62 39  63 33 2d 66 38 35 32 2d  |\"7e9fb9c3-f852-|
              00000120  34 34 38 32 2d 62 63 65  34 2d 65 37 62 66 63 30  |4482-bce4-e7bfc0|
              00000130  62 63 38 34 62 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bc84b8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 11:38:26.434708 24 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1006 11:38:26.435106 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5576",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37a65cb7-907e-43e0-81d1-b3a41c8db323",
      ResourceVersion: (string) (len=5) "57600",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347501,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "7e9fb9c3-f852-4482-bce4-e7bfc0bc84b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 37 65 39 66 62 39 63  |"uid\":\"7e9fb9c|
              00000040  33 2d 66 38 35 32 2d 34  34 38 32 2d 62 63 65 34  |3-f852-4482-bce4|
              00000050  2d 65 37 62 66 63 30 62  63 38 34 62 38 5c 22 7d  |-e7bfc0bc84b8\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 11:38:26.459244 24 deployment.go:68] Pod "test-cleanup-controller-z5gkf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-z5gkf",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5576",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "149487d2-e4df-45ac-8008-af664983974c",
      ResourceVersion: (string) (len=5) "57566",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347501,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "37a65cb7-907e-43e0-81d1-b3a41c8db323",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  33 37 61 36 35 63 62 37  |uid\":\"37a65cb7|
              00000080  2d 39 30 37 65 2d 34 33  65 30 2d 38 31 64 31 2d  |-907e-43e0-81d1-|
              00000090  62 33 61 34 31 63 38 64  62 33 32 33 5c 22 7d 22  |b3a41c8db323\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  30 31 5c 22 7d 22 3a 7b  |.244.1.101\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bshbs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bshbs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347501,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895347501,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e0861ce5b5405078089b59cde0e20116d528d0835f4cb01e8bf74138f5be9832",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bshbs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 11:38:26.462108 24 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-chxnn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-chxnn",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-5576",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77654eab-f089-428d-94bc-f5dc982f535b",
      ResourceVersion: (string) (len=5) "57608",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "60d79e4e-edf9-4c41-b7d1-e2f430a09b30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  64 37 39 65 34 65 2d 65  |d\":\"60d79e4e-e|
              00000090  64 66 39 2d 34 63 34 31  2d 62 37 64 31 2d 65 32  |df9-4c41-b7d1-e2|
              000000a0  66 34 33 30 61 30 39 62  33 30 5c 22 7d 22 3a 7b  |f430a09b30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zpmq5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zpmq5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 11:38:26.464018 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5576" for this suite. @ 10/06/25 11:38:26.472
• [5.251 seconds]
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 10/06/25 11:38:26.492
  I1006 11:38:26.492456 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename fake-node @ 10/06/25 11:38:26.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:38:26.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:38:26.519
  STEP: Create "e2e-fake-node-6wdbx" @ 10/06/25 11:38:26.523
  STEP: Getting "e2e-fake-node-6wdbx" @ 10/06/25 11:38:26.53
  STEP: Patching "e2e-fake-node-6wdbx" @ 10/06/25 11:38:26.536
  STEP: Listing nodes with LabelSelector "e2e-fake-node-6wdbx=patched" @ 10/06/25 11:38:26.549
  STEP: Updating "e2e-fake-node-6wdbx" @ 10/06/25 11:38:26.559
  STEP: Delete "e2e-fake-node-6wdbx" @ 10/06/25 11:38:26.578
  STEP: Confirm deletion of "e2e-fake-node-6wdbx" @ 10/06/25 11:38:26.593
  I1006 11:38:26.597999 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-15" for this suite. @ 10/06/25 11:38:26.604
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 10/06/25 11:38:26.617
  I1006 11:38:26.617978 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename gc @ 10/06/25 11:38:26.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:38:26.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:38:26.637
  I1006 11:38:26.702938 24 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"e124c870-ad3d-474d-8d6a-ec4321649eaf", Controller:(*bool)(0xc002d57b56), BlockOwnerDeletion:(*bool)(0xc002d57b57)}}
  I1006 11:38:26.719632 24 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"ddf85644-08cf-4437-86c9-404b3739bad1", Controller:(*bool)(0xc002d57d1e), BlockOwnerDeletion:(*bool)(0xc002d57d1f)}}
  I1006 11:38:26.743898 24 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"ad6dc1cd-3855-4e78-9d91-95dfdfdad8fe", Controller:(*bool)(0xc0023b7a66), BlockOwnerDeletion:(*bool)(0xc0023b7a67)}}
  I1006 11:38:31.806930 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1954" for this suite. @ 10/06/25 11:38:31.81
• [5.200 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 10/06/25 11:38:31.818
  I1006 11:38:31.818509 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 11:38:31.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:38:31.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:38:31.841
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:38:31.845
  STEP: Saw pod success @ 10/06/25 11:38:35.927
  I1006 11:38:35.930169 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-98903aa6-4b13-4cd3-8d62-3ee243b911b7 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:38:35.934
  I1006 11:38:35.956606 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-446" for this suite. @ 10/06/25 11:38:35.96
• [4.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 10/06/25 11:38:35.971
  I1006 11:38:35.971401 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 11:38:35.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:38:35.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:38:35.996
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:38:35.999
  STEP: Saw pod success @ 10/06/25 11:38:40.02
  I1006 11:38:40.022831 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-1d878cab-cc15-40a2-b688-57d94bc96dc5 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:38:40.027
  I1006 11:38:40.048115 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1387" for this suite. @ 10/06/25 11:38:40.052
• [4.089 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 10/06/25 11:38:40.06
  I1006 11:38:40.060459 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename lease-test @ 10/06/25 11:38:40.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:38:40.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:38:40.077
  I1006 11:38:40.135403 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7832" for this suite. @ 10/06/25 11:38:40.153
• [0.104 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 10/06/25 11:38:40.164
  I1006 11:38:40.164771 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename subpath @ 10/06/25 11:38:40.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:38:40.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:38:40.183
  STEP: Setting up data @ 10/06/25 11:38:40.186
  STEP: Creating pod pod-subpath-test-configmap-svvm @ 10/06/25 11:38:40.202
  STEP: Creating a pod to test atomic-volume-subpath @ 10/06/25 11:38:40.203
  STEP: Saw pod success @ 10/06/25 11:39:04.272
  I1006 11:39:04.275074 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-subpath-test-configmap-svvm container test-container-subpath-configmap-svvm: <nil>
  STEP: delete the pod @ 10/06/25 11:39:04.281
  STEP: Deleting pod pod-subpath-test-configmap-svvm @ 10/06/25 11:39:04.301
  I1006 11:39:04.301195 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-svvm" in namespace "subpath-6673"
  I1006 11:39:04.303400 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6673" for this suite. @ 10/06/25 11:39:04.314
• [24.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 10/06/25 11:39:04.324
  I1006 11:39:04.324366 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pods @ 10/06/25 11:39:04.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:39:04.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:39:04.35
  STEP: creating a Pod with a static label @ 10/06/25 11:39:04.356
  STEP: watching for Pod to be ready @ 10/06/25 11:39:04.365
  I1006 11:39:04.367153 24 pods.go:947] observed Pod pod-test in namespace pods-9276 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1006 11:39:04.376712 24 pods.go:947] observed Pod pod-test in namespace pods-9276 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:39:04 +0000 UTC  }]
  I1006 11:39:04.407441 24 pods.go:947] observed Pod pod-test in namespace pods-9276 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:39:04 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:39:04 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:39:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:39:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:39:04 +0000 UTC  }]
  I1006 11:39:05.644933 24 pods.go:950] Found Pod pod-test in namespace pods-9276 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:39:05 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:39:04 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:39:05 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:39:05 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-06 11:39:04 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 10/06/25 11:39:05.654
  STEP: getting the Pod and ensuring that it's patched @ 10/06/25 11:39:05.67
  STEP: replacing the Pod's status Ready condition to False @ 10/06/25 11:39:05.673
  STEP: check the Pod again to ensure its Ready conditions are False @ 10/06/25 11:39:05.689
  STEP: deleting the Pod via a Collection with a LabelSelector @ 10/06/25 11:39:05.69
  STEP: watching for the Pod to be deleted @ 10/06/25 11:39:05.7
  I1006 11:39:05.702226 24 pods.go:1060] observed event type MODIFIED
  I1006 11:39:07.656555 24 pods.go:1060] observed event type MODIFIED
  I1006 11:39:07.809503 24 pods.go:1060] observed event type MODIFIED
  I1006 11:39:08.662056 24 pods.go:1060] observed event type MODIFIED
  I1006 11:39:08.676089 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9276" for this suite. @ 10/06/25 11:39:08.679
• [4.364 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 10/06/25 11:39:08.688
  I1006 11:39:08.688343 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:39:08.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:39:08.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:39:08.712
  STEP: create deployment with httpd image @ 10/06/25 11:39:08.716
  I1006 11:39:08.716412 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4131 create -f -'
  I1006 11:39:08.839111 24 builder.go:146] stderr: ""
  I1006 11:39:08.839178 24 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 10/06/25 11:39:08.839
  I1006 11:39:08.839286 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4131 diff -f -'
  I1006 11:39:09.000654 24 builder.go:135] rc: 1
  I1006 11:39:09.000815 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4131 delete -f -'
  I1006 11:39:09.085866 24 builder.go:146] stderr: ""
  I1006 11:39:09.085951 24 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1006 11:39:09.086301 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4131" for this suite. @ 10/06/25 11:39:09.099
• [0.427 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 10/06/25 11:39:09.116
  I1006 11:39:09.116297 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pod-network-test @ 10/06/25 11:39:09.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:39:09.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:39:09.142
  STEP: Performing setup for networking test in namespace pod-network-test-6551 @ 10/06/25 11:39:09.145
  STEP: creating a selector @ 10/06/25 11:39:09.145
  STEP: Creating the service pods in kubernetes @ 10/06/25 11:39:09.145
  I1006 11:39:09.145450 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/06/25 11:39:23.291
  I1006 11:39:25.338526 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1006 11:39:25.338703 24 utils.go:495] Going to poll 10.244.1.106 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I1006 11:39:25.340846 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.106 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6551 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:39:25.340894 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:39:25.340996 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6551/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.106+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I1006 11:39:26.386034 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 11:39:26.386115 24 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I1006 11:39:26.386138 24 utils.go:495] Going to poll 10.244.2.120 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I1006 11:39:26.389420 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.120 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6551 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:39:26.389468 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:39:26.389556 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6551/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.120+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I1006 11:39:27.436307 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 11:39:27.436393 24 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I1006 11:39:27.436640 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6551" for this suite. @ 10/06/25 11:39:27.44
• [18.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 10/06/25 11:39:27.448
  I1006 11:39:27.448426 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sched-pred @ 10/06/25 11:39:27.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:39:27.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:39:27.483
  I1006 11:39:27.486964 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1006 11:39:27.492049 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I1006 11:39:27.495387 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf-1-33-script-2 before test
  I1006 11:39:27.501031 24 predicates.go:958] kube-flannel-ds-ndkcd from kube-flannel started at 2025-10-06 08:20:52 +0000 UTC (1 container statuses recorded)
  I1006 11:39:27.501079 24 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I1006 11:39:27.501089 24 predicates.go:958] kube-proxy-h8g5d from kube-system started at 2025-10-06 08:20:52 +0000 UTC (1 container statuses recorded)
  I1006 11:39:27.501096 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I1006 11:39:27.501134 24 predicates.go:958] host-test-container-pod from pod-network-test-6551 started at 2025-10-06 11:39:23 +0000 UTC (1 container statuses recorded)
  I1006 11:39:27.501235 24 predicates.go:960] 	Container agnhost-container ready: true, restart count 0
  I1006 11:39:27.501243 24 predicates.go:958] netserver-0 from pod-network-test-6551 started at 2025-10-06 11:39:09 +0000 UTC (1 container statuses recorded)
  I1006 11:39:27.501249 24 predicates.go:960] 	Container webserver ready: true, restart count 0
  I1006 11:39:27.501256 24 predicates.go:958] test-container-pod from pod-network-test-6551 started at 2025-10-06 11:39:23 +0000 UTC (1 container statuses recorded)
  I1006 11:39:27.501262 24 predicates.go:960] 	Container webserver ready: true, restart count 0
  I1006 11:39:27.501342 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-10-06 10:54:46 +0000 UTC (1 container statuses recorded)
  I1006 11:39:27.501348 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I1006 11:39:27.501357 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7c4e1e919750475a-qdnd8 from sonobuoy started at 2025-10-06 10:54:47 +0000 UTC (2 container statuses recorded)
  I1006 11:39:27.501365 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 11:39:27.501373 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I1006 11:39:27.501557 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf-1-33-script-3 before test
  I1006 11:39:27.504668 24 predicates.go:958] kube-flannel-ds-c4mh7 from kube-flannel started at 2025-10-06 08:20:57 +0000 UTC (1 container statuses recorded)
  I1006 11:39:27.504698 24 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I1006 11:39:27.504708 24 predicates.go:958] kube-proxy-8nts5 from kube-system started at 2025-10-06 08:20:57 +0000 UTC (1 container statuses recorded)
  I1006 11:39:27.504714 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I1006 11:39:27.504813 24 predicates.go:958] netserver-1 from pod-network-test-6551 started at 2025-10-06 11:39:09 +0000 UTC (1 container statuses recorded)
  I1006 11:39:27.504818 24 predicates.go:960] 	Container webserver ready: true, restart count 0
  I1006 11:39:27.504826 24 predicates.go:958] sonobuoy-e2e-job-67c3ae163130406a from sonobuoy started at 2025-10-06 10:54:46 +0000 UTC (2 container statuses recorded)
  I1006 11:39:27.504832 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I1006 11:39:27.504838 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 11:39:27.504845 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7c4e1e919750475a-r8kjw from sonobuoy started at 2025-10-06 10:54:47 +0000 UTC (2 container statuses recorded)
  I1006 11:39:27.504850 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 11:39:27.504855 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/06/25 11:39:27.505
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/06/25 11:39:29.532
  STEP: Trying to apply a random label on the found node. @ 10/06/25 11:39:29.553
  STEP: verifying the node has the label kubernetes.io/e2e-bb08584b-6e03-4857-9f83-84aec1b2df45 42 @ 10/06/25 11:39:29.567
  STEP: Trying to relaunch the pod, now with labels. @ 10/06/25 11:39:29.57
  STEP: removing the label kubernetes.io/e2e-bb08584b-6e03-4857-9f83-84aec1b2df45 off the node cncf-1-33-script-3 @ 10/06/25 11:39:31.595
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-bb08584b-6e03-4857-9f83-84aec1b2df45 @ 10/06/25 11:39:31.613
  I1006 11:39:31.617163 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3531" for this suite. @ 10/06/25 11:39:31.621
• [4.183 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 10/06/25 11:39:31.631
  I1006 11:39:31.631368 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 11:39:31.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:39:31.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:39:31.657
  STEP: creating service multiprotocol-test in namespace services-6510 @ 10/06/25 11:39:31.662
  STEP: creating pod pod1 in namespace services-6510 @ 10/06/25 11:39:31.697
  STEP: Creating pod pod1 in namespace services-6510 @ 10/06/25 11:39:31.697
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6510 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 10/06/25 11:39:33.742
  I1006 11:39:33.747440      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:39:33.756927 24 service.go:4729] successfully validated that service multiprotocol-test in namespace services-6510 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 10/06/25 11:39:33.757
  I1006 11:39:33.757249 24 resource.go:361] Creating new exec pod
  I1006 11:39:35.784353 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.211.87 80'
  I1006 11:39:35.929516 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.211.87 80\nConnection to 10.103.211.87 80 port [tcp/http] succeeded!\n"
  I1006 11:39:35.929598 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 11:39:35.929743 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.211.87 80'
  I1006 11:39:38.067808 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.211.87 80\n"
  I1006 11:39:38.067895 24 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 10/06/25 11:39:38.067
  I1006 11:39:38.083674 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.211.87 80'
  I1006 11:39:38.212983 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.211.87 80\nConnection to 10.103.211.87 80 port [tcp/http] succeeded!\n"
  I1006 11:39:38.213058 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 11:39:38.213376 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.211.87 80'
  I1006 11:39:40.331615 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.211.87 80\n"
  I1006 11:39:40.331700 24 builder.go:147] stdout: ""
  I1006 11:39:40.331778 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.211.87 80'
  I1006 11:39:42.460337 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.211.87 80\n"
  I1006 11:39:42.460533 24 builder.go:147] stdout: ""
  I1006 11:39:42.460847 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.211.87 80'
  I1006 11:39:44.610253 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.211.87 80\n"
  I1006 11:39:44.610385 24 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 10/06/25 11:39:44.61
  I1006 11:39:44.621664 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.211.87 80'
  I1006 11:39:46.778074 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.211.87 80\n"
  I1006 11:39:46.778155 24 builder.go:147] stdout: "pod1"
  I1006 11:39:46.778306 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.211.87 80'
  I1006 11:39:48.900791 24 builder.go:135] rc: 1
  I1006 11:39:48.900870 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.211.87 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.103.211.87 80
  nc: connect to 10.103.211.87 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1006 11:39:48.900959 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.211.87 80'
  I1006 11:39:51.002029 24 builder.go:135] rc: 1
  I1006 11:39:51.002117 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.211.87 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.103.211.87 80
  nc: connect to 10.103.211.87 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1006 11:39:51.002198 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.211.87 80'
  I1006 11:39:53.123500 24 builder.go:135] rc: 1
  I1006 11:39:53.123582 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6510 exec execpodlnbtd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.211.87 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.103.211.87 80
  nc: connect to 10.103.211.87 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1006 11:39:53.123770 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6510" for this suite. @ 10/06/25 11:39:53.13
• [21.509 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 10/06/25 11:39:53.14
  I1006 11:39:53.140850 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 11:39:53.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:39:53.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:39:53.173
  STEP: creating a secret @ 10/06/25 11:39:53.176
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 10/06/25 11:39:53.184
  STEP: patching the secret @ 10/06/25 11:39:53.187
  STEP: deleting the secret using a LabelSelector @ 10/06/25 11:39:53.199
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 10/06/25 11:39:53.209
  I1006 11:39:53.212656 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1681" for this suite. @ 10/06/25 11:39:53.231
• [0.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 10/06/25 11:39:53.245
  I1006 11:39:53.245218 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename events @ 10/06/25 11:39:53.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:39:53.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:39:53.264
  STEP: Create set of events @ 10/06/25 11:39:53.268
  STEP: get a list of Events with a label in the current namespace @ 10/06/25 11:39:53.329
  STEP: delete a list of events @ 10/06/25 11:39:53.332
  I1006 11:39:53.332156 24 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/06/25 11:39:53.354
  I1006 11:39:53.357985 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5448" for this suite. @ 10/06/25 11:39:53.362
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 10/06/25 11:39:53.373
  I1006 11:39:53.373217 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 11:39:53.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:39:53.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:39:53.399
  STEP: creating service multi-endpoint-test in namespace services-2635 @ 10/06/25 11:39:53.402
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2635 to expose endpoints map[] @ 10/06/25 11:39:53.435
  I1006 11:39:53.441751      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:39:53.441840 24 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I1006 11:39:54.446267      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:39:54.451397 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2635 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2635 @ 10/06/25 11:39:54.451
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2635 to expose endpoints map[pod1:[100]] @ 10/06/25 11:39:56.471
  I1006 11:39:56.474908      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:39:56.477578 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2635 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2635 @ 10/06/25 11:39:56.477
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2635 to expose endpoints map[pod1:[100] pod2:[101]] @ 10/06/25 11:39:58.509
  I1006 11:39:58.520873      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:39:58.524896 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2635 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 10/06/25 11:39:58.524
  I1006 11:39:58.525137 24 resource.go:361] Creating new exec pod
  I1006 11:40:00.543634 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-2635 exec execpodb46k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1006 11:40:00.697238 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.97.93.205) 80 port [tcp/http] succeeded!\n"
  I1006 11:40:00.697333 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 11:40:00.697470 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-2635 exec execpodb46k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.93.205 80'
  I1006 11:40:00.847190 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.93.205 80\nConnection to 10.97.93.205 80 port [tcp/http] succeeded!\n"
  I1006 11:40:00.847258 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 11:40:00.847595 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-2635 exec execpodb46k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1006 11:40:00.975884 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.97.93.205) 81 port [tcp/*] succeeded!\n"
  I1006 11:40:00.975950 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 11:40:00.976051 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-2635 exec execpodb46k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.93.205 81'
  I1006 11:40:01.127795 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.93.205 81\nConnection to 10.97.93.205 81 port [tcp/*] succeeded!\n"
  I1006 11:40:01.127866 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2635 @ 10/06/25 11:40:01.127
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2635 to expose endpoints map[pod2:[101]] @ 10/06/25 11:40:01.153
  I1006 11:40:01.159534      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:40:01.162444 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2635 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2635 @ 10/06/25 11:40:01.162
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2635 to expose endpoints map[] @ 10/06/25 11:40:01.178
  I1006 11:40:01.185132      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:40:01.193384 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2635 exposes endpoints map[]
  I1006 11:40:01.232696 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2635" for this suite. @ 10/06/25 11:40:01.236
• [7.881 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 10/06/25 11:40:01.255
  I1006 11:40:01.255093 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename watch @ 10/06/25 11:40:01.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:01.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:01.272
  STEP: creating a watch on configmaps @ 10/06/25 11:40:01.276
  STEP: creating a new configmap @ 10/06/25 11:40:01.278
  STEP: modifying the configmap once @ 10/06/25 11:40:01.283
  STEP: closing the watch once it receives two notifications @ 10/06/25 11:40:01.293
  I1006 11:40:01.293241 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2142  edd0df6b-62b5-4f2d-8060-d00f5863f036 58627 0 2025-10-06 11:40:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-10-06 11:40:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 11:40:01.293502 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2142  edd0df6b-62b5-4f2d-8060-d00f5863f036 58628 0 2025-10-06 11:40:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-10-06 11:40:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 10/06/25 11:40:01.293
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 10/06/25 11:40:01.301
  STEP: deleting the configmap @ 10/06/25 11:40:01.304
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 10/06/25 11:40:01.311
  I1006 11:40:01.311336 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2142  edd0df6b-62b5-4f2d-8060-d00f5863f036 58629 0 2025-10-06 11:40:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-10-06 11:40:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 11:40:01.311485 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2142  edd0df6b-62b5-4f2d-8060-d00f5863f036 58630 0 2025-10-06 11:40:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-10-06 11:40:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 11:40:01.311613 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2142" for this suite. @ 10/06/25 11:40:01.337
• [0.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 10/06/25 11:40:01.347
  I1006 11:40:01.347562 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/06/25 11:40:01.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:01.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:01.372
  STEP: creating a target pod @ 10/06/25 11:40:01.376
  STEP: adding an ephemeral container @ 10/06/25 11:40:03.398
  STEP: verifying the pod's generation is 2 @ 10/06/25 11:40:05.42
  STEP: checking pod container endpoints @ 10/06/25 11:40:05.424
  I1006 11:40:05.425009 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1504 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 11:40:05.425384 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 11:40:05.425784 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-1504/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I1006 11:40:05.475001 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 11:40:05.475068 24 exec_util.go:112] Exec stderr: ""
  I1006 11:40:05.480311 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1504" for this suite. @ 10/06/25 11:40:05.484
• [4.143 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 10/06/25 11:40:05.491
  I1006 11:40:05.492171 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:40:05.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:05.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:05.516
  I1006 11:40:05.519977 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-2082 version'
  I1006 11:40:05.598784 24 builder.go:146] stderr: ""
  I1006 11:40:05.598875 24 builder.go:147] stdout: "Client Version: v1.33.5\nKustomize Version: v5.6.0\nServer Version: v1.33.5-ckp\n"
  I1006 11:40:05.599385 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2082" for this suite. @ 10/06/25 11:40:05.603
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 10/06/25 11:40:05.615
  I1006 11:40:05.615741 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:40:05.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:05.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:05.645
  STEP: Creating projection with secret that has name projected-secret-test-map-cd56b181-4f55-46c0-84e7-afe408479626 @ 10/06/25 11:40:05.649
  STEP: Creating a pod to test consume secrets @ 10/06/25 11:40:05.657
  STEP: Saw pod success @ 10/06/25 11:40:09.684
  I1006 11:40:09.688414 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-projected-secrets-a572b752-d1d1-48b7-a2f1-9c89d67c85ff container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 11:40:09.707
  I1006 11:40:09.735777 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8907" for this suite. @ 10/06/25 11:40:09.739
• [4.131 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 10/06/25 11:40:09.747
  I1006 11:40:09.747413 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename dns @ 10/06/25 11:40:09.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:09.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:09.772
  STEP: Creating a test headless service @ 10/06/25 11:40:09.775
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7466 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7466;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7466 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7466;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7466.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7466.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7466.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7466.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7466.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-7466.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7466.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-7466.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7466.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-7466.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7466.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-7466.svc;check="$$(dig +notcp +noall +answer +search 90.217.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.217.90_udp@PTR;check="$$(dig +tcp +noall +answer +search 90.217.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.217.90_tcp@PTR;sleep 1; done
   @ 10/06/25 11:40:09.811
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7466 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7466;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7466 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7466;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7466.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7466.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7466.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7466.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7466.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7466.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7466.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7466.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7466.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7466.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7466.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7466.svc;check="$$(dig +notcp +noall +answer +search 90.217.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.217.90_udp@PTR;check="$$(dig +tcp +noall +answer +search 90.217.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.217.90_tcp@PTR;sleep 1; done
   @ 10/06/25 11:40:09.811
  STEP: creating a pod to probe DNS @ 10/06/25 11:40:09.811
  STEP: submitting the pod to kubernetes @ 10/06/25 11:40:09.811
  STEP: retrieving the pod @ 10/06/25 11:40:11.848
  STEP: looking for the results for each expected name from probers @ 10/06/25 11:40:11.852
  I1006 11:40:11.856684 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.860562 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.865189 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7466 from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.869411 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7466 from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.872971 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7466.svc from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.877225 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7466.svc from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.880818 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7466.svc from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.883660 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7466.svc from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.899676 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.902225 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.904887 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7466 from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.908248 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7466 from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.911195 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7466.svc from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.915247 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7466.svc from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.918084 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7466.svc from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.921059 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7466.svc from pod dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352: the server could not find the requested resource (get pods dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352)
  I1006 11:40:11.936646 24 dns_common.go:506] Lookups using dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-7466 agnhost_tcp@dns-test-service.dns-7466 agnhost_udp@dns-test-service.dns-7466.svc agnhost_tcp@dns-test-service.dns-7466.svc agnhost_udp@_http._tcp.dns-test-service.dns-7466.svc agnhost_tcp@_http._tcp.dns-test-service.dns-7466.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7466 jessie_tcp@dns-test-service.dns-7466 jessie_udp@dns-test-service.dns-7466.svc jessie_tcp@dns-test-service.dns-7466.svc jessie_udp@_http._tcp.dns-test-service.dns-7466.svc jessie_tcp@_http._tcp.dns-test-service.dns-7466.svc]

  I1006 11:40:11.942558 24 dns_common.go:514] Pod client logs for webserver: 
  I1006 11:40:11.947126 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I1006 11:40:11.952321 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I1006 11:40:16.983400 24 dns_common.go:546] DNS probes using dns-7466/dns-test-bbd51494-9189-416d-bd2f-7b5374eb0352 succeeded

  STEP: deleting the pod @ 10/06/25 11:40:16.983
  STEP: deleting the test service @ 10/06/25 11:40:17.009
  STEP: deleting the test headless service @ 10/06/25 11:40:17.105
  I1006 11:40:17.127314 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7466" for this suite. @ 10/06/25 11:40:17.132
• [7.395 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 10/06/25 11:40:17.143
  I1006 11:40:17.143198 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename endpointslice @ 10/06/25 11:40:17.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:17.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:17.181
  STEP: referencing a single matching pod @ 10/06/25 11:40:19.407
  I1006 11:40:19.412685      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 10/06/25 11:40:19.412
  I1006 11:40:19.417310      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 10/06/25 11:40:19.417
  I1006 11:40:19.421591      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 10/06/25 11:40:19.422
  I1006 11:40:19.445289 24 endpointslice.go:938] EndpointSlice for Service endpointslice-4718/example-named-port not found
  I1006 11:40:21.449164      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:40:21.449420 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4718" for this suite. @ 10/06/25 11:40:21.453
• [4.316 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 10/06/25 11:40:21.459
  I1006 11:40:21.459749 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename subpath @ 10/06/25 11:40:21.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:21.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:21.476
  STEP: Setting up data @ 10/06/25 11:40:21.481
  STEP: Creating pod pod-subpath-test-configmap-9k6q @ 10/06/25 11:40:21.492
  STEP: Creating a pod to test atomic-volume-subpath @ 10/06/25 11:40:21.492
  STEP: Saw pod success @ 10/06/25 11:40:45.569
  I1006 11:40:45.571938 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-subpath-test-configmap-9k6q container test-container-subpath-configmap-9k6q: <nil>
  STEP: delete the pod @ 10/06/25 11:40:45.577
  STEP: Deleting pod pod-subpath-test-configmap-9k6q @ 10/06/25 11:40:45.599
  I1006 11:40:45.599191 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-9k6q" in namespace "subpath-4617"
  I1006 11:40:45.600853 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4617" for this suite. @ 10/06/25 11:40:45.603
• [24.156 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 10/06/25 11:40:45.615
  I1006 11:40:45.615723 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 11:40:45.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:45.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:45.632
  STEP: Creating secret with name secret-test-36aeefce-a288-4fbc-b5a3-1c885783a1df @ 10/06/25 11:40:45.659
  STEP: Creating a pod to test consume secrets @ 10/06/25 11:40:45.666
  STEP: Saw pod success @ 10/06/25 11:40:49.686
  I1006 11:40:49.689288 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-secrets-97c0f864-8902-40d3-a605-35cd8a9fef8c container secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 11:40:49.695
  I1006 11:40:49.718899 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7463" for this suite. @ 10/06/25 11:40:49.722
  STEP: Destroying namespace "secret-namespace-5906" for this suite. @ 10/06/25 11:40:49.731
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 10/06/25 11:40:49.739
  I1006 11:40:49.739642 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-runtime @ 10/06/25 11:40:49.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:49.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:49.762
  STEP: create the container @ 10/06/25 11:40:49.766
  I1006 11:40:49.780417      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 10/06/25 11:40:49.78
  STEP: get the container status @ 10/06/25 11:40:52.793
  STEP: the container should be terminated @ 10/06/25 11:40:52.796
  STEP: the termination message should be set @ 10/06/25 11:40:52.796
  I1006 11:40:52.796219 24 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/06/25 11:40:52.796
  I1006 11:40:52.816643 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7785" for this suite. @ 10/06/25 11:40:52.819
• [3.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 10/06/25 11:40:52.83
  I1006 11:40:52.830920 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pods @ 10/06/25 11:40:52.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:52.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:52.847
  STEP: creating pod @ 10/06/25 11:40:52.85
  I1006 11:40:54.885164 24 pods.go:83] Pod pod-hostip-b15c4640-2f35-41e6-a4bc-a8dc702b02e2 has hostIP: 172.16.108.172
  I1006 11:40:54.885365 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-999" for this suite. @ 10/06/25 11:40:54.887
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 10/06/25 11:40:54.898
  I1006 11:40:54.898437 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 11:40:54.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:54.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:54.914
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 10/06/25 11:40:54.916
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 10/06/25 11:40:54.926
  STEP: Verifying the Job status fields to ensure early termination of the job @ 10/06/25 11:40:58.937
  I1006 11:40:58.940104 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7459" for this suite. @ 10/06/25 11:40:58.943
• [4.056 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 10/06/25 11:40:58.954
  I1006 11:40:58.954360 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename security-context-test @ 10/06/25 11:40:58.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:40:58.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:40:58.971
  I1006 11:41:02.999128 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4145" for this suite. @ 10/06/25 11:41:03.003
• [4.058 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 10/06/25 11:41:03.012
  I1006 11:41:03.012463 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 11:41:03.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:03.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:03.036
  STEP: Counting existing ResourceQuota @ 10/06/25 11:41:20.043
  STEP: Creating a ResourceQuota @ 10/06/25 11:41:25.047
  STEP: Ensuring resource quota status is calculated @ 10/06/25 11:41:25.055
  STEP: Creating a ConfigMap @ 10/06/25 11:41:27.06
  STEP: Ensuring resource quota status captures configMap creation @ 10/06/25 11:41:27.111
  STEP: Deleting a ConfigMap @ 10/06/25 11:41:29.116
  STEP: Ensuring resource quota status released usage @ 10/06/25 11:41:29.124
  I1006 11:41:31.129693 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6616" for this suite. @ 10/06/25 11:41:31.133
• [28.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 10/06/25 11:41:31.139
  I1006 11:41:31.139998 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename server-version @ 10/06/25 11:41:31.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:31.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:31.161
  STEP: Request ServerVersion @ 10/06/25 11:41:31.163
  STEP: Confirm major version @ 10/06/25 11:41:31.164
  I1006 11:41:31.164758 24 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 10/06/25 11:41:31.164
  I1006 11:41:31.164921 24 server_version.go:58] cleanMinorVersion: 33
  I1006 11:41:31.164947 24 server_version.go:62] Minor version: 33
  I1006 11:41:31.165152 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7744" for this suite. @ 10/06/25 11:41:31.233
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 10/06/25 11:41:31.239
  I1006 11:41:31.240007 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename daemonsets @ 10/06/25 11:41:31.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:31.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:31.26
  STEP: Creating simple DaemonSet "daemon-set" @ 10/06/25 11:41:31.34
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/06/25 11:41:31.351
  I1006 11:41:31.435478 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:41:31.439083 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 11:41:31.439245 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  I1006 11:41:32.360646 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:41:32.363186 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1006 11:41:32.363242 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  I1006 11:41:33.357543 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:41:33.360356 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1006 11:41:33.360592 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 10/06/25 11:41:33.363
  I1006 11:41:33.458816 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:41:33.462104 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1006 11:41:33.462155 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  I1006 11:41:34.382296 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:41:34.384851 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1006 11:41:34.385044 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  I1006 11:41:35.382303 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 11:41:35.384555 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1006 11:41:35.384715 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/06/25 11:41:35.387
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-598, will wait for the garbage collector to delete the pods @ 10/06/25 11:41:35.387
  I1006 11:41:35.450051 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.411386ms
  I1006 11:41:35.551442 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.343791ms
  I1006 11:41:37.155174 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 11:41:37.155224 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1006 11:41:37.157617 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"59267"},"items":null}

  I1006 11:41:37.160628 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"59267"},"items":null}

  I1006 11:41:37.169139 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-598" for this suite. @ 10/06/25 11:41:37.172
• [5.943 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 10/06/25 11:41:37.183
  I1006 11:41:37.183175 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:41:37.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:37.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:37.204
  STEP: creating a replication controller @ 10/06/25 11:41:37.206
  I1006 11:41:37.206783 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4484 create -f -'
  I1006 11:41:37.359417 24 builder.go:146] stderr: ""
  I1006 11:41:37.359467 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/06/25 11:41:37.359
  I1006 11:41:37.359568 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4484 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1006 11:41:37.440096 24 builder.go:146] stderr: ""
  I1006 11:41:37.440135 24 builder.go:147] stdout: "update-demo-nautilus-gcn65 update-demo-nautilus-xxmdd "
  I1006 11:41:37.440185 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4484 get pods update-demo-nautilus-gcn65 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1006 11:41:37.503892 24 builder.go:146] stderr: ""
  I1006 11:41:37.503940 24 builder.go:147] stdout: ""
  I1006 11:41:37.503949 24 kubectl.go:2505] update-demo-nautilus-gcn65 is created but not running
  I1006 11:41:42.507049 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4484 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1006 11:41:42.575990 24 builder.go:146] stderr: ""
  I1006 11:41:42.576044 24 builder.go:147] stdout: "update-demo-nautilus-gcn65 update-demo-nautilus-xxmdd "
  I1006 11:41:42.576106 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4484 get pods update-demo-nautilus-gcn65 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1006 11:41:42.645465 24 builder.go:146] stderr: ""
  I1006 11:41:42.645529 24 builder.go:147] stdout: "true"
  I1006 11:41:42.645593 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4484 get pods update-demo-nautilus-gcn65 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1006 11:41:42.708962 24 builder.go:146] stderr: ""
  I1006 11:41:42.709032 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1006 11:41:42.709048 24 kubectl.go:2396] validating pod update-demo-nautilus-gcn65
  I1006 11:41:42.721420 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1006 11:41:42.721480 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1006 11:41:42.721491 24 kubectl.go:2523] update-demo-nautilus-gcn65 is verified up and running
  I1006 11:41:42.721531 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4484 get pods update-demo-nautilus-xxmdd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1006 11:41:42.780812 24 builder.go:146] stderr: ""
  I1006 11:41:42.780870 24 builder.go:147] stdout: "true"
  I1006 11:41:42.780935 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4484 get pods update-demo-nautilus-xxmdd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1006 11:41:42.845122 24 builder.go:146] stderr: ""
  I1006 11:41:42.845167 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1006 11:41:42.845180 24 kubectl.go:2396] validating pod update-demo-nautilus-xxmdd
  I1006 11:41:42.852666 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1006 11:41:42.852716 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1006 11:41:42.852727 24 kubectl.go:2523] update-demo-nautilus-xxmdd is verified up and running
  STEP: using delete to clean up resources @ 10/06/25 11:41:42.852
  I1006 11:41:42.852872 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4484 delete --grace-period=0 --force -f -'
  I1006 11:41:42.927338 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1006 11:41:42.927399 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1006 11:41:42.927473 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4484 get rc,svc -l name=update-demo --no-headers'
  I1006 11:41:43.009967 24 builder.go:146] stderr: "No resources found in kubectl-4484 namespace.\n"
  I1006 11:41:43.010021 24 builder.go:147] stdout: ""
  I1006 11:41:43.010080 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4484 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1006 11:41:43.081514 24 builder.go:146] stderr: ""
  I1006 11:41:43.081568 24 builder.go:147] stdout: ""
  I1006 11:41:43.081714 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4484" for this suite. @ 10/06/25 11:41:43.085
• [5.910 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 10/06/25 11:41:43.092
  I1006 11:41:43.092777 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pods @ 10/06/25 11:41:43.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:43.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:43.114
  I1006 11:41:43.116290 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: creating the pod @ 10/06/25 11:41:43.116
  STEP: submitting the pod to kubernetes @ 10/06/25 11:41:43.116
  I1006 11:41:45.199450 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2296" for this suite. @ 10/06/25 11:41:45.203
• [2.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 10/06/25 11:41:45.213
  I1006 11:41:45.213845 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename proxy @ 10/06/25 11:41:45.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:45.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:45.232
  I1006 11:41:45.235304 24 proxy.go:430] Creating pod...
  I1006 11:41:47.256118 24 proxy.go:454] Creating service...
  I1006 11:41:47.283736 24 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/pods/agnhost/proxy?method=DELETE
  I1006 11:41:47.290718 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1006 11:41:47.290767 24 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/pods/agnhost/proxy?method=OPTIONS
  I1006 11:41:47.297015 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1006 11:41:47.297068 24 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/pods/agnhost/proxy?method=PATCH
  I1006 11:41:47.300019 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1006 11:41:47.300361 24 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/pods/agnhost/proxy?method=POST
  I1006 11:41:47.303459 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1006 11:41:47.303958 24 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/pods/agnhost/proxy?method=PUT
  I1006 11:41:47.307116 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1006 11:41:47.307147 24 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/services/e2e-proxy-test-service/proxy?method=DELETE
  I1006 11:41:47.310154 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1006 11:41:47.310198 24 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1006 11:41:47.313249 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1006 11:41:47.313454 24 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/services/e2e-proxy-test-service/proxy?method=PATCH
  I1006 11:41:47.316641 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1006 11:41:47.316700 24 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/services/e2e-proxy-test-service/proxy?method=POST
  I1006 11:41:47.320337 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1006 11:41:47.321046 24 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/services/e2e-proxy-test-service/proxy?method=PUT
  I1006 11:41:47.325123 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1006 11:41:47.325280 24 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/pods/agnhost/proxy?method=GET
  I1006 11:41:47.327467 24 proxy.go:530] http.Client request:GET StatusCode:301
  I1006 11:41:47.327537 24 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/services/e2e-proxy-test-service/proxy?method=GET
  I1006 11:41:47.330447 24 proxy.go:530] http.Client request:GET StatusCode:301
  I1006 11:41:47.330559 24 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/pods/agnhost/proxy?method=HEAD
  I1006 11:41:47.342533 24 proxy.go:530] http.Client request:HEAD StatusCode:301
  I1006 11:41:47.342570 24 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1841/services/e2e-proxy-test-service/proxy?method=HEAD
  I1006 11:41:47.345862 24 proxy.go:530] http.Client request:HEAD StatusCode:301
  I1006 11:41:47.346041 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1841" for this suite. @ 10/06/25 11:41:47.349
• [2.142 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 10/06/25 11:41:47.355
  I1006 11:41:47.355719 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pods @ 10/06/25 11:41:47.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:47.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:47.37
  I1006 11:41:47.376677 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: creating the pod @ 10/06/25 11:41:47.377
  STEP: submitting the pod to kubernetes @ 10/06/25 11:41:47.377
  STEP: waiting for the container to be running @ 10/06/25 11:41:49.396
  I1006 11:41:49.417106 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6879" for this suite. @ 10/06/25 11:41:49.421
• [2.075 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 10/06/25 11:41:49.43
  I1006 11:41:49.430692 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename svcaccounts @ 10/06/25 11:41:49.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:49.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:49.448
  STEP: Creating ServiceAccount "e2e-sa-fw2xg"  @ 10/06/25 11:41:49.452
  I1006 11:41:49.458531 24 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-fw2xg"  @ 10/06/25 11:41:49.458
  I1006 11:41:49.468801 24 service_accounts.go:867] AutomountServiceAccountToken: true
  I1006 11:41:49.468919 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8448" for this suite. @ 10/06/25 11:41:49.522
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 10/06/25 11:41:49.529
  I1006 11:41:49.529230 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename svcaccounts @ 10/06/25 11:41:49.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:49.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:49.551
  STEP: Creating a pod to test service account token:  @ 10/06/25 11:41:49.554
  STEP: Saw pod success @ 10/06/25 11:41:51.577
  I1006 11:41:51.579707 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod test-pod-3b596db7-47b1-400e-b9c9-438aa1bf7c29 container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 11:41:51.585
  I1006 11:41:51.604167 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-317" for this suite. @ 10/06/25 11:41:51.607
• [2.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 10/06/25 11:41:51.616
  I1006 11:41:51.616333 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename dns @ 10/06/25 11:41:51.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:51.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:51.638
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/06/25 11:41:51.641
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/06/25 11:41:51.641
  STEP: creating a pod to probe DNS @ 10/06/25 11:41:51.641
  STEP: submitting the pod to kubernetes @ 10/06/25 11:41:51.641
  STEP: retrieving the pod @ 10/06/25 11:41:53.659
  STEP: looking for the results for each expected name from probers @ 10/06/25 11:41:53.669
  I1006 11:41:53.694039 24 dns_common.go:546] DNS probes using dns-425/dns-test-ebe1217e-338f-45a9-b29e-28b0629b4eac succeeded

  STEP: deleting the pod @ 10/06/25 11:41:53.694
  I1006 11:41:53.715820 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-425" for this suite. @ 10/06/25 11:41:53.719
• [2.110 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 10/06/25 11:41:53.726
  I1006 11:41:53.726883 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:41:53.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:53.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:53.746
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/06/25 11:41:53.749
  I1006 11:41:53.749557 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9357 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1006 11:41:53.817270 24 builder.go:146] stderr: ""
  I1006 11:41:53.817367 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/06/25 11:41:53.817
  I1006 11:41:53.821742 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-9357 delete pods e2e-test-httpd-pod'
  I1006 11:41:55.151534 24 builder.go:146] stderr: ""
  I1006 11:41:55.151600 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1006 11:41:55.151771 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9357" for this suite. @ 10/06/25 11:41:55.155
• [1.436 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 10/06/25 11:41:55.163
  I1006 11:41:55.163187 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename volumeattachment @ 10/06/25 11:41:55.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:55.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:55.186
  STEP: Create VolumeAttachment "va-e2e-r9kfp" on node "cncf-1-33-script-2" @ 10/06/25 11:41:55.257
  STEP: Get VolumeAttachment "va-e2e-r9kfp" on node "cncf-1-33-script-2" @ 10/06/25 11:41:55.264
  STEP: Patch VolumeAttachment "va-e2e-r9kfp" on node "cncf-1-33-script-2" @ 10/06/25 11:41:55.266
  STEP: List VolumeAttachments with "va-e2e-r9kfp=patched" label @ 10/06/25 11:41:55.273
  STEP: Delete VolumeAttachment "va-e2e-r9kfp" on node "cncf-1-33-script-2" @ 10/06/25 11:41:55.275
  STEP: Confirm deletion of VolumeAttachment "va-e2e-r9kfp" on node "cncf-1-33-script-2" @ 10/06/25 11:41:55.283
  STEP: Create VolumeAttachment "va-e2e-r2q5f" on node "cncf-1-33-script-3" @ 10/06/25 11:41:55.364
  STEP: Update the VolumeAttachment "va-e2e-r2q5f" on node "cncf-1-33-script-3" with label "va-e2e=updated" @ 10/06/25 11:41:55.37
  STEP: Create VolumeAttachment "va-e2e-c9m6k" on node "cncf-1-33-script-1" @ 10/06/25 11:41:55.458
  STEP: Update the VolumeAttachment "va-e2e-c9m6k" on node "cncf-1-33-script-1" with label "va-e2e=updated" @ 10/06/25 11:41:55.471
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/06/25 11:41:55.48
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/06/25 11:41:55.495
  I1006 11:41:55.498465 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-512" for this suite. @ 10/06/25 11:41:55.56
• [0.405 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 10/06/25 11:41:55.568
  I1006 11:41:55.568596 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename var-expansion @ 10/06/25 11:41:55.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:55.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:55.591
  STEP: Creating a pod to test substitution in container's command @ 10/06/25 11:41:55.594
  STEP: Saw pod success @ 10/06/25 11:41:59.614
  I1006 11:41:59.616753 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod var-expansion-a97b70f8-3d0f-46cb-94e7-84447b6e8cf8 container dapi-container: <nil>
  STEP: delete the pod @ 10/06/25 11:41:59.621
  I1006 11:41:59.643624 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9762" for this suite. @ 10/06/25 11:41:59.647
• [4.085 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 10/06/25 11:41:59.653
  I1006 11:41:59.653732 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:41:59.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:41:59.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:41:59.673
  STEP: creating Agnhost RC @ 10/06/25 11:41:59.677
  I1006 11:41:59.677136 24 kubectl.go:1540] namespace kubectl-8193
  I1006 11:41:59.677210 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-8193 create -f -'
  I1006 11:41:59.843410 24 builder.go:146] stderr: ""
  I1006 11:41:59.843470 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/06/25 11:41:59.843
  I1006 11:42:00.849327 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1006 11:42:00.849372 24 framework.go:733] Found 0 / 1
  I1006 11:42:01.848954 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1006 11:42:01.849021 24 framework.go:733] Found 1 / 1
  I1006 11:42:01.849045 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1006 11:42:01.851993 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1006 11:42:01.852083 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1006 11:42:01.852099 24 kubectl.go:1547] wait on agnhost-primary startup in kubectl-8193 
  I1006 11:42:01.852206 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-8193 logs agnhost-primary-rbh77 agnhost-primary'
  I1006 11:42:01.957896 24 builder.go:146] stderr: ""
  I1006 11:42:01.958275 24 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 10/06/25 11:42:01.958
  I1006 11:42:01.958398 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-8193 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1006 11:42:02.082103 24 builder.go:146] stderr: ""
  I1006 11:42:02.082163 24 builder.go:147] stdout: "service/rm2 exposed\n"
  I1006 11:42:02.090837 24 utils.go:1115] Service rm2 in namespace kubectl-8193 found.
  STEP: exposing service @ 10/06/25 11:42:04.097
  I1006 11:42:04.097699 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-8193 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1006 11:42:04.197333 24 builder.go:146] stderr: ""
  I1006 11:42:04.197421 24 builder.go:147] stdout: "service/rm3 exposed\n"
  I1006 11:42:04.202878 24 utils.go:1115] Service rm3 in namespace kubectl-8193 found.
  I1006 11:42:06.212158 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8193" for this suite. @ 10/06/25 11:42:06.215
• [6.574 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 10/06/25 11:42:06.227
  I1006 11:42:06.227835 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:42:06.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:06.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:06.253
  STEP: Creating configMap configmap-3913/configmap-test-471a5e94-8bff-4d48-b9e7-0d7a224e6fab @ 10/06/25 11:42:06.256
  STEP: Creating a pod to test consume configMaps @ 10/06/25 11:42:06.263
  STEP: Saw pod success @ 10/06/25 11:42:10.288
  I1006 11:42:10.291336 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-configmaps-632c365a-47f6-4c3f-af42-ad5c221e8f54 container env-test: <nil>
  STEP: delete the pod @ 10/06/25 11:42:10.296
  I1006 11:42:10.330238 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3913" for this suite. @ 10/06/25 11:42:10.333
• [4.117 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 10/06/25 11:42:10.344
  I1006 11:42:10.344726 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename svcaccounts @ 10/06/25 11:42:10.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:10.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:10.363
  STEP: creating a ServiceAccount @ 10/06/25 11:42:10.366
  STEP: watching for the ServiceAccount to be added @ 10/06/25 11:42:10.374
  STEP: patching the ServiceAccount @ 10/06/25 11:42:10.375
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 10/06/25 11:42:10.385
  STEP: deleting the ServiceAccount @ 10/06/25 11:42:10.388
  I1006 11:42:10.398709 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5771" for this suite. @ 10/06/25 11:42:10.434
• [0.098 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 10/06/25 11:42:10.442
  I1006 11:42:10.442874 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replication-controller @ 10/06/25 11:42:10.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:10.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:10.461
  STEP: Creating replication controller my-hostname-basic-4676178e-386e-45d8-8865-bd772a5e87e1 @ 10/06/25 11:42:10.466
  I1006 11:42:10.478346 24 resource.go:81] Pod name my-hostname-basic-4676178e-386e-45d8-8865-bd772a5e87e1: Found 0 pods out of 1
  I1006 11:42:15.552894 24 resource.go:81] Pod name my-hostname-basic-4676178e-386e-45d8-8865-bd772a5e87e1: Found 1 pods out of 1
  I1006 11:42:15.552945 24 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-4676178e-386e-45d8-8865-bd772a5e87e1" are running
  I1006 11:42:15.555757 24 rc.go:525] Pod "my-hostname-basic-4676178e-386e-45d8-8865-bd772a5e87e1-swt7l" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-06 11:42:12 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-06 11:42:10 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-06 11:42:12 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-06 11:42:12 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-06 11:42:10 +0000 UTC Reason: Message:}])
  I1006 11:42:15.555965 24 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/06/25 11:42:15.556
  I1006 11:42:15.563580 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1076" for this suite. @ 10/06/25 11:42:15.567
• [5.132 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 10/06/25 11:42:15.575
  I1006 11:42:15.576102 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 11:42:15.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:15.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:15.605
  I1006 11:42:15.615400      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 10/06/25 11:42:15.615
  I1006 11:42:15.622741      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 10/06/25 11:42:15.622
  I1006 11:42:15.624145      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 10/06/25 11:42:15.624
  I1006 11:42:15.628017      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 10/06/25 11:42:15.628
  I1006 11:42:15.635679      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:42:15.637653      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 10/06/25 11:42:15.637
  I1006 11:42:15.639625      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 10/06/25 11:42:15.639
  I1006 11:42:15.645874      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:42:15.647598      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 10/06/25 11:42:15.647
  I1006 11:42:15.649500      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 10/06/25 11:42:15.649
  I1006 11:42:15.659685      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 10/06/25 11:42:15.659
  I1006 11:42:15.661218      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 10/06/25 11:42:15.661
  I1006 11:42:15.663556      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 11:42:15.663761 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4298" for this suite. @ 10/06/25 11:42:15.667
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 10/06/25 11:42:15.677
  I1006 11:42:15.677213 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 11:42:15.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:15.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:15.702
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/06/25 11:42:15.705
  I1006 11:42:15.705350 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-7107 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1006 11:42:15.795241 24 builder.go:146] stderr: ""
  I1006 11:42:15.795464 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 10/06/25 11:42:15.795
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/06/25 11:42:20.846
  I1006 11:42:20.846865 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-7107 get pod e2e-test-httpd-pod -o json'
  I1006 11:42:20.912657 24 builder.go:146] stderr: ""
  I1006 11:42:20.912823 24 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-10-06T11:42:15Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7107\",\n        \"resourceVersion\": \"59731\",\n        \"uid\": \"79795412-8616-476c-bdf8-89faab2cf6e9\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-pkhm7\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"cncf-1-33-script-2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-pkhm7\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-10-06T11:42:17Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-10-06T11:42:15Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-10-06T11:42:17Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-10-06T11:42:17Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-10-06T11:42:15Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://2b66382208d8e90abadef22232ad822e0ea178e3faf1b6db236f41c5906c7363\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-10-06T11:42:16Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-pkhm7\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.16.108.172\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.16.108.172\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.129\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.129\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-10-06T11:42:15Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 10/06/25 11:42:20.912
  I1006 11:42:20.912937 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-7107 replace -f -'
  I1006 11:42:21.050374 24 builder.go:146] stderr: ""
  I1006 11:42:21.050422 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 10/06/25 11:42:21.05
  I1006 11:42:21.054223 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-7107 delete pods e2e-test-httpd-pod'
  I1006 11:42:23.227564 24 builder.go:146] stderr: ""
  I1006 11:42:23.227625 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1006 11:42:23.227788 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7107" for this suite. @ 10/06/25 11:42:23.231
• [7.560 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 10/06/25 11:42:23.237
  I1006 11:42:23.237410 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 11:42:23.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:23.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:23.26
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/06/25 11:42:23.264
  STEP: Saw pod success @ 10/06/25 11:42:27.286
  I1006 11:42:27.289772 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-d490e797-ca9a-4925-a95a-fcd1e299c51b container test-container: <nil>
  STEP: delete the pod @ 10/06/25 11:42:27.296
  I1006 11:42:27.329731 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8642" for this suite. @ 10/06/25 11:42:27.335
• [4.111 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 10/06/25 11:42:27.348
  I1006 11:42:27.348124 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 11:42:27.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:27.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:27.371
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/06/25 11:42:27.375
  STEP: Saw pod success @ 10/06/25 11:42:29.402
  I1006 11:42:29.404960 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-d68942f6-2f5a-4d3e-ad9a-147a8901b3ef container test-container: <nil>
  STEP: delete the pod @ 10/06/25 11:42:29.409
  I1006 11:42:29.426175 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3362" for this suite. @ 10/06/25 11:42:29.429
• [2.089 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 10/06/25 11:42:29.437
  I1006 11:42:29.437225 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename deployment @ 10/06/25 11:42:29.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:29.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:29.461
  STEP: creating a Deployment @ 10/06/25 11:42:29.466
  STEP: waiting for Deployment to be created @ 10/06/25 11:42:29.472
  STEP: waiting for all Replicas to be Ready @ 10/06/25 11:42:29.474
  I1006 11:42:29.476039 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1006 11:42:29.476073 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1006 11:42:29.497567 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1006 11:42:29.497615 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1006 11:42:29.515069 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1006 11:42:29.515114 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1006 11:42:29.544077 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1006 11:42:29.544134 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1006 11:42:30.273647 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1006 11:42:30.273704 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1006 11:42:30.527087 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 10/06/25 11:42:30.527
  I1006 11:42:30.535762 24 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 10/06/25 11:42:30.535
  I1006 11:42:30.537238 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0
  I1006 11:42:30.537282 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0
  I1006 11:42:30.537305 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0
  I1006 11:42:30.537318 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0
  I1006 11:42:30.537343 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0
  I1006 11:42:30.537355 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0
  I1006 11:42:30.537502 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0
  I1006 11:42:30.537521 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 0
  I1006 11:42:30.537532 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  I1006 11:42:30.537542 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  I1006 11:42:30.537561 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:30.537570 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:30.537640 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:30.537656 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:30.556764 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:30.556819 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:30.582492 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:30.582536 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:30.612135 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  I1006 11:42:30.612179 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  I1006 11:42:30.634858 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  I1006 11:42:30.634902 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  I1006 11:42:31.287917 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:31.287974 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:31.328098 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  STEP: listing Deployments @ 10/06/25 11:42:31.328
  I1006 11:42:31.331630 24 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 10/06/25 11:42:31.331
  I1006 11:42:31.357815 24 deployment.go:360] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 10/06/25 11:42:31.357
  I1006 11:42:31.368710 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1006 11:42:31.374161 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1006 11:42:31.406492 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1006 11:42:31.419278 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1006 11:42:31.426383 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1006 11:42:32.300142 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1006 11:42:32.330955 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1006 11:42:32.345110 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1006 11:42:32.357616 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1006 11:42:32.372527 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1006 11:42:33.544196 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 10/06/25 11:42:33.574
  STEP: fetching the DeploymentStatus @ 10/06/25 11:42:33.592
  I1006 11:42:33.603686 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  I1006 11:42:33.603785 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  I1006 11:42:33.603909 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  I1006 11:42:33.604061 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  I1006 11:42:33.604187 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 1
  I1006 11:42:33.604342 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:33.604378 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:33.604531 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:33.604673 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:33.604811 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 2
  I1006 11:42:33.604940 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-7773 with ReadyReplicas 3
  STEP: deleting the Deployment @ 10/06/25 11:42:33.605
  I1006 11:42:33.614614 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.614679 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.614690 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.614814 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.614863 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.614882 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.614974 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.615004 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.615013 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.615075 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.615094 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.615141 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.615167 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.615195 24 deployment.go:474] observed event type MODIFIED
  I1006 11:42:33.617215 24 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I1006 11:42:33.620894 24 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48f1c9df-3725-4366-9bf3-5c11f9ed44c2",
      ResourceVersion: (string) (len=5) "59898",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "842c1c5c-12cd-4b3e-a691-1aeb0cc7402c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 32 63  31 63 35 63 2d 31 32 63  |":\"842c1c5c-12c|
              00000130  64 2d 34 62 33 65 2d 61  36 39 31 2d 31 61 65 62  |d-4b3e-a691-1aeb|
              00000140  30 63 63 37 34 30 32 63  5c 22 7d 22 3a 7b 7d 7d  |0cc7402c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1006 11:42:33.630210 24 deployment.go:656] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33bb8200-40e7-496a-8ea1-365c42de784f",
      ResourceVersion: (string) (len=5) "59983",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "842c1c5c-12cd-4b3e-a691-1aeb0cc7402c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 32 63  31 63 35 63 2d 31 32 63  |":\"842c1c5c-12c|
              00000130  64 2d 34 62 33 65 2d 61  36 39 31 2d 31 61 65 62  |d-4b3e-a691-1aeb|
              00000140  30 63 63 37 34 30 32 63  5c 22 7d 22 3a 7b 7d 7d  |0cc7402c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1006 11:42:33.640724 24 deployment.go:668] pod: "test-deployment-79899bcfcc-pqlxt":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-pqlxt",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-7773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ddd92691-5030-470b-81df-38e9a63c55b2",
      ResourceVersion: (string) (len=5) "60001",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347754,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "33bb8200-40e7-496a-8ea1-365c42de784f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 33 62 62 38 32 30 30  |uid\":\"33bb8200|
              000000a0  2d 34 30 65 37 2d 34 39  36 61 2d 38 65 61 31 2d  |-40e7-496a-8ea1-|
              000000b0  33 36 35 63 34 32 64 65  37 38 34 66 5c 22 7d 22  |365c42de784f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  33 34 5c 22 7d 22 3a 7b  |.244.2.134\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nptrz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nptrz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) (len=12) "10.244.2.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895347752,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://84e3bb900890cbd32dbc848218f1f577dcc678afaee21d65d30dc296c5202801",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nptrz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1006 11:42:33.645204 24 deployment.go:668] pod: "test-deployment-79899bcfcc-wdktp":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-wdktp",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-7773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6145714-4813-4d44-acb4-bde20d79e00a",
      ResourceVersion: (string) (len=5) "59939",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "33bb8200-40e7-496a-8ea1-365c42de784f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 33 62 62 38 32 30 30  |uid\":\"33bb8200|
              000000a0  2d 34 30 65 37 2d 34 39  36 61 2d 38 65 61 31 2d  |-40e7-496a-8ea1-|
              000000b0  33 36 35 63 34 32 64 65  37 38 34 66 5c 22 7d 22  |365c42de784f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  33 34 5c 22 7d 22 3a 7b  |.244.1.134\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4k4b2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4k4b2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895347752,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://05a976238f99010ae1b23a4b7a5c0cd8f1a587781d97b2f5121b93d0a7ebd10e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4k4b2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1006 11:42:33.648976 24 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58b43938-62a1-4707-9883-ab0a7f00671c",
      ResourceVersion: (string) (len=5) "59993",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347750,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "842c1c5c-12cd-4b3e-a691-1aeb0cc7402c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 32 63  31 63 35 63 2d 31 32 63  |":\"842c1c5c-12c|
              00000130  64 2d 34 62 33 65 2d 61  36 39 31 2d 31 61 65 62  |d-4b3e-a691-1aeb|
              00000140  30 63 63 37 34 30 32 63  5c 22 7d 22 3a 7b 7d 7d  |0cc7402c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1006 11:42:33.732147 24 deployment.go:668] pod: "test-deployment-f78d658f9-bxzrw":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-bxzrw",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-7773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2d8944a-5ded-4649-a398-54196b5e3284",
      ResourceVersion: (string) (len=5) "59988",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347750,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347755,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "58b43938-62a1-4707-9883-ab0a7f00671c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347750,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 38 62 34 33 39 33 38  |uid\":\"58b43938|
              000000a0  2d 36 32 61 31 2d 34 37  30 37 2d 39 38 38 33 2d  |-62a1-4707-9883-|
              000000b0  61 62 30 61 37 66 30 30  36 37 31 63 5c 22 7d 22  |ab0a7f00671c\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  33 33 5c 22 7d 22 3a 7b  |.244.1.133\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ppbds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ppbds",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347750,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895347750,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.133",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.133"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895347750,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895347751,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://c412232cdc37e56869d344377364e87b0d468d433675ee76d0dd0b75581f46ee",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ppbds",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1006 11:42:33.734041 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7773" for this suite. @ 10/06/25 11:42:33.738
• [4.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 10/06/25 11:42:33.744
  I1006 11:42:33.744978 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename discovery @ 10/06/25 11:42:33.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:33.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:33.76
  STEP: Setting up server cert @ 10/06/25 11:42:33.764
  STEP: Requesting APIResourceList from "/api/v1" @ 10/06/25 11:42:34.54
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 10/06/25 11:42:34.543
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 10/06/25 11:42:34.544
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 10/06/25 11:42:34.545
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 10/06/25 11:42:34.546
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 10/06/25 11:42:34.548
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 10/06/25 11:42:34.549
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 10/06/25 11:42:34.55
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 10/06/25 11:42:34.551
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 10/06/25 11:42:34.552
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 10/06/25 11:42:34.553
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 10/06/25 11:42:34.555
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 10/06/25 11:42:34.555
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 10/06/25 11:42:34.556
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 10/06/25 11:42:34.557
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 10/06/25 11:42:34.558
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 10/06/25 11:42:34.559
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 10/06/25 11:42:34.56
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 10/06/25 11:42:34.561
  I1006 11:42:34.562418 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6430" for this suite. @ 10/06/25 11:42:34.564
• [0.827 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 10/06/25 11:42:34.572
  I1006 11:42:34.572535 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 11:42:34.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:34.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:34.593
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1323 @ 10/06/25 11:42:34.596
  STEP: changing the ExternalName service to type=ClusterIP @ 10/06/25 11:42:34.601
  I1006 11:42:34.645505 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I1006 11:42:36.649566 24 resource.go:361] Creating new exec pod
  I1006 11:42:38.666983 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1323 exec execpodjx75g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1006 11:42:38.796439 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.97.10.213) 80 port [tcp/http] succeeded!\n"
  I1006 11:42:38.796568 24 builder.go:147] stdout: "externalname-service-75896d6f-v8h2s"
  I1006 11:42:38.796692 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1323 exec execpodjx75g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.10.213 80'
  I1006 11:42:38.909935 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.10.213 80\nConnection to 10.97.10.213 80 port [tcp/http] succeeded!\n"
  I1006 11:42:38.910041 24 builder.go:147] stdout: "externalname-service-75896d6f-9sktn"
  I1006 11:42:38.910156 24 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I1006 11:42:38.953418 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1323" for this suite. @ 10/06/25 11:42:38.959
• [4.396 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 10/06/25 11:42:38.968
  I1006 11:42:38.968694 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename runtimeclass @ 10/06/25 11:42:38.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:38.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:38.99
  I1006 11:42:39.035565 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8913" for this suite. @ 10/06/25 11:42:39.06
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 10/06/25 11:42:39.072
  I1006 11:42:39.072847 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replicaset @ 10/06/25 11:42:39.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:39.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:39.1
  I1006 11:42:39.103900 24 replica_set.go:192] Creating ReplicaSet my-hostname-basic-272f7887-2e51-4a15-a766-5b1d5954e332
  I1006 11:42:39.117462 24 resource.go:81] Pod name my-hostname-basic-272f7887-2e51-4a15-a766-5b1d5954e332: Found 0 pods out of 1
  I1006 11:42:44.186745 24 resource.go:81] Pod name my-hostname-basic-272f7887-2e51-4a15-a766-5b1d5954e332: Found 1 pods out of 1
  I1006 11:42:44.186912 24 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-272f7887-2e51-4a15-a766-5b1d5954e332" is running
  I1006 11:42:44.196019 24 replica_set.go:221] Pod "my-hostname-basic-272f7887-2e51-4a15-a766-5b1d5954e332-z5bcp" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-06 11:42:40 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-06 11:42:39 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-06 11:42:40 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-06 11:42:40 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-06 11:42:39 +0000 UTC Reason: Message:}])
  I1006 11:42:44.196064 24 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/06/25 11:42:44.196
  I1006 11:42:44.210285 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4864" for this suite. @ 10/06/25 11:42:44.213
• [5.148 seconds]
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 10/06/25 11:42:44.22
  I1006 11:42:44.220677 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 11:42:44.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:44.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:44.243
  STEP: Creating a pod to test downward api env vars @ 10/06/25 11:42:44.245
  STEP: Saw pod success @ 10/06/25 11:42:48.271
  I1006 11:42:48.274775 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downward-api-05023583-ce33-4896-b805-88edd350d79c container dapi-container: <nil>
  STEP: delete the pod @ 10/06/25 11:42:48.282
  I1006 11:42:48.304968 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5009" for this suite. @ 10/06/25 11:42:48.308
• [4.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 10/06/25 11:42:48.314
  I1006 11:42:48.314940 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 11:42:48.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:48.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:48.336
  STEP: Creating a suspended job @ 10/06/25 11:42:48.342
  STEP: Patching the Job @ 10/06/25 11:42:48.353
  STEP: Watching for Job to be patched @ 10/06/25 11:42:48.373
  I1006 11:42:48.375807 24 job.go:1369] Event ADDED observed for Job e2e-pbwq2 in namespace job-6351 with labels: map[e2e-job-label:e2e-pbwq2] and annotations: map[]
  I1006 11:42:48.375984 24 job.go:1369] Event MODIFIED observed for Job e2e-pbwq2 in namespace job-6351 with labels: map[e2e-job-label:e2e-pbwq2] and annotations: map[]
  I1006 11:42:48.376143 24 job.go:1372] Event MODIFIED found for Job e2e-pbwq2 in namespace job-6351 with labels: map[e2e-job-label:e2e-pbwq2 e2e-pbwq2:patched] and annotations: map[]
  STEP: Updating the job @ 10/06/25 11:42:48.376
  STEP: Watching for Job to be updated @ 10/06/25 11:42:48.392
  I1006 11:42:48.394908 24 job.go:1372] Event MODIFIED found for Job e2e-pbwq2 in namespace job-6351 with labels: map[e2e-job-label:e2e-pbwq2 e2e-pbwq2:patched] and annotations: map[updated:true]
  I1006 11:42:48.395036 24 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 10/06/25 11:42:48.395
  I1006 11:42:48.440074 24 job.go:1247] Job: e2e-pbwq2 as labels: map[e2e-job-label:e2e-pbwq2 e2e-pbwq2:patched]
  STEP: Waiting for job to complete @ 10/06/25 11:42:48.44
  STEP: Delete a job collection with a labelselector @ 10/06/25 11:42:56.482
  STEP: Watching for Job to be deleted @ 10/06/25 11:42:56.492
  I1006 11:42:56.496731 24 job.go:1369] Event MODIFIED observed for Job e2e-pbwq2 in namespace job-6351 with labels: map[e2e-job-label:e2e-pbwq2 e2e-pbwq2:patched] and annotations: map[updated:true]
  I1006 11:42:56.497260 24 job.go:1369] Event MODIFIED observed for Job e2e-pbwq2 in namespace job-6351 with labels: map[e2e-job-label:e2e-pbwq2 e2e-pbwq2:patched] and annotations: map[updated:true]
  I1006 11:42:56.497794 24 job.go:1369] Event MODIFIED observed for Job e2e-pbwq2 in namespace job-6351 with labels: map[e2e-job-label:e2e-pbwq2 e2e-pbwq2:patched] and annotations: map[updated:true]
  I1006 11:42:56.498083 24 job.go:1369] Event MODIFIED observed for Job e2e-pbwq2 in namespace job-6351 with labels: map[e2e-job-label:e2e-pbwq2 e2e-pbwq2:patched] and annotations: map[updated:true]
  I1006 11:42:56.498359 24 job.go:1369] Event MODIFIED observed for Job e2e-pbwq2 in namespace job-6351 with labels: map[e2e-job-label:e2e-pbwq2 e2e-pbwq2:patched] and annotations: map[updated:true]
  I1006 11:42:56.498441 24 job.go:1372] Event DELETED found for Job e2e-pbwq2 in namespace job-6351 with labels: map[e2e-job-label:e2e-pbwq2 e2e-pbwq2:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 10/06/25 11:42:56.498
  I1006 11:42:56.501098 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6351" for this suite. @ 10/06/25 11:42:56.52
• [8.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 10/06/25 11:42:56.539
  I1006 11:42:56.539910 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename gc @ 10/06/25 11:42:56.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:56.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:56.56
  STEP: create the deployment @ 10/06/25 11:42:56.565
  I1006 11:42:56.575083      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/06/25 11:42:56.575
  STEP: delete the deployment @ 10/06/25 11:42:57.08
  STEP: wait for all rs to be garbage collected @ 10/06/25 11:42:57.087
  STEP: expected 0 pods, got 2 pods @ 10/06/25 11:42:57.099
  STEP: Gathering metrics @ 10/06/25 11:42:57.598
  I1006 11:42:57.706703 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1006 11:42:57.707948 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4100" for this suite. @ 10/06/25 11:42:57.712
• [1.180 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 10/06/25 11:42:57.719
  I1006 11:42:57.719569 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename runtimeclass @ 10/06/25 11:42:57.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:57.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:57.736
  STEP: getting /apis @ 10/06/25 11:42:57.742
  STEP: getting /apis/node.k8s.io @ 10/06/25 11:42:57.747
  STEP: getting /apis/node.k8s.io/v1 @ 10/06/25 11:42:57.748
  STEP: creating @ 10/06/25 11:42:57.75
  STEP: watching @ 10/06/25 11:42:57.772
  I1006 11:42:57.772679 24 runtimeclass.go:278] starting watch
  STEP: getting @ 10/06/25 11:42:57.783
  STEP: listing @ 10/06/25 11:42:57.786
  STEP: patching @ 10/06/25 11:42:57.789
  STEP: updating @ 10/06/25 11:42:57.796
  I1006 11:42:57.804396 24 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 10/06/25 11:42:57.804
  STEP: deleting a collection @ 10/06/25 11:42:57.815
  I1006 11:42:57.829296 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7211" for this suite. @ 10/06/25 11:42:57.833
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 10/06/25 11:42:57.847
  I1006 11:42:57.847265 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename events @ 10/06/25 11:42:57.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:57.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:57.872
  STEP: creating a test event @ 10/06/25 11:42:57.878
  STEP: listing events in all namespaces @ 10/06/25 11:42:57.886
  STEP: listing events in test namespace @ 10/06/25 11:42:57.891
  STEP: listing events with field selection filtering on source @ 10/06/25 11:42:57.894
  STEP: listing events with field selection filtering on reportingController @ 10/06/25 11:42:57.896
  STEP: getting the test event @ 10/06/25 11:42:57.9
  STEP: patching the test event @ 10/06/25 11:42:57.903
  STEP: getting the test event @ 10/06/25 11:42:57.909
  STEP: updating the test event @ 10/06/25 11:42:57.912
  STEP: getting the test event @ 10/06/25 11:42:57.921
  STEP: deleting the test event @ 10/06/25 11:42:57.923
  STEP: listing events in all namespaces @ 10/06/25 11:42:57.93
  STEP: listing events in test namespace @ 10/06/25 11:42:57.934
  I1006 11:42:57.937022 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3125" for this suite. @ 10/06/25 11:42:57.94
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 10/06/25 11:42:57.954
  I1006 11:42:57.954928 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:42:57.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:42:57.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:42:57.972
  STEP: Creating configMap with name configmap-test-volume-map-a04db0b8-5956-4532-8c8c-1f7e9add15a7 @ 10/06/25 11:42:57.978
  STEP: Creating a pod to test consume configMaps @ 10/06/25 11:42:57.984
  STEP: Saw pod success @ 10/06/25 11:43:02.005
  I1006 11:43:02.009315 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-configmaps-8b929efb-eec6-4c4e-a90e-55ca469dddf9 container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 11:43:02.018
  I1006 11:43:02.037913 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4981" for this suite. @ 10/06/25 11:43:02.042
• [4.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 10/06/25 11:43:02.054
  I1006 11:43:02.054195 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename chunking @ 10/06/25 11:43:02.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:43:02.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:43:02.076
  STEP: creating a large number of resources @ 10/06/25 11:43:02.079
  STEP: retrieving the first page @ 10/06/25 11:43:19.763
  I1006 11:43:19.810092 24 chunking.go:163] Retrieved 40/40 results with rv 60919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 10/06/25 11:43:19.81
  I1006 11:43:39.816243 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:43:59.815668 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:44:19.817106 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:44:39.815843 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:44:59.816376 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:45:19.816562 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:45:39.816084 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:45:59.819313 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:46:19.819734 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:46:39.817006 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:46:59.816634 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:47:19.815907 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:47:39.816674 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:47:59.821680 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:48:19.815495 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjA5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1006 11:48:39.813793 24 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1006 11:48:39.813857 24 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 10/06/25 11:48:39.813
  STEP: retrieving all remaining pages @ 10/06/25 11:48:39.819
  I1006 11:48:39.822550 24 chunking.go:221] Retrieved 40/40 results with rv 61399 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjEzOTksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1006 11:48:39.826603 24 chunking.go:221] Retrieved 40/40 results with rv 61399 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjEzOTksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1006 11:48:39.830021 24 chunking.go:221] Retrieved 40/40 results with rv 61399 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjEzOTksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1006 11:48:39.833537 24 chunking.go:221] Retrieved 40/40 results with rv 61399 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjEzOTksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1006 11:48:39.836642 24 chunking.go:221] Retrieved 40/40 results with rv 61399 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjEzOTksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1006 11:48:39.839327 24 chunking.go:221] Retrieved 40/40 results with rv 61399 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjEzOTksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1006 11:48:39.841855 24 chunking.go:221] Retrieved 40/40 results with rv 61399 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjEzOTksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1006 11:48:39.844640 24 chunking.go:221] Retrieved 40/40 results with rv 61399 and continue 
  I1006 11:48:39.844825 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-390" for this suite. @ 10/06/25 11:48:39.847
• [337.801 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 10/06/25 11:48:39.856
  I1006 11:48:39.856786 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename subpath @ 10/06/25 11:48:39.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:48:39.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:48:39.881
  STEP: Setting up data @ 10/06/25 11:48:39.883
  STEP: Creating pod pod-subpath-test-secret-4d5d @ 10/06/25 11:48:39.897
  STEP: Creating a pod to test atomic-volume-subpath @ 10/06/25 11:48:39.897
  STEP: Saw pod success @ 10/06/25 11:49:03.969
  I1006 11:49:03.972520 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-subpath-test-secret-4d5d container test-container-subpath-secret-4d5d: <nil>
  STEP: delete the pod @ 10/06/25 11:49:03.989
  STEP: Deleting pod pod-subpath-test-secret-4d5d @ 10/06/25 11:49:04.015
  I1006 11:49:04.015254 24 delete.go:62] Deleting pod "pod-subpath-test-secret-4d5d" in namespace "subpath-8428"
  I1006 11:49:04.017802 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8428" for this suite. @ 10/06/25 11:49:04.021
• [24.172 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 10/06/25 11:49:04.029
  I1006 11:49:04.029159 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename statefulset @ 10/06/25 11:49:04.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:49:04.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:49:04.048
  STEP: Creating service test in namespace statefulset-4024 @ 10/06/25 11:49:04.058
  STEP: Creating statefulset ss in namespace statefulset-4024 @ 10/06/25 11:49:04.065
  I1006 11:49:04.083275 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I1006 11:49:14.087528 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 10/06/25 11:49:14.093
  STEP: updating a scale subresource @ 10/06/25 11:49:14.101
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/06/25 11:49:14.109
  STEP: Patch a scale subresource @ 10/06/25 11:49:14.111
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/06/25 11:49:14.123
  I1006 11:49:14.131172 24 statefulset.go:138] Deleting all statefulset in ns statefulset-4024
  I1006 11:49:14.134164 24 rest.go:153] Scaling statefulset ss to 0
  I1006 11:49:24.155526 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1006 11:49:24.158438 24 rest.go:91] Deleting statefulset ss
  I1006 11:49:24.173831 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4024" for this suite. @ 10/06/25 11:49:24.178
• [20.164 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 10/06/25 11:49:24.194
  I1006 11:49:24.194048 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 11:49:24.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:49:24.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:49:24.215
  STEP: Creating a ResourceQuota @ 10/06/25 11:49:24.22
  STEP: Getting a ResourceQuota @ 10/06/25 11:49:24.227
  STEP: Listing all ResourceQuotas with LabelSelector @ 10/06/25 11:49:24.229
  STEP: Patching the ResourceQuota @ 10/06/25 11:49:24.233
  STEP: Deleting a Collection of ResourceQuotas @ 10/06/25 11:49:24.246
  STEP: Verifying the deleted ResourceQuota @ 10/06/25 11:49:24.259
  I1006 11:49:24.262051 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-104" for this suite. @ 10/06/25 11:49:24.279
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 10/06/25 11:49:24.287
  I1006 11:49:24.287983 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-probe @ 10/06/25 11:49:24.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:49:24.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:49:24.313
  STEP: Creating pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944 @ 10/06/25 11:49:24.316
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/06/25 11:49:26.336
  I1006 11:49:26.339217 24 container_probe.go:1748] Initial restart count of pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c is 0
  I1006 11:49:26.343224 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:28.347355 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:30.351409 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:32.356423 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:34.361147 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:36.365778 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:38.371055 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:40.376772 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:42.381884 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:44.387240 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:46.392750 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:48.398853 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:50.403034 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:52.407526 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:54.412679 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:56.417280 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:49:58.421544 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:00.426140 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:02.430660 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:04.436549 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:06.442035 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:08.446111 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:10.451113 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:12.456592 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:14.461734 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:16.466762 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:18.483707 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:20.489389 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:22.496104 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:24.502402 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:26.506290 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:28.509628 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:30.515248 24 container_probe.go:1758] Get pod test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c in namespace container-probe-6944
  I1006 11:50:30.517515 24 container_probe.go:1762] Restart count of pod container-probe-6944/test-grpc-882f6ca4-f562-4362-a9df-e4cc4ffacb8c is now 1 (1m4.178057042s elapsed)
  STEP: deleting the pod @ 10/06/25 11:50:30.517
  I1006 11:50:30.547912 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6944" for this suite. @ 10/06/25 11:50:30.555
• [66.276 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 10/06/25 11:50:30.564
  I1006 11:50:30.564692 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replicaset @ 10/06/25 11:50:30.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:50:30.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:50:30.592
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 10/06/25 11:50:30.595
  I1006 11:50:30.606097 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I1006 11:50:35.674296 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/06/25 11:50:35.674
  STEP: getting scale subresource @ 10/06/25 11:50:35.674
  STEP: updating a scale subresource @ 10/06/25 11:50:35.676
  STEP: verifying the replicaset Spec.Replicas was modified @ 10/06/25 11:50:35.685
  STEP: Patch a scale subresource @ 10/06/25 11:50:35.687
  I1006 11:50:35.708686 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4498" for this suite. @ 10/06/25 11:50:35.717
• [5.166 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 10/06/25 11:50:35.73
  I1006 11:50:35.730704 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename gc @ 10/06/25 11:50:35.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:50:35.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:50:35.756
  STEP: create the rc @ 10/06/25 11:50:35.818
  I1006 11:50:35.825771      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 10/06/25 11:50:41.83
  STEP: wait for the rc to be deleted @ 10/06/25 11:50:41.84
  I1006 11:50:42.873317 24 garbage_collector.go:678] 80 pods remaining
  I1006 11:50:42.873427 24 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I1006 11:50:42.873440 24 garbage_collector.go:686] 
  I1006 11:50:43.851292 24 garbage_collector.go:678] 71 pods remaining
  I1006 11:50:43.851369 24 garbage_collector.go:685] 71 pods has nil DeletionTimestamp
  I1006 11:50:43.851383 24 garbage_collector.go:686] 
  I1006 11:50:44.853174 24 garbage_collector.go:678] 60 pods remaining
  I1006 11:50:44.853209 24 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I1006 11:50:44.853218 24 garbage_collector.go:686] 
  I1006 11:50:45.850564 24 garbage_collector.go:678] 40 pods remaining
  I1006 11:50:45.850604 24 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I1006 11:50:45.850614 24 garbage_collector.go:686] 
  I1006 11:50:46.856380 24 garbage_collector.go:678] 31 pods remaining
  I1006 11:50:46.856418 24 garbage_collector.go:685] 30 pods has nil DeletionTimestamp
  I1006 11:50:46.856425 24 garbage_collector.go:686] 
  I1006 11:50:47.848960 24 garbage_collector.go:678] 20 pods remaining
  I1006 11:50:47.849001 24 garbage_collector.go:685] 20 pods has nil DeletionTimestamp
  I1006 11:50:47.849010 24 garbage_collector.go:686] 
  STEP: Gathering metrics @ 10/06/25 11:50:48.849
  I1006 11:50:48.952126 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1006 11:50:48.953290 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5408" for this suite. @ 10/06/25 11:50:48.957
• [13.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 10/06/25 11:50:48.965
  I1006 11:50:48.965931 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 11:50:48.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:50:48.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:50:48.989
  STEP: Creating configMap with name configmap-test-volume-4b1ee222-0807-4fe8-8f16-407945c46d1a @ 10/06/25 11:50:48.993
  STEP: Creating a pod to test consume configMaps @ 10/06/25 11:50:49
  STEP: Saw pod success @ 10/06/25 11:50:53.03
  I1006 11:50:53.033469 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-configmaps-93383e5e-4e1d-4679-81dc-e5fd0b07c92a container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 11:50:53.05
  I1006 11:50:53.072628 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1076" for this suite. @ 10/06/25 11:50:53.076
• [4.118 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 10/06/25 11:50:53.083
  I1006 11:50:53.083860 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 11:50:53.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:50:53.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:50:53.107
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 11:50:53.111
  STEP: Saw pod success @ 10/06/25 11:50:57.137
  I1006 11:50:57.139653 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-e0611a1a-bd46-489a-9040-f2e5a59e1c6f container client-container: <nil>
  STEP: delete the pod @ 10/06/25 11:50:57.146
  I1006 11:50:57.169934 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8618" for this suite. @ 10/06/25 11:50:57.174
• [4.105 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 10/06/25 11:50:57.188
  I1006 11:50:57.188799 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename statefulset @ 10/06/25 11:50:57.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:50:57.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:50:57.215
  STEP: Creating service test in namespace statefulset-3396 @ 10/06/25 11:50:57.218
  STEP: Looking for a node to schedule stateful set and pod @ 10/06/25 11:50:57.224
  STEP: Creating pod with conflicting port in namespace statefulset-3396 @ 10/06/25 11:50:57.274
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3396 @ 10/06/25 11:50:57.283
  STEP: Creating statefulset with conflicting port in namespace statefulset-3396 @ 10/06/25 11:50:59.289
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3396 @ 10/06/25 11:50:59.298
  I1006 11:50:59.318333 24 statefulset.go:860] Observed stateful pod in namespace: statefulset-3396, name: ss-0, uid: e31cf1b8-4a57-4cfe-8c57-8ce6cf8d8922, status phase: Pending. Waiting for statefulset controller to delete.
  I1006 11:50:59.332586 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-3396, name: ss-0, uid: e31cf1b8-4a57-4cfe-8c57-8ce6cf8d8922, status phase: Failed. Waiting for statefulset controller to delete.
  I1006 11:50:59.343192 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-3396, name: ss-0, uid: e31cf1b8-4a57-4cfe-8c57-8ce6cf8d8922, status phase: Failed. Waiting for statefulset controller to delete.
  I1006 11:50:59.348335 24 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-3396
  STEP: Removing pod with conflicting port in namespace statefulset-3396 @ 10/06/25 11:50:59.348
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3396 and will be in running state @ 10/06/25 11:50:59.376
  I1006 11:51:01.393697 24 statefulset.go:138] Deleting all statefulset in ns statefulset-3396
  I1006 11:51:01.396992 24 rest.go:153] Scaling statefulset ss to 0
  I1006 11:51:11.413711 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1006 11:51:11.416660 24 rest.go:91] Deleting statefulset ss
  I1006 11:51:11.429601 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3396" for this suite. @ 10/06/25 11:51:11.437
• [14.261 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 10/06/25 11:51:11.45
  I1006 11:51:11.450203 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 11:51:11.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:51:11.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:51:11.472
  STEP: Setting up server cert @ 10/06/25 11:51:11.501
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 11:51:12.166
  STEP: Deploying the webhook pod @ 10/06/25 11:51:12.175
  STEP: Wait for the deployment to be ready @ 10/06/25 11:51:12.195
  I1006 11:51:12.209265 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 10/06/25 11:51:14.226
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 11:51:14.261
  I1006 11:51:15.261686 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/06/25 11:51:15.411
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/06/25 11:51:15.448
  STEP: Deleting the collection of validation webhooks @ 10/06/25 11:51:15.478
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/06/25 11:51:15.549
  I1006 11:51:15.651900 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3475" for this suite. @ 10/06/25 11:51:15.656
  STEP: Destroying namespace "webhook-markers-5823" for this suite. @ 10/06/25 11:51:15.676
• [4.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 10/06/25 11:51:15.687
  I1006 11:51:15.687982 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pods @ 10/06/25 11:51:15.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:51:15.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:51:15.713
  STEP: Create a pod @ 10/06/25 11:51:15.717
  STEP: patching /status @ 10/06/25 11:51:17.743
  I1006 11:51:17.760384 24 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1006 11:51:17.760639 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4071" for this suite. @ 10/06/25 11:51:17.765
• [2.089 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 10/06/25 11:51:17.777
  I1006 11:51:17.777445 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sched-preemption @ 10/06/25 11:51:17.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:51:17.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:51:17.81
  I1006 11:51:17.838315 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I1006 11:52:17.844372 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/06/25 11:52:17.847
  I1006 11:52:17.847397 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/06/25 11:52:17.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:52:17.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:52:17.867
  STEP: Finding an available node @ 10/06/25 11:52:17.87
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/06/25 11:52:17.87
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/06/25 11:52:19.891
  I1006 11:52:19.907501 24 preemption.go:717] found a healthy node: cncf-1-33-script-2
  STEP: Adding a custom resource @ 10/06/25 11:52:19.911
  I1006 11:52:25.991722 24 preemption.go:836] pods created so far: [1 1 1]
  I1006 11:52:25.991769 24 preemption.go:837] length of pods created so far: 3
  I1006 11:52:28.006495 24 preemption.go:854] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 10/06/25 11:52:35.007
  STEP: Removing a custom resource @ 10/06/25 11:52:35.072
  STEP: Removing a custom resource @ 10/06/25 11:52:35.08
  I1006 11:52:35.087846 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4943" for this suite. @ 10/06/25 11:52:35.09
  I1006 11:52:35.096791 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7634" for this suite. @ 10/06/25 11:52:35.191
• [77.422 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 10/06/25 11:52:35.199
  I1006 11:52:35.199871 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pods @ 10/06/25 11:52:35.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:52:35.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:52:35.221
  STEP: creating the pod @ 10/06/25 11:52:35.223
  STEP: submitting the pod to kubernetes @ 10/06/25 11:52:35.223
  I1006 11:52:35.232914      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: verifying the pod is in kubernetes @ 10/06/25 11:52:37.242
  STEP: updating the pod @ 10/06/25 11:52:37.244
  I1006 11:52:37.760288 24 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-01c484d5-3bdd-496f-819f-edccc09069d7"
  I1006 11:52:41.771085 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9966" for this suite. @ 10/06/25 11:52:41.774
• [6.581 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 10/06/25 11:52:41.781
  I1006 11:52:41.781941 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:52:41.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:52:41.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:52:41.798
  STEP: Creating configMap with name projected-configmap-test-volume-35ec07d3-33ff-429d-b413-cf89bcc4e97e @ 10/06/25 11:52:41.801
  STEP: Creating a pod to test consume configMaps @ 10/06/25 11:52:41.806
  STEP: Saw pod success @ 10/06/25 11:52:45.83
  I1006 11:52:45.832623 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-projected-configmaps-1648a5cc-e5b8-4d63-aa0e-e6ffa868f793 container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 11:52:45.846
  I1006 11:52:45.867175 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5933" for this suite. @ 10/06/25 11:52:45.87
• [4.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 10/06/25 11:52:45.878
  I1006 11:52:45.878699 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename cronjob @ 10/06/25 11:52:45.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:52:45.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:52:45.898
  STEP: Creating a suspended cronjob @ 10/06/25 11:52:45.901
  STEP: Ensuring no jobs are scheduled @ 10/06/25 11:52:45.908
  STEP: Ensuring no job exists by listing jobs explicitly @ 10/06/25 11:57:45.909
  STEP: Removing cronjob @ 10/06/25 11:57:45.914
  I1006 11:57:45.921666 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3043" for this suite. @ 10/06/25 11:57:45.925
• [300.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 10/06/25 11:57:45.938
  I1006 11:57:45.938958 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 11:57:45.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:57:45.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:57:45.968
  STEP: Creating configMap with name configmap-projected-all-test-volume-c358e576-e4e0-4e48-b6b9-3e4fb5170fa2 @ 10/06/25 11:57:45.971
  STEP: Creating secret with name secret-projected-all-test-volume-dd7bb6d7-7b10-46d7-9704-df06a67fdf2e @ 10/06/25 11:57:45.979
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 10/06/25 11:57:45.99
  I1006 11:57:46.000620      24 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  STEP: Saw pod success @ 10/06/25 11:57:50.019
  I1006 11:57:50.022383 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod projected-volume-ceb5463c-cbb6-41a5-84a3-c22fd82565ae container projected-all-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 11:57:50.038
  I1006 11:57:50.058043 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-550" for this suite. @ 10/06/25 11:57:50.061
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 10/06/25 11:57:50.072
  I1006 11:57:50.072087 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-probe @ 10/06/25 11:57:50.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 11:57:50.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 11:57:50.094
  STEP: Creating pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475 @ 10/06/25 11:57:50.097
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/06/25 11:57:52.132
  I1006 11:57:52.134304 24 container_probe.go:1748] Initial restart count of pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a is 0
  I1006 11:57:52.136240 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:57:54.140139 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:57:56.145163 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:57:58.150235 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:00.155039 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:02.159195 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:04.162699 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:06.167434 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:08.171691 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:10.175896 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:12.180421 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:14.185179 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:16.190904 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:18.194720 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:20.201669 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:22.206639 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:24.212129 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:26.217266 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:28.220764 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:30.226119 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:32.231342 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:34.235085 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:36.241129 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:38.245319 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:40.250380 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:42.255590 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:44.260792 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:46.265426 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:48.269644 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:50.273581 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:52.277631 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:54.280967 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:56.286133 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:58:58.290694 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:00.295665 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:02.299144 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:04.302021 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:06.313347 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:08.316436 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:10.321042 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:12.326336 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:14.330460 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:16.338643 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:18.343499 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:20.348379 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:22.353460 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:24.358749 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:26.362961 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:28.367737 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:30.372746 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:32.376704 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:34.381087 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:36.386959 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:38.393052 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:40.396810 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:42.400579 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:44.404857 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:46.410245 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:48.414461 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:50.418594 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:52.423099 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:54.427056 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:56.432338 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 11:59:58.436748 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:00.442287 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:02.448764 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:04.453098 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:06.458274 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:08.462765 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:10.467013 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:12.472801 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:14.477184 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:16.483641 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:18.488977 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:20.495833 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:22.501149 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:24.505560 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:26.510993 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:28.515790 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:30.520569 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:32.526632 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:34.532652 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:36.539737 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:38.545178 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:40.551659 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:42.557081 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:44.560714 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:46.564241 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:48.568020 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:50.582888 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:52.587442 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:54.591249 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:56.594494 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:00:58.598774 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:00.602807 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:02.610764 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:04.615078 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:06.619547 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:08.622941 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:10.627858 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:12.631317 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:14.634705 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:16.640199 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:18.644736 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:20.650291 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:22.654374 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:24.659654 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:26.663805 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:28.668312 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:30.673147 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:32.677813 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:34.682743 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:36.688110 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:38.692446 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:40.697089 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:42.700637 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:44.704130 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:46.707503 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:48.711236 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  I1006 12:01:50.714690 24 container_probe.go:1758] Get pod test-webserver-46bdfd48-bfa0-40e3-89a0-b687761f341a in namespace container-probe-8475
  STEP: deleting the pod @ 10/06/25 12:01:52.715
  I1006 12:01:52.735171 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8475" for this suite. @ 10/06/25 12:01:52.739
• [242.675 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 10/06/25 12:01:52.747
  I1006 12:01:52.747210 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:01:52.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:01:52.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:01:52.771
  STEP: Creating configMap with name projected-configmap-test-volume-map-7bff3469-b22f-4007-86fa-116d3fb3a2eb @ 10/06/25 12:01:52.774
  STEP: Creating a pod to test consume configMaps @ 10/06/25 12:01:52.779
  STEP: Saw pod success @ 10/06/25 12:01:56.809
  I1006 12:01:56.812262 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-projected-configmaps-ed3b3c3b-51f6-40fd-bce3-da62359cd54c container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 12:01:56.824
  I1006 12:01:56.854480 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1351" for this suite. @ 10/06/25 12:01:56.858
• [4.123 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 10/06/25 12:01:56.87
  I1006 12:01:56.870730 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename containers @ 10/06/25 12:01:56.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:01:56.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:01:56.887
  STEP: Creating a pod to test override command @ 10/06/25 12:01:56.893
  STEP: Saw pod success @ 10/06/25 12:01:58.914
  I1006 12:01:58.916663 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod client-containers-e8b0b72e-2425-4117-810c-8f02df3be370 container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 12:01:58.921
  I1006 12:01:58.945642 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2860" for this suite. @ 10/06/25 12:01:58.955
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 10/06/25 12:01:58.964
  I1006 12:01:58.964837 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 12:01:58.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:01:58.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:01:58.988
  STEP: Creating a ResourceQuota @ 10/06/25 12:01:58.991
  STEP: Getting a ResourceQuota @ 10/06/25 12:01:58.998
  STEP: Updating a ResourceQuota @ 10/06/25 12:01:59.005
  STEP: Verifying a ResourceQuota was modified @ 10/06/25 12:01:59.011
  STEP: Deleting a ResourceQuota @ 10/06/25 12:01:59.014
  STEP: Verifying the deleted ResourceQuota @ 10/06/25 12:01:59.035
  I1006 12:01:59.038818 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7190" for this suite. @ 10/06/25 12:01:59.063
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 10/06/25 12:01:59.075
  I1006 12:01:59.075207 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:01:59.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:01:59.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:01:59.095
  STEP: Setting up server cert @ 10/06/25 12:01:59.122
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:02:00.128
  STEP: Deploying the webhook pod @ 10/06/25 12:02:00.139
  STEP: Wait for the deployment to be ready @ 10/06/25 12:02:00.16
  I1006 12:02:00.177060 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 12:02:02.19
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:02:02.214
  I1006 12:02:03.214830 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/06/25 12:02:03.218
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/06/25 12:02:03.248
  STEP: Creating a dummy validating-webhook-configuration object @ 10/06/25 12:02:03.27
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 10/06/25 12:02:03.285
  STEP: Creating a dummy mutating-webhook-configuration object @ 10/06/25 12:02:03.293
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 10/06/25 12:02:03.314
  I1006 12:02:03.402102 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5797" for this suite. @ 10/06/25 12:02:03.406
  STEP: Destroying namespace "webhook-markers-8305" for this suite. @ 10/06/25 12:02:03.419
• [4.360 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 10/06/25 12:02:03.434
  I1006 12:02:03.434934 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:02:03.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:02:03.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:02:03.452
  STEP: Creating configMap with name cm-test-opt-del-98935ff6-fba0-4ab7-9b96-9dde32e45381 @ 10/06/25 12:02:03.506
  STEP: Creating configMap with name cm-test-opt-upd-364ca26b-523f-4cc7-ad5e-a27ef0c6c8eb @ 10/06/25 12:02:03.513
  STEP: Creating the pod @ 10/06/25 12:02:03.527
  STEP: Deleting configmap cm-test-opt-del-98935ff6-fba0-4ab7-9b96-9dde32e45381 @ 10/06/25 12:02:05.564
  STEP: Updating configmap cm-test-opt-upd-364ca26b-523f-4cc7-ad5e-a27ef0c6c8eb @ 10/06/25 12:02:05.571
  STEP: Creating configMap with name cm-test-opt-create-fdeff9cb-74c9-4feb-b2d1-8754f072454c @ 10/06/25 12:02:05.578
  STEP: waiting to observe update in volume @ 10/06/25 12:02:05.589
  I1006 12:03:11.863142 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7515" for this suite. @ 10/06/25 12:03:11.866
• [68.440 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 10/06/25 12:03:11.874
  I1006 12:03:11.874904 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 12:03:11.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:11.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:11.893
  STEP: Creating an indexed job with successPolicy @ 10/06/25 12:03:11.897
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 10/06/25 12:03:11.905
  STEP: Ensure that the job reaches completions @ 10/06/25 12:03:17.921
  STEP: Verifying that the job status to ensure correct final state @ 10/06/25 12:03:17.927
  I1006 12:03:17.931009 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6692" for this suite. @ 10/06/25 12:03:17.936
• [6.069 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 10/06/25 12:03:17.943
  I1006 12:03:17.943969 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename gc @ 10/06/25 12:03:17.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:17.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:17.965
  STEP: create the deployment @ 10/06/25 12:03:17.968
  I1006 12:03:17.980754      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/06/25 12:03:17.981
  STEP: delete the deployment @ 10/06/25 12:03:18.487
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 10/06/25 12:03:18.495
  STEP: Gathering metrics @ 10/06/25 12:03:19.007
  I1006 12:03:19.103222 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1006 12:03:19.104687 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7366" for this suite. @ 10/06/25 12:03:19.108
• [1.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 10/06/25 12:03:19.117
  I1006 12:03:19.117919 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename deployment @ 10/06/25 12:03:19.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:19.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:19.137
  STEP: creating a Deployment @ 10/06/25 12:03:19.143
  I1006 12:03:19.143899 24 deployment.go:506] Creating simple deployment test-deployment-gq5l7
  I1006 12:03:19.161806 24 deployment.go:223] deployment "test-deployment-gq5l7" doesn't have the required revision set
  STEP: Getting /status @ 10/06/25 12:03:21.174
  I1006 12:03:21.177173 24 deployment.go:531] Deployment test-deployment-gq5l7 has Conditions: [{Available True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gq5l7-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 10/06/25 12:03:21.177
  I1006 12:03:21.191854 24 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 3, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 3, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 3, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 3, 19, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-gq5l7-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 10/06/25 12:03:21.191
  I1006 12:03:21.194245 24 deployment.go:578] Observed &Deployment event: ADDED
  I1006 12:03:21.194672 24 deployment.go:574] Observed Deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gq5l7-6fb4c74686"}
  I1006 12:03:21.195673 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I1006 12:03:21.195818 24 deployment.go:574] Observed Deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gq5l7-6fb4c74686"}
  I1006 12:03:21.196308 24 deployment.go:574] Observed Deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1006 12:03:21.196965 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I1006 12:03:21.197395 24 deployment.go:574] Observed Deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1006 12:03:21.197907 24 deployment.go:574] Observed Deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-gq5l7-6fb4c74686" is progressing.}
  I1006 12:03:21.198398 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I1006 12:03:21.198520 24 deployment.go:574] Observed Deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1006 12:03:21.198770 24 deployment.go:574] Observed Deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gq5l7-6fb4c74686" has successfully progressed.}
  I1006 12:03:21.199212 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I1006 12:03:21.199340 24 deployment.go:574] Observed Deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1006 12:03:21.199474 24 deployment.go:574] Observed Deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gq5l7-6fb4c74686" has successfully progressed.}
  I1006 12:03:21.199601 24 deployment.go:571] Found Deployment test-deployment-gq5l7 in namespace deployment-9571 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1006 12:03:21.199711 24 deployment.go:582] Deployment test-deployment-gq5l7 has an updated status
  STEP: patching the Statefulset Status @ 10/06/25 12:03:21.199
  I1006 12:03:21.200041 24 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1006 12:03:21.214142 24 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 10/06/25 12:03:21.214
  I1006 12:03:21.216512 24 deployment.go:615] Observed &Deployment event: ADDED
  I1006 12:03:21.216687 24 deployment.go:611] Observed deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gq5l7-6fb4c74686"}
  I1006 12:03:21.216906 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I1006 12:03:21.217026 24 deployment.go:611] Observed deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gq5l7-6fb4c74686"}
  I1006 12:03:21.217281 24 deployment.go:611] Observed deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1006 12:03:21.217835 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I1006 12:03:21.217954 24 deployment.go:611] Observed deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1006 12:03:21.218276 24 deployment.go:611] Observed deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-gq5l7-6fb4c74686" is progressing.}
  I1006 12:03:21.218592 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I1006 12:03:21.218756 24 deployment.go:611] Observed deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1006 12:03:21.218898 24 deployment.go:611] Observed deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gq5l7-6fb4c74686" has successfully progressed.}
  I1006 12:03:21.219303 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I1006 12:03:21.219541 24 deployment.go:611] Observed deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1006 12:03:21.219631 24 deployment.go:611] Observed deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-06 12:03:19 +0000 UTC 2025-10-06 12:03:19 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gq5l7-6fb4c74686" has successfully progressed.}
  I1006 12:03:21.219754 24 deployment.go:611] Observed deployment test-deployment-gq5l7 in namespace deployment-9571 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1006 12:03:21.220164 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I1006 12:03:21.220392 24 deployment.go:608] Found deployment test-deployment-gq5l7 in namespace deployment-9571 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1006 12:03:21.220584 24 deployment.go:619] Deployment test-deployment-gq5l7 has a patched status
  I1006 12:03:21.224543 24 deployment.go:632] Deployment "test-deployment-gq5l7":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-gq5l7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9571",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "522f5b2c-700b-4ec6-8779-bd77d09c9d40",
      ResourceVersion: (string) (len=5) "65872",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895348999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895348999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-gq5l7-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1006 12:03:21.272592 24 deployment.go:40] New ReplicaSet "test-deployment-gq5l7-6fb4c74686" of Deployment "test-deployment-gq5l7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-gq5l7-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9571",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ed93b33-d355-425f-81df-3ff720bd68d3",
      ResourceVersion: (string) (len=5) "65866",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895348999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-gq5l7",
          UID: (types.UID) (len=36) "522f5b2c-700b-4ec6-8779-bd77d09c9d40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895348999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 32 32  |k:{\"uid\":\"522|
              00000120  66 35 62 32 63 2d 37 30  30 62 2d 34 65 63 36 2d  |f5b2c-700b-4ec6-|
              00000130  38 37 37 39 2d 62 64 37  37 64 30 39 63 39 64 34  |8779-bd77d09c9d4|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895348999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 12:03:21.288087 24 deployment.go:68] Pod "test-deployment-gq5l7-6fb4c74686-rwjrg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-gq5l7-6fb4c74686-rwjrg",
      GenerateName: (string) (len=33) "test-deployment-gq5l7-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-9571",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c8238a7-767f-4d7f-97f8-86d3e83d0445",
      ResourceVersion: (string) (len=5) "65865",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895348999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-gq5l7-6fb4c74686",
          UID: (types.UID) (len=36) "6ed93b33-d355-425f-81df-3ff720bd68d3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895348999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 36 65 64 39 33 62 33  33 2d 64 33 35 35 2d 34  |"6ed93b33-d355-4|
              000000a0  32 35 66 2d 38 31 64 66  2d 33 66 66 37 32 30 62  |25f-81df-3ff720b|
              000000b0  64 36 38 64 33 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |d68d3\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895348999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  31 37 5c 22 7d 22 3a 7b  |.244.1.217\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r7rkc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r7rkc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895348999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895348999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895348999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895348999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895348999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.217",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.217"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895348999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895348999,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6d3d4960fd0b57726e786aa704c8a05cf5e955f7d1f4954f7f7fa145c23d3213",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r7rkc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:03:21.290862 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9571" for this suite. @ 10/06/25 12:03:21.296
• [2.187 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 10/06/25 12:03:21.305
  I1006 12:03:21.305351 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:03:21.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:21.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:21.324
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 12:03:21.327
  STEP: Saw pod success @ 10/06/25 12:03:25.359
  I1006 12:03:25.362134 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod downwardapi-volume-05e392e7-c889-4cc8-bb75-344a731e3e64 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 12:03:25.382
  I1006 12:03:25.405131 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-917" for this suite. @ 10/06/25 12:03:25.408
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 10/06/25 12:03:25.421
  I1006 12:03:25.421107 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename podtemplate @ 10/06/25 12:03:25.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:25.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:25.44
  STEP: Create a pod template @ 10/06/25 12:03:25.444
  STEP: Replace a pod template @ 10/06/25 12:03:25.456
  I1006 12:03:25.475437 24 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1006 12:03:25.475641 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2960" for this suite. @ 10/06/25 12:03:25.51
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 10/06/25 12:03:25.519
  I1006 12:03:25.519519 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:03:25.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:25.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:25.538
  STEP: Creating projection with secret that has name projected-secret-test-23d22e7a-5a44-4ba3-a14f-313a0c63d545 @ 10/06/25 12:03:25.541
  STEP: Creating a pod to test consume secrets @ 10/06/25 12:03:25.548
  STEP: Saw pod success @ 10/06/25 12:03:29.574
  I1006 12:03:29.577245 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-projected-secrets-9d63eb1a-5f9d-421b-ab55-2a60affeb2ed container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 12:03:29.582
  I1006 12:03:29.603151 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9236" for this suite. @ 10/06/25 12:03:29.606
• [4.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 10/06/25 12:03:29.613
  I1006 12:03:29.613960 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/06/25 12:03:29.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:29.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:29.636
  STEP: getting /apis @ 10/06/25 12:03:29.647
  STEP: getting /apis/admissionregistration.k8s.io @ 10/06/25 12:03:29.652
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/06/25 12:03:29.653
  STEP: creating @ 10/06/25 12:03:29.655
  STEP: getting @ 10/06/25 12:03:29.684
  STEP: listing @ 10/06/25 12:03:29.691
  STEP: watching @ 10/06/25 12:03:29.694
  I1006 12:03:29.694617 24 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 10/06/25 12:03:29.696
  STEP: updating @ 10/06/25 12:03:29.714
  I1006 12:03:29.724239 24 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I1006 12:03:29.724819 24 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I1006 12:03:29.725292 24 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I1006 12:03:29.725637 24 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 10/06/25 12:03:29.726
  STEP: patching /status @ 10/06/25 12:03:29.73
  STEP: updating /status @ 10/06/25 12:03:29.748
  STEP: deleting @ 10/06/25 12:03:29.784
  STEP: deleting a collection @ 10/06/25 12:03:29.797
  I1006 12:03:29.814700 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9757" for this suite. @ 10/06/25 12:03:29.818
• [0.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 10/06/25 12:03:29.827
  I1006 12:03:29.828083 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/06/25 12:03:29.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:29.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:29.863
  STEP: creating a policy with variables @ 10/06/25 12:03:29.877
  STEP: waiting until the marker is denied @ 10/06/25 12:03:29.911
  STEP: testing a replicated Deployment to be allowed @ 10/06/25 12:03:30.02
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/06/25 12:03:30.041
  I1006 12:03:30.124862 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2428" for this suite. @ 10/06/25 12:03:30.135
• [0.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 10/06/25 12:03:30.16
  I1006 12:03:30.160222 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 12:03:30.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:30.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:30.192
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/06/25 12:03:30.195
  STEP: Saw pod success @ 10/06/25 12:03:34.227
  I1006 12:03:34.230842 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-0dc09885-ee48-47d8-b389-2566c41dd076 container test-container: <nil>
  STEP: delete the pod @ 10/06/25 12:03:34.236
  I1006 12:03:34.258433 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1087" for this suite. @ 10/06/25 12:03:34.262
• [4.110 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 10/06/25 12:03:34.27
  I1006 12:03:34.270445 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:03:34.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:34.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:34.295
  STEP: Creating secret with name projected-secret-test-e098e0bf-ee00-4df1-8609-0281ae839828 @ 10/06/25 12:03:34.298
  STEP: Creating a pod to test consume secrets @ 10/06/25 12:03:34.305
  STEP: Saw pod success @ 10/06/25 12:03:38.335
  I1006 12:03:38.339299 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-projected-secrets-ddea5492-93dd-498e-a94a-87a17ff47927 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 12:03:38.346
  I1006 12:03:38.362513 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7994" for this suite. @ 10/06/25 12:03:38.371
• [4.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 10/06/25 12:03:38.379
  I1006 12:03:38.379075 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 12:03:38.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:38.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:38.399
  STEP: Looking for a node to schedule job pod @ 10/06/25 12:03:38.402
  STEP: Creating a job @ 10/06/25 12:03:38.481
  STEP: Ensuring job fails @ 10/06/25 12:03:38.492
  I1006 12:03:42.506835 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9193" for this suite. @ 10/06/25 12:03:42.51
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 10/06/25 12:03:42.524
  I1006 12:03:42.524339 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-probe @ 10/06/25 12:03:42.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:03:42.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:03:42.54
  I1006 12:04:42.562404 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4418" for this suite. @ 10/06/25 12:04:42.567
• [60.056 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 10/06/25 12:04:42.58
  I1006 12:04:42.580383 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:04:42.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:04:42.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:04:42.606
  STEP: Setting up server cert @ 10/06/25 12:04:42.636
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:04:44.24
  STEP: Deploying the webhook pod @ 10/06/25 12:04:44.25
  STEP: Wait for the deployment to be ready @ 10/06/25 12:04:44.273
  I1006 12:04:44.280131 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 12:04:46.288
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:04:46.327
  I1006 12:04:47.327780 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/06/25 12:04:47.331
  STEP: create the configmap with a random name @ 10/06/25 12:04:47.359
  STEP: verify the configmap is mutated @ 10/06/25 12:04:47.374
  STEP: create the configmap with 'skip-me' name @ 10/06/25 12:04:47.374
  I1006 12:04:47.446613 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6680" for this suite. @ 10/06/25 12:04:47.459
  STEP: Destroying namespace "webhook-markers-14" for this suite. @ 10/06/25 12:04:47.468
• [4.896 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 10/06/25 12:04:47.477
  I1006 12:04:47.477488 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-runtime @ 10/06/25 12:04:47.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:04:47.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:04:47.5
  STEP: create the container @ 10/06/25 12:04:47.502
  I1006 12:04:47.510264      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 10/06/25 12:04:47.51
  STEP: get the container status @ 10/06/25 12:04:50.527
  STEP: the container should be terminated @ 10/06/25 12:04:50.533
  STEP: the termination message should be set @ 10/06/25 12:04:50.533
  I1006 12:04:50.534027 24 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 10/06/25 12:04:50.534
  I1006 12:04:50.555068 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-575" for this suite. @ 10/06/25 12:04:50.56
• [3.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 10/06/25 12:04:50.57
  I1006 12:04:50.570397 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename disruption @ 10/06/25 12:04:50.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:04:50.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:04:50.585
  STEP: Creating a pdb that targets all three pods in a test replica set @ 10/06/25 12:04:50.588
  STEP: Waiting for the pdb to be processed @ 10/06/25 12:04:50.594
  STEP: First trying to evict a pod which shouldn't be evictable @ 10/06/25 12:04:52.604
  STEP: Waiting for all pods to be running @ 10/06/25 12:04:52.604
  I1006 12:04:52.607098 24 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 10/06/25 12:04:54.609
  STEP: Updating the pdb to allow a pod to be evicted @ 10/06/25 12:04:54.618
  STEP: Waiting for the pdb to be processed @ 10/06/25 12:04:54.631
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/06/25 12:04:56.636
  STEP: Waiting for all pods to be running @ 10/06/25 12:04:56.636
  STEP: Waiting for the pdb to observed all healthy pods @ 10/06/25 12:04:56.64
  STEP: Patching the pdb to disallow a pod to be evicted @ 10/06/25 12:04:56.674
  STEP: Waiting for the pdb to be processed @ 10/06/25 12:04:56.711
  STEP: Waiting for all pods to be running @ 10/06/25 12:04:58.716
  STEP: locating a running pod @ 10/06/25 12:04:58.719
  STEP: Deleting the pdb to allow a pod to be evicted @ 10/06/25 12:04:58.725
  STEP: Waiting for the pdb to be deleted @ 10/06/25 12:04:58.731
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/06/25 12:04:58.732
  STEP: Waiting for all pods to be running @ 10/06/25 12:04:58.732
  I1006 12:04:58.845245 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9576" for this suite. @ 10/06/25 12:04:58.854
• [8.305 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 10/06/25 12:04:58.875
  I1006 12:04:58.875989 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:04:58.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:04:58.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:04:58.905
  STEP: Setting up server cert @ 10/06/25 12:04:58.938
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:04:59.477
  STEP: Deploying the webhook pod @ 10/06/25 12:04:59.484
  STEP: Wait for the deployment to be ready @ 10/06/25 12:04:59.505
  I1006 12:04:59.513044 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 12:05:01.525
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:05:01.551
  I1006 12:05:02.551454 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 10/06/25 12:05:02.555
  STEP: create a namespace for the webhook @ 10/06/25 12:05:02.574
  STEP: create a configmap should be unconditionally rejected by the webhook @ 10/06/25 12:05:02.586
  I1006 12:05:02.668552 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7552" for this suite. @ 10/06/25 12:05:02.676
  STEP: Destroying namespace "webhook-markers-6692" for this suite. @ 10/06/25 12:05:02.687
  STEP: Destroying namespace "fail-closed-namespace-5226" for this suite. @ 10/06/25 12:05:02.7
• [3.831 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 10/06/25 12:05:02.708
  I1006 12:05:02.708101 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 12:05:02.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:05:02.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:05:02.734
  STEP: Creating secret with name s-test-opt-del-139e73ed-6f4f-40ab-9558-2ee54e191c9e @ 10/06/25 12:05:02.776
  STEP: Creating secret with name s-test-opt-upd-bbc27a1a-e0ec-4c52-95fb-8f3bb15ec893 @ 10/06/25 12:05:02.783
  STEP: Creating the pod @ 10/06/25 12:05:02.789
  STEP: Deleting secret s-test-opt-del-139e73ed-6f4f-40ab-9558-2ee54e191c9e @ 10/06/25 12:05:04.825
  STEP: Updating secret s-test-opt-upd-bbc27a1a-e0ec-4c52-95fb-8f3bb15ec893 @ 10/06/25 12:05:04.832
  STEP: Creating secret with name s-test-opt-create-3cdacbdb-0e62-41d8-a17b-3320f947319f @ 10/06/25 12:05:04.843
  STEP: waiting to observe update in volume @ 10/06/25 12:05:04.85
  I1006 12:06:09.108371 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5070" for this suite. @ 10/06/25 12:06:09.112
• [66.412 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 10/06/25 12:06:09.119
  I1006 12:06:09.120017 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-webhook @ 10/06/25 12:06:09.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:09.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:09.137
  STEP: Setting up server cert @ 10/06/25 12:06:09.14
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/06/25 12:06:10.626
  STEP: Deploying the custom resource conversion webhook pod @ 10/06/25 12:06:10.635
  STEP: Wait for the deployment to be ready @ 10/06/25 12:06:10.659
  I1006 12:06:10.670237 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 12:06:12.68
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:06:12.704
  I1006 12:06:13.705040 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1006 12:06:13.710285 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Creating a v1 custom resource @ 10/06/25 12:06:16.288
  STEP: Create a v2 custom resource @ 10/06/25 12:06:16.318
  STEP: List CRs in v1 @ 10/06/25 12:06:16.353
  STEP: List CRs in v2 @ 10/06/25 12:06:16.358
  I1006 12:06:16.941799 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1208" for this suite. @ 10/06/25 12:06:16.954
• [7.851 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 10/06/25 12:06:16.971
  I1006 12:06:16.971409 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 12:06:16.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:16.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:16.996
  STEP: Counting existing ResourceQuota @ 10/06/25 12:06:16.999
  STEP: Creating a ResourceQuota @ 10/06/25 12:06:22.002
  STEP: Ensuring resource quota status is calculated @ 10/06/25 12:06:22.012
  I1006 12:06:24.016088 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7310" for this suite. @ 10/06/25 12:06:24.018
• [7.058 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 10/06/25 12:06:24.03
  I1006 12:06:24.030168 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 12:06:24.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:24.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:24.05
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/06/25 12:06:24.054
  STEP: Saw pod success @ 10/06/25 12:06:28.088
  I1006 12:06:28.090572 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-c91f99d8-ce49-456f-b1aa-9ac044312015 container test-container: <nil>
  STEP: delete the pod @ 10/06/25 12:06:28.096
  I1006 12:06:28.117704 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-731" for this suite. @ 10/06/25 12:06:28.121
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 10/06/25 12:06:28.128
  I1006 12:06:28.128256 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/06/25 12:06:28.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:28.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:28.15
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 10/06/25 12:06:28.154
  I1006 12:06:28.155427 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 10/06/25 12:06:33.575
  I1006 12:06:33.575595 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 12:06:34.914078 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 12:06:40.293148 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5278" for this suite. @ 10/06/25 12:06:40.303
• [12.191 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 10/06/25 12:06:40.319
  I1006 12:06:40.319121 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename field-validation @ 10/06/25 12:06:40.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:40.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:40.346
  I1006 12:06:40.353183 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 12:06:42.918444      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I1006 12:06:42.918494      24 warnings.go:110] "Warning: unknown field \"beta\""
  I1006 12:06:42.918504      24 warnings.go:110] "Warning: unknown field \"delta\""
  I1006 12:06:42.918516      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I1006 12:06:42.918524      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I1006 12:06:43.453763 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4195" for this suite. @ 10/06/25 12:06:43.457
• [3.146 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 10/06/25 12:06:43.465
  I1006 12:06:43.465440 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pv @ 10/06/25 12:06:43.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:43.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:43.488
  STEP: Creating initial PV and PVC @ 10/06/25 12:06:43.493
  I1006 12:06:43.493121 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4582" @ 10/06/25 12:06:43.51
  STEP: Listing PVCs in namespace "pv-4582" @ 10/06/25 12:06:43.519
  STEP: Patching the PV "pv-4582-96hsh" @ 10/06/25 12:06:43.522
  STEP: Patching the PVC "pvc-gffff" @ 10/06/25 12:06:43.542
  STEP: Getting PV "pv-4582-96hsh" @ 10/06/25 12:06:43.559
  STEP: Getting PVC "pvc-gffff" @ 10/06/25 12:06:43.562
  STEP: Deleting PVC "pvc-gffff" @ 10/06/25 12:06:43.565
  STEP: Confirm deletion of PVC "pvc-gffff" @ 10/06/25 12:06:43.574
  STEP: Deleting PV "pv-4582-96hsh" @ 10/06/25 12:06:45.581
  STEP: Confirm deletion of PV "pv-4582-96hsh" @ 10/06/25 12:06:45.594
  STEP: Recreating another PV & PVC @ 10/06/25 12:06:47.604
  I1006 12:06:47.604276 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-4582-cg6lh" @ 10/06/25 12:06:47.628
  STEP: Updating the PVC "pvc-28tp4" @ 10/06/25 12:06:47.671
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-28tp4=updated" @ 10/06/25 12:06:47.681
  STEP: Deleting PVC "pvc-28tp4" via DeleteCollection @ 10/06/25 12:06:47.684
  STEP: Confirm deletion of PVC "pvc-28tp4" @ 10/06/25 12:06:47.701
  STEP: Deleting PV "pv-4582-cg6lh" via DeleteCollection @ 10/06/25 12:06:49.709
  STEP: Confirm deletion of PV "pv-4582-cg6lh" @ 10/06/25 12:06:49.721
  I1006 12:06:51.728746 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1006 12:06:51.728780 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-28tp4"
  I1006 12:06:51.730912 24 pv.go:193] Deleting PersistentVolume "pv-4582-cg6lh"
  I1006 12:06:51.732942 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4582" for this suite. @ 10/06/25 12:06:51.735
• [8.276 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 10/06/25 12:06:51.741
  I1006 12:06:51.741997 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/06/25 12:06:51.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:51.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:51.76
  I1006 12:06:51.763005 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  I1006 12:06:52.787871 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8552" for this suite. @ 10/06/25 12:06:52.791
• [1.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 10/06/25 12:06:52.799
  I1006 12:06:52.799775 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename apf @ 10/06/25 12:06:52.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:52.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:52.818
  STEP: getting /apis @ 10/06/25 12:06:52.82
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/06/25 12:06:52.823
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/06/25 12:06:52.824
  STEP: creating @ 10/06/25 12:06:52.825
  STEP: getting @ 10/06/25 12:06:52.857
  STEP: listing @ 10/06/25 12:06:52.86
  STEP: watching @ 10/06/25 12:06:52.863
  I1006 12:06:52.863230 24 flowcontrol.go:620] starting watch
  STEP: patching @ 10/06/25 12:06:52.864
  STEP: updating @ 10/06/25 12:06:52.871
  I1006 12:06:52.878601 24 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 10/06/25 12:06:52.878
  STEP: patching /status @ 10/06/25 12:06:52.88
  STEP: updating /status @ 10/06/25 12:06:52.888
  STEP: deleting @ 10/06/25 12:06:52.897
  STEP: deleting a collection @ 10/06/25 12:06:52.906
  I1006 12:06:52.921516 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3610" for this suite. @ 10/06/25 12:06:52.924
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 10/06/25 12:06:52.932
  I1006 12:06:52.932227 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename deployment @ 10/06/25 12:06:52.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:52.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:52.946
  I1006 12:06:52.967120 24 deployment.go:1664] Creating simple deployment test-new-deployment
  I1006 12:06:52.981883 24 deployment.go:223] new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 10/06/25 12:06:54.993
  STEP: updating a scale subresource @ 10/06/25 12:06:54.995
  STEP: verifying the deployment Spec.Replicas was modified @ 10/06/25 12:06:55.003
  STEP: Patch a scale subresource @ 10/06/25 12:06:55.026
  I1006 12:06:55.050920 24 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b773eae-98a8-494a-929b-05154307aca9",
      ResourceVersion: (string) (len=5) "67161",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895349212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1006 12:06:55.066741 24 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "577add5c-4e62-4791-a97a-bcc7e10bab1b",
      ResourceVersion: (string) (len=5) "67166",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895349212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "2b773eae-98a8-494a-929b-05154307aca9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 62 37 37 33 65  61 65 2d 39 38 61 38 2d  |\"2b773eae-98a8-|
              00000120  34 39 34 61 2d 39 32 39  62 2d 30 35 31 35 34 33  |494a-929b-051543|
              00000130  30 37 61 63 61 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |07aca9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 12:06:55.087406 24 deployment.go:68] Pod "test-new-deployment-685b768f58-5s2xt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-5s2xt",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d6d2bdc-b866-4453-86ee-d9f614b9546b",
      ResourceVersion: (string) (len=5) "67167",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895349215,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "577add5c-4e62-4791-a97a-bcc7e10bab1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  37 61 64 64 35 63 2d 34  |d\":\"577add5c-4|
              00000090  65 36 32 2d 34 37 39 31  2d 61 39 37 61 2d 62 63  |e62-4791-a97a-bc|
              000000a0  63 37 65 31 30 62 61 62  31 62 5c 22 7d 22 3a 7b  |c7e10bab1b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ttwb5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ttwb5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895349215,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ttwb5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:06:55.091905 24 deployment.go:68] Pod "test-new-deployment-685b768f58-vz57z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-vz57z",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81d7c3b4-c8ce-4caf-a3c3-54d04e8df7c8",
      ResourceVersion: (string) (len=5) "67152",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895349213,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "577add5c-4e62-4791-a97a-bcc7e10bab1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  37 61 64 64 35 63 2d 34  |d\":\"577add5c-4|
              00000090  65 36 32 2d 34 37 39 31  2d 61 39 37 61 2d 62 63  |e62-4791-a97a-bc|
              000000a0  63 37 65 31 30 62 61 62  31 62 5c 22 7d 22 3a 7b  |c7e10bab1b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  32 37 5c 22 7d 22 3a 7b  |.244.1.227\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ppswj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ppswj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895349213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.227",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.227"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895349213,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895349213,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://174c23272036708f0150a78b01e4b6665ec31cfd17e2f9b947ba66c93775dcc1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ppswj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:06:55.095982 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5276" for this suite. @ 10/06/25 12:06:55.104
• [2.207 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 10/06/25 12:06:55.139
  I1006 12:06:55.139510 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename volumeattachment @ 10/06/25 12:06:55.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:55.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:55.162
  STEP: Create VolumeAttachment "va-e2e-7968b" on node "cncf-1-33-script-2" @ 10/06/25 12:06:55.204
  STEP: Patch VolumeAttachment "va-e2e-7968b" on node "cncf-1-33-script-2" @ 10/06/25 12:06:55.212
  STEP: Reading "va-e2e-7968b" Status @ 10/06/25 12:06:55.219
  STEP: Patching "va-e2e-7968b" Status @ 10/06/25 12:06:55.222
  I1006 12:06:55.234744 24 volume_attachment.go:224] "va-e2e-7968b" Status.Attached: true
  STEP: Updating "va-e2e-7968b" Status @ 10/06/25 12:06:55.234
  I1006 12:06:55.246577 24 volume_attachment.go:240] "va-e2e-7968b" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-7968b" on node "cncf-1-33-script-2" @ 10/06/25 12:06:55.246
  STEP: Confirm deletion of VolumeAttachment "va-e2e-7968b" on node "cncf-1-33-script-2" @ 10/06/25 12:06:55.253
  I1006 12:06:55.255929 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9988" for this suite. @ 10/06/25 12:06:55.305
• [0.174 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 10/06/25 12:06:55.313
  I1006 12:06:55.313587 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 12:06:55.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:55.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:55.338
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6197 @ 10/06/25 12:06:55.341
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/06/25 12:06:55.386
  STEP: creating service externalsvc in namespace services-6197 @ 10/06/25 12:06:55.386
  I1006 12:06:55.426623 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 10/06/25 12:06:57.442
  I1006 12:06:57.477934 24 resource.go:361] Creating new exec pod
  I1006 12:06:59.494237 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-6197 exec execpodzp7tv -- /bin/sh -x -c nslookup nodeport-service.services-6197.svc.cluster.local'
  I1006 12:06:59.666518 24 builder.go:146] stderr: "+ nslookup nodeport-service.services-6197.svc.cluster.local\n"
  I1006 12:06:59.666583 24 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-6197.svc.cluster.local\tcanonical name = externalsvc.services-6197.svc.cluster.local.\nName:\texternalsvc.services-6197.svc.cluster.local\nAddress: 10.101.213.94\n\n"
  I1006 12:06:59.731620 24 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I1006 12:06:59.763067 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6197" for this suite. @ 10/06/25 12:06:59.767
• [4.462 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 10/06/25 12:06:59.776
  I1006 12:06:59.776146 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename containers @ 10/06/25 12:06:59.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:06:59.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:06:59.791
  I1006 12:07:01.828281 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8465" for this suite. @ 10/06/25 12:07:01.831
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 10/06/25 12:07:01.838
  I1006 12:07:01.838656 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replicaset @ 10/06/25 12:07:01.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:07:01.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:07:01.855
  I1006 12:07:01.882415 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I1006 12:07:06.951289 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/06/25 12:07:06.951
  STEP: Scaling up "test-rs" replicaset @ 10/06/25 12:07:06.951
  I1006 12:07:06.966799 24 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 10/06/25 12:07:06.966
  I1006 12:07:06.988083 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1657 with ReadyReplicas 1, AvailableReplicas 1
  I1006 12:07:07.031974 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1657 with ReadyReplicas 1, AvailableReplicas 1
  I1006 12:07:07.059174 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1657 with ReadyReplicas 1, AvailableReplicas 1
  I1006 12:07:07.072356 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1657 with ReadyReplicas 1, AvailableReplicas 1
  I1006 12:07:08.391069 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1657 with ReadyReplicas 2, AvailableReplicas 2
  I1006 12:07:08.491314 24 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-1657 with ReadyReplicas 3 found true
  I1006 12:07:08.491532 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1657" for this suite. @ 10/06/25 12:07:08.495
• [6.665 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 10/06/25 12:07:08.503
  I1006 12:07:08.503593 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/06/25 12:07:08.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:07:08.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:07:08.529
  STEP: creating the policy @ 10/06/25 12:07:08.541
  STEP: waiting until the marker is denied @ 10/06/25 12:07:08.559
  STEP: testing a replicated Deployment to be allowed @ 10/06/25 12:07:09.167
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/06/25 12:07:09.187
  I1006 12:07:09.273351 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6486" for this suite. @ 10/06/25 12:07:09.279
• [0.794 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 10/06/25 12:07:09.298
  I1006 12:07:09.298263 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:07:09.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:07:09.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:07:09.323
  STEP: Setting up server cert @ 10/06/25 12:07:09.347
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:07:09.645
  STEP: Deploying the webhook pod @ 10/06/25 12:07:09.655
  STEP: Wait for the deployment to be ready @ 10/06/25 12:07:09.683
  I1006 12:07:09.708127 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/06/25 12:07:11.721
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:07:11.751
  I1006 12:07:12.752069 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 10/06/25 12:07:12.754
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 10/06/25 12:07:12.756
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 10/06/25 12:07:12.756
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 10/06/25 12:07:12.756
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 10/06/25 12:07:12.757
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/06/25 12:07:12.757
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/06/25 12:07:12.758
  I1006 12:07:12.825782 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9985" for this suite. @ 10/06/25 12:07:12.828
  STEP: Destroying namespace "webhook-markers-472" for this suite. @ 10/06/25 12:07:12.843
• [3.552 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 10/06/25 12:07:12.853
  I1006 12:07:12.853792 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 12:07:12.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:07:12.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:07:12.876
  STEP: Discovering how many secrets are in namespace by default @ 10/06/25 12:07:12.881
  STEP: Counting existing ResourceQuota @ 10/06/25 12:07:17.888
  STEP: Creating a ResourceQuota @ 10/06/25 12:07:22.893
  STEP: Ensuring resource quota status is calculated @ 10/06/25 12:07:22.908
  STEP: Creating a Secret @ 10/06/25 12:07:24.911
  STEP: Ensuring resource quota status captures secret creation @ 10/06/25 12:07:24.93
  STEP: Deleting a secret @ 10/06/25 12:07:26.935
  STEP: Ensuring resource quota status released usage @ 10/06/25 12:07:26.943
  I1006 12:07:28.947099 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2717" for this suite. @ 10/06/25 12:07:28.951
• [16.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 10/06/25 12:07:28.963
  I1006 12:07:28.963338 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-probe @ 10/06/25 12:07:28.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:07:28.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:07:28.985
  STEP: Creating pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148 @ 10/06/25 12:07:28.988
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/06/25 12:07:31.012
  I1006 12:07:31.014635 24 container_probe.go:1748] Initial restart count of pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 is 0
  I1006 12:07:31.016775 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:33.022272 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:35.029100 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:37.035077 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:39.040639 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:41.046412 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:43.051003 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:45.054831 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:47.059757 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:49.064012 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:51.069070 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:51.069136 24 container_probe.go:1762] Restart count of pod container-probe-5148/liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 is now 1 (20.054452279s elapsed)
  I1006 12:07:53.073563 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:55.077672 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:57.082246 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:07:59.087424 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:01.092745 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:03.101049 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:05.108554 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:07.114922 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:09.120595 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:11.124432 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:11.124494 24 container_probe.go:1762] Restart count of pod container-probe-5148/liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 is now 2 (40.109791852s elapsed)
  I1006 12:08:13.127409 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:15.132100 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:17.135338 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:19.138845 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:21.146103 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:23.151919 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:25.156180 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:27.161473 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:29.165524 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:31.170263 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:31.170335 24 container_probe.go:1762] Restart count of pod container-probe-5148/liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 is now 3 (1m0.155650111s elapsed)
  I1006 12:08:33.174713 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:35.177701 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:37.180887 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:39.184591 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:41.187762 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:43.194411 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:45.198404 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:47.201912 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:49.206380 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:51.209429 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:51.209485 24 container_probe.go:1762] Restart count of pod container-probe-5148/liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 is now 4 (1m20.194802032s elapsed)
  I1006 12:08:53.213614 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:55.217484 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:57.221064 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:08:59.224376 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:01.227452 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:03.231399 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:05.234823 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:07.239320 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:09.245726 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:11.250672 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:13.255411 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:15.260575 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:17.266184 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:19.270894 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:21.275789 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:23.280610 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:25.285192 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:27.289829 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:29.293947 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:31.298417 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:33.302990 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:35.307865 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:37.311993 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:39.316418 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:41.320744 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:43.324847 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:45.328431 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:47.332186 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:49.337412 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:51.340671 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:53.344035 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:55.347020 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:57.350456 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:09:59.354068 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:10:01.357422 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:10:03.361733 24 container_probe.go:1758] Get pod liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 in namespace container-probe-5148
  I1006 12:10:03.361874 24 container_probe.go:1762] Restart count of pod container-probe-5148/liveness-80d072f7-bb10-41af-a0ed-f65caf90e885 is now 5 (2m32.34718613s elapsed)
  STEP: deleting the pod @ 10/06/25 12:10:03.362
  I1006 12:10:03.379495 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5148" for this suite. @ 10/06/25 12:10:03.383
• [154.427 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 10/06/25 12:10:03.39
  I1006 12:10:03.390399 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 12:10:03.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:10:03.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:10:03.415
  STEP: creating a replication controller @ 10/06/25 12:10:03.418
  I1006 12:10:03.418912 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 create -f -'
  I1006 12:10:03.573738 24 builder.go:146] stderr: ""
  I1006 12:10:03.573780 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/06/25 12:10:03.573
  I1006 12:10:03.573946 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1006 12:10:03.646936 24 builder.go:146] stderr: ""
  I1006 12:10:03.646979 24 builder.go:147] stdout: "update-demo-nautilus-9cfdr update-demo-nautilus-htldw "
  I1006 12:10:03.647023 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-9cfdr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1006 12:10:03.710307 24 builder.go:146] stderr: ""
  I1006 12:10:03.710375 24 builder.go:147] stdout: ""
  I1006 12:10:03.710477 24 kubectl.go:2505] update-demo-nautilus-9cfdr is created but not running
  I1006 12:10:08.710820 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1006 12:10:08.785527 24 builder.go:146] stderr: ""
  I1006 12:10:08.785583 24 builder.go:147] stdout: "update-demo-nautilus-9cfdr update-demo-nautilus-htldw "
  I1006 12:10:08.785635 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-9cfdr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1006 12:10:08.867210 24 builder.go:146] stderr: ""
  I1006 12:10:08.867277 24 builder.go:147] stdout: "true"
  I1006 12:10:08.867364 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-9cfdr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1006 12:10:08.936912 24 builder.go:146] stderr: ""
  I1006 12:10:08.936975 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1006 12:10:08.937001 24 kubectl.go:2396] validating pod update-demo-nautilus-9cfdr
  I1006 12:10:08.944379 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1006 12:10:08.944536 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1006 12:10:08.944739 24 kubectl.go:2523] update-demo-nautilus-9cfdr is verified up and running
  I1006 12:10:08.944902 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-htldw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1006 12:10:09.027889 24 builder.go:146] stderr: ""
  I1006 12:10:09.027942 24 builder.go:147] stdout: "true"
  I1006 12:10:09.028012 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-htldw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1006 12:10:09.103246 24 builder.go:146] stderr: ""
  I1006 12:10:09.103303 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1006 12:10:09.103325 24 kubectl.go:2396] validating pod update-demo-nautilus-htldw
  I1006 12:10:09.113303 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1006 12:10:09.113362 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1006 12:10:09.113374 24 kubectl.go:2523] update-demo-nautilus-htldw is verified up and running
  STEP: scaling down the replication controller @ 10/06/25 12:10:09.113
  I1006 12:10:09.114541 24 kubectl.go:320] scanned /root for discovery docs: <nil>
  I1006 12:10:09.114585 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I1006 12:10:10.186494 24 builder.go:146] stderr: ""
  I1006 12:10:10.186546 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/06/25 12:10:10.186
  I1006 12:10:10.187017 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1006 12:10:10.261312 24 builder.go:146] stderr: ""
  I1006 12:10:10.261360 24 builder.go:147] stdout: "update-demo-nautilus-9cfdr "
  I1006 12:10:10.261414 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-9cfdr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1006 12:10:10.323491 24 builder.go:146] stderr: ""
  I1006 12:10:10.323543 24 builder.go:147] stdout: "true"
  I1006 12:10:10.323866 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-9cfdr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1006 12:10:10.387367 24 builder.go:146] stderr: ""
  I1006 12:10:10.387410 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1006 12:10:10.387421 24 kubectl.go:2396] validating pod update-demo-nautilus-9cfdr
  I1006 12:10:10.390847 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1006 12:10:10.390911 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1006 12:10:10.390928 24 kubectl.go:2523] update-demo-nautilus-9cfdr is verified up and running
  STEP: scaling up the replication controller @ 10/06/25 12:10:10.391
  I1006 12:10:10.392447 24 kubectl.go:320] scanned /root for discovery docs: <nil>
  I1006 12:10:10.392583 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I1006 12:10:11.471647 24 builder.go:146] stderr: ""
  I1006 12:10:11.471694 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/06/25 12:10:11.471
  I1006 12:10:11.471807 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1006 12:10:11.541303 24 builder.go:146] stderr: ""
  I1006 12:10:11.541350 24 builder.go:147] stdout: "update-demo-nautilus-8fr46 update-demo-nautilus-9cfdr "
  I1006 12:10:11.541408 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-8fr46 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1006 12:10:11.605667 24 builder.go:146] stderr: ""
  I1006 12:10:11.605710 24 builder.go:147] stdout: ""
  I1006 12:10:11.605724 24 kubectl.go:2505] update-demo-nautilus-8fr46 is created but not running
  I1006 12:10:16.605961 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1006 12:10:16.691864 24 builder.go:146] stderr: ""
  I1006 12:10:16.691946 24 builder.go:147] stdout: "update-demo-nautilus-8fr46 update-demo-nautilus-9cfdr "
  I1006 12:10:16.692114 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-8fr46 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1006 12:10:16.756717 24 builder.go:146] stderr: ""
  I1006 12:10:16.756806 24 builder.go:147] stdout: "true"
  I1006 12:10:16.757079 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-8fr46 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1006 12:10:16.820160 24 builder.go:146] stderr: ""
  I1006 12:10:16.820205 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1006 12:10:16.820285 24 kubectl.go:2396] validating pod update-demo-nautilus-8fr46
  I1006 12:10:16.825990 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1006 12:10:16.826043 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1006 12:10:16.826054 24 kubectl.go:2523] update-demo-nautilus-8fr46 is verified up and running
  I1006 12:10:16.826096 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-9cfdr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1006 12:10:16.890807 24 builder.go:146] stderr: ""
  I1006 12:10:16.890851 24 builder.go:147] stdout: "true"
  I1006 12:10:16.890903 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods update-demo-nautilus-9cfdr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1006 12:10:16.964463 24 builder.go:146] stderr: ""
  I1006 12:10:16.964537 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1006 12:10:16.964554 24 kubectl.go:2396] validating pod update-demo-nautilus-9cfdr
  I1006 12:10:16.967932 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1006 12:10:16.967994 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1006 12:10:16.968087 24 kubectl.go:2523] update-demo-nautilus-9cfdr is verified up and running
  STEP: using delete to clean up resources @ 10/06/25 12:10:16.968
  I1006 12:10:16.968246 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 delete --grace-period=0 --force -f -'
  I1006 12:10:17.033792 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1006 12:10:17.033845 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1006 12:10:17.033910 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get rc,svc -l name=update-demo --no-headers'
  I1006 12:10:17.126909 24 builder.go:146] stderr: "No resources found in kubectl-4443 namespace.\n"
  I1006 12:10:17.126980 24 builder.go:147] stdout: ""
  I1006 12:10:17.127060 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-4443 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1006 12:10:17.204530 24 builder.go:146] stderr: ""
  I1006 12:10:17.204591 24 builder.go:147] stdout: ""
  I1006 12:10:17.204946 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4443" for this suite. @ 10/06/25 12:10:17.208
• [13.826 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 10/06/25 12:10:17.216
  I1006 12:10:17.216663 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename statefulset @ 10/06/25 12:10:17.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:10:17.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:10:17.231
  STEP: Creating service test in namespace statefulset-4545 @ 10/06/25 12:10:17.236
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 10/06/25 12:10:17.243
  STEP: Creating stateful set ss in namespace statefulset-4545 @ 10/06/25 12:10:17.295
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4545 @ 10/06/25 12:10:17.306
  I1006 12:10:17.319562 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I1006 12:10:27.311266 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 10/06/25 12:10:27.311
  I1006 12:10:27.314405 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-4545 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1006 12:10:27.448214 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1006 12:10:27.448267 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1006 12:10:27.448354 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1006 12:10:27.451533 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1006 12:10:37.452550 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1006 12:10:37.452591 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I1006 12:10:37.554299 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999638s
  I1006 12:10:38.558019 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.909581743s
  I1006 12:10:39.563359 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.905000532s
  I1006 12:10:40.567427 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.900511447s
  I1006 12:10:41.571074 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.896572464s
  I1006 12:10:42.574698 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.892835934s
  I1006 12:10:43.578743 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.889271888s
  I1006 12:10:44.583448 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.884477435s
  I1006 12:10:45.587468 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.880517185s
  I1006 12:10:46.590829 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 876.480745ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4545 @ 10/06/25 12:10:47.591
  I1006 12:10:47.595865 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-4545 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1006 12:10:47.710305 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1006 12:10:47.710372 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1006 12:10:47.710392 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1006 12:10:47.714004 24 wait.go:44] Found 1 stateful pods, waiting for 3
  I1006 12:10:57.718978 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1006 12:10:57.719050 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1006 12:10:57.719068 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 10/06/25 12:10:57.719
  STEP: Scale down will halt with unhealthy stateful pod @ 10/06/25 12:10:57.719
  I1006 12:10:57.724411 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-4545 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1006 12:10:57.872546 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1006 12:10:57.872624 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1006 12:10:57.872645 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1006 12:10:57.872986 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-4545 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1006 12:10:58.021940 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1006 12:10:58.022003 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1006 12:10:58.022015 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1006 12:10:58.022153 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-4545 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1006 12:10:58.169635 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1006 12:10:58.169696 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1006 12:10:58.169708 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1006 12:10:58.169721 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I1006 12:10:58.173222 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I1006 12:11:08.175852 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1006 12:11:08.175900 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1006 12:11:08.175913 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1006 12:11:08.276962 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999662s
  I1006 12:11:09.280926 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.91183492s
  I1006 12:11:10.285357 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.908344249s
  I1006 12:11:11.289058 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.90396325s
  I1006 12:11:12.293044 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.900226368s
  I1006 12:11:13.296849 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.896289385s
  I1006 12:11:14.301359 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.891750472s
  I1006 12:11:15.305346 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.887956868s
  I1006 12:11:16.309168 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.883994507s
  I1006 12:11:17.313535 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 879.382827ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4545 @ 10/06/25 12:11:18.313
  I1006 12:11:18.317874 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-4545 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1006 12:11:18.455033 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1006 12:11:18.455091 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1006 12:11:18.455110 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1006 12:11:18.455173 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-4545 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1006 12:11:18.585445 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1006 12:11:18.585489 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1006 12:11:18.585501 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1006 12:11:18.585543 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=statefulset-4545 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1006 12:11:18.692682 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1006 12:11:18.692808 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1006 12:11:18.692829 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1006 12:11:18.692846 24 rest.go:153] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 10/06/25 12:11:28.699
  I1006 12:11:28.699194 24 statefulset.go:138] Deleting all statefulset in ns statefulset-4545
  I1006 12:11:28.701556 24 rest.go:153] Scaling statefulset ss to 0
  I1006 12:11:28.705537 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1006 12:11:28.707541 24 rest.go:91] Deleting statefulset ss
  I1006 12:11:28.719027 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4545" for this suite. @ 10/06/25 12:11:28.721
• [71.512 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 10/06/25 12:11:28.734
  I1006 12:11:28.734631 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename proxy @ 10/06/25 12:11:28.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:11:28.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:11:28.752
  STEP: starting an echo server on multiple ports @ 10/06/25 12:11:28.79
  I1006 12:11:28.809366 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I1006 12:11:30.828094      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 12:11:30.828220 24 proxy.go:273] setup took 2.071270535s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 10/06/25 12:11:30.828
  I1006 12:11:30.836552 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 8.157094ms)
  I1006 12:11:30.836551 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 7.720967ms)
  I1006 12:11:30.837011 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 7.866478ms)
  I1006 12:11:30.838113 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 9.448295ms)
  I1006 12:11:30.838159 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 8.958987ms)
  I1006 12:11:30.838183 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 8.817938ms)
  I1006 12:11:30.838183 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 9.287372ms)
  I1006 12:11:30.840436 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 11.90711ms)
  I1006 12:11:30.840852 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 11.881761ms)
  I1006 12:11:30.841129 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 12.527018ms)
  I1006 12:11:30.841158 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 11.881547ms)
  I1006 12:11:30.842550 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 13.459073ms)
  I1006 12:11:30.842584 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 14.239675ms)
  I1006 12:11:30.842741 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 13.729432ms)
  I1006 12:11:30.842758 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 13.431971ms)
  I1006 12:11:30.845816 24 proxy.go:601] (0) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 17.040791ms)
  I1006 12:11:30.850839 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 4.687681ms)
  I1006 12:11:30.850889 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 4.968179ms)
  I1006 12:11:30.850848 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 4.893814ms)
  I1006 12:11:30.851869 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 5.649119ms)
  I1006 12:11:30.852128 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 5.918285ms)
  I1006 12:11:30.852128 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 6.241505ms)
  I1006 12:11:30.852289 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 6.110009ms)
  I1006 12:11:30.854456 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 8.204503ms)
  I1006 12:11:30.854466 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 8.197088ms)
  I1006 12:11:30.854540 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 8.305365ms)
  I1006 12:11:30.854716 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 8.565922ms)
  I1006 12:11:30.855292 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 9.105184ms)
  I1006 12:11:30.855380 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 9.306847ms)
  I1006 12:11:30.855422 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 9.303468ms)
  I1006 12:11:30.855643 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 9.562371ms)
  I1006 12:11:30.855684 24 proxy.go:601] (1) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 9.562551ms)
  I1006 12:11:30.859638 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 3.84867ms)
  I1006 12:11:30.865816 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 9.933173ms)
  I1006 12:11:30.865864 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 9.917709ms)
  I1006 12:11:30.866088 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 10.313494ms)
  I1006 12:11:30.866124 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 10.142265ms)
  I1006 12:11:30.866220 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 10.254631ms)
  I1006 12:11:30.866257 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 10.35395ms)
  I1006 12:11:30.866277 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 10.375095ms)
  I1006 12:11:30.866291 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 10.370651ms)
  I1006 12:11:30.867203 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 11.2795ms)
  I1006 12:11:30.868126 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 12.272876ms)
  I1006 12:11:30.868290 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 12.534759ms)
  I1006 12:11:30.868364 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 12.483408ms)
  I1006 12:11:30.868294 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 12.334272ms)
  I1006 12:11:30.868316 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 12.463469ms)
  I1006 12:11:30.868120 24 proxy.go:601] (2) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 12.178595ms)
  I1006 12:11:30.875680 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 6.838546ms)
  I1006 12:11:30.875697 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 6.937607ms)
  I1006 12:11:30.875722 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 7.005458ms)
  I1006 12:11:30.875978 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 7.1357ms)
  I1006 12:11:30.876004 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 7.198154ms)
  I1006 12:11:30.876014 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 7.177705ms)
  I1006 12:11:30.881085 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 12.205443ms)
  I1006 12:11:30.881504 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 12.851346ms)
  I1006 12:11:30.881514 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 12.697611ms)
  I1006 12:11:30.881524 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 12.894987ms)
  I1006 12:11:30.881570 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 12.706074ms)
  I1006 12:11:30.881576 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 12.955369ms)
  I1006 12:11:30.881625 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 12.859973ms)
  I1006 12:11:30.881793 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 13.059179ms)
  I1006 12:11:30.882841 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 13.962133ms)
  I1006 12:11:30.881979 24 proxy.go:601] (3) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 13.372802ms)
  I1006 12:11:30.889034 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 5.979316ms)
  I1006 12:11:30.889301 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 6.343602ms)
  I1006 12:11:30.890067 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 6.90006ms)
  I1006 12:11:30.890226 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 7.046942ms)
  I1006 12:11:30.890493 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 7.368683ms)
  I1006 12:11:30.890669 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 7.637455ms)
  I1006 12:11:30.890841 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 7.752223ms)
  I1006 12:11:30.890855 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 7.679406ms)
  I1006 12:11:30.890872 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 7.727221ms)
  I1006 12:11:30.891014 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 7.873544ms)
  I1006 12:11:30.891818 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 8.675282ms)
  I1006 12:11:30.891841 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 8.670567ms)
  I1006 12:11:30.891839 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 8.707886ms)
  I1006 12:11:30.891871 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 8.882076ms)
  I1006 12:11:30.891957 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 8.859163ms)
  I1006 12:11:30.892094 24 proxy.go:601] (4) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 9.002074ms)
  I1006 12:11:30.901435 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 9.014078ms)
  I1006 12:11:30.901450 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 9.074609ms)
  I1006 12:11:30.901430 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 9.145357ms)
  I1006 12:11:30.902114 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 9.963402ms)
  I1006 12:11:30.901503 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 8.956954ms)
  I1006 12:11:30.901514 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 9.111483ms)
  I1006 12:11:30.901533 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 9.07408ms)
  I1006 12:11:30.901615 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 9.475436ms)
  I1006 12:11:30.901633 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 9.272849ms)
  I1006 12:11:30.901770 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 9.393252ms)
  I1006 12:11:30.901917 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 9.669759ms)
  I1006 12:11:30.902446 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 10.292799ms)
  I1006 12:11:30.902618 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 10.184406ms)
  I1006 12:11:30.902781 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 10.250171ms)
  I1006 12:11:30.902879 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 10.564413ms)
  I1006 12:11:30.903197 24 proxy.go:601] (5) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 10.693115ms)
  I1006 12:11:30.909074 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 5.612436ms)
  I1006 12:11:30.909093 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 5.462072ms)
  I1006 12:11:30.909977 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 6.477466ms)
  I1006 12:11:30.910012 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 6.67532ms)
  I1006 12:11:30.910054 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 6.728013ms)
  I1006 12:11:30.910008 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 6.419196ms)
  I1006 12:11:30.910249 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 6.556619ms)
  I1006 12:11:30.910195 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 6.731872ms)
  I1006 12:11:30.910339 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 6.578923ms)
  I1006 12:11:30.910391 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 7.098813ms)
  I1006 12:11:30.910795 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 7.015693ms)
  I1006 12:11:30.910818 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 7.150814ms)
  I1006 12:11:30.911025 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 7.614554ms)
  I1006 12:11:30.911044 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 7.319358ms)
  I1006 12:11:30.911040 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 7.377681ms)
  I1006 12:11:30.911041 24 proxy.go:601] (6) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 7.471661ms)
  I1006 12:11:30.917121 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 5.712505ms)
  I1006 12:11:30.917124 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 5.491655ms)
  I1006 12:11:30.917421 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 6.114978ms)
  I1006 12:11:30.919492 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 7.936672ms)
  I1006 12:11:30.919712 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 8.27631ms)
  I1006 12:11:30.919754 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 8.096171ms)
  I1006 12:11:30.919763 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 8.18373ms)
  I1006 12:11:30.919785 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 8.250897ms)
  I1006 12:11:30.919747 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 8.13724ms)
  I1006 12:11:30.919833 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 8.14933ms)
  I1006 12:11:30.919855 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 8.355439ms)
  I1006 12:11:30.919878 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 8.407726ms)
  I1006 12:11:30.920015 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 8.439971ms)
  I1006 12:11:30.920188 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 8.791393ms)
  I1006 12:11:30.920209 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 8.728733ms)
  I1006 12:11:30.920431 24 proxy.go:601] (7) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 8.919418ms)
  I1006 12:11:30.928615 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 8.088499ms)
  I1006 12:11:30.928644 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 7.958673ms)
  I1006 12:11:30.929094 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 8.464839ms)
  I1006 12:11:30.929083 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 8.576784ms)
  I1006 12:11:30.929132 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 8.48689ms)
  I1006 12:11:30.929108 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 8.310673ms)
  I1006 12:11:30.929205 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 8.735351ms)
  I1006 12:11:30.929251 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 8.469228ms)
  I1006 12:11:30.929268 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 8.619418ms)
  I1006 12:11:30.930085 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 9.436051ms)
  I1006 12:11:30.930494 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 9.722454ms)
  I1006 12:11:30.930518 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 9.916445ms)
  I1006 12:11:30.930553 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 9.887001ms)
  I1006 12:11:30.930552 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 9.802486ms)
  I1006 12:11:30.930460 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 9.77427ms)
  I1006 12:11:30.930508 24 proxy.go:601] (8) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 9.948689ms)
  I1006 12:11:30.938211 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 7.000285ms)
  I1006 12:11:30.938224 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 7.326955ms)
  I1006 12:11:30.938268 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 7.20449ms)
  I1006 12:11:30.938653 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 7.480136ms)
  I1006 12:11:30.938659 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 7.487699ms)
  I1006 12:11:30.938688 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 7.633057ms)
  I1006 12:11:30.938726 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 7.630618ms)
  I1006 12:11:30.938974 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 8.09415ms)
  I1006 12:11:30.938915 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 7.924985ms)
  I1006 12:11:30.938736 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 7.917869ms)
  I1006 12:11:30.938789 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 7.495075ms)
  I1006 12:11:30.938920 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 7.690136ms)
  I1006 12:11:30.938953 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 7.827154ms)
  I1006 12:11:30.939277 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 8.466152ms)
  I1006 12:11:30.939287 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 8.032335ms)
  I1006 12:11:30.939333 24 proxy.go:601] (9) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 8.375973ms)
  I1006 12:11:30.945145 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 5.319328ms)
  I1006 12:11:30.945172 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 5.464978ms)
  I1006 12:11:30.945333 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 5.559126ms)
  I1006 12:11:30.945884 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 5.944481ms)
  I1006 12:11:30.945944 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 6.090159ms)
  I1006 12:11:30.945964 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 5.983937ms)
  I1006 12:11:30.946085 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 6.187821ms)
  I1006 12:11:30.946113 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 6.209941ms)
  I1006 12:11:30.946247 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 6.320958ms)
  I1006 12:11:30.946252 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 6.370771ms)
  I1006 12:11:30.949292 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 9.432585ms)
  I1006 12:11:30.949324 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 9.556113ms)
  I1006 12:11:30.949368 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 9.505204ms)
  I1006 12:11:30.949255 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 9.554343ms)
  I1006 12:11:30.949427 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 9.470393ms)
  I1006 12:11:30.949809 24 proxy.go:601] (10) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 9.851433ms)
  I1006 12:11:30.956331 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 6.263958ms)
  I1006 12:11:30.956310 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 6.123353ms)
  I1006 12:11:30.956348 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 6.329345ms)
  I1006 12:11:30.956591 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 6.455649ms)
  I1006 12:11:30.956783 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 6.565901ms)
  I1006 12:11:30.957647 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 7.394156ms)
  I1006 12:11:30.957673 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 7.620213ms)
  I1006 12:11:30.957669 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 7.416457ms)
  I1006 12:11:30.957653 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 7.576816ms)
  I1006 12:11:30.957924 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 7.818314ms)
  I1006 12:11:30.957926 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 7.775321ms)
  I1006 12:11:30.957951 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 7.756471ms)
  I1006 12:11:30.957956 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 7.834365ms)
  I1006 12:11:30.957997 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 7.829795ms)
  I1006 12:11:30.958048 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 7.890924ms)
  I1006 12:11:30.958380 24 proxy.go:601] (11) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 8.165814ms)
  I1006 12:11:30.965577 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 6.831512ms)
  I1006 12:11:30.965627 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 6.958167ms)
  I1006 12:11:30.965688 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 6.96631ms)
  I1006 12:11:30.965734 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 7.045367ms)
  I1006 12:11:30.965742 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 7.163253ms)
  I1006 12:11:30.966030 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 7.551241ms)
  I1006 12:11:30.966206 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 7.578956ms)
  I1006 12:11:30.966273 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 7.64906ms)
  I1006 12:11:30.966296 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 7.673459ms)
  I1006 12:11:30.966382 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 7.670509ms)
  I1006 12:11:30.966469 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 7.923642ms)
  I1006 12:11:30.966472 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 7.985701ms)
  I1006 12:11:30.966473 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 8.052943ms)
  I1006 12:11:30.968781 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 10.121924ms)
  I1006 12:11:30.968810 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 10.20921ms)
  I1006 12:11:30.969032 24 proxy.go:601] (12) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 10.551874ms)
  I1006 12:11:30.975670 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 6.376856ms)
  I1006 12:11:30.975692 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 6.619331ms)
  I1006 12:11:30.975996 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 6.768675ms)
  I1006 12:11:30.976075 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 6.935248ms)
  I1006 12:11:30.976632 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 7.360544ms)
  I1006 12:11:30.976871 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 7.550857ms)
  I1006 12:11:30.977019 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 7.662791ms)
  I1006 12:11:30.977048 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 7.796267ms)
  I1006 12:11:30.977059 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 7.848613ms)
  I1006 12:11:30.977797 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 8.458306ms)
  I1006 12:11:30.978037 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 8.7704ms)
  I1006 12:11:30.978885 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 9.533282ms)
  I1006 12:11:30.979253 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 10.171253ms)
  I1006 12:11:30.979363 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 10.202427ms)
  I1006 12:11:30.979393 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 10.198696ms)
  I1006 12:11:30.979514 24 proxy.go:601] (13) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 10.14213ms)
  I1006 12:11:30.988428 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 8.542495ms)
  I1006 12:11:30.988460 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 8.759902ms)
  I1006 12:11:30.988455 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 8.707178ms)
  I1006 12:11:30.988505 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 8.907677ms)
  I1006 12:11:30.988511 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 8.784597ms)
  I1006 12:11:30.988552 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 8.704985ms)
  I1006 12:11:30.988569 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 8.751625ms)
  I1006 12:11:30.988585 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 8.695693ms)
  I1006 12:11:30.988621 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 8.842358ms)
  I1006 12:11:30.988557 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 8.713573ms)
  I1006 12:11:30.989806 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 10.048357ms)
  I1006 12:11:30.989803 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 10.087404ms)
  I1006 12:11:30.989863 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 10.050894ms)
  I1006 12:11:30.989880 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 10.288528ms)
  I1006 12:11:30.989886 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 10.199813ms)
  I1006 12:11:30.990866 24 proxy.go:601] (14) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 11.278392ms)
  I1006 12:11:30.996662 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 5.613626ms)
  I1006 12:11:30.996670 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 5.621717ms)
  I1006 12:11:30.997988 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 6.812664ms)
  I1006 12:11:30.997992 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 6.861955ms)
  I1006 12:11:30.998316 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 7.283353ms)
  I1006 12:11:30.999007 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 7.892068ms)
  I1006 12:11:30.999090 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 8.025499ms)
  I1006 12:11:30.999145 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 7.960753ms)
  I1006 12:11:30.999200 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 8.053786ms)
  I1006 12:11:30.999225 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 8.020757ms)
  I1006 12:11:30.999241 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 8.032767ms)
  I1006 12:11:30.999379 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 8.132091ms)
  I1006 12:11:30.999346 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 8.100871ms)
  I1006 12:11:30.999461 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 8.183763ms)
  I1006 12:11:30.999958 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 8.835662ms)
  I1006 12:11:31.001924 24 proxy.go:601] (15) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 10.678579ms)
  I1006 12:11:31.010850 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 8.474076ms)
  I1006 12:11:31.010927 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 8.616812ms)
  I1006 12:11:31.010996 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 8.783168ms)
  I1006 12:11:31.010960 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 8.819996ms)
  I1006 12:11:31.011342 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 9.294596ms)
  I1006 12:11:31.011371 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 9.198221ms)
  I1006 12:11:31.011244 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 9.043406ms)
  I1006 12:11:31.011547 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 8.925788ms)
  I1006 12:11:31.012376 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 10.274844ms)
  I1006 12:11:31.012555 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 10.249957ms)
  I1006 12:11:31.013016 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 10.742637ms)
  I1006 12:11:31.013035 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 10.693489ms)
  I1006 12:11:31.013017 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 10.624013ms)
  I1006 12:11:31.013082 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 10.815905ms)
  I1006 12:11:31.013093 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 10.856607ms)
  I1006 12:11:31.013107 24 proxy.go:601] (16) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 10.6593ms)
  I1006 12:11:31.023035 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 9.279652ms)
  I1006 12:11:31.023066 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 9.229203ms)
  I1006 12:11:31.023231 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 9.808333ms)
  I1006 12:11:31.023784 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 10.203796ms)
  I1006 12:11:31.023872 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 10.170297ms)
  I1006 12:11:31.023920 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 10.381099ms)
  I1006 12:11:31.023978 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 10.264419ms)
  I1006 12:11:31.024088 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 10.379015ms)
  I1006 12:11:31.024156 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 10.389665ms)
  I1006 12:11:31.024160 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 10.780601ms)
  I1006 12:11:31.024831 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 11.212863ms)
  I1006 12:11:31.024832 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 11.038406ms)
  I1006 12:11:31.025215 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 11.42686ms)
  I1006 12:11:31.025225 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 11.58493ms)
  I1006 12:11:31.025558 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 12.027227ms)
  I1006 12:11:31.025603 24 proxy.go:601] (17) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 11.927752ms)
  I1006 12:11:31.032738 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 6.669871ms)
  I1006 12:11:31.032899 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 6.952744ms)
  I1006 12:11:31.033148 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 7.152572ms)
  I1006 12:11:31.033177 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 7.280451ms)
  I1006 12:11:31.033485 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 7.53697ms)
  I1006 12:11:31.033499 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 7.768869ms)
  I1006 12:11:31.033519 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 7.628667ms)
  I1006 12:11:31.033536 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 7.770408ms)
  I1006 12:11:31.033793 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 8.149318ms)
  I1006 12:11:31.033818 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 7.762499ms)
  I1006 12:11:31.037237 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 11.599589ms)
  I1006 12:11:31.037259 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 11.337277ms)
  I1006 12:11:31.037287 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 11.435405ms)
  I1006 12:11:31.037365 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 11.423582ms)
  I1006 12:11:31.037430 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 11.452536ms)
  I1006 12:11:31.038340 24 proxy.go:601] (18) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 12.624983ms)
  I1006 12:11:31.044074 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr/proxy/rewriteme">... (200; 5.628587ms)
  I1006 12:11:31.044103 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:462/proxy/: tls qux (200; 5.718513ms)
  I1006 12:11:31.044121 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 5.661861ms)
  I1006 12:11:31.046215 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:460/proxy/: tls baz (200; 7.599732ms)
  I1006 12:11:31.046744 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 8.101025ms)
  I1006 12:11:31.046817 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/rewrit... (200; 8.250458ms)
  I1006 12:11:31.046930 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:162/proxy/: bar (200; 8.30211ms)
  I1006 12:11:31.046997 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/https:proxy-service-br6mm-d85f6774c-xhdmr:443/proxy/t... (200; 8.441517ms)
  I1006 12:11:31.047134 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/pods/proxy-service-br6mm-d85f6774c-xhdmr:160/proxy/: foo (200; 8.503848ms)
  I1006 12:11:31.047194 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname2/proxy/: tls qux (200; 8.748982ms)
  I1006 12:11:31.047160 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname2/proxy/: bar (200; 8.601884ms)
  I1006 12:11:31.047306 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/: <a href="/api/v1/namespaces/proxy-3450/pods/http:proxy-service-br6mm-d85f6774c-xhdmr:1080/proxy/r... (200; 8.716419ms)
  I1006 12:11:31.047412 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/services/proxy-service-br6mm:portname1/proxy/: foo (200; 8.85855ms)
  I1006 12:11:31.047451 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/services/https:proxy-service-br6mm:tlsportname1/proxy/: tls baz (200; 8.83989ms)
  I1006 12:11:31.047993 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname1/proxy/: foo (200; 9.391273ms)
  I1006 12:11:31.050108 24 proxy.go:601] (19) /api/v1/namespaces/proxy-3450/services/http:proxy-service-br6mm:portname2/proxy/: bar (200; 11.529333ms)
  I1006 12:11:31.059833 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3450" for this suite. @ 10/06/25 12:11:31.064
• [2.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 10/06/25 12:11:31.076
  I1006 12:11:31.077071 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename var-expansion @ 10/06/25 12:11:31.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:11:31.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:11:31.11
  I1006 12:11:33.141871 24 delete.go:62] Deleting pod "var-expansion-7475e0be-0e88-44df-a5b1-b96743bd3996" in namespace "var-expansion-6334"
  I1006 12:11:33.155967 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-7475e0be-0e88-44df-a5b1-b96743bd3996" to be fully deleted
  I1006 12:11:35.163872 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6334" for this suite. @ 10/06/25 12:11:35.166
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 10/06/25 12:11:35.178
  I1006 12:11:35.178824 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename subjectreview @ 10/06/25 12:11:35.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:11:35.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:11:35.204
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3896" @ 10/06/25 12:11:35.207
  I1006 12:11:35.213650 24 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-3896:e2e"
  I1006 12:11:35.213688 24 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3896"}
  I1006 12:11:35.213696 24 subjectreviews.go:71] saUID: "2b1edf05-9de3-4f12-ae1e-54016721b22e"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3896:e2e" @ 10/06/25 12:11:35.213
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3896:e2e" @ 10/06/25 12:11:35.214
  I1006 12:11:35.215750 24 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3896:e2e" api 'list' configmaps in "subjectreview-3896" namespace @ 10/06/25 12:11:35.215
  I1006 12:11:35.217117 24 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3896:e2e" @ 10/06/25 12:11:35.217
  I1006 12:11:35.218792 24 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1006 12:11:35.218815 24 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1006 12:11:35.218993 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3896" for this suite. @ 10/06/25 12:11:35.267
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 10/06/25 12:11:35.279
  I1006 12:11:35.279070 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 12:11:35.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:11:35.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:11:35.307
  STEP: Creating a ResourceQuota with terminating scope @ 10/06/25 12:11:35.31
  STEP: Ensuring ResourceQuota status is calculated @ 10/06/25 12:11:35.317
  STEP: Creating a ResourceQuota with not terminating scope @ 10/06/25 12:11:37.322
  STEP: Ensuring ResourceQuota status is calculated @ 10/06/25 12:11:37.334
  STEP: Creating a long running pod @ 10/06/25 12:11:39.338
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 10/06/25 12:11:39.355
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 10/06/25 12:11:41.359
  STEP: Deleting the pod @ 10/06/25 12:11:43.364
  STEP: Ensuring resource quota status released the pod usage @ 10/06/25 12:11:43.383
  STEP: Creating a terminating pod @ 10/06/25 12:11:45.388
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 10/06/25 12:11:45.406
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 10/06/25 12:11:47.411
  STEP: Deleting the pod @ 10/06/25 12:11:49.421
  STEP: Ensuring resource quota status released the pod usage @ 10/06/25 12:11:49.451
  I1006 12:11:51.456079 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8655" for this suite. @ 10/06/25 12:11:51.459
• [16.188 seconds]
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 10/06/25 12:11:51.467
  I1006 12:11:51.467723 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replication-controller @ 10/06/25 12:11:51.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:11:51.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:11:51.486
  STEP: creating a ReplicationController @ 10/06/25 12:11:51.51
  STEP: waiting for RC to be added @ 10/06/25 12:11:51.525
  STEP: waiting for available Replicas @ 10/06/25 12:11:51.526
  STEP: patching ReplicationController @ 10/06/25 12:11:53.156
  STEP: waiting for RC to be modified @ 10/06/25 12:11:53.166
  STEP: patching ReplicationController status @ 10/06/25 12:11:53.167
  STEP: waiting for RC to be modified @ 10/06/25 12:11:53.175
  STEP: waiting for available Replicas @ 10/06/25 12:11:53.175
  STEP: fetching ReplicationController status @ 10/06/25 12:11:53.182
  STEP: patching ReplicationController scale @ 10/06/25 12:11:53.185
  STEP: waiting for RC to be modified @ 10/06/25 12:11:53.193
  STEP: waiting for ReplicationController's scale to be the max amount @ 10/06/25 12:11:53.194
  STEP: fetching ReplicationController; ensuring that it's patched @ 10/06/25 12:11:54.034
  STEP: updating ReplicationController status @ 10/06/25 12:11:54.037
  STEP: waiting for RC to be modified @ 10/06/25 12:11:54.045
  STEP: listing all ReplicationControllers @ 10/06/25 12:11:54.045
  STEP: checking that ReplicationController has expected values @ 10/06/25 12:11:54.055
  STEP: deleting ReplicationControllers by collection @ 10/06/25 12:11:54.055
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 10/06/25 12:11:54.063
  I1006 12:11:54.118969 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1006 12:11:54.119216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8274" for this suite. @ 10/06/25 12:11:54.123
• [2.667 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 10/06/25 12:11:54.135
  I1006 12:11:54.135453 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename init-container @ 10/06/25 12:11:54.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:11:54.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:11:54.152
  STEP: creating the pod @ 10/06/25 12:11:54.157
  I1006 12:11:54.157688 24 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E1006 12:11:55.119451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:11:56.119585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:11:57.120846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:11:58.121145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:11:59.121685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:00.122123      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:01.122818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:02.123072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:03.123253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:04.123631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:05.123864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:06.124251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:07.124369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:08.124545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:09.124742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:10.124898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:11.125188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:12.125669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:13.125914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:14.126928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:15.127174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:16.127352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:17.127788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:18.127860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:19.128295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:20.128365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:21.128741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:22.128950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:23.129311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:24.129442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:25.129559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:26.129748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:27.130036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:28.130251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:29.130508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:30.130655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:31.130953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:32.131084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:33.131401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:34.131484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:35.131935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:36.132101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:37.132873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:38.132850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:39.133253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:40.133403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:12:40.267159 24 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-6d20cbcf-aed8-4cf8-946a-511c47fc5a0b", GenerateName:"", Namespace:"init-container-928", SelfLink:"", UID:"cd19f753-48ae-4ca0-b488-12eae50ac6fa", ResourceVersion:"68796", Generation:1, CreationTimestamp:time.Date(2025, time.October, 6, 12, 11, 54, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"157670732"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 12, 11, 54, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050fa918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 6, 12, 12, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050fa948), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-dppc5", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00429ace0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dppc5", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dppc5", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dppc5", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004c6aae8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"cncf-1-33-script-2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc005a6fb00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004c6ab60)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004c6ab80)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004c6ab88), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004c6ab8c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004d5d780), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.October, 6, 12, 11, 55, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.October, 6, 12, 11, 54, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.October, 6, 12, 11, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.October, 6, 12, 11, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.October, 6, 12, 11, 54, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.16.108.172", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.16.108.172"}}, PodIP:"10.244.1.242", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.242"}}, StartTime:time.Date(2025, time.October, 6, 12, 11, 54, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003242bd0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003242c40)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://80a6a565a1d7924c3a035ffb0a76126ee9b20a7cc662fa8eadfe71a96f714a50", Started:(*bool)(0xc004c6ac3a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc004bba2a0), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-dppc5", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004d5d7c0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00429ad40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc004c6ac4d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-dppc5", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004d5d7d0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00429ad20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc004c6ac0f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-dppc5", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004d5d790)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1006 12:12:40.267411 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-928" for this suite. @ 10/06/25 12:12:40.27
• [46.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 10/06/25 12:12:40.281
  I1006 12:12:40.281380 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/06/25 12:12:40.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:12:40.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:12:40.298
  I1006 12:12:40.300535 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  E1006 12:12:41.133563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:42.133803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:43.134584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:12:43.357888 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2064" for this suite. @ 10/06/25 12:12:43.361
• [3.086 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 10/06/25 12:12:43.367
  I1006 12:12:43.367526 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename namespaces @ 10/06/25 12:12:43.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:12:43.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:12:43.391
  STEP: Creating a test namespace @ 10/06/25 12:12:43.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:12:43.408
  STEP: Creating a service in the namespace @ 10/06/25 12:12:43.41
  STEP: Deleting the namespace @ 10/06/25 12:12:43.444
  STEP: Waiting for the namespace to be removed. @ 10/06/25 12:12:43.458
  E1006 12:12:44.135593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:45.136219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:46.137270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:47.137399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:48.137881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:49.137872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/06/25 12:12:49.462
  STEP: Verifying there is no service in the namespace @ 10/06/25 12:12:49.476
  I1006 12:12:49.500221 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9464" for this suite. @ 10/06/25 12:12:49.506
  STEP: Destroying namespace "nsdeletetest-7820" for this suite. @ 10/06/25 12:12:49.518
  I1006 12:12:49.521603 24 framework.go:370] Namespace nsdeletetest-7820 was already deleted
  STEP: Destroying namespace "nsdeletetest-1230" for this suite. @ 10/06/25 12:12:49.522
• [6.161 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 10/06/25 12:12:49.529
  I1006 12:12:49.529830 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename svcaccounts @ 10/06/25 12:12:49.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:12:49.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:12:49.549
  I1006 12:12:49.573698 24 service_accounts.go:646] created pod
  E1006 12:12:50.138932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:51.139305      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:52.139362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:53.139823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:12:53.583
  E1006 12:12:54.140454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:55.140809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:56.141931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:57.142848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:58.143084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:12:59.143296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:00.143441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:01.143591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:02.143794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:03.143919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:04.144123      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:05.144509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:06.145180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:07.145532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:08.145842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:09.146148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:10.146648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:11.147281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:12.147764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:13.148186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:14.148836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:15.149528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:16.150138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:17.150744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:18.151395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:19.151767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:20.152194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:21.152882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:22.153433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:23.153922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:23.584568 24 service_accounts.go:652] polling logs
  I1006 12:13:23.605546 24 service_accounts.go:662] Pod logs: 
  I1006 12:12:50.233934       1 log.go:245] OK: Got token
  I1006 12:12:50.234017       1 log.go:245] validating with in-cluster discovery
  I1006 12:12:50.234314       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I1006 12:12:50.234351       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1825:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00014d690), NotBefore:(*jwt.NumericDate)(0xc00014d780), IssuedAt:(*jwt.NumericDate)(0xc00014d6a0), ID:"2f08a843-69c4-4d90-bc2e-e4cecbade4ef"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1825", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"bc4e5193-1ddc-47b7-9bf8-f97c83fd6093"}}}
  I1006 12:12:50.244965       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I1006 12:12:50.249443       1 log.go:245] OK: Validated signature on JWT
  I1006 12:12:50.249523       1 log.go:245] OK: Got valid claims from token!
  I1006 12:12:50.249547       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1825:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00051a0b0), NotBefore:(*jwt.NumericDate)(0xc00051a0d8), IssuedAt:(*jwt.NumericDate)(0xc00051a0b8), ID:"2f08a843-69c4-4d90-bc2e-e4cecbade4ef"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1825", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"bc4e5193-1ddc-47b7-9bf8-f97c83fd6093"}}}

  I1006 12:13:23.605646 24 service_accounts.go:666] completed pod
  I1006 12:13:23.614432 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1825" for this suite. @ 10/06/25 12:13:23.619
• [34.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 10/06/25 12:13:23.628
  I1006 12:13:23.628535 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 12:13:23.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:13:23.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:13:23.648
  STEP: creating service nodeport-test with type=NodePort in namespace services-8229 @ 10/06/25 12:13:23.651
  I1006 12:13:23.708209 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1006 12:13:24.154241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:25.155268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:25.713032 24 resource.go:361] Creating new exec pod
  E1006 12:13:26.155300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:27.155833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:27.746179 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-8229 exec execpodzbmmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1006 12:13:27.861442 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.98.115.63) 80 port [tcp/http] succeeded!\n"
  I1006 12:13:27.861522 24 builder.go:147] stdout: ""
  E1006 12:13:28.156038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:28.746828 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-8229 exec execpodzbmmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1006 12:13:28.862849 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.98.115.63) 80 port [tcp/http] succeeded!\n"
  I1006 12:13:28.862896 24 builder.go:147] stdout: "nodeport-test-58fcd89f8d-d2ckq"
  I1006 12:13:28.863028 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-8229 exec execpodzbmmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.115.63 80'
  I1006 12:13:28.986412 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.115.63 80\nConnection to 10.98.115.63 80 port [tcp/http] succeeded!\n"
  I1006 12:13:28.986507 24 builder.go:147] stdout: "nodeport-test-58fcd89f8d-d2ckq"
  I1006 12:13:28.986668 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-8229 exec execpodzbmmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.108.172 31117'
  I1006 12:13:29.095180 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.108.172 31117\nConnection to 172.16.108.172 31117 port [tcp/*] succeeded!\n"
  I1006 12:13:29.095263 24 builder.go:147] stdout: "nodeport-test-58fcd89f8d-c8nbl"
  I1006 12:13:29.095385 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-8229 exec execpodzbmmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.109.240 31117'
  E1006 12:13:29.156786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:29.206286 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.109.240 31117\nConnection to 172.16.109.240 31117 port [tcp/*] succeeded!\n"
  I1006 12:13:29.206358 24 builder.go:147] stdout: ""
  I1006 12:13:30.095675 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-8229 exec execpodzbmmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.109.240 31117'
  E1006 12:13:30.158872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:30.224897 24 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 172.16.109.240 31117\nConnection to 172.16.109.240 31117 port [tcp/*] succeeded!\n"
  I1006 12:13:30.225002 24 builder.go:147] stdout: ""
  I1006 12:13:31.095988 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-8229 exec execpodzbmmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.109.240 31117'
  E1006 12:13:31.158028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:31.216740 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.109.240 31117\nConnection to 172.16.109.240 31117 port [tcp/*] succeeded!\n"
  I1006 12:13:31.216800 24 builder.go:147] stdout: ""
  I1006 12:13:32.095587 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-8229 exec execpodzbmmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.109.240 31117'
  E1006 12:13:32.158146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:32.221884 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.109.240 31117\nConnection to 172.16.109.240 31117 port [tcp/*] succeeded!\n"
  I1006 12:13:32.221937 24 builder.go:147] stdout: "nodeport-test-58fcd89f8d-d2ckq"
  I1006 12:13:32.222079 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8229" for this suite. @ 10/06/25 12:13:32.225
• [8.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 10/06/25 12:13:32.232
  I1006 12:13:32.233005 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename dns @ 10/06/25 12:13:32.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:13:32.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:13:32.254
  STEP: Creating a test headless service @ 10/06/25 12:13:32.257
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7396.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7396.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7396.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7396.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7396.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-7396.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7396.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-7396.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7396.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-7396.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7396.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-7396.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 137.219.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.219.137_udp@PTR;check="$$(dig +tcp +noall +answer +search 137.219.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.219.137_tcp@PTR;sleep 1; done
   @ 10/06/25 12:13:32.291
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7396.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7396.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7396.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7396.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7396.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7396.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7396.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7396.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7396.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7396.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7396.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7396.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 137.219.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.219.137_udp@PTR;check="$$(dig +tcp +noall +answer +search 137.219.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.219.137_tcp@PTR;sleep 1; done
   @ 10/06/25 12:13:32.291
  STEP: creating a pod to probe DNS @ 10/06/25 12:13:32.291
  STEP: submitting the pod to kubernetes @ 10/06/25 12:13:32.292
  E1006 12:13:33.158520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:34.158828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/06/25 12:13:34.324
  STEP: looking for the results for each expected name from probers @ 10/06/25 12:13:34.326
  I1006 12:13:34.330805 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7396.svc.cluster.local from pod dns-7396/dns-test-ac95277d-f448-47f5-bca8-eb462fd9789c: the server could not find the requested resource (get pods dns-test-ac95277d-f448-47f5-bca8-eb462fd9789c)
  I1006 12:13:34.333970 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7396.svc.cluster.local from pod dns-7396/dns-test-ac95277d-f448-47f5-bca8-eb462fd9789c: the server could not find the requested resource (get pods dns-test-ac95277d-f448-47f5-bca8-eb462fd9789c)
  I1006 12:13:34.337263 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7396.svc.cluster.local from pod dns-7396/dns-test-ac95277d-f448-47f5-bca8-eb462fd9789c: the server could not find the requested resource (get pods dns-test-ac95277d-f448-47f5-bca8-eb462fd9789c)
  I1006 12:13:34.339702 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7396.svc.cluster.local from pod dns-7396/dns-test-ac95277d-f448-47f5-bca8-eb462fd9789c: the server could not find the requested resource (get pods dns-test-ac95277d-f448-47f5-bca8-eb462fd9789c)
  I1006 12:13:34.368059 24 dns_common.go:506] Lookups using dns-7396/dns-test-ac95277d-f448-47f5-bca8-eb462fd9789c failed for: [agnhost_udp@dns-test-service.dns-7396.svc.cluster.local agnhost_tcp@dns-test-service.dns-7396.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7396.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7396.svc.cluster.local]

  I1006 12:13:34.372083 24 dns_common.go:514] Pod client logs for webserver: 
  I1006 12:13:34.375618 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I1006 12:13:34.379418 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E1006 12:13:35.159457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:36.159786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:37.160409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:38.161020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:39.161141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:39.372713 24 dns_common.go:546] DNS probes using dns-7396/dns-test-ac95277d-f448-47f5-bca8-eb462fd9789c succeeded

  STEP: deleting the pod @ 10/06/25 12:13:39.372
  STEP: deleting the test service @ 10/06/25 12:13:39.385
  STEP: deleting the test headless service @ 10/06/25 12:13:39.434
  I1006 12:13:39.454799 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7396" for this suite. @ 10/06/25 12:13:39.464
• [7.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 10/06/25 12:13:39.472
  I1006 12:13:39.472385 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 12:13:39.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:13:39.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:13:39.498
  STEP: creating service in namespace services-4196 @ 10/06/25 12:13:39.501
  STEP: creating service affinity-clusterip in namespace services-4196 @ 10/06/25 12:13:39.501
  I1006 12:13:39.549141 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1006 12:13:40.161914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:41.162021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:41.564802 24 resource.go:361] Creating new exec pod
  E1006 12:13:42.162324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:43.162759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:43.588961 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-4196 exec execpod-affinitypdxlq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1006 12:13:43.719980 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.109.129.233) 80 port [tcp/http] succeeded!\n"
  I1006 12:13:43.720052 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 12:13:43.720162 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-4196 exec execpod-affinitypdxlq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.129.233 80'
  I1006 12:13:43.850812 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.129.233 80\nConnection to 10.109.129.233 80 port [tcp/http] succeeded!\n"
  I1006 12:13:43.850996 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 12:13:43.851103 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-4196 exec execpod-affinitypdxlq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/ ; done'
  I1006 12:13:44.035160 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.109.129.233:80/\n"
  I1006 12:13:44.035271 24 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl\naffinity-clusterip-6dd57cf8dc-hlzbl"
  I1006 12:13:44.035309 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.035504 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.035527 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.035547 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.035693 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.035713 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.035832 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.035952 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.036064 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.036218 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.036322 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.036343 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.036456 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.036594 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.036834 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.036937 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hlzbl
  I1006 12:13:44.037143 24 service.go:4352] Cleaning up the exec pod
  I1006 12:13:44.136154 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4196" for this suite. @ 10/06/25 12:13:44.149
• [4.684 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 10/06/25 12:13:44.156
  I1006 12:13:44.156865 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 12:13:44.157
  E1006 12:13:44.163337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:13:44.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:13:44.17
  STEP: creating a Service @ 10/06/25 12:13:44.176
  STEP: watching for the Service to be added @ 10/06/25 12:13:44.204
  I1006 12:13:44.206861 24 service.go:3456] Found Service test-service-5qch8 in namespace services-7616 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30509}]
  I1006 12:13:44.206899 24 service.go:3463] Service test-service-5qch8 created
  STEP: Getting /status @ 10/06/25 12:13:44.206
  I1006 12:13:44.209558 24 service.go:3474] Service test-service-5qch8 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 10/06/25 12:13:44.209
  STEP: watching for the Service to be patched @ 10/06/25 12:13:44.22
  I1006 12:13:44.222554 24 service.go:3497] observed Service test-service-5qch8 in namespace services-7616 with annotations: map[] & LoadBalancer: {[]}
  I1006 12:13:44.222624 24 service.go:3500] Found Service test-service-5qch8 in namespace services-7616 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0040e17c0 []}]}
  I1006 12:13:44.222637 24 service.go:3507] Service test-service-5qch8 has service status patched
  STEP: updating the ServiceStatus @ 10/06/25 12:13:44.222
  I1006 12:13:44.241799 24 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 10/06/25 12:13:44.241
  I1006 12:13:44.243754 24 service.go:3538] Observed Service test-service-5qch8 in namespace services-7616 with annotations: map[] & Conditions: []
  I1006 12:13:44.243846 24 service.go:3549] Observed Service test-service-5qch8 in namespace services-7616 with annotations: map[patchedstatus:true] & Conditions: []
  I1006 12:13:44.243901 24 service.go:3545] Found Service test-service-5qch8 in namespace services-7616 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1006 12:13:44.243941 24 service.go:3556] Service test-service-5qch8 has service status updated
  STEP: patching the service @ 10/06/25 12:13:44.244
  STEP: watching for the Service to be patched @ 10/06/25 12:13:44.251
  I1006 12:13:44.253340 24 service.go:3579] observed Service test-service-5qch8 in namespace services-7616 with labels: map[test-service-static:true]
  I1006 12:13:44.253388 24 service.go:3579] observed Service test-service-5qch8 in namespace services-7616 with labels: map[test-service-static:true]
  I1006 12:13:44.253402 24 service.go:3579] observed Service test-service-5qch8 in namespace services-7616 with labels: map[test-service-static:true]
  I1006 12:13:44.253454 24 service.go:3582] Found Service test-service-5qch8 in namespace services-7616 with labels: map[test-service:patched test-service-static:true]
  I1006 12:13:44.253473 24 service.go:3589] Service test-service-5qch8 patched
  STEP: deleting the service @ 10/06/25 12:13:44.253
  STEP: watching for the Service to be deleted @ 10/06/25 12:13:44.287
  I1006 12:13:44.289050 24 service.go:3613] Observed event: ADDED
  I1006 12:13:44.289227 24 service.go:3613] Observed event: MODIFIED
  I1006 12:13:44.289272 24 service.go:3613] Observed event: MODIFIED
  I1006 12:13:44.289306 24 service.go:3613] Observed event: MODIFIED
  I1006 12:13:44.289396 24 service.go:3609] Found Service test-service-5qch8 in namespace services-7616 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1006 12:13:44.289409 24 service.go:3618] Service test-service-5qch8 deleted
  I1006 12:13:44.289630 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7616" for this suite. @ 10/06/25 12:13:44.293
• [0.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 10/06/25 12:13:44.302
  I1006 12:13:44.302302 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 12:13:44.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:13:44.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:13:44.317
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/06/25 12:13:44.322
  E1006 12:13:45.163736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:46.163937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:47.164824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:48.165385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:13:48.355
  I1006 12:13:48.359523 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-16f17149-d5b9-4674-b95f-c501b34d953e container test-container: <nil>
  STEP: delete the pod @ 10/06/25 12:13:48.366
  I1006 12:13:48.387424 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6008" for this suite. @ 10/06/25 12:13:48.39
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 10/06/25 12:13:48.399
  I1006 12:13:48.399554 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:13:48.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:13:48.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:13:48.421
  STEP: Setting up server cert @ 10/06/25 12:13:48.448
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:13:48.715
  STEP: Deploying the webhook pod @ 10/06/25 12:13:48.727
  STEP: Wait for the deployment to be ready @ 10/06/25 12:13:48.745
  I1006 12:13:48.755087 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1006 12:13:49.166333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:50.166674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/06/25 12:13:50.763
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:13:50.79
  E1006 12:13:51.167533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:51.791339 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 10/06/25 12:13:51.795
  STEP: create a configmap that should be updated by the webhook @ 10/06/25 12:13:51.816
  I1006 12:13:51.919994 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7873" for this suite. @ 10/06/25 12:13:51.926
  STEP: Destroying namespace "webhook-markers-1617" for this suite. @ 10/06/25 12:13:51.934
• [3.545 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 10/06/25 12:13:51.944
  I1006 12:13:51.944814 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename init-container @ 10/06/25 12:13:51.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:13:51.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:13:51.968
  STEP: creating the pod @ 10/06/25 12:13:51.971
  I1006 12:13:51.971095 24 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E1006 12:13:52.168269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:53.168651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:54.168882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:55.169159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:13:55.492871 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5063" for this suite. @ 10/06/25 12:13:55.496
• [3.559 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 10/06/25 12:13:55.503
  I1006 12:13:55.503670 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 12:13:55.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:13:55.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:13:55.527
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/06/25 12:13:55.53
  E1006 12:13:56.170226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:57.170550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:58.170817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:13:59.171091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:13:59.554
  I1006 12:13:59.556872 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-c9912c62-7616-4e17-aeb4-c2fa50e2ce54 container test-container: <nil>
  STEP: delete the pod @ 10/06/25 12:13:59.563
  I1006 12:13:59.585830 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3114" for this suite. @ 10/06/25 12:13:59.588
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 10/06/25 12:13:59.595
  I1006 12:13:59.595449 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 12:13:59.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:13:59.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:13:59.611
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/06/25 12:13:59.614
  E1006 12:14:00.171526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:01.171988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:02.173123      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:03.173644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:14:03.641
  I1006 12:14:03.644429 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-819d9152-6140-444c-9d57-e9eaf62a4727 container test-container: <nil>
  STEP: delete the pod @ 10/06/25 12:14:03.675
  I1006 12:14:03.695757 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8636" for this suite. @ 10/06/25 12:14:03.698
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 10/06/25 12:14:03.707
  I1006 12:14:03.707290 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename podtemplate @ 10/06/25 12:14:03.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:03.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:03.732
  STEP: Create set of pod templates @ 10/06/25 12:14:03.735
  I1006 12:14:03.743285 24 podtemplates.go:143] created test-podtemplate-1
  I1006 12:14:03.753308 24 podtemplates.go:143] created test-podtemplate-2
  I1006 12:14:03.760431 24 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 10/06/25 12:14:03.76
  STEP: delete collection of pod templates @ 10/06/25 12:14:03.762
  I1006 12:14:03.762884 24 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 10/06/25 12:14:03.786
  I1006 12:14:03.786476 24 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1006 12:14:03.789127 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4655" for this suite. @ 10/06/25 12:14:03.799
• [0.103 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 10/06/25 12:14:03.81
  I1006 12:14:03.810507 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-runtime @ 10/06/25 12:14:03.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:03.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:03.827
  STEP: create the container @ 10/06/25 12:14:03.831
  I1006 12:14:03.845639      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 10/06/25 12:14:03.845
  E1006 12:14:04.173713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:05.174576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:06.174764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/06/25 12:14:06.861
  STEP: the container should be terminated @ 10/06/25 12:14:06.863
  STEP: the termination message should be set @ 10/06/25 12:14:06.863
  I1006 12:14:06.863521 24 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/06/25 12:14:06.863
  I1006 12:14:06.884984 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2208" for this suite. @ 10/06/25 12:14:06.887
• [3.084 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 10/06/25 12:14:06.894
  I1006 12:14:06.894775 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-selectable-fields @ 10/06/25 12:14:06.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:06.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:06.913
  STEP: Setting up server cert @ 10/06/25 12:14:06.916
  E1006 12:14:07.175804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/06/25 12:14:07.536
  STEP: Deploying the custom resource conversion webhook pod @ 10/06/25 12:14:07.546
  STEP: Wait for the deployment to be ready @ 10/06/25 12:14:07.563
  I1006 12:14:07.575205 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1006 12:14:08.176936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:09.177221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/06/25 12:14:09.583
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:14:09.615
  E1006 12:14:10.177629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:14:10.617067 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 10/06/25 12:14:10.62
  I1006 12:14:10.620977 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Creating a custom resource conversion webhook @ 10/06/25 12:14:11.136
  E1006 12:14:11.178352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:12.178893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:13.179531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 10/06/25 12:14:13.188
  STEP: Registering informers with field selectors @ 10/06/25 12:14:13.192
  STEP: Creating custom resources @ 10/06/25 12:14:13.192
  STEP: Listing v2 custom resources with field selector host=host1 @ 10/06/25 12:14:13.226
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 10/06/25 12:14:13.234
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 10/06/25 12:14:13.238
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 10/06/25 12:14:13.24
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 10/06/25 12:14:13.243
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 10/06/25 12:14:13.249
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 10/06/25 12:14:13.249
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 10/06/25 12:14:13.249
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 10/06/25 12:14:13.249
  STEP: Deleting one custom resources to ensure that deletions are observed @ 10/06/25 12:14:13.249
  STEP: Updating one custom resources to ensure that deletions are observed @ 10/06/25 12:14:13.265
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 10/06/25 12:14:13.286
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 10/06/25 12:14:13.29
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 10/06/25 12:14:13.292
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 10/06/25 12:14:13.298
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 10/06/25 12:14:13.298
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 10/06/25 12:14:13.298
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 10/06/25 12:14:13.298
  I1006 12:14:13.905508 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-9085" for this suite. @ 10/06/25 12:14:13.909
• [7.037 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 10/06/25 12:14:13.932
  I1006 12:14:13.932417 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 12:14:13.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:13.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:13.966
  STEP: Creating configMap with name configmap-test-volume-18256429-f28f-4de3-bc5f-4c7125d51916 @ 10/06/25 12:14:13.97
  STEP: Creating a pod to test consume configMaps @ 10/06/25 12:14:13.978
  E1006 12:14:14.180538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:15.181255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:16.182160      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:17.182576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:14:18.007
  I1006 12:14:18.010648 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-configmaps-b8841a88-f7c1-4618-89cb-5084b2cc673e container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 12:14:18.016
  I1006 12:14:18.056058 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-690" for this suite. @ 10/06/25 12:14:18.06
• [4.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 10/06/25 12:14:18.071
  I1006 12:14:18.071201 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename disruption @ 10/06/25 12:14:18.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:18.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:18.103
  STEP: Creating a kubernetes client @ 10/06/25 12:14:18.107
  I1006 12:14:18.107258 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename disruption-2 @ 10/06/25 12:14:18.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:18.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:18.126
  STEP: Waiting for the pdb to be processed @ 10/06/25 12:14:18.14
  E1006 12:14:18.183006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:19.183401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 10/06/25 12:14:20.15
  E1006 12:14:20.183568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:21.183885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 10/06/25 12:14:22.16
  STEP: listing a collection of PDBs across all namespaces @ 10/06/25 12:14:22.169
  STEP: listing a collection of PDBs in namespace disruption-6721 @ 10/06/25 12:14:22.172
  STEP: deleting a collection of PDBs @ 10/06/25 12:14:22.177
  E1006 12:14:22.184772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the PDB collection to be deleted @ 10/06/25 12:14:22.193
  I1006 12:14:22.195765 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4094" for this suite. @ 10/06/25 12:14:22.2
  I1006 12:14:22.215016 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6721" for this suite. @ 10/06/25 12:14:22.302
• [4.240 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 10/06/25 12:14:22.312
  I1006 12:14:22.312698 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename namespaces @ 10/06/25 12:14:22.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:22.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:22.34
  STEP: Updating Namespace "namespaces-1069" @ 10/06/25 12:14:22.344
  I1006 12:14:22.357985 24 namespace.go:390] Namespace "namespaces-1069" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"8e4a5c1b-e1c8-4795-a43a-8c67c9ce2a95", "kubernetes.io/metadata.name":"namespaces-1069", "namespaces-1069":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1006 12:14:22.358335 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1069" for this suite. @ 10/06/25 12:14:22.401
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 10/06/25 12:14:22.413
  I1006 12:14:22.413237 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:14:22.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:22.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:22.439
  STEP: Setting up server cert @ 10/06/25 12:14:22.471
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:14:22.717
  STEP: Deploying the webhook pod @ 10/06/25 12:14:22.726
  STEP: Wait for the deployment to be ready @ 10/06/25 12:14:22.751
  I1006 12:14:22.764202 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1006 12:14:23.185702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:24.186163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/06/25 12:14:24.773
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:14:24.796
  E1006 12:14:25.186803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:14:25.796410 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1006 12:14:25.800014 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  E1006 12:14:26.187741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4695-crds.webhook.example.com via the AdmissionRegistration API @ 10/06/25 12:14:26.312
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/06/25 12:14:26.335
  E1006 12:14:27.188252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:28.188352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:14:28.962420 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4381" for this suite. @ 10/06/25 12:14:28.966
  STEP: Destroying namespace "webhook-markers-5276" for this suite. @ 10/06/25 12:14:28.973
• [6.568 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 10/06/25 12:14:28.981
  I1006 12:14:28.981089 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 12:14:28.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:28.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:28.999
  STEP: Creating a pod to test downward api env vars @ 10/06/25 12:14:29.002
  E1006 12:14:29.189325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:30.189852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:31.190371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:32.191270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:14:33.02
  I1006 12:14:33.023015 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downward-api-ecbb2f1d-1c80-49c0-899e-0eaf7052e38d container dapi-container: <nil>
  STEP: delete the pod @ 10/06/25 12:14:33.03
  I1006 12:14:33.048118 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8000" for this suite. @ 10/06/25 12:14:33.051
• [4.079 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 10/06/25 12:14:33.061
  I1006 12:14:33.061129 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replicaset @ 10/06/25 12:14:33.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:33.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:33.079
  STEP: Create a ReplicaSet @ 10/06/25 12:14:33.083
  STEP: Verify that the required pods have come up @ 10/06/25 12:14:33.089
  I1006 12:14:33.093533 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  E1006 12:14:33.191864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:34.192037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:35.192378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:36.192862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:37.193329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:14:38.167250 24 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 10/06/25 12:14:38.167
  I1006 12:14:38.169387 24 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 10/06/25 12:14:38.169
  E1006 12:14:38.193623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: DeleteCollection of the ReplicaSets @ 10/06/25 12:14:38.203
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 10/06/25 12:14:38.213
  I1006 12:14:38.304344 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1075" for this suite. @ 10/06/25 12:14:38.307
• [5.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 10/06/25 12:14:38.325
  I1006 12:14:38.325051 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:14:38.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:38.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:38.338
  STEP: Creating configMap with name projected-configmap-test-volume-a282dd1b-ea03-4f24-9ff3-24a9d91ec64e @ 10/06/25 12:14:38.341
  STEP: Creating a pod to test consume configMaps @ 10/06/25 12:14:38.35
  E1006 12:14:39.194166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:40.194329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:41.194552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:42.194817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:14:42.369
  I1006 12:14:42.372165 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-projected-configmaps-85c865b4-718c-40e7-8901-b9c3876a17ed container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 12:14:42.377
  I1006 12:14:42.405282 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8128" for this suite. @ 10/06/25 12:14:42.409
• [4.090 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 10/06/25 12:14:42.415
  I1006 12:14:42.415682 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename limitrange @ 10/06/25 12:14:42.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:42.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:42.434
  STEP: Creating a LimitRange @ 10/06/25 12:14:42.439
  STEP: Setting up watch @ 10/06/25 12:14:42.439
  STEP: Submitting a LimitRange @ 10/06/25 12:14:42.542
  STEP: Verifying LimitRange creation was observed @ 10/06/25 12:14:42.55
  STEP: Fetching the LimitRange to ensure it has proper values @ 10/06/25 12:14:42.55
  I1006 12:14:42.553063 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1006 12:14:42.553354 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 10/06/25 12:14:42.553
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 10/06/25 12:14:42.561
  I1006 12:14:42.564918 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1006 12:14:42.565316 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 10/06/25 12:14:42.565
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 10/06/25 12:14:42.585
  I1006 12:14:42.589133 24 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1006 12:14:42.589486 24 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 10/06/25 12:14:42.589
  STEP: Failing to create a Pod with more than max resources @ 10/06/25 12:14:42.592
  STEP: Updating a LimitRange @ 10/06/25 12:14:42.595
  STEP: Verifying LimitRange updating is effective @ 10/06/25 12:14:42.601
  E1006 12:14:43.195589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:44.196097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 10/06/25 12:14:44.605
  STEP: Failing to create a Pod with more than max resources @ 10/06/25 12:14:44.615
  STEP: Deleting a LimitRange @ 10/06/25 12:14:44.618
  STEP: Verifying the LimitRange was deleted @ 10/06/25 12:14:44.633
  E1006 12:14:45.196967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:46.197524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:47.197678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:48.198218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:49.198340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:14:49.639038 24 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 10/06/25 12:14:49.639
  I1006 12:14:49.652543 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7982" for this suite. @ 10/06/25 12:14:49.657
• [7.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 10/06/25 12:14:49.682
  I1006 12:14:49.682771 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sched-preemption @ 10/06/25 12:14:49.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:14:49.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:14:49.708
  I1006 12:14:49.732226 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E1006 12:14:50.198460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:51.198683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:52.198891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:53.199367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:54.199450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:55.200104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:56.201021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:57.201130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:58.201837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:14:59.202206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:00.203021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:01.203334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:02.204445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:03.204886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:04.205713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:05.205990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:06.207011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:07.207396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:08.207383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:09.207743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:10.207793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:11.208249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:12.209188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:13.209472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:14.209627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:15.210092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:16.210483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:17.211219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:18.211344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:19.211693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:20.211772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:21.212113      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:22.213187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:23.213546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:24.213966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:25.214204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:26.214332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:27.214817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:28.215005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:29.215349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:30.215782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:31.216022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:32.216354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:33.217254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:34.218185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:35.218476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:36.218674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:37.219041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:38.219200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:39.219942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:40.219997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:41.220137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:42.220998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:43.221197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:44.222244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:45.222389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:46.222866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:47.223035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:48.224101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:49.224330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:15:49.736592 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/06/25 12:15:49.738
  STEP: Adding a custom resource @ 10/06/25 12:15:49.738
  I1006 12:15:49.769177 24 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I1006 12:15:49.781329 24 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 10/06/25 12:15:49.781
  I1006 12:15:49.809760 24 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I1006 12:15:49.824838 24 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/06/25 12:15:49.824
  E1006 12:15:50.224807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:51.225168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 10/06/25 12:15:51.84
  E1006 12:15:52.225584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:53.225836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 10/06/25 12:15:53.908
  STEP: Removing a custom resource @ 10/06/25 12:15:53.924
  I1006 12:15:53.939092 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9972" for this suite. @ 10/06/25 12:15:53.941
• [64.266 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 10/06/25 12:15:53.949
  I1006 12:15:53.949077 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 12:15:53.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:15:53.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:15:53.966
  STEP: creating secret secrets-6065/secret-test-abc09190-f4f8-402a-bb78-053b07aab41b @ 10/06/25 12:15:53.971
  STEP: Creating a pod to test consume secrets @ 10/06/25 12:15:53.977
  E1006 12:15:54.226970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:55.227327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:15:55.992
  I1006 12:15:55.995394 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-configmaps-6e8e9c71-6840-423b-b6d6-b3dba4f5d6c2 container env-test: <nil>
  STEP: delete the pod @ 10/06/25 12:15:56.001
  I1006 12:15:56.023528 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6065" for this suite. @ 10/06/25 12:15:56.026
• [2.094 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 10/06/25 12:15:56.042
  I1006 12:15:56.042910 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:15:56.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:15:56.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:15:56.058
  STEP: Setting up server cert @ 10/06/25 12:15:56.089
  E1006 12:15:56.227688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:15:57.067
  STEP: Deploying the webhook pod @ 10/06/25 12:15:57.075
  STEP: Wait for the deployment to be ready @ 10/06/25 12:15:57.096
  I1006 12:15:57.107178 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1006 12:15:57.228380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:15:58.228950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/06/25 12:15:59.117
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:15:59.15
  E1006 12:15:59.229910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:00.150855 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/06/25 12:16:00.154
  STEP: verifying the mutating webhook match conditions @ 10/06/25 12:16:00.166
  STEP: updating the mutating webhook match conditions @ 10/06/25 12:16:00.169
  STEP: verifying the mutating webhook match conditions @ 10/06/25 12:16:00.183
  E1006 12:16:00.230386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:00.266705 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-694" for this suite. @ 10/06/25 12:16:00.269
  STEP: Destroying namespace "webhook-markers-1202" for this suite. @ 10/06/25 12:16:00.28
• [4.252 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 10/06/25 12:16:00.294
  I1006 12:16:00.294742 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename apf @ 10/06/25 12:16:00.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:16:00.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:16:00.318
  STEP: getting /apis @ 10/06/25 12:16:00.321
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/06/25 12:16:00.324
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/06/25 12:16:00.326
  STEP: creating @ 10/06/25 12:16:00.327
  STEP: getting @ 10/06/25 12:16:00.356
  STEP: listing @ 10/06/25 12:16:00.363
  STEP: watching @ 10/06/25 12:16:00.365
  I1006 12:16:00.365450 24 flowcontrol.go:394] starting watch
  STEP: patching @ 10/06/25 12:16:00.366
  STEP: updating @ 10/06/25 12:16:00.373
  I1006 12:16:00.385867 24 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 10/06/25 12:16:00.386
  STEP: patching /status @ 10/06/25 12:16:00.389
  STEP: updating /status @ 10/06/25 12:16:00.397
  STEP: deleting @ 10/06/25 12:16:00.434
  STEP: deleting a collection @ 10/06/25 12:16:00.444
  I1006 12:16:00.462007 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5417" for this suite. @ 10/06/25 12:16:00.464
• [0.181 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 10/06/25 12:16:00.476
  I1006 12:16:00.476091 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename security-context-test @ 10/06/25 12:16:00.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:16:00.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:16:00.49
  E1006 12:16:01.230995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:02.231423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:03.232232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:04.232835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:04.537546 24 security_context.go:619] Got logs for pod "busybox-privileged-false-f780bfed-fb74-460c-baff-990b8f068964": "ip: RTNETLINK answers: Operation not permitted\n"
  I1006 12:16:04.545329 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4490" for this suite. @ 10/06/25 12:16:04.549
• [4.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 10/06/25 12:16:04.557
  I1006 12:16:04.557429 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:16:04.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:16:04.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:16:04.584
  STEP: Setting up server cert @ 10/06/25 12:16:04.606
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:16:04.981
  STEP: Deploying the webhook pod @ 10/06/25 12:16:04.99
  STEP: Wait for the deployment to be ready @ 10/06/25 12:16:05.014
  I1006 12:16:05.039548 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1006 12:16:05.233792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:06.234461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:07.054847 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:16:07.235493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:08.235893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:09.059553 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:16:09.237115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:10.237494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:11.058540 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:16:11.237773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:12.238110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:13.059615 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 16, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:16:13.238824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:14.239089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/06/25 12:16:15.058
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:16:15.087
  E1006 12:16:15.239257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:16.088202 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1006 12:16:16.091650 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  E1006 12:16:16.240292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1889-crds.webhook.example.com via the AdmissionRegistration API @ 10/06/25 12:16:16.606
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/06/25 12:16:16.626
  E1006 12:16:17.240349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:18.240663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:19.240798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:19.261088 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7690" for this suite. @ 10/06/25 12:16:19.264
  STEP: Destroying namespace "webhook-markers-1104" for this suite. @ 10/06/25 12:16:19.274
• [14.725 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 10/06/25 12:16:19.284
  I1006 12:16:19.284882 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replication-controller @ 10/06/25 12:16:19.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:16:19.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:16:19.312
  STEP: Given a ReplicationController is created @ 10/06/25 12:16:19.315
  STEP: When the matched label of one of its pods change @ 10/06/25 12:16:19.326
  I1006 12:16:19.329188 24 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  E1006 12:16:20.240974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:21.241671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:22.241832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:23.242511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:24.242658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:24.385510 24 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/06/25 12:16:24.397
  E1006 12:16:25.242709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:25.405097 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1014" for this suite. @ 10/06/25 12:16:25.409
• [6.137 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 10/06/25 12:16:25.423
  I1006 12:16:25.423294 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 12:16:25.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:16:25.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:16:25.442
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 12:16:25.446
  E1006 12:16:26.242884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:27.243298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:28.243721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:29.244073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:16:29.472
  I1006 12:16:29.476371 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod downwardapi-volume-4fdddc99-68dc-475c-aaf5-493853bd34d1 container client-container: <nil>
  STEP: delete the pod @ 10/06/25 12:16:29.492
  I1006 12:16:29.520016 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8872" for this suite. @ 10/06/25 12:16:29.523
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 10/06/25 12:16:29.541
  I1006 12:16:29.541356 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:16:29.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:16:29.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:16:29.559
  STEP: Setting up server cert @ 10/06/25 12:16:29.583
  E1006 12:16:30.245003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:16:30.491
  STEP: Deploying the webhook pod @ 10/06/25 12:16:30.499
  STEP: Wait for the deployment to be ready @ 10/06/25 12:16:30.53
  I1006 12:16:30.540112 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1006 12:16:31.246226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:32.247198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/06/25 12:16:32.552
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:16:32.583
  E1006 12:16:33.247600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:33.585016 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/06/25 12:16:33.589
  STEP: verifying the validating webhook match conditions @ 10/06/25 12:16:33.601
  STEP: updating the validating webhook match conditions @ 10/06/25 12:16:33.604
  STEP: verifying the validating webhook match conditions @ 10/06/25 12:16:33.622
  I1006 12:16:33.703259 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6448" for this suite. @ 10/06/25 12:16:33.707
  STEP: Destroying namespace "webhook-markers-7031" for this suite. @ 10/06/25 12:16:33.721
• [4.194 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 10/06/25 12:16:33.737
  I1006 12:16:33.737599 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pods @ 10/06/25 12:16:33.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:16:33.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:16:33.76
  STEP: creating the pod @ 10/06/25 12:16:33.763
  STEP: submitting the pod to kubernetes @ 10/06/25 12:16:33.764
  STEP: verifying QOS class is set on the pod @ 10/06/25 12:16:33.779
  I1006 12:16:33.782316 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7331" for this suite. @ 10/06/25 12:16:33.807
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 10/06/25 12:16:33.817
  I1006 12:16:33.817883 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pod-network-test @ 10/06/25 12:16:33.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:16:33.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:16:33.839
  STEP: Performing setup for networking test in namespace pod-network-test-5265 @ 10/06/25 12:16:33.842
  STEP: creating a selector @ 10/06/25 12:16:33.842
  STEP: Creating the service pods in kubernetes @ 10/06/25 12:16:33.842
  I1006 12:16:33.842838 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1006 12:16:34.247608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:35.248030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:36.249088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:37.249639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:38.250351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:39.250730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:40.251508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:41.251976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:42.253004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:43.254677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:44.255559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:45.255891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/06/25 12:16:45.978
  E1006 12:16:46.256761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:47.257150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:47.993399 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1006 12:16:47.993431 24 networking.go:42] Breadth first check of 10.244.1.19 on host 172.16.108.172...
  I1006 12:16:47.996370 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.20:9080/dial?request=hostname&protocol=http&host=10.244.1.19&port=8083&tries=1'] Namespace:pod-network-test-5265 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:16:47.996647 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:16:47.997024 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5265/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.20%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.19%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I1006 12:16:48.066249 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:16:48.066332 24 utils.go:355] Waiting for responses: map[]
  I1006 12:16:48.066357 24 utils.go:359] reached 10.244.1.19 after 0/1 tries
  I1006 12:16:48.066375 24 networking.go:42] Breadth first check of 10.244.2.213 on host 172.16.109.240...
  I1006 12:16:48.069090 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.20:9080/dial?request=hostname&protocol=http&host=10.244.2.213&port=8083&tries=1'] Namespace:pod-network-test-5265 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:16:48.069135 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:16:48.069212 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5265/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.20%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.213%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I1006 12:16:48.122412 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:16:48.122578 24 utils.go:355] Waiting for responses: map[]
  I1006 12:16:48.122796 24 utils.go:359] reached 10.244.2.213 after 0/1 tries
  I1006 12:16:48.122916 24 networking.go:53] Going to retry 0 out of 2 pods....
  I1006 12:16:48.123157 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5265" for this suite. @ 10/06/25 12:16:48.126
• [14.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 10/06/25 12:16:48.133
  I1006 12:16:48.133299 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/06/25 12:16:48.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:16:48.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:16:48.157
  I1006 12:16:48.159890 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  E1006 12:16:48.257946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:49.258484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/06/25 12:16:49.4
  I1006 12:16:49.400702 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-4310 --namespace=crd-publish-openapi-4310 create -f -'
  E1006 12:16:50.259372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:51.259739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:51.518891 24 builder.go:146] stderr: ""
  I1006 12:16:51.518936 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7421-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1006 12:16:51.518989 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-4310 --namespace=crd-publish-openapi-4310 delete e2e-test-crd-publish-openapi-7421-crds test-cr'
  I1006 12:16:51.610355 24 builder.go:146] stderr: ""
  I1006 12:16:51.610419 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7421-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1006 12:16:51.610479 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-4310 --namespace=crd-publish-openapi-4310 apply -f -'
  I1006 12:16:51.689801 24 builder.go:146] stderr: ""
  I1006 12:16:51.689864 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7421-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1006 12:16:51.689927 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-4310 --namespace=crd-publish-openapi-4310 delete e2e-test-crd-publish-openapi-7421-crds test-cr'
  I1006 12:16:51.761441 24 builder.go:146] stderr: ""
  I1006 12:16:51.761531 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7421-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/06/25 12:16:51.761
  I1006 12:16:51.762111 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-4310 explain e2e-test-crd-publish-openapi-7421-crds'
  I1006 12:16:51.827839 24 builder.go:146] stderr: ""
  I1006 12:16:51.827891 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7421-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1006 12:16:52.260935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:53.089472 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4310" for this suite. @ 10/06/25 12:16:53.097
• [4.970 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 10/06/25 12:16:53.103
  I1006 12:16:53.103981 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pods @ 10/06/25 12:16:53.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:16:53.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:16:53.121
  STEP: Create set of pods @ 10/06/25 12:16:53.124
  I1006 12:16:53.138947 24 pods.go:874] created test-pod-1
  I1006 12:16:53.148296 24 pods.go:874] created test-pod-2
  I1006 12:16:53.160836 24 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 10/06/25 12:16:53.16
  E1006 12:16:53.261568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:54.261718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 10/06/25 12:16:55.215
  E1006 12:16:55.262322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:55.283382 24 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I1006 12:16:56.218858 24 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E1006 12:16:56.263006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:57.219841 24 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E1006 12:16:57.263991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:16:58.218665 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9396" for this suite. @ 10/06/25 12:16:58.222
• [5.128 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 10/06/25 12:16:58.232
  I1006 12:16:58.232915 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:16:58.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:16:58.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:16:58.25
  STEP: Creating a pod to test downward API volume plugin @ 10/06/25 12:16:58.254
  E1006 12:16:58.264427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:16:59.265311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:00.265760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:01.266806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:02.267287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:17:02.316
  I1006 12:17:02.319253 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downwardapi-volume-f16020c8-8890-4054-a2be-b5a7545634ef container client-container: <nil>
  STEP: delete the pod @ 10/06/25 12:17:02.324
  I1006 12:17:02.348613 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6051" for this suite. @ 10/06/25 12:17:02.351
• [4.130 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 10/06/25 12:17:02.363
  I1006 12:17:02.363256 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 12:17:02.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:17:02.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:17:02.382
  STEP: Creating secret with name secret-test-1d6a012b-c027-4c40-a754-34ed5b1787a9 @ 10/06/25 12:17:02.386
  STEP: Creating a pod to test consume secrets @ 10/06/25 12:17:02.393
  E1006 12:17:03.267584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:04.268372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:05.268637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:06.269043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:17:06.419
  I1006 12:17:06.421652 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-secrets-f4abe47b-59c2-43da-a361-3bb721d0e875 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 12:17:06.426
  I1006 12:17:06.448466 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2487" for this suite. @ 10/06/25 12:17:06.451
• [4.102 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 10/06/25 12:17:06.465
  I1006 12:17:06.465438 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename proxy @ 10/06/25 12:17:06.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:17:06.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:17:06.483
  I1006 12:17:06.486095 24 proxy.go:336] Creating pod...
  E1006 12:17:07.269337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:08.269773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:17:08.498948 24 proxy.go:360] Creating service...
  I1006 12:17:08.521408 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/DELETE
  E1006 12:17:09.270735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:10.271148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:11.271399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:12.271578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:13.272171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:14.272337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:15.272964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:16.273119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:17.273751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:18.274379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:19.276842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:20.276037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:21.276658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:22.277303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:23.278139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:17:23.855148 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1006 12:17:23.855271 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/GET
  I1006 12:17:23.858987 24 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1006 12:17:23.859061 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/HEAD
  I1006 12:17:23.862154 24 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I1006 12:17:23.862295 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/OPTIONS
  I1006 12:17:23.865310 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1006 12:17:23.865359 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/PATCH
  I1006 12:17:23.868066 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1006 12:17:23.868414 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/POST
  I1006 12:17:23.871832 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1006 12:17:23.871944 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/PUT
  I1006 12:17:23.874358 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1006 12:17:23.874636 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/DELETE
  I1006 12:17:23.877863 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1006 12:17:23.877909 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/GET
  I1006 12:17:23.880843 24 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1006 12:17:23.880998 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/HEAD
  I1006 12:17:23.884131 24 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I1006 12:17:23.884175 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/OPTIONS
  I1006 12:17:23.887404 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1006 12:17:23.887562 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/PATCH
  I1006 12:17:23.890773 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1006 12:17:23.890822 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/POST
  I1006 12:17:23.893730 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1006 12:17:23.893778 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/PUT
  I1006 12:17:23.896952 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1006 12:17:23.897369 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2208" for this suite. @ 10/06/25 12:17:23.9
• [17.442 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 10/06/25 12:17:23.908
  I1006 12:17:23.908305 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl-logs @ 10/06/25 12:17:23.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:17:23.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:17:23.928
  STEP: creating a pod @ 10/06/25 12:17:23.93
  I1006 12:17:23.931040 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-logs-7062 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1006 12:17:24.016839 24 builder.go:146] stderr: ""
  I1006 12:17:24.016889 24 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 10/06/25 12:17:24.016
  I1006 12:17:24.017006 24 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1006 12:17:24.278801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:25.279213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:17:26.033013 24 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 10/06/25 12:17:26.033
  I1006 12:17:26.033183 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-logs-7062 logs logs-generator logs-generator'
  I1006 12:17:26.127599 24 builder.go:146] stderr: ""
  I1006 12:17:26.127689 24 builder.go:147] stdout: "I1006 12:17:24.751985       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/7htj 483\nI1006 12:17:24.952648       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/4wqg 512\nI1006 12:17:25.152071       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/vsz 488\nI1006 12:17:25.352674       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/9t4g 293\nI1006 12:17:25.552268       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/89w9 529\nI1006 12:17:25.752817       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/qpf 547\nI1006 12:17:25.952189       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/tvms 458\n"
  STEP: limiting log lines @ 10/06/25 12:17:26.127
  I1006 12:17:26.127815 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-logs-7062 logs logs-generator logs-generator --tail=1'
  I1006 12:17:26.215934 24 builder.go:146] stderr: ""
  I1006 12:17:26.215991 24 builder.go:147] stdout: "I1006 12:17:26.152712       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/pnh 342\n"
  I1006 12:17:26.216005 24 logs.go:180] got output "I1006 12:17:26.152712       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/pnh 342\n"
  STEP: limiting log bytes @ 10/06/25 12:17:26.216
  I1006 12:17:26.216155 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-logs-7062 logs logs-generator logs-generator --limit-bytes=1'
  E1006 12:17:26.279720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:17:26.305405 24 builder.go:146] stderr: ""
  I1006 12:17:26.305480 24 builder.go:147] stdout: "I"
  I1006 12:17:26.305495 24 logs.go:186] got output "I"
  STEP: exposing timestamps @ 10/06/25 12:17:26.305
  I1006 12:17:26.305641 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-logs-7062 logs logs-generator logs-generator --tail=1 --timestamps'
  I1006 12:17:26.396797 24 builder.go:146] stderr: ""
  I1006 12:17:26.396858 24 builder.go:147] stdout: "2025-10-06T12:17:26.352311137Z I1006 12:17:26.352077       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/jdjx 367\n"
  I1006 12:17:26.396879 24 logs.go:192] got output "2025-10-06T12:17:26.352311137Z I1006 12:17:26.352077       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/jdjx 367\n"
  STEP: restricting to a time range @ 10/06/25 12:17:26.396
  E1006 12:17:27.280338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:28.280869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:17:28.898038 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-logs-7062 logs logs-generator logs-generator --since=1s'
  I1006 12:17:28.994380 24 builder.go:146] stderr: ""
  I1006 12:17:28.994453 24 builder.go:147] stdout: "I1006 12:17:28.152661       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/kddm 351\nI1006 12:17:28.352057       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/vzb8 523\nI1006 12:17:28.552707       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/vs7 237\nI1006 12:17:28.752297       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/kmf7 395\nI1006 12:17:28.952666       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/rjv7 347\n"
  I1006 12:17:28.994514 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-logs-7062 logs logs-generator logs-generator --since=24h'
  I1006 12:17:29.083813 24 builder.go:146] stderr: ""
  I1006 12:17:29.084080 24 builder.go:147] stdout: "I1006 12:17:24.751985       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/7htj 483\nI1006 12:17:24.952648       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/4wqg 512\nI1006 12:17:25.152071       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/vsz 488\nI1006 12:17:25.352674       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/9t4g 293\nI1006 12:17:25.552268       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/89w9 529\nI1006 12:17:25.752817       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/qpf 547\nI1006 12:17:25.952189       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/tvms 458\nI1006 12:17:26.152712       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/pnh 342\nI1006 12:17:26.352077       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/jdjx 367\nI1006 12:17:26.552802       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/248 560\nI1006 12:17:26.752173       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/lqwl 358\nI1006 12:17:26.952739       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/pfq 231\nI1006 12:17:27.152071       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/txpn 545\nI1006 12:17:27.352893       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/mqg 511\nI1006 12:17:27.552130       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/59f 409\nI1006 12:17:27.752738       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/kncm 292\nI1006 12:17:27.952053       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/s6lp 402\nI1006 12:17:28.152661       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/kddm 351\nI1006 12:17:28.352057       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/vzb8 523\nI1006 12:17:28.552707       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/vs7 237\nI1006 12:17:28.752297       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/kmf7 395\nI1006 12:17:28.952666       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/rjv7 347\n"
  I1006 12:17:29.084346 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-logs-7062 delete pod logs-generator'
  E1006 12:17:29.281461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:17:29.902892 24 builder.go:146] stderr: ""
  I1006 12:17:29.902958 24 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1006 12:17:29.903174 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-7062" for this suite. @ 10/06/25 12:17:29.907
• [6.007 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 10/06/25 12:17:29.915
  I1006 12:17:29.915748 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename controllerrevisions @ 10/06/25 12:17:29.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:17:29.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:17:29.943
  STEP: Creating DaemonSet "e2e-dsrwf-daemon-set" @ 10/06/25 12:17:30.013
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/06/25 12:17:30.024
  I1006 12:17:30.109162 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:17:30.112566 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dsrwf-daemon-set: 0
  I1006 12:17:30.112768 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  E1006 12:17:30.282573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:17:31.030101 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:17:31.033589 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dsrwf-daemon-set: 1
  I1006 12:17:31.033754 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  E1006 12:17:31.282793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:17:32.029424 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:17:32.032453 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dsrwf-daemon-set: 2
  I1006 12:17:32.032640 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-dsrwf-daemon-set
  STEP: Confirm DaemonSet "e2e-dsrwf-daemon-set" successfully created with "daemonset-name=e2e-dsrwf-daemon-set" label @ 10/06/25 12:17:32.035
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-dsrwf-daemon-set" @ 10/06/25 12:17:32.04
  I1006 12:17:32.042576 24 controller_revision.go:162] Located ControllerRevision: "e2e-dsrwf-daemon-set-56569f6f96"
  STEP: Patching ControllerRevision "e2e-dsrwf-daemon-set-56569f6f96" @ 10/06/25 12:17:32.049
  I1006 12:17:32.061613 24 controller_revision.go:173] e2e-dsrwf-daemon-set-56569f6f96 has been patched
  STEP: Create a new ControllerRevision @ 10/06/25 12:17:32.061
  I1006 12:17:32.069135 24 controller_revision.go:191] Created ControllerRevision: e2e-dsrwf-daemon-set-5985c54b66
  STEP: Confirm that there are two ControllerRevisions @ 10/06/25 12:17:32.069
  I1006 12:17:32.069544 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1006 12:17:32.072338 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-dsrwf-daemon-set-56569f6f96" @ 10/06/25 12:17:32.072
  STEP: Confirm that there is only one ControllerRevision @ 10/06/25 12:17:32.078
  I1006 12:17:32.079051 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1006 12:17:32.081864 24 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-dsrwf-daemon-set-5985c54b66" @ 10/06/25 12:17:32.092
  I1006 12:17:32.107404 24 controller_revision.go:220] e2e-dsrwf-daemon-set-5985c54b66 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 10/06/25 12:17:32.107
  I1006 12:17:32.117003      24 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 10/06/25 12:17:32.117
  I1006 12:17:32.117212 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E1006 12:17:32.283819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:17:33.117683 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1006 12:17:33.121573 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-dsrwf-daemon-set-5985c54b66=updated" @ 10/06/25 12:17:33.121
  STEP: Confirm that there is only one ControllerRevision @ 10/06/25 12:17:33.134
  I1006 12:17:33.134908 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1006 12:17:33.222308 24 controller_revision.go:265] Found 1 ControllerRevisions
  I1006 12:17:33.224875 24 controller_revision.go:246] ControllerRevision "e2e-dsrwf-daemon-set-76bc7fcb75" has revision 3
  STEP: Deleting DaemonSet "e2e-dsrwf-daemon-set" @ 10/06/25 12:17:33.227
  STEP: deleting DaemonSet.extensions e2e-dsrwf-daemon-set in namespace controllerrevisions-557, will wait for the garbage collector to delete the pods @ 10/06/25 12:17:33.227
  E1006 12:17:33.284171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:17:33.296372 24 resources.go:139] Deleting DaemonSet.extensions e2e-dsrwf-daemon-set took: 7.165366ms
  I1006 12:17:33.397305 24 resources.go:163] Terminating DaemonSet.extensions e2e-dsrwf-daemon-set pods took: 100.92802ms
  E1006 12:17:34.285407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:17:35.201375 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dsrwf-daemon-set: 0
  I1006 12:17:35.201437 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-dsrwf-daemon-set
  I1006 12:17:35.204322 24 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"71021"},"items":null}

  I1006 12:17:35.206363 24 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"71021"},"items":null}

  I1006 12:17:35.213202 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-557" for this suite. @ 10/06/25 12:17:35.215
• [5.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 10/06/25 12:17:35.223
  I1006 12:17:35.223284 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename gc @ 10/06/25 12:17:35.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:17:35.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:17:35.249
  E1006 12:17:35.285686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the rc @ 10/06/25 12:17:35.31
  I1006 12:17:35.320097      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E1006 12:17:36.286670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:37.287725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:38.288634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:39.288668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:40.288676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:41.288706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/06/25 12:17:41.337
  STEP: wait for the rc to be deleted @ 10/06/25 12:17:41.346
  E1006 12:17:42.288952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:43.289293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:44.289636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:45.290019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:46.290454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 10/06/25 12:17:46.351
  E1006 12:17:47.291342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:48.291783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:49.292221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:50.292842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:51.293196      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:52.293737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:53.294337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:54.294560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:55.294960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:56.295301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:57.295790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:58.296440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:17:59.296831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:00.297294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:01.297792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:02.298327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:03.298630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:04.298903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:05.299339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:06.299721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:07.300126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:08.300590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:09.300643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:10.301015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:11.301426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:12.301765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:13.302144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:14.302793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:15.303180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:16.303525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/06/25 12:18:16.361
  I1006 12:18:16.449643 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1006 12:18:16.449742 24 delete.go:95] Deleting pod "simpletest.rc-28fvz" in namespace "gc-1248"
  I1006 12:18:16.462468 24 delete.go:95] Deleting pod "simpletest.rc-2c5w9" in namespace "gc-1248"
  I1006 12:18:16.483145 24 delete.go:95] Deleting pod "simpletest.rc-2cmgq" in namespace "gc-1248"
  I1006 12:18:16.508641 24 delete.go:95] Deleting pod "simpletest.rc-47lcz" in namespace "gc-1248"
  I1006 12:18:16.533187 24 delete.go:95] Deleting pod "simpletest.rc-4cpd7" in namespace "gc-1248"
  I1006 12:18:16.555034 24 delete.go:95] Deleting pod "simpletest.rc-4mk5k" in namespace "gc-1248"
  I1006 12:18:16.575294 24 delete.go:95] Deleting pod "simpletest.rc-58s2k" in namespace "gc-1248"
  I1006 12:18:16.593866 24 delete.go:95] Deleting pod "simpletest.rc-5hk56" in namespace "gc-1248"
  I1006 12:18:16.615226 24 delete.go:95] Deleting pod "simpletest.rc-5q5d4" in namespace "gc-1248"
  I1006 12:18:16.632696 24 delete.go:95] Deleting pod "simpletest.rc-648w5" in namespace "gc-1248"
  I1006 12:18:16.653338 24 delete.go:95] Deleting pod "simpletest.rc-6d2ph" in namespace "gc-1248"
  I1006 12:18:16.686039 24 delete.go:95] Deleting pod "simpletest.rc-6hc42" in namespace "gc-1248"
  I1006 12:18:16.705931 24 delete.go:95] Deleting pod "simpletest.rc-6k6wj" in namespace "gc-1248"
  I1006 12:18:16.723495 24 delete.go:95] Deleting pod "simpletest.rc-6mkmr" in namespace "gc-1248"
  I1006 12:18:16.736802 24 delete.go:95] Deleting pod "simpletest.rc-78bjd" in namespace "gc-1248"
  I1006 12:18:16.753830 24 delete.go:95] Deleting pod "simpletest.rc-7lkkt" in namespace "gc-1248"
  I1006 12:18:16.777316 24 delete.go:95] Deleting pod "simpletest.rc-7xgkq" in namespace "gc-1248"
  I1006 12:18:16.790874 24 delete.go:95] Deleting pod "simpletest.rc-8kcs4" in namespace "gc-1248"
  I1006 12:18:16.811579 24 delete.go:95] Deleting pod "simpletest.rc-8v5gc" in namespace "gc-1248"
  I1006 12:18:16.828161 24 delete.go:95] Deleting pod "simpletest.rc-9lb7h" in namespace "gc-1248"
  I1006 12:18:16.840800 24 delete.go:95] Deleting pod "simpletest.rc-9ntlb" in namespace "gc-1248"
  I1006 12:18:16.853255 24 delete.go:95] Deleting pod "simpletest.rc-9rncg" in namespace "gc-1248"
  I1006 12:18:16.870452 24 delete.go:95] Deleting pod "simpletest.rc-9zbz5" in namespace "gc-1248"
  I1006 12:18:16.890051 24 delete.go:95] Deleting pod "simpletest.rc-9zcv8" in namespace "gc-1248"
  I1006 12:18:16.910854 24 delete.go:95] Deleting pod "simpletest.rc-c7czs" in namespace "gc-1248"
  I1006 12:18:16.925386 24 delete.go:95] Deleting pod "simpletest.rc-dcx85" in namespace "gc-1248"
  I1006 12:18:16.954050 24 delete.go:95] Deleting pod "simpletest.rc-fb5hp" in namespace "gc-1248"
  I1006 12:18:16.969695 24 delete.go:95] Deleting pod "simpletest.rc-fg9w2" in namespace "gc-1248"
  I1006 12:18:16.991731 24 delete.go:95] Deleting pod "simpletest.rc-fgszn" in namespace "gc-1248"
  I1006 12:18:17.005365 24 delete.go:95] Deleting pod "simpletest.rc-fm7qt" in namespace "gc-1248"
  I1006 12:18:17.018775 24 delete.go:95] Deleting pod "simpletest.rc-ggnks" in namespace "gc-1248"
  I1006 12:18:17.033061 24 delete.go:95] Deleting pod "simpletest.rc-gkkxg" in namespace "gc-1248"
  I1006 12:18:17.043505 24 delete.go:95] Deleting pod "simpletest.rc-gqkj6" in namespace "gc-1248"
  I1006 12:18:17.059155 24 delete.go:95] Deleting pod "simpletest.rc-grbr4" in namespace "gc-1248"
  I1006 12:18:17.074412 24 delete.go:95] Deleting pod "simpletest.rc-h5kwb" in namespace "gc-1248"
  I1006 12:18:17.108977 24 delete.go:95] Deleting pod "simpletest.rc-h6vhd" in namespace "gc-1248"
  I1006 12:18:17.129339 24 delete.go:95] Deleting pod "simpletest.rc-h8fl6" in namespace "gc-1248"
  I1006 12:18:17.142910 24 delete.go:95] Deleting pod "simpletest.rc-h9wsq" in namespace "gc-1248"
  I1006 12:18:17.170203 24 delete.go:95] Deleting pod "simpletest.rc-hcwgz" in namespace "gc-1248"
  I1006 12:18:17.184042 24 delete.go:95] Deleting pod "simpletest.rc-hgm5p" in namespace "gc-1248"
  I1006 12:18:17.207862 24 delete.go:95] Deleting pod "simpletest.rc-hmx9l" in namespace "gc-1248"
  I1006 12:18:17.225724 24 delete.go:95] Deleting pod "simpletest.rc-hxmvb" in namespace "gc-1248"
  I1006 12:18:17.238657 24 delete.go:95] Deleting pod "simpletest.rc-hzwl6" in namespace "gc-1248"
  I1006 12:18:17.262973 24 delete.go:95] Deleting pod "simpletest.rc-jm9v7" in namespace "gc-1248"
  I1006 12:18:17.276921 24 delete.go:95] Deleting pod "simpletest.rc-jwltl" in namespace "gc-1248"
  I1006 12:18:17.300666 24 delete.go:95] Deleting pod "simpletest.rc-kfgkd" in namespace "gc-1248"
  E1006 12:18:17.304376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:18:17.314373 24 delete.go:95] Deleting pod "simpletest.rc-kpjqj" in namespace "gc-1248"
  I1006 12:18:17.333218 24 delete.go:95] Deleting pod "simpletest.rc-l56l2" in namespace "gc-1248"
  I1006 12:18:17.349386 24 delete.go:95] Deleting pod "simpletest.rc-lb6dz" in namespace "gc-1248"
  I1006 12:18:17.371298 24 delete.go:95] Deleting pod "simpletest.rc-lcgrj" in namespace "gc-1248"
  I1006 12:18:17.392543 24 delete.go:95] Deleting pod "simpletest.rc-ldsj6" in namespace "gc-1248"
  I1006 12:18:17.419693 24 delete.go:95] Deleting pod "simpletest.rc-ljm87" in namespace "gc-1248"
  I1006 12:18:17.439721 24 delete.go:95] Deleting pod "simpletest.rc-lnfvs" in namespace "gc-1248"
  I1006 12:18:17.454233 24 delete.go:95] Deleting pod "simpletest.rc-lnqc7" in namespace "gc-1248"
  I1006 12:18:17.473180 24 delete.go:95] Deleting pod "simpletest.rc-mbqs2" in namespace "gc-1248"
  I1006 12:18:17.489907 24 delete.go:95] Deleting pod "simpletest.rc-mfq85" in namespace "gc-1248"
  I1006 12:18:17.502990 24 delete.go:95] Deleting pod "simpletest.rc-mxnsf" in namespace "gc-1248"
  I1006 12:18:17.527278 24 delete.go:95] Deleting pod "simpletest.rc-nkbrl" in namespace "gc-1248"
  I1006 12:18:17.538539 24 delete.go:95] Deleting pod "simpletest.rc-pcrf9" in namespace "gc-1248"
  I1006 12:18:17.561666 24 delete.go:95] Deleting pod "simpletest.rc-phzhg" in namespace "gc-1248"
  I1006 12:18:17.601693 24 delete.go:95] Deleting pod "simpletest.rc-pmbwx" in namespace "gc-1248"
  I1006 12:18:17.610338 24 delete.go:95] Deleting pod "simpletest.rc-q9mqj" in namespace "gc-1248"
  I1006 12:18:17.634846 24 delete.go:95] Deleting pod "simpletest.rc-qctsh" in namespace "gc-1248"
  I1006 12:18:17.648322 24 delete.go:95] Deleting pod "simpletest.rc-qn9bl" in namespace "gc-1248"
  I1006 12:18:17.670592 24 delete.go:95] Deleting pod "simpletest.rc-qns4l" in namespace "gc-1248"
  I1006 12:18:17.688668 24 delete.go:95] Deleting pod "simpletest.rc-qqch8" in namespace "gc-1248"
  I1006 12:18:17.709169 24 delete.go:95] Deleting pod "simpletest.rc-qvxgk" in namespace "gc-1248"
  I1006 12:18:17.723004 24 delete.go:95] Deleting pod "simpletest.rc-rd5xk" in namespace "gc-1248"
  I1006 12:18:17.741198 24 delete.go:95] Deleting pod "simpletest.rc-s6bxj" in namespace "gc-1248"
  I1006 12:18:17.756026 24 delete.go:95] Deleting pod "simpletest.rc-s6mgg" in namespace "gc-1248"
  I1006 12:18:17.771687 24 delete.go:95] Deleting pod "simpletest.rc-s6s78" in namespace "gc-1248"
  I1006 12:18:17.786443 24 delete.go:95] Deleting pod "simpletest.rc-scv9b" in namespace "gc-1248"
  I1006 12:18:17.806345 24 delete.go:95] Deleting pod "simpletest.rc-sjnh7" in namespace "gc-1248"
  I1006 12:18:17.823704 24 delete.go:95] Deleting pod "simpletest.rc-smztt" in namespace "gc-1248"
  I1006 12:18:17.848405 24 delete.go:95] Deleting pod "simpletest.rc-sq6sl" in namespace "gc-1248"
  I1006 12:18:17.866054 24 delete.go:95] Deleting pod "simpletest.rc-sxkml" in namespace "gc-1248"
  I1006 12:18:17.885450 24 delete.go:95] Deleting pod "simpletest.rc-t5m9h" in namespace "gc-1248"
  I1006 12:18:17.922939 24 delete.go:95] Deleting pod "simpletest.rc-t6229" in namespace "gc-1248"
  I1006 12:18:17.974837 24 delete.go:95] Deleting pod "simpletest.rc-thkj7" in namespace "gc-1248"
  I1006 12:18:18.019926 24 delete.go:95] Deleting pod "simpletest.rc-tkxxv" in namespace "gc-1248"
  I1006 12:18:18.082356 24 delete.go:95] Deleting pod "simpletest.rc-tsd8x" in namespace "gc-1248"
  I1006 12:18:18.119757 24 delete.go:95] Deleting pod "simpletest.rc-txg5s" in namespace "gc-1248"
  I1006 12:18:18.174743 24 delete.go:95] Deleting pod "simpletest.rc-v85bw" in namespace "gc-1248"
  I1006 12:18:18.226327 24 delete.go:95] Deleting pod "simpletest.rc-vd7bq" in namespace "gc-1248"
  I1006 12:18:18.277926 24 delete.go:95] Deleting pod "simpletest.rc-vxb8b" in namespace "gc-1248"
  E1006 12:18:18.304898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:18:18.328027 24 delete.go:95] Deleting pod "simpletest.rc-w997j" in namespace "gc-1248"
  I1006 12:18:18.369908 24 delete.go:95] Deleting pod "simpletest.rc-wdnm2" in namespace "gc-1248"
  I1006 12:18:18.418856 24 delete.go:95] Deleting pod "simpletest.rc-wgvln" in namespace "gc-1248"
  I1006 12:18:18.478706 24 delete.go:95] Deleting pod "simpletest.rc-wpk4j" in namespace "gc-1248"
  I1006 12:18:18.526742 24 delete.go:95] Deleting pod "simpletest.rc-wv8bm" in namespace "gc-1248"
  I1006 12:18:18.575050 24 delete.go:95] Deleting pod "simpletest.rc-xd72n" in namespace "gc-1248"
  I1006 12:18:18.643491 24 delete.go:95] Deleting pod "simpletest.rc-xjqzt" in namespace "gc-1248"
  I1006 12:18:18.670900 24 delete.go:95] Deleting pod "simpletest.rc-xk4nw" in namespace "gc-1248"
  I1006 12:18:18.728412 24 delete.go:95] Deleting pod "simpletest.rc-xlmhw" in namespace "gc-1248"
  I1006 12:18:18.774888 24 delete.go:95] Deleting pod "simpletest.rc-xp7zm" in namespace "gc-1248"
  I1006 12:18:18.824595 24 delete.go:95] Deleting pod "simpletest.rc-xpg7n" in namespace "gc-1248"
  I1006 12:18:18.869893 24 delete.go:95] Deleting pod "simpletest.rc-xtmdm" in namespace "gc-1248"
  I1006 12:18:18.926361 24 delete.go:95] Deleting pod "simpletest.rc-xzxts" in namespace "gc-1248"
  I1006 12:18:18.975410 24 delete.go:95] Deleting pod "simpletest.rc-zf6bf" in namespace "gc-1248"
  I1006 12:18:19.019054 24 delete.go:95] Deleting pod "simpletest.rc-zj4x2" in namespace "gc-1248"
  I1006 12:18:19.082837 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1248" for this suite. @ 10/06/25 12:18:19.105
• [43.936 seconds]
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 10/06/25 12:18:19.159
  I1006 12:18:19.159629 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename endpointslicemirroring @ 10/06/25 12:18:19.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:18:19.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:18:19.176
  STEP: mirroring a new custom Endpoint @ 10/06/25 12:18:19.204
  I1006 12:18:19.212885      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 12:18:19.215779 24 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E1006 12:18:19.310275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:20.310667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 10/06/25 12:18:21.221
  I1006 12:18:21.228068      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 10/06/25 12:18:21.239
  I1006 12:18:21.248985      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 12:18:21.253554 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-2538" for this suite. @ 10/06/25 12:18:21.256
• [2.104 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 10/06/25 12:18:21.263
  I1006 12:18:21.263318 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replication-controller @ 10/06/25 12:18:21.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:18:21.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:18:21.287
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 10/06/25 12:18:21.289
  E1006 12:18:21.311498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:22.312413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 10/06/25 12:18:23.307
  E1006 12:18:23.312829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Then the orphan pod is adopted @ 10/06/25 12:18:23.315
  E1006 12:18:24.313891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:18:24.322427 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8057" for this suite. @ 10/06/25 12:18:24.328
• [3.082 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 10/06/25 12:18:24.345
  I1006 12:18:24.345443 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sysctl @ 10/06/25 12:18:24.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:18:24.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:18:24.369
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 10/06/25 12:18:24.373
  STEP: Watching for error events or started pod @ 10/06/25 12:18:24.385
  E1006 12:18:25.314243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:26.314536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 10/06/25 12:18:26.388
  E1006 12:18:27.314772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:28.314867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 10/06/25 12:18:28.4
  STEP: Getting logs from the pod @ 10/06/25 12:18:28.4
  STEP: Checking that the sysctl is actually updated @ 10/06/25 12:18:28.407
  I1006 12:18:28.407958 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3688" for this suite. @ 10/06/25 12:18:28.411
• [4.074 seconds]
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 10/06/25 12:18:28.419
  I1006 12:18:28.419515 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 12:18:28.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:18:28.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:18:28.441
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4379 @ 10/06/25 12:18:28.444
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/06/25 12:18:28.468
  STEP: creating service externalsvc in namespace services-4379 @ 10/06/25 12:18:28.468
  I1006 12:18:28.553867 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1006 12:18:29.315947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:30.316092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 10/06/25 12:18:30.565
  I1006 12:18:30.607950 24 resource.go:361] Creating new exec pod
  E1006 12:18:31.317083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:32.317404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:18:32.622557 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-4379 exec execpodwbrrt -- /bin/sh -x -c nslookup clusterip-service.services-4379.svc.cluster.local'
  I1006 12:18:32.773751 24 builder.go:146] stderr: "+ nslookup clusterip-service.services-4379.svc.cluster.local\n"
  I1006 12:18:32.773856 24 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-4379.svc.cluster.local\tcanonical name = externalsvc.services-4379.svc.cluster.local.\nName:\texternalsvc.services-4379.svc.cluster.local\nAddress: 10.107.188.116\n\n"
  I1006 12:18:32.823219 24 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I1006 12:18:32.861379 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4379" for this suite. @ 10/06/25 12:18:32.866
• [4.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 10/06/25 12:18:32.877
  I1006 12:18:32.877320 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:18:32.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:18:32.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:18:32.897
  STEP: Setting up server cert @ 10/06/25 12:18:32.921
  E1006 12:18:33.318218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:18:33.441
  STEP: Deploying the webhook pod @ 10/06/25 12:18:33.447
  STEP: Wait for the deployment to be ready @ 10/06/25 12:18:33.474
  I1006 12:18:33.482088 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1006 12:18:34.318469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:35.318740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/06/25 12:18:35.491
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:18:35.522
  E1006 12:18:36.319272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:18:36.523560 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/06/25 12:18:36.527
  STEP: create a pod @ 10/06/25 12:18:36.551
  E1006 12:18:37.319340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:38.319575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 10/06/25 12:18:38.567
  I1006 12:18:38.567422 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=webhook-4088 attach --namespace=webhook-4088 to-be-attached-pod -i -c=container1'
  I1006 12:18:38.663367 24 builder.go:135] rc: 1
  I1006 12:18:38.755752 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4088" for this suite. @ 10/06/25 12:18:38.762
  STEP: Destroying namespace "webhook-markers-8265" for this suite. @ 10/06/25 12:18:38.773
• [5.904 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 10/06/25 12:18:38.78
  I1006 12:18:38.780958 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename configmap @ 10/06/25 12:18:38.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:18:38.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:18:38.796
  STEP: Creating configMap with name configmap-test-volume-fccf3aea-c6a0-45d3-8f4d-a32b45d760de @ 10/06/25 12:18:38.802
  STEP: Creating a pod to test consume configMaps @ 10/06/25 12:18:38.815
  E1006 12:18:39.320272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:40.320870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:41.321034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:42.321214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:18:42.845
  I1006 12:18:42.847584 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-configmaps-cdf9221c-68c0-4ecc-aa6c-39f6ea7907a7 container configmap-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 12:18:42.852
  I1006 12:18:42.877647 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7814" for this suite. @ 10/06/25 12:18:42.88
• [4.106 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 10/06/25 12:18:42.887
  I1006 12:18:42.887633 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename containers @ 10/06/25 12:18:42.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:18:42.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:18:42.904
  STEP: Creating a pod to test override all @ 10/06/25 12:18:42.909
  E1006 12:18:43.321405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:44.321879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:45.322070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:46.322385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:18:46.929
  I1006 12:18:46.932174 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod client-containers-5330e167-5540-4341-9474-d0371f572dc8 container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 12:18:46.936
  I1006 12:18:46.960897 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1793" for this suite. @ 10/06/25 12:18:46.963
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 10/06/25 12:18:46.984
  I1006 12:18:46.984265 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 12:18:46.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:18:47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:18:47.003
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/06/25 12:18:47.007
  E1006 12:18:47.322971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:48.323269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:49.323575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:50.323736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:18:51.034
  I1006 12:18:51.036580 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-60189af3-fc4f-4c4d-a80b-c7606e63cde1 container test-container: <nil>
  STEP: delete the pod @ 10/06/25 12:18:51.04
  I1006 12:18:51.063912 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9282" for this suite. @ 10/06/25 12:18:51.067
• [4.090 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 10/06/25 12:18:51.074
  I1006 12:18:51.074706 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-probe @ 10/06/25 12:18:51.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:18:51.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:18:51.09
  STEP: Creating pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338 @ 10/06/25 12:18:51.094
  E1006 12:18:51.324684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:52.325225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/06/25 12:18:53.117
  I1006 12:18:53.119893 24 container_probe.go:1748] Initial restart count of pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 is 0
  I1006 12:18:53.122279 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:18:53.325388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:54.326004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:18:55.128073 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:18:55.326611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:56.327044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:18:57.131582 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:18:57.327258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:18:58.327585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:18:59.135897 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:18:59.328444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:00.328887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:01.139633 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:01.329970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:02.330274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:03.144122 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:03.331438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:04.331898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:05.148264 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:05.332880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:06.333416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:07.152704 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:07.333991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:08.334449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:09.158402 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:09.334774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:10.335251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:11.163215 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:11.335603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:12.336070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:13.167304 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:13.336733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:14.337195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:15.171699 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:15.338138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:16.338598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:17.175140 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:17.339610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:18.340393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:19.179665 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:19.341079      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:20.342018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:21.184086 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:21.342426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:22.342971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:23.188029 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:23.343430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:24.343942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:25.193067 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:25.344541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:26.345175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:27.198100 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:27.345290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:28.345881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:29.202907 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:29.346333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:30.346720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:31.207530 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:31.346771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:32.347129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:33.212067 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:33.347382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:34.347936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:35.216018 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:35.348451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:36.348908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:37.220625 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:37.349904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:38.350085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:39.226346 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:39.350751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:40.351023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:41.230600 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:41.351984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:42.352103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:43.234383 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:43.353383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:44.353633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:45.237709 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:45.354168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:46.354417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:47.243464 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:47.354813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:48.355099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:49.247508 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:49.355685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:50.355928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:51.251502 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:51.356865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:52.357188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:53.255207 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:53.357460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:54.357836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:55.259817 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:55.359066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:56.359451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:57.263914 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:57.360197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:19:58.360584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:19:59.268470 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:19:59.360753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:00.361869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:01.273265 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:01.362490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:02.362924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:03.277747 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:03.363940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:04.364330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:05.281947 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:05.365358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:06.365589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:07.286445 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:07.366738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:08.367201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:09.293606 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:09.367850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:10.368286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:11.297742 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:11.369024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:12.369231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:13.302764 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:13.370099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:14.370386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:15.306935 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:15.371527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:16.371754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:17.311640 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:17.371867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:18.372117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:19.317545 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:19.372535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:20.372949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:21.321553 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:21.374031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:22.374732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:23.325905 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:23.375597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:24.375681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:25.331160 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:25.376320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:26.376729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:27.336286 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:27.377421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:28.377902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:29.340036 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:29.378297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:30.378707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:31.346261 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:31.379604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:32.379778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:33.350979 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:33.380069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:34.380605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:35.355601 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:35.381083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:36.381484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:37.360456 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:37.382742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:38.383275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:39.364215 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:39.383374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:40.383782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:41.367994 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:41.384407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:42.385072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:43.371645 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:43.385942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:44.386231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:45.375908 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:45.387223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:46.387754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:47.380207 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:47.388435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:48.388784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:49.384250 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:49.389479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:50.389698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:51.387318 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:51.390516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:52.390827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:53.391329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:53.391991 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:54.391754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:55.392149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:55.395049 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:56.393222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:57.393539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:57.399236 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:20:58.394261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:20:59.394782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:20:59.403480 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:00.395623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:01.395916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:01.408918 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:02.396790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:03.397165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:03.412542 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:04.397348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:05.397746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:05.415817 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:06.397854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:07.398239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:07.419817 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:08.398708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:09.398955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:09.424972 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:10.400030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:11.400529      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:11.432817 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:12.400804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:13.401466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:13.438077 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:14.401419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:15.401927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:15.444014 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:16.402826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:17.403341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:17.448103 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:18.404141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:19.404645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:19.452799 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:20.404937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:21.405674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:21.457586 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:22.406654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:23.407375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:23.464195 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:24.407448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:25.407538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:25.469270 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:26.407961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:27.408219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:27.473399 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:28.408540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:29.408713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:29.477856 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:30.408964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:31.409430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:31.482009 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:32.409884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:33.410329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:33.486294 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:34.410590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:35.411080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:35.490901 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:36.411384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:37.411865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:37.496120 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:38.412798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:39.413062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:39.501510 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:40.413436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:41.413880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:41.506024 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:42.414231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:43.414790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:43.510682 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:44.415097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:45.415821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:45.513996 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:46.416063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:47.416529      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:47.518409 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:48.416943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:49.417355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:49.523707 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:50.417624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:51.418029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:51.527588 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:52.418362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:53.418982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:53.532245 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:54.419379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:55.420027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:55.536686 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:56.420424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:57.421003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:57.543370 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:21:58.421421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:21:59.421745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:21:59.547932 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:00.422108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:01.422615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:01.552580 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:02.422883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:03.423387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:03.556890 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:04.424045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:05.424619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:05.561317 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:06.425101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:07.425416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:07.565746 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:08.426345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:09.426629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:09.569935 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:10.426866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:11.427191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:11.573341 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:12.427352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:13.427708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:13.577042 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:14.427959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:15.428386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:15.581902 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:16.428657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:17.428780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:17.585399 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:18.429029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:19.429596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:19.590078 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:20.429787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:21.430286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:21.593812 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:22.430415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:23.430785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:23.598327 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:24.431084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:25.431482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:25.602058 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:26.431718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:27.432230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:27.605050 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:28.432334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:29.432890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:29.610657 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:30.433076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:31.433731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:31.616685 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:32.434051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:33.434469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:33.622521 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:34.434775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:35.435611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:35.626993 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:36.435867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:37.436242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:37.630951 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:38.436723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:39.437144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:39.634809 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:40.437419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:41.437778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:41.639883 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:42.438711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:43.438916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:43.642925 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:44.439124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:45.439487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:45.646891 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:46.439724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:47.440076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:47.650792 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:48.440455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:49.440760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:49.654726 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:50.441209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:51.441869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:22:51.658524 24 container_probe.go:1758] Get pod busybox-1b29578f-5e94-4fd7-8750-8fecb1e527c2 in namespace container-probe-4338
  E1006 12:22:52.442295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:53.443137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/06/25 12:22:53.659
  I1006 12:22:53.686792 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4338" for this suite. @ 10/06/25 12:22:53.691
• [242.630 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 10/06/25 12:22:53.704
  I1006 12:22:53.704861 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename resourcequota @ 10/06/25 12:22:53.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:22:53.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:22:53.725
  STEP: Creating a ResourceQuota with best effort scope @ 10/06/25 12:22:53.728
  STEP: Ensuring ResourceQuota status is calculated @ 10/06/25 12:22:53.734
  E1006 12:22:54.442479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:55.442727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 10/06/25 12:22:55.738
  STEP: Ensuring ResourceQuota status is calculated @ 10/06/25 12:22:55.75
  E1006 12:22:56.442831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:57.443238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 10/06/25 12:22:57.755
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 10/06/25 12:22:57.775
  E1006 12:22:58.443524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:22:59.444000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 10/06/25 12:22:59.779
  E1006 12:23:00.444031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:01.444392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/06/25 12:23:01.783
  STEP: Ensuring resource quota status released the pod usage @ 10/06/25 12:23:01.796
  E1006 12:23:02.444513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:03.444868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 10/06/25 12:23:03.802
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 10/06/25 12:23:03.817
  E1006 12:23:04.445110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:05.445794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 10/06/25 12:23:05.821
  E1006 12:23:06.446233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:07.446600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/06/25 12:23:07.825
  STEP: Ensuring resource quota status released the pod usage @ 10/06/25 12:23:07.846
  E1006 12:23:08.446839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:09.447199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:09.853500 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-496" for this suite. @ 10/06/25 12:23:09.857
• [16.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 10/06/25 12:23:09.866
  I1006 12:23:09.866312 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-webhook @ 10/06/25 12:23:09.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:23:09.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:23:09.882
  STEP: Setting up server cert @ 10/06/25 12:23:09.884
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/06/25 12:23:10.231
  STEP: Deploying the custom resource conversion webhook pod @ 10/06/25 12:23:10.239
  STEP: Wait for the deployment to be ready @ 10/06/25 12:23:10.263
  I1006 12:23:10.269754 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1006 12:23:10.448445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:11.448636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:12.279995 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:23:12.449494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:13.449921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:14.285783 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:23:14.451010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:15.451689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:16.288639 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:23:16.452707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:17.453118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:18.284746 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:23:18.454171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:19.454806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:20.284982 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:23:20.455420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:21.456014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/06/25 12:23:22.284
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:23:22.313
  E1006 12:23:22.457005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:23.313856 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1006 12:23:23.319093 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  E1006 12:23:23.457842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:24.458251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:25.458453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 10/06/25 12:23:25.897
  STEP: v2 custom resource should be converted @ 10/06/25 12:23:25.907
  E1006 12:23:26.458379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:26.507908 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7410" for this suite. @ 10/06/25 12:23:26.512
• [16.663 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 10/06/25 12:23:26.529
  I1006 12:23:26.530027 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:23:26.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:23:26.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:23:26.551
  STEP: Setting up server cert @ 10/06/25 12:23:26.577
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:23:27.191
  STEP: Deploying the webhook pod @ 10/06/25 12:23:27.2
  STEP: Wait for the deployment to be ready @ 10/06/25 12:23:27.23
  I1006 12:23:27.239082 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1006 12:23:27.459343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:28.459816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/06/25 12:23:29.254
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:23:29.288
  E1006 12:23:29.460226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:30.288747 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/06/25 12:23:30.42
  STEP: Creating a configMap that should be mutated @ 10/06/25 12:23:30.446
  E1006 12:23:30.460632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the collection of validation webhooks @ 10/06/25 12:23:30.48
  STEP: Creating a configMap that should not be mutated @ 10/06/25 12:23:30.55
  I1006 12:23:30.663857 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8659" for this suite. @ 10/06/25 12:23:30.672
  STEP: Destroying namespace "webhook-markers-655" for this suite. @ 10/06/25 12:23:30.683
• [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 10/06/25 12:23:30.692
  I1006 12:23:30.692549 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename disruption @ 10/06/25 12:23:30.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:23:30.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:23:30.713
  STEP: Waiting for the pdb to be processed @ 10/06/25 12:23:30.726
  E1006 12:23:31.461363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:32.461852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 10/06/25 12:23:32.771
  I1006 12:23:32.782304 24 disruption.go:691] running pods: 0 < 3
  E1006 12:23:33.461873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:34.462957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:34.780263 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3858" for this suite. @ 10/06/25 12:23:34.784
• [4.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 10/06/25 12:23:34.794
  I1006 12:23:34.795004 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename deployment @ 10/06/25 12:23:34.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:23:34.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:23:34.817
  I1006 12:23:34.837377 24 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/06/25 12:23:34.837
  E1006 12:23:35.462997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:36.463595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:36.853053 24 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1006 12:23:37.463808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:38.464334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:38.857267 24 deployment.go:940] Creating deployment "test-rollover-deployment"
  I1006 12:23:38.866630 24 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E1006 12:23:39.464268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:40.464440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:40.874712 24 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I1006 12:23:40.887335 24 deployment.go:962] Ensure that both replica sets have 1 created replica
  I1006 12:23:40.988682 24 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1006 12:23:41.000967 24 deployment.go:314] Updating deployment test-rollover-deployment
  I1006 12:23:41.001436 24 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1006 12:23:41.464682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:42.465125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:43.013778 24 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1006 12:23:43.018494 24 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I1006 12:23:43.022222 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I1006 12:23:43.022297 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:23:43.465708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:44.465800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:45.026717 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I1006 12:23:45.026777 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:23:45.466102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:46.466547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:47.029808 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I1006 12:23:47.029979 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:23:47.466850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:48.467155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:49.028441 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I1006 12:23:49.028523 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:23:49.467900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:50.468388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:51.029976 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I1006 12:23:51.030063 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 23, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 23, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:23:51.469431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:52.469830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:23:53.029369 24 deployment.go:95] 
  I1006 12:23:53.029429 24 deployment.go:993] Ensure that both old replica sets have no replicas
  I1006 12:23:53.035929 24 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6795",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f21e4327-d2f5-49a9-835c-10e7216f69dc",
      ResourceVersion: (string) (len=5) "74110",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1006 12:23:53.048197 24 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6795",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a58cc2a3-c3dc-4ade-bccf-94c3acabadf9",
      ResourceVersion: (string) (len=5) "74100",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f21e4327-d2f5-49a9-835c-10e7216f69dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 32 31 65 34 33  32 37 2d 64 32 66 35 2d  |\"f21e4327-d2f5-|
              00000120  34 39 61 39 2d 38 33 35  63 2d 31 30 65 37 32 31  |49a9-835c-10e721|
              00000130  36 66 36 39 64 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6f69dc\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 12:23:53.050557 24 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1006 12:23:53.050817 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6795",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18cfe26e-b761-4f5e-9b15-d52f4554a24c",
      ResourceVersion: (string) (len=5) "74109",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350214,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f21e4327-d2f5-49a9-835c-10e7216f69dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 32 31 65 34 33 32 37  2d 64 32 66 35 2d 34 39  |f21e4327-d2f5-49|
              000000c0  61 39 2d 38 33 35 63 2d  31 30 65 37 32 31 36 66  |a9-835c-10e7216f|
              000000d0  36 39 64 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |69dc\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 12:23:53.051595 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6795",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c857310-ef9f-41f4-bd54-1f9b5c3b3161",
      ResourceVersion: (string) (len=5) "74053",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f21e4327-d2f5-49a9-835c-10e7216f69dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 32 31 65 34 33  32 37 2d 64 32 66 35 2d  |\"f21e4327-d2f5-|
              00000120  34 39 61 39 2d 38 33 35  63 2d 31 30 65 37 32 31  |49a9-835c-10e721|
              00000130  36 66 36 39 64 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6f69dc\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 12:23:53.058659 24 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-lf59w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-lf59w",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-6795",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af11c935-d1c6-49ad-ae37-80b2dfe667b2",
      ResourceVersion: (string) (len=5) "74065",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "a58cc2a3-c3dc-4ade-bccf-94c3acabadf9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 35  38 63 63 32 61 33 2d 63  |d\":\"a58cc2a3-c|
              00000090  33 64 63 2d 34 61 64 65  2d 62 63 63 66 2d 39 34  |3dc-4ade-bccf-94|
              000000a0  63 33 61 63 61 62 61 64  66 39 5c 22 7d 22 3a 7b  |c3acabadf9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 39  32 5c 22 7d 22 3a 7b 22  |.244.1.92\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ksc5d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ksc5d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=11) "10.244.1.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350221,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://2388910a37ae461bac5eae687735422681152b827d120da7f0e4e7e2314e9ba6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ksc5d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:23:53.059865 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6795" for this suite. @ 10/06/25 12:23:53.063
• [18.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 10/06/25 12:23:53.07
  I1006 12:23:53.070385 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename namespaces @ 10/06/25 12:23:53.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:23:53.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:23:53.101
  STEP: Creating a test namespace @ 10/06/25 12:23:53.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:23:53.12
  STEP: Creating a pod in the namespace @ 10/06/25 12:23:53.123
  STEP: Waiting for the pod to have running status @ 10/06/25 12:23:53.135
  E1006 12:23:53.470821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:54.471269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 10/06/25 12:23:55.143
  STEP: Waiting for the namespace to be removed. @ 10/06/25 12:23:55.154
  E1006 12:23:55.471251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:56.472106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:57.472435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:58.473166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:23:59.473827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:00.473973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:01.474051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:02.475008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:03.475594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:04.476616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:05.477299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/06/25 12:24:06.159
  STEP: Verifying there are no pods in the namespace @ 10/06/25 12:24:06.176
  I1006 12:24:06.182689 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7866" for this suite. @ 10/06/25 12:24:06.186
  STEP: Destroying namespace "nsdeletetest-2475" for this suite. @ 10/06/25 12:24:06.193
  I1006 12:24:06.197447 24 framework.go:370] Namespace nsdeletetest-2475 was already deleted
  STEP: Destroying namespace "nsdeletetest-5525" for this suite. @ 10/06/25 12:24:06.197
• [13.145 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 10/06/25 12:24:06.216
  I1006 12:24:06.216761 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/06/25 12:24:06.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:24:06.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:24:06.239
  STEP: create the container to handle the HTTPGet hook request. @ 10/06/25 12:24:06.287
  E1006 12:24:06.477515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:07.477814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/06/25 12:24:08.306
  E1006 12:24:08.477985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:09.478272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 10/06/25 12:24:10.331
  STEP: delete the pod with lifecycle hook @ 10/06/25 12:24:10.35
  E1006 12:24:10.478378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:11.478998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:24:12.367704 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1346" for this suite. @ 10/06/25 12:24:12.371
• [6.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 10/06/25 12:24:12.379
  I1006 12:24:12.379847 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 12:24:12.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:24:12.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:24:12.402
  I1006 12:24:12.408063 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7208" for this suite. @ 10/06/25 12:24:12.411
• [0.039 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 10/06/25 12:24:12.419
  I1006 12:24:12.419668 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/06/25 12:24:12.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:24:12.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:24:12.443
  STEP: Creating two CSIDrivers @ 10/06/25 12:24:12.446
  STEP: Getting "inline-driver-3487b154-8c04-4d7b-951b-214d9fcaedc7" & "inline-driver-1e000479-5b12-4f47-b421-f4b48b1e5d99" @ 10/06/25 12:24:12.474
  E1006 12:24:12.479514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching the CSIDriver "inline-driver-1e000479-5b12-4f47-b421-f4b48b1e5d99" @ 10/06/25 12:24:12.48
  STEP: Updating the CSIDriver "inline-driver-1e000479-5b12-4f47-b421-f4b48b1e5d99" @ 10/06/25 12:24:12.488
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9309" @ 10/06/25 12:24:12.497
  STEP: Deleting CSIDriver "inline-driver-3487b154-8c04-4d7b-951b-214d9fcaedc7" @ 10/06/25 12:24:12.5
  STEP: Confirm deletion of CSIDriver "inline-driver-3487b154-8c04-4d7b-951b-214d9fcaedc7" @ 10/06/25 12:24:12.51
  STEP: Deleting CSIDriver "inline-driver-1e000479-5b12-4f47-b421-f4b48b1e5d99" via DeleteCollection @ 10/06/25 12:24:12.512
  STEP: Confirm deletion of CSIDriver "inline-driver-1e000479-5b12-4f47-b421-f4b48b1e5d99" @ 10/06/25 12:24:12.521
  I1006 12:24:12.524315 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9309" for this suite. @ 10/06/25 12:24:12.527
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 10/06/25 12:24:12.546
  I1006 12:24:12.546669 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename pods @ 10/06/25 12:24:12.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:24:12.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:24:12.566
  STEP: creating the pod @ 10/06/25 12:24:12.57
  STEP: setting up watch @ 10/06/25 12:24:12.57
  STEP: submitting the pod to kubernetes @ 10/06/25 12:24:12.674
  STEP: verifying the pod is in kubernetes @ 10/06/25 12:24:12.685
  STEP: verifying pod creation was observed @ 10/06/25 12:24:12.692
  E1006 12:24:13.479942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:14.480634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/06/25 12:24:14.71
  STEP: verifying pod deletion was observed @ 10/06/25 12:24:14.718
  E1006 12:24:15.480859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:24:15.954444 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-737" for this suite. @ 10/06/25 12:24:15.96
• [3.424 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 10/06/25 12:24:15.971
  I1006 12:24:15.971105 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sched-preemption @ 10/06/25 12:24:15.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:24:15.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:24:15.998
  I1006 12:24:16.026687 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E1006 12:24:16.481348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:17.481874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:18.482764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:19.483126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:20.483564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:21.483897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:22.484680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:23.485393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:24.486154      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:25.486567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:26.487758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:27.488248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:28.488737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:29.488972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:30.490133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:31.491002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:32.491012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:33.491671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:34.492571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:35.492663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:36.492918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:37.493519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:38.494268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:39.494886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:40.495803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:41.496295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:42.496394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:43.496678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:44.496916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:45.497926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:46.498542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:47.498779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:48.499447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:49.500217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:50.500288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:51.500739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:52.501422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:53.501697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:54.502478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:55.502948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:56.504144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:57.504572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:58.505607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:24:59.505865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:00.506141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:01.506424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:02.506854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:03.507201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:04.507449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:05.507910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:06.508841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:07.509374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:08.509779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:09.510162      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:10.511061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:11.511580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:12.511977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:13.512040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:14.512158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:15.512518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:25:16.034836 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 10/06/25 12:25:16.037
  STEP: Adding a custom resource @ 10/06/25 12:25:16.037
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 10/06/25 12:25:16.047
  I1006 12:25:16.062445 24 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 10/06/25 12:25:16.062
  E1006 12:25:16.513546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:17.513983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 10/06/25 12:25:18.07
  I1006 12:25:18.079558 24 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 10/06/25 12:25:18.079
  E1006 12:25:18.514544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:19.514888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 10/06/25 12:25:20.089
  I1006 12:25:20.092407 24 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E1006 12:25:20.514985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:25:20.611221 24 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 10/06/25 12:25:20.636
  STEP: Removing a custom resource @ 10/06/25 12:25:20.653
  I1006 12:25:20.661355 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5931" for this suite. @ 10/06/25 12:25:20.664
• [64.700 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 10/06/25 12:25:20.671
  I1006 12:25:20.671317 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename namespaces @ 10/06/25 12:25:20.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:25:20.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:25:20.703
  STEP: creating a Namespace @ 10/06/25 12:25:20.706
  STEP: patching the Namespace @ 10/06/25 12:25:20.724
  STEP: get the Namespace and ensuring it has the label @ 10/06/25 12:25:20.733
  I1006 12:25:20.736350 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7008" for this suite. @ 10/06/25 12:25:20.739
  STEP: Destroying namespace "nspatchtest-e58ce464-cee8-4e28-8dd2-77fcc2d114f4-4308" for this suite. @ 10/06/25 12:25:20.747
• [0.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 10/06/25 12:25:20.758
  I1006 12:25:20.758720 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename gc @ 10/06/25 12:25:20.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:25:20.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:25:20.775
  STEP: create the rc1 @ 10/06/25 12:25:20.84
  STEP: create the rc2 @ 10/06/25 12:25:20.852
  E1006 12:25:21.515359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:22.515762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:23.516384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:24.516680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:25.517862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:26.518173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 10/06/25 12:25:26.863
  E1006 12:25:27.520642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 10/06/25 12:25:27.644
  STEP: wait for the rc to be deleted @ 10/06/25 12:25:27.664
  E1006 12:25:28.521529      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:29.522258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:30.523014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:31.523164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:32.523509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:25:32.674636 24 garbage_collector.go:770] 67 pods remaining
  I1006 12:25:32.674671 24 garbage_collector.go:777] 67 pods has nil DeletionTimestamp
  I1006 12:25:32.674678 24 garbage_collector.go:778] 
  E1006 12:25:33.523916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:34.524054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:35.524209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:36.524655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:37.524872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/06/25 12:25:37.682
  I1006 12:25:37.771098 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1006 12:25:37.771175 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2cjvb" in namespace "gc-8354"
  I1006 12:25:37.793342 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2kvzj" in namespace "gc-8354"
  I1006 12:25:37.810480 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2m9jc" in namespace "gc-8354"
  I1006 12:25:37.840689 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2ppq7" in namespace "gc-8354"
  I1006 12:25:37.859375 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4l2ls" in namespace "gc-8354"
  I1006 12:25:37.880138 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4rlgj" in namespace "gc-8354"
  I1006 12:25:37.900034 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4zhlj" in namespace "gc-8354"
  I1006 12:25:37.918584 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-54drt" in namespace "gc-8354"
  I1006 12:25:37.935797 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-58lzd" in namespace "gc-8354"
  I1006 12:25:37.963487 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5ks4d" in namespace "gc-8354"
  I1006 12:25:37.979014 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5t8bc" in namespace "gc-8354"
  I1006 12:25:38.013056 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5v7hn" in namespace "gc-8354"
  I1006 12:25:38.036431 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5vv4r" in namespace "gc-8354"
  I1006 12:25:38.053077 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6fxlz" in namespace "gc-8354"
  I1006 12:25:38.078013 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7bkh6" in namespace "gc-8354"
  I1006 12:25:38.095247 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7fphz" in namespace "gc-8354"
  I1006 12:25:38.126593 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7jwww" in namespace "gc-8354"
  I1006 12:25:38.138808 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7m55s" in namespace "gc-8354"
  I1006 12:25:38.167389 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7skpp" in namespace "gc-8354"
  I1006 12:25:38.191534 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-854lm" in namespace "gc-8354"
  I1006 12:25:38.217166 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-87jpz" in namespace "gc-8354"
  I1006 12:25:38.239244 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-89vrl" in namespace "gc-8354"
  I1006 12:25:38.260247 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8bz6c" in namespace "gc-8354"
  I1006 12:25:38.277161 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8f2b6" in namespace "gc-8354"
  I1006 12:25:38.303712 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9lkwx" in namespace "gc-8354"
  I1006 12:25:38.330837 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9tn2v" in namespace "gc-8354"
  I1006 12:25:38.347663 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9vbzp" in namespace "gc-8354"
  I1006 12:25:38.364057 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bcbx6" in namespace "gc-8354"
  I1006 12:25:38.383739 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-clsz5" in namespace "gc-8354"
  I1006 12:25:38.403424 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cq8d9" in namespace "gc-8354"
  I1006 12:25:38.427276 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dhk47" in namespace "gc-8354"
  I1006 12:25:38.453695 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dms2p" in namespace "gc-8354"
  I1006 12:25:38.464197 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ds9kb" in namespace "gc-8354"
  I1006 12:25:38.483268 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fl9qs" in namespace "gc-8354"
  I1006 12:25:38.499706 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fn5kb" in namespace "gc-8354"
  I1006 12:25:38.522611 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fsz26" in namespace "gc-8354"
  E1006 12:25:38.525065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:25:38.535368 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gbqzk" in namespace "gc-8354"
  I1006 12:25:38.566351 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gdttn" in namespace "gc-8354"
  I1006 12:25:38.607086 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gk96c" in namespace "gc-8354"
  I1006 12:25:38.626166 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-glqql" in namespace "gc-8354"
  I1006 12:25:38.642287 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gq68h" in namespace "gc-8354"
  I1006 12:25:38.668873 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gs2ch" in namespace "gc-8354"
  I1006 12:25:38.690069 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gvdvj" in namespace "gc-8354"
  I1006 12:25:38.711086 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hcdth" in namespace "gc-8354"
  I1006 12:25:38.733807 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hgkfd" in namespace "gc-8354"
  I1006 12:25:38.766145 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hvtbw" in namespace "gc-8354"
  I1006 12:25:38.777157 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jq65s" in namespace "gc-8354"
  I1006 12:25:38.794805 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jstlz" in namespace "gc-8354"
  I1006 12:25:38.811047 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jww5n" in namespace "gc-8354"
  I1006 12:25:38.835053 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k7hj9" in namespace "gc-8354"
  I1006 12:25:38.854660 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8354" for this suite. @ 10/06/25 12:25:38.857
• [18.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 10/06/25 12:25:38.863
  I1006 12:25:38.863565 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename tables @ 10/06/25 12:25:38.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:25:38.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:25:38.883
  I1006 12:25:38.888666 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9525" for this suite. @ 10/06/25 12:25:38.958
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 10/06/25 12:25:38.969
  I1006 12:25:38.969221 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 12:25:38.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:25:38.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:25:38.996
  STEP: Looking for a node to schedule job pods @ 10/06/25 12:25:38.999
  STEP: Creating a job @ 10/06/25 12:25:39.059
  STEP: Waiting for all the pods to be ready @ 10/06/25 12:25:39.07
  E1006 12:25:39.525330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:40.525586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:41.526543      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:42.526995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 10/06/25 12:25:43.08
  STEP: Evict all the Pods @ 10/06/25 12:25:43.085
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-pcd64/job-103 @ 10/06/25 12:25:43.086
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-hsthf/job-103 @ 10/06/25 12:25:43.086
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-hz7g8/job-103 @ 10/06/25 12:25:43.086
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-hz7g8/job-103 to be deleted @ 10/06/25 12:25:43.12
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-pcd64/job-103 to be deleted @ 10/06/25 12:25:43.129
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-hsthf/job-103 to be deleted @ 10/06/25 12:25:43.129
  E1006 12:25:43.527468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:44.527615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:45.528147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:46.528576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 10/06/25 12:25:47.141
  E1006 12:25:47.528430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:48.529130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:49.529500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:50.529972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:51.530178      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:52.530572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:53.531440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:54.531664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:55.532403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:56.532973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:57.532980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:58.533051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:25:59.533239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:00.533701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:01.534426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:02.534868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:03.535731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:04.536239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:05.536660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:06.537173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:07.537914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:08.538847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:09.539391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:10.539833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:11.540094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:12.540522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:13.541741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:14.542346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:15.543018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:16.543471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:17.544258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:18.545107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:19.545303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:20.545639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:21.546710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:22.546985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:23.547389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:24.547733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:25.548309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:26.548626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:27.549098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:28.549228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:26:29.238338 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-103" for this suite. @ 10/06/25 12:26:29.241
• [50.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 10/06/25 12:26:29.249
  I1006 12:26:29.249434 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename csinodes @ 10/06/25 12:26:29.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:26:29.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:26:29.27
  STEP: Creating initial csiNode "e2e-csinode-jwdlx" @ 10/06/25 12:26:29.272
  STEP: Getting initial csiNode "e2e-csinode-jwdlx" @ 10/06/25 12:26:29.279
  STEP: Patching initial csiNode: "e2e-csinode-jwdlx" @ 10/06/25 12:26:29.281
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-jwdlx=patched" @ 10/06/25 12:26:29.288
  STEP: Delete initial csiNode: "e2e-csinode-jwdlx" @ 10/06/25 12:26:29.29
  STEP: Confirm deletion of csiNode "e2e-csinode-jwdlx" @ 10/06/25 12:26:29.298
  STEP: Creating replacement csiNode "e2e-csinode-9wrtf" @ 10/06/25 12:26:29.301
  STEP: Getting replacement csiNode "e2e-csinode-9wrtf" @ 10/06/25 12:26:29.308
  STEP: Updating replacement csiNode "e2e-csinode-9wrtf" @ 10/06/25 12:26:29.311
  STEP: DeleteCollection of CSINodes with "e2e-csinode-9wrtf=updated" label @ 10/06/25 12:26:29.32
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-9wrtf=updated" @ 10/06/25 12:26:29.333
  I1006 12:26:29.336667 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-3753" for this suite. @ 10/06/25 12:26:29.342
• [0.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 10/06/25 12:26:29.349
  I1006 12:26:29.349652 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:26:29.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:26:29.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:26:29.376
  STEP: Creating the pod @ 10/06/25 12:26:29.38
  E1006 12:26:29.549389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:30.549851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:31.550507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:26:31.947706 24 pod_client.go:173] Successfully updated pod "annotationupdate029913e5-67e2-4f3f-b641-cc953963f211"
  E1006 12:26:32.551304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:33.551856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:26:33.959155 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4767" for this suite. @ 10/06/25 12:26:33.963
• [4.622 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 10/06/25 12:26:33.971
  I1006 12:26:33.971970 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 12:26:33.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:26:33.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:26:33.996
  STEP: Creating a pod to test downward api env vars @ 10/06/25 12:26:34
  E1006 12:26:34.552068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:35.552671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:36.553020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:37.553654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:26:38.027
  I1006 12:26:38.030603 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod downward-api-b5cd56ba-3cff-4365-bb90-226663d75dcf container dapi-container: <nil>
  STEP: delete the pod @ 10/06/25 12:26:38.047
  I1006 12:26:38.072345 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1283" for this suite. @ 10/06/25 12:26:38.075
• [4.112 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 10/06/25 12:26:38.084
  I1006 12:26:38.084199 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 12:26:38.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:26:38.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:26:38.116
  STEP: Creating a pod to test downward api env vars @ 10/06/25 12:26:38.12
  E1006 12:26:38.554492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:39.554868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:40.556017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:41.556536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:26:42.151
  I1006 12:26:42.154638 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod downward-api-37bc4f9c-7b3b-4efd-9634-1ed6d7aab221 container dapi-container: <nil>
  STEP: delete the pod @ 10/06/25 12:26:42.161
  I1006 12:26:42.181131 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9216" for this suite. @ 10/06/25 12:26:42.184
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 10/06/25 12:26:42.194
  I1006 12:26:42.194579 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sched-pred @ 10/06/25 12:26:42.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:26:42.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:26:42.215
  I1006 12:26:42.219593 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1006 12:26:42.289388 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I1006 12:26:42.292283 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf-1-33-script-2 before test
  I1006 12:26:42.296064 24 predicates.go:958] kube-flannel-ds-ndkcd from kube-flannel started at 2025-10-06 08:20:52 +0000 UTC (1 container statuses recorded)
  I1006 12:26:42.296121 24 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I1006 12:26:42.296138 24 predicates.go:958] kube-proxy-h8g5d from kube-system started at 2025-10-06 08:20:52 +0000 UTC (1 container statuses recorded)
  I1006 12:26:42.296164 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I1006 12:26:42.296176 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-10-06 10:54:46 +0000 UTC (1 container statuses recorded)
  I1006 12:26:42.296186 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I1006 12:26:42.296198 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7c4e1e919750475a-qdnd8 from sonobuoy started at 2025-10-06 10:54:47 +0000 UTC (2 container statuses recorded)
  I1006 12:26:42.296209 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 12:26:42.296228 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I1006 12:26:42.296246 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf-1-33-script-3 before test
  I1006 12:26:42.299963 24 predicates.go:958] kube-flannel-ds-c4mh7 from kube-flannel started at 2025-10-06 08:20:57 +0000 UTC (1 container statuses recorded)
  I1006 12:26:42.300267 24 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I1006 12:26:42.300443 24 predicates.go:958] kube-proxy-8nts5 from kube-system started at 2025-10-06 08:20:57 +0000 UTC (1 container statuses recorded)
  I1006 12:26:42.300661 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I1006 12:26:42.300818 24 predicates.go:958] sonobuoy-e2e-job-67c3ae163130406a from sonobuoy started at 2025-10-06 10:54:46 +0000 UTC (2 container statuses recorded)
  I1006 12:26:42.300917 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I1006 12:26:42.301083 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 12:26:42.301143 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7c4e1e919750475a-r8kjw from sonobuoy started at 2025-10-06 10:54:47 +0000 UTC (2 container statuses recorded)
  I1006 12:26:42.301173 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I1006 12:26:42.301219 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node cncf-1-33-script-2 @ 10/06/25 12:26:42.321
  STEP: verifying the node has the label node cncf-1-33-script-3 @ 10/06/25 12:26:42.338
  I1006 12:26:42.397636 24 predicates.go:373] Pod kube-flannel-ds-c4mh7 requesting resource cpu=100m on Node cncf-1-33-script-3
  I1006 12:26:42.397869 24 predicates.go:373] Pod kube-flannel-ds-ndkcd requesting resource cpu=100m on Node cncf-1-33-script-2
  I1006 12:26:42.397965 24 predicates.go:373] Pod kube-proxy-8nts5 requesting resource cpu=0m on Node cncf-1-33-script-3
  I1006 12:26:42.398097 24 predicates.go:373] Pod kube-proxy-h8g5d requesting resource cpu=0m on Node cncf-1-33-script-2
  I1006 12:26:42.398305 24 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node cncf-1-33-script-2
  I1006 12:26:42.398454 24 predicates.go:373] Pod sonobuoy-e2e-job-67c3ae163130406a requesting resource cpu=0m on Node cncf-1-33-script-3
  I1006 12:26:42.398626 24 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-7c4e1e919750475a-qdnd8 requesting resource cpu=0m on Node cncf-1-33-script-2
  I1006 12:26:42.398767 24 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-7c4e1e919750475a-r8kjw requesting resource cpu=0m on Node cncf-1-33-script-3
  STEP: Starting Pods to consume most of the cluster CPU. @ 10/06/25 12:26:42.398
  I1006 12:26:42.399015 24 predicates.go:383] Creating a pod which consumes cpu=2730m on Node cncf-1-33-script-2
  I1006 12:26:42.415835 24 predicates.go:383] Creating a pod which consumes cpu=2730m on Node cncf-1-33-script-3
  E1006 12:26:42.557059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:43.557977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 10/06/25 12:26:44.456
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0fe44502-aef7-475b-b11a-0265b1fec2d6.186be693ecfac847], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9579/filler-pod-0fe44502-aef7-475b-b11a-0265b1fec2d6 to cncf-1-33-script-2] @ 10/06/25 12:26:44.461
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0fe44502-aef7-475b-b11a-0265b1fec2d6.186be6940afb4b18], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/06/25 12:26:44.461
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0fe44502-aef7-475b-b11a-0265b1fec2d6.186be6940fde8bfa], Reason = [Created], Message = [Created container: filler-pod-0fe44502-aef7-475b-b11a-0265b1fec2d6] @ 10/06/25 12:26:44.461
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0fe44502-aef7-475b-b11a-0265b1fec2d6.186be694148ec669], Reason = [Started], Message = [Started container filler-pod-0fe44502-aef7-475b-b11a-0265b1fec2d6] @ 10/06/25 12:26:44.461
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-34ba80cb-7bdf-43e3-b276-61f3c118dea8.186be693ee1dea67], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9579/filler-pod-34ba80cb-7bdf-43e3-b276-61f3c118dea8 to cncf-1-33-script-3] @ 10/06/25 12:26:44.462
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-34ba80cb-7bdf-43e3-b276-61f3c118dea8.186be6940db37c7a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/06/25 12:26:44.462
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-34ba80cb-7bdf-43e3-b276-61f3c118dea8.186be6941213d301], Reason = [Created], Message = [Created container: filler-pod-34ba80cb-7bdf-43e3-b276-61f3c118dea8] @ 10/06/25 12:26:44.462
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-34ba80cb-7bdf-43e3-b276-61f3c118dea8.186be6941815299a], Reason = [Started], Message = [Started container filler-pod-34ba80cb-7bdf-43e3-b276-61f3c118dea8] @ 10/06/25 12:26:44.462
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.186be694672e7779], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod.] @ 10/06/25 12:26:44.48
  E1006 12:26:44.558749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node cncf-1-33-script-3 @ 10/06/25 12:26:45.478
  STEP: verifying the node doesn't have the label node @ 10/06/25 12:26:45.495
  STEP: removing the label node off the node cncf-1-33-script-2 @ 10/06/25 12:26:45.498
  STEP: verifying the node doesn't have the label node @ 10/06/25 12:26:45.513
  I1006 12:26:45.515724 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9579" for this suite. @ 10/06/25 12:26:45.519
• [3.332 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 10/06/25 12:26:45.535
  I1006 12:26:45.535187 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename replication-controller @ 10/06/25 12:26:45.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:26:45.556
  E1006 12:26:45.558616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:26:45.561
  STEP: Creating ReplicationController "e2e-rc-zxqcw" @ 10/06/25 12:26:45.564
  I1006 12:26:45.580934 24 rc.go:795] Get Replication Controller "e2e-rc-zxqcw" to confirm replicas
  E1006 12:26:46.558927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:26:46.582098 24 rc.go:795] Get Replication Controller "e2e-rc-zxqcw" to confirm replicas
  I1006 12:26:46.585302 24 rc.go:804] Found 1 replicas for "e2e-rc-zxqcw" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-zxqcw" @ 10/06/25 12:26:46.585
  STEP: Updating a scale subresource @ 10/06/25 12:26:46.588
  STEP: Verifying replicas where modified for replication controller "e2e-rc-zxqcw" @ 10/06/25 12:26:46.597
  I1006 12:26:46.597104 24 rc.go:795] Get Replication Controller "e2e-rc-zxqcw" to confirm replicas
  E1006 12:26:47.559524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:26:47.597685 24 rc.go:795] Get Replication Controller "e2e-rc-zxqcw" to confirm replicas
  I1006 12:26:47.600592 24 rc.go:804] Found 2 replicas for "e2e-rc-zxqcw" replication controller
  I1006 12:26:47.600803 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7709" for this suite. @ 10/06/25 12:26:47.604
• [2.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 10/06/25 12:26:47.617
  I1006 12:26:47.617879 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename downward-api @ 10/06/25 12:26:47.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:26:47.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:26:47.637
  STEP: Creating a pod to test downward api env vars @ 10/06/25 12:26:47.64
  E1006 12:26:48.560061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:49.560379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:50.560739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:51.561369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:26:51.669
  I1006 12:26:51.671210 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod downward-api-802ba014-91f8-4a70-bf86-d063bfe106a9 container dapi-container: <nil>
  STEP: delete the pod @ 10/06/25 12:26:51.676
  I1006 12:26:51.695404 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8427" for this suite. @ 10/06/25 12:26:51.699
• [4.094 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 10/06/25 12:26:51.711
  I1006 12:26:51.712101 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename aggregator @ 10/06/25 12:26:51.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:26:51.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:26:51.74
  I1006 12:26:51.743279 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Registering the sample API server. @ 10/06/25 12:26:51.744
  I1006 12:26:51.995422 24 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I1006 12:26:52.092163 24 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E1006 12:26:52.561439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:53.562058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:26:54.160245 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:26:54.562244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:55.562474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:26:56.165579 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:26:56.562608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:57.562903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:26:58.164158 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:26:58.563012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:26:59.563240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:00.164994 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:27:00.563303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:01.563781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:02.166374 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:27:02.564670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:03.564922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:04.166842 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:27:04.565125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:05.565224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:06.164304 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:27:06.565430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:07.565815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:08.164150 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:27:08.566791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:09.567346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:10.164645 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:27:10.568011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:11.568225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:12.163969 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:27:12.568388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:13.568860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:14.164662 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 26, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:27:14.569083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:15.569536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:16.288839 24 aggregator.go:756] Waited 115.323681ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 10/06/25 12:27:16.355
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 10/06/25 12:27:16.358
  STEP: List APIServices @ 10/06/25 12:27:16.371
  I1006 12:27:16.375775 24 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 10/06/25 12:27:16.375
  I1006 12:27:16.390615 24 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 10/06/25 12:27:16.39
  I1006 12:27:16.405112 24 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.October, 6, 12, 27, 16, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 10/06/25 12:27:16.405
  I1006 12:27:16.408136 24 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-10-06 12:27:16 +0000 UTC Passed all checks passed}
  I1006 12:27:16.408189 24 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1006 12:27:16.408202 24 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 10/06/25 12:27:16.408
  I1006 12:27:16.423171 24 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-489966782" @ 10/06/25 12:27:16.423
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 10/06/25 12:27:16.441
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 10/06/25 12:27:16.457
  STEP: Patch APIService Status @ 10/06/25 12:27:16.46
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 10/06/25 12:27:16.47
  I1006 12:27:16.473480 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-10-06 12:27:16 +0000 UTC Passed all checks passed}
  I1006 12:27:16.473575 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1006 12:27:16.473643 24 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1006 12:27:16.473663 24 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 10/06/25 12:27:16.473
  STEP: Confirm that the generated APIService has been deleted @ 10/06/25 12:27:16.486
  I1006 12:27:16.486920 24 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I1006 12:27:16.489423 24 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1006 12:27:16.489469 24 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  E1006 12:27:16.569622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:16.635071 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-3516" for this suite. @ 10/06/25 12:27:16.638
• [24.934 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 10/06/25 12:27:16.649
  I1006 12:27:16.649402 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/06/25 12:27:16.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:27:16.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:27:16.677
  STEP: create the container to handle the HTTPGet hook request. @ 10/06/25 12:27:16.739
  E1006 12:27:17.570145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:18.570743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/06/25 12:27:18.773
  E1006 12:27:19.571853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:20.572139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 10/06/25 12:27:20.791
  E1006 12:27:21.572617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:22.573396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 10/06/25 12:27:22.811
  I1006 12:27:22.818392 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2919" for this suite. @ 10/06/25 12:27:22.823
• [6.181 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 10/06/25 12:27:22.831
  I1006 12:27:22.831250 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename watch @ 10/06/25 12:27:22.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:27:22.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:27:22.853
  STEP: creating a watch on configmaps with label A @ 10/06/25 12:27:22.857
  STEP: creating a watch on configmaps with label B @ 10/06/25 12:27:22.859
  STEP: creating a watch on configmaps with label A or B @ 10/06/25 12:27:22.86
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 10/06/25 12:27:22.862
  I1006 12:27:22.872404 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7237  c77c3a56-dee9-46f2-9158-75506e974158 77044 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 12:27:22.872819 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7237  c77c3a56-dee9-46f2-9158-75506e974158 77044 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 10/06/25 12:27:22.872
  I1006 12:27:22.883549 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7237  c77c3a56-dee9-46f2-9158-75506e974158 77045 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 12:27:22.883668 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7237  c77c3a56-dee9-46f2-9158-75506e974158 77045 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 10/06/25 12:27:22.883
  I1006 12:27:22.893582 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7237  c77c3a56-dee9-46f2-9158-75506e974158 77046 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 12:27:22.893896 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7237  c77c3a56-dee9-46f2-9158-75506e974158 77046 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 10/06/25 12:27:22.894
  I1006 12:27:22.905674 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7237  c77c3a56-dee9-46f2-9158-75506e974158 77047 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 12:27:22.905844 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7237  c77c3a56-dee9-46f2-9158-75506e974158 77047 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 10/06/25 12:27:22.905
  I1006 12:27:22.912444 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7237  d9672823-c104-48ff-87b1-2f18499627a1 77048 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 12:27:22.912658 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7237  d9672823-c104-48ff-87b1-2f18499627a1 77048 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1006 12:27:23.574156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:24.574478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:25.574907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:26.576081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:27.576676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:28.577142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:29.577631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:30.578095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:31.578519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:32.579043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 10/06/25 12:27:32.913
  I1006 12:27:32.921703 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7237  d9672823-c104-48ff-87b1-2f18499627a1 77082 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1006 12:27:32.921923 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7237  d9672823-c104-48ff-87b1-2f18499627a1 77082 0 2025-10-06 12:27:22 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-10-06 12:27:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1006 12:27:33.579540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:34.579925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:35.580156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:36.580384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:37.580618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:38.581179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:39.581712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:40.582263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:41.582826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:42.583159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:42.922683 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7237" for this suite. @ 10/06/25 12:27:42.926
• [20.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 10/06/25 12:27:42.94
  I1006 12:27:42.940974 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename daemonsets @ 10/06/25 12:27:42.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:27:42.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:27:42.966
  STEP: Creating simple DaemonSet "daemon-set" @ 10/06/25 12:27:43.032
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/06/25 12:27:43.04
  I1006 12:27:43.127843 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:27:43.130956 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:27:43.131032 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  E1006 12:27:43.583243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:44.045610 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:27:44.048782 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:27:44.048845 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  E1006 12:27:44.584153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:45.045829 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:27:45.049203 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1006 12:27:45.049235 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 10/06/25 12:27:45.051
  STEP: DeleteCollection of the DaemonSets @ 10/06/25 12:27:45.054
  STEP: Verify that ReplicaSets have been deleted @ 10/06/25 12:27:45.063
  I1006 12:27:45.070739 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"77129"},"items":null}

  I1006 12:27:45.085834 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"77132"},"items":[{"metadata":{"name":"daemon-set-6lvdc","generateName":"daemon-set-","namespace":"daemonsets-640","uid":"b60991e5-eb05-49e0-99ac-f04d5b11fbdc","resourceVersion":"77132","generation":2,"creationTimestamp":"2025-10-06T12:27:43Z","deletionTimestamp":"2025-10-06T12:28:15Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"896ed2c5-2701-4d76-b182-ab3627ccf6b4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-10-06T12:27:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"896ed2c5-2701-4d76-b182-ab3627ccf6b4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-10-06T12:27:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.76\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wf2mj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wf2mj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf-1-33-script-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf-1-33-script-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-06T12:27:44Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-06T12:27:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-06T12:27:44Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-06T12:27:44Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-06T12:27:43Z"}],"hostIP":"172.16.109.240","hostIPs":[{"ip":"172.16.109.240"}],"podIP":"10.244.2.76","podIPs":[{"ip":"10.244.2.76"}],"startTime":"2025-10-06T12:27:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-10-06T12:27:43Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2e98816246b6ad001ed250cd9d0c4a5a21a8430bf0b0dd0b5683a4d01b169aa3","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-wf2mj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-xhp2q","generateName":"daemon-set-","namespace":"daemonsets-640","uid":"5b398bbc-aada-43da-aa57-f52c59a56464","resourceVersion":"77131","generation":2,"creationTimestamp":"2025-10-06T12:27:43Z","deletionTimestamp":"2025-10-06T12:28:15Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"896ed2c5-2701-4d76-b182-ab3627ccf6b4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-10-06T12:27:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"896ed2c5-2701-4d76-b182-ab3627ccf6b4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-10-06T12:27:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.159\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xd8kk","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xd8kk","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf-1-33-script-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf-1-33-script-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-06T12:27:44Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-06T12:27:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-06T12:27:44Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-06T12:27:44Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-06T12:27:43Z"}],"hostIP":"172.16.108.172","hostIPs":[{"ip":"172.16.108.172"}],"podIP":"10.244.1.159","podIPs":[{"ip":"10.244.1.159"}],"startTime":"2025-10-06T12:27:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-10-06T12:27:43Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1d8b3d80496844718653922391d6e560a60282a6e578d5a648df2545a3e4fe78","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-xd8kk","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1006 12:27:45.157771 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-640" for this suite. @ 10/06/25 12:27:45.255
• [2.324 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 10/06/25 12:27:45.265
  I1006 12:27:45.265959 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/06/25 12:27:45.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:27:45.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:27:45.289
  STEP: creating @ 10/06/25 12:27:45.292
  STEP: getting @ 10/06/25 12:27:45.325
  STEP: listing in namespace @ 10/06/25 12:27:45.33
  STEP: patching @ 10/06/25 12:27:45.339
  STEP: deleting @ 10/06/25 12:27:45.362
  I1006 12:27:45.378746 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3560" for this suite. @ 10/06/25 12:27:45.383
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 10/06/25 12:27:45.392
  I1006 12:27:45.392125 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename runtimeclass @ 10/06/25 12:27:45.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:27:45.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:27:45.421
  STEP: Deleting RuntimeClass runtimeclass-7025-delete-me @ 10/06/25 12:27:45.431
  STEP: Waiting for the RuntimeClass to disappear @ 10/06/25 12:27:45.439
  I1006 12:27:45.450243 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7025" for this suite. @ 10/06/25 12:27:45.484
• [0.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 10/06/25 12:27:45.5
  I1006 12:27:45.500454 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename daemonsets @ 10/06/25 12:27:45.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:27:45.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:27:45.527
  E1006 12:27:45.584997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:45.597273 24 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1006 12:27:45.608737 24 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1006 12:27:45.691830 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:27:45.696555 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:27:45.696604 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  E1006 12:27:46.585420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:46.614705 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:27:46.618343 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1006 12:27:46.618371 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  E1006 12:27:47.585711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:47.614691 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:27:47.617673 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1006 12:27:47.617717 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I1006 12:27:47.617735 24 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1006 12:27:47.631268 24 daemon_set.go:102] Updating DaemonSet daemon-set
  E1006 12:27:48.586572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:48.645960 24 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1006 12:27:48.659424 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I1006 12:27:48.659593 24 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1006 12:27:48.673525 24 daemon_set.go:1193] Wrong image for pod: daemon-set-ft5bv. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1006 12:27:48.673664 24 daemon_set.go:1198] Pod daemon-set-ft5bv is not available
  I1006 12:27:48.746849 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1006 12:27:49.586800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:49.667071 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1006 12:27:50.586822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:50.735834 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1006 12:27:51.587633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:51.667996 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1006 12:27:52.588442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:52.663621 24 daemon_set.go:1198] Pod daemon-set-dctls is not available
  I1006 12:27:52.666706 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 10/06/25 12:27:52.671
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6435, will wait for the garbage collector to delete the pods @ 10/06/25 12:27:52.672
  I1006 12:27:52.732299 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.282776ms
  I1006 12:27:52.833248 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.945724ms
  E1006 12:27:53.589134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:54.237860 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:27:54.237914 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1006 12:27:54.241921 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"77279"},"items":null}

  I1006 12:27:54.245263 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"77279"},"items":null}

  I1006 12:27:54.257334 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6435" for this suite. @ 10/06/25 12:27:54.35
• [8.858 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 10/06/25 12:27:54.358
  I1006 12:27:54.358720 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename field-validation @ 10/06/25 12:27:54.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:27:54.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:27:54.39
  I1006 12:27:54.393062 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  W1006 12:27:54.393741      24 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00135d400 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1006 12:27:54.589816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:55.590183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:56.590557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:27:56.937946      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I1006 12:27:56.937987      24 warnings.go:110] "Warning: unknown field \"beta\""
  I1006 12:27:56.937999      24 warnings.go:110] "Warning: unknown field \"delta\""
  I1006 12:27:56.938009      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I1006 12:27:56.938020      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I1006 12:27:57.472574 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2960" for this suite. @ 10/06/25 12:27:57.475
• [3.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 10/06/25 12:27:57.481
  I1006 12:27:57.481328 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/06/25 12:27:57.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:27:57.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:27:57.493
  I1006 12:27:57.496287 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  E1006 12:27:57.591290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:27:58.592055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/06/25 12:27:58.779
  I1006 12:27:58.779632 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-6247 --namespace=crd-publish-openapi-6247 create -f -'
  E1006 12:27:59.593203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:00.593160      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:28:00.898174 24 builder.go:146] stderr: ""
  I1006 12:28:00.898279 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6522-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1006 12:28:00.898400 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-6247 --namespace=crd-publish-openapi-6247 delete e2e-test-crd-publish-openapi-6522-crds test-cr'
  I1006 12:28:00.977021 24 builder.go:146] stderr: ""
  I1006 12:28:00.977070 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6522-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1006 12:28:00.977197 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-6247 --namespace=crd-publish-openapi-6247 apply -f -'
  I1006 12:28:01.060427 24 builder.go:146] stderr: ""
  I1006 12:28:01.060590 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6522-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1006 12:28:01.060701 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-6247 --namespace=crd-publish-openapi-6247 delete e2e-test-crd-publish-openapi-6522-crds test-cr'
  I1006 12:28:01.129259 24 builder.go:146] stderr: ""
  I1006 12:28:01.129327 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6522-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/06/25 12:28:01.129
  I1006 12:28:01.129443 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=crd-publish-openapi-6247 explain e2e-test-crd-publish-openapi-6522-crds'
  I1006 12:28:01.197640 24 builder.go:146] stderr: ""
  I1006 12:28:01.197727 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-6522-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1006 12:28:01.593904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:28:02.473511 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6247" for this suite. @ 10/06/25 12:28:02.481
• [5.010 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 10/06/25 12:28:02.492
  I1006 12:28:02.492442 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename namespaces @ 10/06/25 12:28:02.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:28:02.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:28:02.507
  STEP: Creating namespace "e2e-ns-h9s9k" @ 10/06/25 12:28:02.509
  I1006 12:28:02.528377 24 namespace.go:412] Namespace "e2e-ns-h9s9k-7334" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-h9s9k-7334" @ 10/06/25 12:28:02.528
  I1006 12:28:02.536643 24 namespace.go:435] Namespace "e2e-ns-h9s9k-7334" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-h9s9k-7334" @ 10/06/25 12:28:02.536
  I1006 12:28:02.548227 24 namespace.go:464] Namespace "e2e-ns-h9s9k-7334" has []v1.FinalizerName{"kubernetes"}
  I1006 12:28:02.548368 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7892" for this suite. @ 10/06/25 12:28:02.582
  STEP: Destroying namespace "e2e-ns-h9s9k-7334" for this suite. @ 10/06/25 12:28:02.59
  E1006 12:28:02.594479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 10/06/25 12:28:02.597
  I1006 12:28:02.597100 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-runtime @ 10/06/25 12:28:02.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:28:02.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:28:02.623
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 10/06/25 12:28:02.634
  E1006 12:28:03.595085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:04.595622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:05.596106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:06.596359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:07.597371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:08.597684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:09.598019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:10.598159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:11.598360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:12.598461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:13.598741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:14.599274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:15.599714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:16.599754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:17.600142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:18.600263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:19.600527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:20.600892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:21.601274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 10/06/25 12:28:21.715
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 10/06/25 12:28:21.718
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 10/06/25 12:28:21.723
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 10/06/25 12:28:21.723
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 10/06/25 12:28:21.761
  E1006 12:28:22.601649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:23.601837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:24.602230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 10/06/25 12:28:24.775
  E1006 12:28:25.602492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 10/06/25 12:28:25.781
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 10/06/25 12:28:25.789
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 10/06/25 12:28:25.789
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 10/06/25 12:28:25.817
  E1006 12:28:26.602584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 10/06/25 12:28:26.836
  E1006 12:28:27.602854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:28.603120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 10/06/25 12:28:28.847
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 10/06/25 12:28:28.852
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 10/06/25 12:28:28.853
  I1006 12:28:28.880408 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4447" for this suite. @ 10/06/25 12:28:28.883
• [26.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:196
  STEP: Creating a kubernetes client @ 10/06/25 12:28:28.892
  I1006 12:28:28.892661 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename servicecidr @ 10/06/25 12:28:28.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:28:28.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:28:28.92
  STEP: creating @ 10/06/25 12:28:28.924
  STEP: patching @ 10/06/25 12:28:28.938
  STEP: updating @ 10/06/25 12:28:28.947
  STEP: getting @ 10/06/25 12:28:28.961
  STEP: listing @ 10/06/25 12:28:28.964
  STEP: watching @ 10/06/25 12:28:28.967
  STEP: deleting @ 10/06/25 12:28:28.969
  STEP: deleting a collection @ 10/06/25 12:28:28.976
  I1006 12:28:28.988009 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-4071" for this suite. @ 10/06/25 12:28:28.991
• [0.108 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 10/06/25 12:28:29
  I1006 12:28:29.000938 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 10/06/25 12:28:29.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:28:29.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:28:29.033
  STEP: Setting up the test @ 10/06/25 12:28:29.036
  STEP: Creating hostNetwork=false pod @ 10/06/25 12:28:29.036
  E1006 12:28:29.603687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:30.604191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 10/06/25 12:28:31.059
  E1006 12:28:31.604640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:32.605658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 10/06/25 12:28:33.085
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 10/06/25 12:28:33.085
  I1006 12:28:33.085844 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3231 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:28:33.085885 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:28:33.086017 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3231/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I1006 12:28:33.140237 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:28:33.140346 24 exec_util.go:112] Exec stderr: ""
  I1006 12:28:33.140392 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3231 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:28:33.140411 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:28:33.140611 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3231/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I1006 12:28:33.180204 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:28:33.180330 24 exec_util.go:112] Exec stderr: ""
  I1006 12:28:33.180387 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3231 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:28:33.180399 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:28:33.180545 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3231/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I1006 12:28:33.233895 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:28:33.233990 24 exec_util.go:112] Exec stderr: ""
  I1006 12:28:33.234398 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3231 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:28:33.234476 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:28:33.234611 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3231/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I1006 12:28:33.287828 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:28:33.287900 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 10/06/25 12:28:33.287
  I1006 12:28:33.287964 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3231 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:28:33.287973 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:28:33.288255 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3231/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I1006 12:28:33.329881 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:28:33.329965 24 exec_util.go:112] Exec stderr: ""
  I1006 12:28:33.330001 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3231 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:28:33.330014 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:28:33.330225 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3231/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I1006 12:28:33.380858 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:28:33.380969 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 10/06/25 12:28:33.38
  I1006 12:28:33.381039 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3231 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:28:33.381052 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:28:33.381124 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3231/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I1006 12:28:33.441080 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:28:33.441158 24 exec_util.go:112] Exec stderr: ""
  I1006 12:28:33.441231 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3231 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:28:33.441264 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:28:33.441354 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3231/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I1006 12:28:33.489658 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:28:33.489731 24 exec_util.go:112] Exec stderr: ""
  I1006 12:28:33.489756 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3231 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:28:33.489765 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:28:33.489857 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3231/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I1006 12:28:33.543835 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:28:33.543916 24 exec_util.go:112] Exec stderr: ""
  I1006 12:28:33.543950 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3231 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1006 12:28:33.543964 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I1006 12:28:33.544068 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3231/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I1006 12:28:33.600215 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1006 12:28:33.600278 24 exec_util.go:112] Exec stderr: ""
  I1006 12:28:33.600460 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3231" for this suite. @ 10/06/25 12:28:33.603
  E1006 12:28:33.605643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
• [4.616 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 10/06/25 12:28:33.617
  I1006 12:28:33.617894 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubelet-test @ 10/06/25 12:28:33.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:28:33.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:28:33.634
  E1006 12:28:34.605987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:35.606366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:36.606532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:37.606953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:28:37.656833 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3623" for this suite. @ 10/06/25 12:28:37.662
• [4.051 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 10/06/25 12:28:37.668
  I1006 12:28:37.668834 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 12:28:37.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:28:37.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:28:37.686
  STEP: Creating secret with name secret-test-48ad8f8a-22b7-423a-ab99-7798bc8b32b2 @ 10/06/25 12:28:37.689
  STEP: Creating a pod to test consume secrets @ 10/06/25 12:28:37.696
  E1006 12:28:38.607022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:39.607488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:40.608351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:41.608660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:28:41.713
  I1006 12:28:41.715913 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-secrets-74527216-4188-417a-9db9-26cd8ded7631 container secret-env-test: <nil>
  STEP: delete the pod @ 10/06/25 12:28:41.72
  I1006 12:28:41.737505 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-581" for this suite. @ 10/06/25 12:28:41.74
• [4.082 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 10/06/25 12:28:41.75
  I1006 12:28:41.750937 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename security-context-test @ 10/06/25 12:28:41.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:28:41.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:28:41.767
  E1006 12:28:42.608850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:43.609850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:44.610017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:45.610385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:28:45.791771 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7318" for this suite. @ 10/06/25 12:28:45.795
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 10/06/25 12:28:45.806
  I1006 12:28:45.806093 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 12:28:45.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:28:45.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:28:45.823
  STEP: creating service endpoint-test2 in namespace services-9471 @ 10/06/25 12:28:45.83
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9471 to expose endpoints map[] @ 10/06/25 12:28:45.858
  I1006 12:28:45.866072      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 12:28:45.866232 24 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E1006 12:28:46.610942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:28:46.874796      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 12:28:46.877852 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9471 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9471 @ 10/06/25 12:28:46.878
  E1006 12:28:47.611451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:48.612062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9471 to expose endpoints map[pod1:[80]] @ 10/06/25 12:28:48.897
  I1006 12:28:48.900973      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 12:28:48.904411 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9471 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 10/06/25 12:28:48.904
  I1006 12:28:48.904542 24 resource.go:361] Creating new exec pod
  E1006 12:28:49.612595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:50.613021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:28:50.919637 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-9471 exec execpodxjkxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1006 12:28:51.034993 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.104.155.37) 80 port [tcp/http] succeeded!\n"
  I1006 12:28:51.035046 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 12:28:51.035119 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-9471 exec execpodxjkxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.155.37 80'
  I1006 12:28:51.156919 24 builder.go:146] stderr: "+ nc -v -t -w 2 10.104.155.37 80\n+ echo hostName\nConnection to 10.104.155.37 80 port [tcp/http] succeeded!\n"
  I1006 12:28:51.156999 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9471 @ 10/06/25 12:28:51.157
  E1006 12:28:51.613766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:52.613936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9471 to expose endpoints map[pod1:[80] pod2:[80]] @ 10/06/25 12:28:53.181
  I1006 12:28:53.186303      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 12:28:53.188943 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9471 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 10/06/25 12:28:53.188
  I1006 12:28:53.190694 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-9471 exec execpodxjkxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1006 12:28:53.334918 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.104.155.37) 80 port [tcp/http] succeeded!\n"
  I1006 12:28:53.335005 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 12:28:53.335399 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-9471 exec execpodxjkxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.155.37 80'
  I1006 12:28:53.448205 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.155.37 80\nConnection to 10.104.155.37 80 port [tcp/http] succeeded!\n"
  I1006 12:28:53.448285 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9471 @ 10/06/25 12:28:53.448
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9471 to expose endpoints map[pod2:[80]] @ 10/06/25 12:28:53.472
  I1006 12:28:53.479809      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 12:28:53.484290 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9471 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 10/06/25 12:28:53.484
  I1006 12:28:53.486803 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-9471 exec execpodxjkxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E1006 12:28:53.614518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:28:53.629343 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.104.155.37) 80 port [tcp/http] succeeded!\n"
  I1006 12:28:53.629394 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 12:28:53.629476 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-9471 exec execpodxjkxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.155.37 80'
  I1006 12:28:53.741805 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.155.37 80\nConnection to 10.104.155.37 80 port [tcp/http] succeeded!\n"
  I1006 12:28:53.741872 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9471 @ 10/06/25 12:28:53.741
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9471 to expose endpoints map[] @ 10/06/25 12:28:53.768
  I1006 12:28:53.771295      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 12:28:53.775107 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9471 exposes endpoints map[]
  I1006 12:28:53.816267 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9471" for this suite. @ 10/06/25 12:28:53.826
• [8.028 seconds]
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 10/06/25 12:28:53.834
  I1006 12:28:53.834449 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubelet-test @ 10/06/25 12:28:53.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:28:53.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:28:53.857
  STEP: Waiting for pod completion @ 10/06/25 12:28:53.872
  E1006 12:28:54.615494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:55.615859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:56.618449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:57.616913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:28:57.923432 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9535" for this suite. @ 10/06/25 12:28:57.927
• [4.099 seconds]
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 10/06/25 12:28:57.933
  I1006 12:28:57.933962 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 12:28:57.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:28:57.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:28:57.956
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 10/06/25 12:28:57.96
  STEP: Awaiting for the job to fail as all indexes are failed @ 10/06/25 12:28:57.969
  E1006 12:28:58.617251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:28:59.617585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:00.617957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:01.618364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 10/06/25 12:29:01.984
  I1006 12:29:01.986621 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9378" for this suite. @ 10/06/25 12:29:01.989
• [4.063 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 10/06/25 12:29:01.997
  I1006 12:29:01.997121 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 12:29:01.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:29:02.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:29:02.021
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/06/25 12:29:02.026
  E1006 12:29:02.618729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:03.619350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:04.619651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:05.620207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:29:06.053
  I1006 12:29:06.056893 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-d46f3c9a-e22f-4ab8-b8cf-ada047b5fa51 container test-container: <nil>
  STEP: delete the pod @ 10/06/25 12:29:06.062
  I1006 12:29:06.092023 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9759" for this suite. @ 10/06/25 12:29:06.095
• [4.107 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 10/06/25 12:29:06.103
  I1006 12:29:06.103959 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename var-expansion @ 10/06/25 12:29:06.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:29:06.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:29:06.125
  STEP: Creating a pod to test substitution in container's args @ 10/06/25 12:29:06.128
  E1006 12:29:06.620414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:07.620974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:08.622101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:09.622725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:29:10.154
  I1006 12:29:10.157364 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod var-expansion-b70e7281-fd50-46b6-b863-29b85b30d5e7 container dapi-container: <nil>
  STEP: delete the pod @ 10/06/25 12:29:10.162
  I1006 12:29:10.184422 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4413" for this suite. @ 10/06/25 12:29:10.188
• [4.093 seconds]
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 10/06/25 12:29:10.197
  I1006 12:29:10.197368 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:29:10.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:29:10.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:29:10.227
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-1f6d7dd2-d7ad-4913-950d-775d910daba7 @ 10/06/25 12:29:10.289
  STEP: Creating the pod @ 10/06/25 12:29:10.296
  E1006 12:29:10.623036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:11.623803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-1f6d7dd2-d7ad-4913-950d-775d910daba7 @ 10/06/25 12:29:12.332
  STEP: waiting to observe update in volume @ 10/06/25 12:29:12.339
  E1006 12:29:12.624106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:13.624309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:14.625387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:15.625688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:16.626296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:17.626893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:18.627466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:19.627730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:20.628309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:21.629101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:22.629272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:23.629912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:24.630866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:25.633062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:26.633015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:27.633221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:28.633544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:29.633819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:30.634851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:31.635419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:32.636454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:33.637071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:34.637740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:35.638393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:36.639148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:37.639794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:38.640291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:39.640764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:40.641486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:41.641928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:42.642328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:43.642878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:44.643465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:45.644038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:46.644520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:47.645025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:48.645450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:49.646050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:50.646121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:51.646650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:52.646744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:53.647216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:54.647729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:55.648120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:56.648439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:57.648847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:58.648888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:29:59.649234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:00.649687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:01.650043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:02.651107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:03.651596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:04.652700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:05.653051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:06.653779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:07.654252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:08.654992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:09.655625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:10.656302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:11.657027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:12.657603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:13.658709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:14.659784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:15.660373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:30:16.583751 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4139" for this suite. @ 10/06/25 12:30:16.587
• [66.400 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 10/06/25 12:30:16.597
  I1006 12:30:16.597335 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/06/25 12:30:16.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:30:16.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:30:16.623
  I1006 12:30:16.626813 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  E1006 12:30:16.661052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:17.661942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:18.662298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:19.662527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:20.663316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:21.664190      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:22.664890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:30:22.846614 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4396" for this suite. @ 10/06/25 12:30:22.85
• [6.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 10/06/25 12:30:22.864
  I1006 12:30:22.864289 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename var-expansion @ 10/06/25 12:30:22.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:30:22.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:30:22.882
  STEP: Creating a pod to test substitution in volume subpath @ 10/06/25 12:30:22.885
  E1006 12:30:23.665086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:24.665641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:25.666611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:26.667225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:30:26.908
  I1006 12:30:26.911444 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod var-expansion-fd38c3cf-5136-4bc1-baa2-9c135463a487 container dapi-container: <nil>
  STEP: delete the pod @ 10/06/25 12:30:26.916
  I1006 12:30:26.941494 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9103" for this suite. @ 10/06/25 12:30:26.944
• [4.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 10/06/25 12:30:26.952
  I1006 12:30:26.952603 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/06/25 12:30:26.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:30:26.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:30:26.969
  STEP: Creating 50 configmaps @ 10/06/25 12:30:26.973
  STEP: Creating RC which spawns configmap-volume pods @ 10/06/25 12:30:27.326
  I1006 12:30:27.344544 24 resource.go:81] Pod name wrapped-volume-race-34cb993a-cfdf-42c6-82c1-2b34bb526de9: Found 0 pods out of 5
  E1006 12:30:27.668203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:28.668658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:29.668909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:30.669117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:31.669627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:30:32.351564 24 resource.go:81] Pod name wrapped-volume-race-34cb993a-cfdf-42c6-82c1-2b34bb526de9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/06/25 12:30:32.351
  STEP: Creating RC which spawns configmap-volume pods @ 10/06/25 12:30:32.37
  I1006 12:30:32.399200 24 resource.go:81] Pod name wrapped-volume-race-d8078077-516d-4965-a3cb-91c94b8a1009: Found 1 pods out of 5
  E1006 12:30:32.670353      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:33.670916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:34.671011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:35.671195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:36.671671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:30:37.405816 24 resource.go:81] Pod name wrapped-volume-race-d8078077-516d-4965-a3cb-91c94b8a1009: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/06/25 12:30:37.406
  STEP: Creating RC which spawns configmap-volume pods @ 10/06/25 12:30:37.43
  I1006 12:30:37.456297 24 resource.go:81] Pod name wrapped-volume-race-b284ff30-3d28-44a9-9830-043f42b20d8a: Found 1 pods out of 5
  E1006 12:30:37.672689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:38.672707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:39.673242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:40.673661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:41.674052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:30:42.462974 24 resource.go:81] Pod name wrapped-volume-race-b284ff30-3d28-44a9-9830-043f42b20d8a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/06/25 12:30:42.463
  STEP: deleting ReplicationController wrapped-volume-race-b284ff30-3d28-44a9-9830-043f42b20d8a in namespace emptydir-wrapper-8420, will wait for the garbage collector to delete the pods @ 10/06/25 12:30:42.481
  I1006 12:30:42.545209 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-b284ff30-3d28-44a9-9830-043f42b20d8a took: 9.051664ms
  I1006 12:30:42.648117 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-b284ff30-3d28-44a9-9830-043f42b20d8a pods took: 102.905385ms
  E1006 12:30:42.674426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:43.674958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-d8078077-516d-4965-a3cb-91c94b8a1009 in namespace emptydir-wrapper-8420, will wait for the garbage collector to delete the pods @ 10/06/25 12:30:44.148
  I1006 12:30:44.211915 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-d8078077-516d-4965-a3cb-91c94b8a1009 took: 9.221875ms
  I1006 12:30:44.312229 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-d8078077-516d-4965-a3cb-91c94b8a1009 pods took: 100.299251ms
  E1006 12:30:44.676099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-34cb993a-cfdf-42c6-82c1-2b34bb526de9 in namespace emptydir-wrapper-8420, will wait for the garbage collector to delete the pods @ 10/06/25 12:30:45.212
  I1006 12:30:45.273996 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-34cb993a-cfdf-42c6-82c1-2b34bb526de9 took: 7.413416ms
  I1006 12:30:45.375065 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-34cb993a-cfdf-42c6-82c1-2b34bb526de9 pods took: 101.068744ms
  E1006 12:30:45.676704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:46.677308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 10/06/25 12:30:46.776
  I1006 12:30:47.160643 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8420" for this suite. @ 10/06/25 12:30:47.163
• [20.220 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 10/06/25 12:30:47.172
  I1006 12:30:47.172999 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:30:47.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:30:47.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:30:47.196
  STEP: Setting up server cert @ 10/06/25 12:30:47.228
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:30:47.481
  STEP: Deploying the webhook pod @ 10/06/25 12:30:47.488
  STEP: Wait for the deployment to be ready @ 10/06/25 12:30:47.516
  I1006 12:30:47.525007 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1006 12:30:47.678392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:48.679046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/06/25 12:30:49.536
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:30:49.565
  E1006 12:30:49.679386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:30:50.565255 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1006 12:30:50.569766 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  E1006 12:30:50.679711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 10/06/25 12:30:51.084
  STEP: Creating a custom resource that should be denied by the webhook @ 10/06/25 12:30:51.108
  E1006 12:30:51.680711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:52.681250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 10/06/25 12:30:53.133
  STEP: Updating the custom resource with disallowed data should be denied @ 10/06/25 12:30:53.143
  STEP: Deleting the custom resource should be denied @ 10/06/25 12:30:53.15
  STEP: Remove the offending key and value from the custom resource data @ 10/06/25 12:30:53.155
  STEP: Deleting the updated custom resource should be successful @ 10/06/25 12:30:53.171
  E1006 12:30:53.681343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:30:53.781870 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5248" for this suite. @ 10/06/25 12:30:53.786
  STEP: Destroying namespace "webhook-markers-4950" for this suite. @ 10/06/25 12:30:53.792
• [6.630 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 10/06/25 12:30:53.803
  I1006 12:30:53.803618 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 12:30:53.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:30:53.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:30:53.82
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 10/06/25 12:30:53.823
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 10/06/25 12:30:53.831
  E1006 12:30:54.681539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:55.681728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:56.681861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:57.682011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 10/06/25 12:30:57.84
  STEP: Verifying that the job status to ensure correct final state @ 10/06/25 12:30:57.845
  I1006 12:30:57.848543 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8397" for this suite. @ 10/06/25 12:30:57.852
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 10/06/25 12:30:57.858
  I1006 12:30:57.858959 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename containers @ 10/06/25 12:30:57.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:30:57.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:30:57.876
  STEP: Creating a pod to test override arguments @ 10/06/25 12:30:57.88
  E1006 12:30:58.683113      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:30:59.683607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:00.683871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:01.684182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:31:01.907
  I1006 12:31:01.909751 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod client-containers-8c2448f1-87a7-42b3-b695-341a331bba8d container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 12:31:01.914
  I1006 12:31:01.937507 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3983" for this suite. @ 10/06/25 12:31:01.94
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 10/06/25 12:31:01.948
  I1006 12:31:01.948738 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename csi-storageclass @ 10/06/25 12:31:01.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:31:01.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:31:01.973
  STEP: Creating a StorageClass @ 10/06/25 12:31:01.975
  STEP: Get StorageClass "e2e-mrkjp" @ 10/06/25 12:31:01.981
  STEP: Patching the StorageClass "e2e-mrkjp" @ 10/06/25 12:31:01.984
  STEP: Delete StorageClass "e2e-mrkjp" @ 10/06/25 12:31:01.99
  STEP: Confirm deletion of StorageClass "e2e-mrkjp" @ 10/06/25 12:31:01.997
  STEP: Create a replacement StorageClass @ 10/06/25 12:31:02
  STEP: Updating StorageClass "e2e-v2-2wfb9" @ 10/06/25 12:31:02.006
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-2wfb9=updated" @ 10/06/25 12:31:02.016
  STEP: Deleting StorageClass "e2e-v2-2wfb9" via DeleteCollection @ 10/06/25 12:31:02.018
  STEP: Confirm deletion of StorageClass "e2e-v2-2wfb9" @ 10/06/25 12:31:02.025
  I1006 12:31:02.028530 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8199" for this suite. @ 10/06/25 12:31:02.041
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 10/06/25 12:31:02.05
  I1006 12:31:02.050075 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename job @ 10/06/25 12:31:02.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:31:02.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:31:02.073
  STEP: Creating a job @ 10/06/25 12:31:02.076
  STEP: Ensuring job reaches completions @ 10/06/25 12:31:02.088
  E1006 12:31:02.685067      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:03.685396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:04.685516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:05.685654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:06.685828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:07.686412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:08.687223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:09.687685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:10.687856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:11.688195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:31:12.112396 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4796" for this suite. @ 10/06/25 12:31:12.115
• [10.073 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 10/06/25 12:31:12.123
  I1006 12:31:12.123068 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-runtime @ 10/06/25 12:31:12.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:31:12.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:31:12.146
  STEP: create the container @ 10/06/25 12:31:12.149
  I1006 12:31:12.156806      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 10/06/25 12:31:12.157
  E1006 12:31:12.688452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:13.689234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:14.689366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/06/25 12:31:15.175
  STEP: the container should be terminated @ 10/06/25 12:31:15.177
  STEP: the termination message should be set @ 10/06/25 12:31:15.177
  I1006 12:31:15.177446 24 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 10/06/25 12:31:15.177
  I1006 12:31:15.200721 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-885" for this suite. @ 10/06/25 12:31:15.204
• [3.089 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 10/06/25 12:31:15.213
  I1006 12:31:15.213282 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 12:31:15.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:31:15.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:31:15.243
  I1006 12:31:15.247426 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-1339 create -f -'
  I1006 12:31:15.424260 24 builder.go:146] stderr: ""
  I1006 12:31:15.424368 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1006 12:31:15.424519 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-1339 create -f -'
  I1006 12:31:15.610941 24 builder.go:146] stderr: ""
  I1006 12:31:15.611025 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/06/25 12:31:15.611
  E1006 12:31:15.690296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:31:16.615285 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1006 12:31:16.615344 24 framework.go:733] Found 0 / 1
  E1006 12:31:16.691472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:31:17.615658 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1006 12:31:17.615721 24 framework.go:733] Found 1 / 1
  I1006 12:31:17.615767 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1006 12:31:17.618050 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1006 12:31:17.618109 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1006 12:31:17.618184 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-1339 describe pod agnhost-primary-9ksqg'
  E1006 12:31:17.691907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:31:17.702223 24 builder.go:146] stderr: ""
  I1006 12:31:17.702407 24 builder.go:147] stdout: "Name:             agnhost-primary-9ksqg\nNamespace:        kubectl-1339\nPriority:         0\nService Account:  default\nNode:             cncf-1-33-script-2/172.16.108.172\nStart Time:       Mon, 06 Oct 2025 12:31:15 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.188\nIPs:\n  IP:           10.244.1.188\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://7b6d0d96a1c2a9b50fef4cc42315c543c0a6c24619c0b1fb37604f57a4cd115a\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 06 Oct 2025 12:31:16 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-p4j69 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-p4j69:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-1339/agnhost-primary-9ksqg to cncf-1-33-script-2\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I1006 12:31:17.702563 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-1339 describe rc agnhost-primary'
  I1006 12:31:17.785124 24 builder.go:146] stderr: ""
  I1006 12:31:17.785402 24 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1339\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-9ksqg\n"
  I1006 12:31:17.785528 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-1339 describe service agnhost-primary'
  I1006 12:31:17.878646 24 builder.go:146] stderr: ""
  I1006 12:31:17.878732 24 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-1339\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.108.116.47\nIPs:                      10.108.116.47\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.244.1.188:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1006 12:31:17.882094 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-1339 describe node cncf-1-33-script-1'
  I1006 12:31:17.982533 24 builder.go:146] stderr: ""
  I1006 12:31:17.982746 24 builder.go:147] stdout: "Name:               cncf-1-33-script-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=cncf-1-33-script-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"ae:07:df:93:8a:6e\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.16.109.126\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 06 Oct 2025 07:48:23 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  cncf-1-33-script-1\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 06 Oct 2025 12:31:12 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 06 Oct 2025 07:51:08 +0000   Mon, 06 Oct 2025 07:51:08 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Mon, 06 Oct 2025 12:30:17 +0000   Mon, 06 Oct 2025 07:48:23 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 06 Oct 2025 12:30:17 +0000   Mon, 06 Oct 2025 07:48:23 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 06 Oct 2025 12:30:17 +0000   Mon, 06 Oct 2025 07:48:23 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 06 Oct 2025 12:30:17 +0000   Mon, 06 Oct 2025 07:51:19 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.16.109.126\n  Hostname:    cncf-1-33-script-1\nCapacity:\n  cpu:                4\n  ephemeral-storage:  40458684Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8126904Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  37286723113\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8024504Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 1341572e2fda4360aaa4c4e1ae86de14\n  System UUID:                18b8b650-a912-466e-84b9-6e28947dba63\n  Boot ID:                    3b96ce06-ed50-4acb-80ac-ec77e1f1c20b\n  Kernel Version:             5.15.0-136-generic\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.28\n  Kubelet Version:            v1.33.5-ckp\n  Kube-Proxy Version:         \nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-flannel                kube-flannel-ds-8qk7v                                      100m (2%)     0 (0%)      50Mi (0%)        0 (0%)         4h42m\n  kube-system                 coredns-6487948975-4lfn4                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     4h42m\n  kube-system                 coredns-6487948975-nn2fc                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     4h42m\n  kube-system                 etcd-cncf-1-33-script-1                                    100m (2%)     0 (0%)      100Mi (1%)       0 (0%)         4h42m\n  kube-system                 kube-apiserver-cncf-1-33-script-1                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         4h42m\n  kube-system                 kube-controller-manager-cncf-1-33-script-1                 200m (5%)     0 (0%)      0 (0%)           0 (0%)         4h42m\n  kube-system                 kube-proxy-9hv6w                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         4h42m\n  kube-system                 kube-scheduler-cncf-1-33-script-1                          100m (2%)     0 (0%)      0 (0%)           0 (0%)         4h42m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-7c4e1e919750475a-chff6    0 (0%)        0 (0%)      0 (0%)           0 (0%)         96m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                950m (23%)  0 (0%)\n  memory             290Mi (3%)  340Mi (4%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I1006 12:31:17.982945 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-1339 describe namespace kubectl-1339'
  I1006 12:31:18.072940 24 builder.go:146] stderr: ""
  I1006 12:31:18.073067 24 builder.go:147] stdout: "Name:         kubectl-1339\nLabels:       e2e-framework=kubectl\n              e2e-run=8e4a5c1b-e1c8-4795-a43a-8c67c9ce2a95\n              kubernetes.io/metadata.name=kubectl-1339\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1006 12:31:18.073522 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1339" for this suite. @ 10/06/25 12:31:18.077
• [2.871 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 10/06/25 12:31:18.084
  I1006 12:31:18.084972 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename disruption @ 10/06/25 12:31:18.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:31:18.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:31:18.104
  STEP: creating the pdb @ 10/06/25 12:31:18.107
  STEP: Waiting for the pdb to be processed @ 10/06/25 12:31:18.115
  E1006 12:31:18.692461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:19.693025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 10/06/25 12:31:20.119
  STEP: Waiting for the pdb to be processed @ 10/06/25 12:31:20.132
  STEP: patching the pdb @ 10/06/25 12:31:20.144
  STEP: Waiting for the pdb to be processed @ 10/06/25 12:31:20.16
  E1006 12:31:20.693187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:21.693502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 10/06/25 12:31:22.17
  I1006 12:31:22.173044 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2666" for this suite. @ 10/06/25 12:31:22.176
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 10/06/25 12:31:22.183
  I1006 12:31:22.183771 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename var-expansion @ 10/06/25 12:31:22.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:31:22.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:31:22.202
  STEP: creating the pod with failed condition @ 10/06/25 12:31:22.206
  E1006 12:31:22.693869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:23.694682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:24.694805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:25.695599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:26.696627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:27.697168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:28.697410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:29.698107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:30.699046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:31.699750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:32.700452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:33.701132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:34.701347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:35.701830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:36.702074      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:37.702653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:38.703449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:39.704053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:40.704147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:41.704570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:42.705541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:43.706054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:44.706413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:45.706943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:46.707470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:47.707905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:48.708192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:49.709012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:50.709399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:51.709776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:52.709926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:53.710034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:54.710813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:55.710450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:56.711372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:57.711467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:58.712413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:31:59.712624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:00.712858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:01.713542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:02.713663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:03.713982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:04.714499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:05.714824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:06.715910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:07.716300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:08.716782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:09.717258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:10.717828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:11.718157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:12.718990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:13.719297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:14.720386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:15.720687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:16.721257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:17.721371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:18.722269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:19.722799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:20.723632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:21.724180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:22.724795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:23.725089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:24.725221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:25.725912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:26.726115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:27.726742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:28.726842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:29.727245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:30.727703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:31.728246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:32.729187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:33.729694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:34.730755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:35.731273      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:36.731382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:37.731848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:38.732848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:39.733536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:40.734282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:41.734744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:42.735279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:43.735871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:44.736297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:45.736666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:46.736847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:47.737229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:48.737615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:49.737890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:50.738441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:51.738829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:52.739359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:53.739724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:54.740811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:55.741260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:56.742292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:57.742703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:58.743658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:32:59.744131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:00.744467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:01.745041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:02.745931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:03.746660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:04.747427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:05.747778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:06.748246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:07.748749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:08.749547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:09.750020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:10.750341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:11.750929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:12.751494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:13.752088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:14.752459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:15.752935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:16.753929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:17.754499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:18.754836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:19.755319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:20.755443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:21.756210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 10/06/25 12:33:22.217
  I1006 12:33:22.733264 24 pod_client.go:173] Successfully updated pod "var-expansion-2900f5d4-36ba-47cb-8357-19ed19d2ea6d"
  STEP: waiting for pod running @ 10/06/25 12:33:22.733
  E1006 12:33:22.756987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:23.757962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/06/25 12:33:24.739
  I1006 12:33:24.739881 24 delete.go:62] Deleting pod "var-expansion-2900f5d4-36ba-47cb-8357-19ed19d2ea6d" in namespace "var-expansion-2576"
  I1006 12:33:24.750162 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-2900f5d4-36ba-47cb-8357-19ed19d2ea6d" to be fully deleted
  E1006 12:33:24.758613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:25.759041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:26.759413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:27.759815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:28.760706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:29.760682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:30.760854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:31.761957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:32.762100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:33.762517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:34.762935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:35.763046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:36.763404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:37.763745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:38.764101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:39.765030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:40.765302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:41.765567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:42.765977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:43.766931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:44.767128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:45.767381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:46.767975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:47.768067      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:48.768556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:49.768838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:50.769405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:51.769608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:52.770163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:53.770332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:54.773308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:55.770924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:33:56.771344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:33:56.818892 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2576" for this suite. @ 10/06/25 12:33:56.821
• [154.645 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 10/06/25 12:33:56.828
  I1006 12:33:56.828937 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename daemonsets @ 10/06/25 12:33:56.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:33:56.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:33:56.849
  I1006 12:33:56.866812 24 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 10/06/25 12:33:56.878
  I1006 12:33:56.887776 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:33:56.887837 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 10/06/25 12:33:56.887
  I1006 12:33:56.995681 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:33:56.995986 24 fixtures.go:131] Node cncf-1-33-script-3 is running 0 daemon pod, expected 1
  E1006 12:33:57.771554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:33:57.984618 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:33:57.985100 24 fixtures.go:131] Node cncf-1-33-script-3 is running 0 daemon pod, expected 1
  E1006 12:33:58.771928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:33:58.986153 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1006 12:33:58.986369 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 10/06/25 12:33:58.989
  I1006 12:33:59.008594 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1006 12:33:59.008665 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1006 12:33:59.772168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:34:00.009559 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:34:00.009785 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 10/06/25 12:34:00.009
  I1006 12:34:00.035736 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:34:00.035814 24 fixtures.go:131] Node cncf-1-33-script-3 is running 0 daemon pod, expected 1
  E1006 12:34:00.772421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:34:01.024529 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:34:01.024599 24 fixtures.go:131] Node cncf-1-33-script-3 is running 0 daemon pod, expected 1
  E1006 12:34:01.772846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:34:02.024011 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1006 12:34:02.024282 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/06/25 12:34:02.029
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9880, will wait for the garbage collector to delete the pods @ 10/06/25 12:34:02.029
  I1006 12:34:02.096873 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.549115ms
  I1006 12:34:02.197510 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.627997ms
  E1006 12:34:02.772775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:34:03.701519 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:34:03.701676 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1006 12:34:03.704578 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"79348"},"items":null}

  I1006 12:34:03.706654 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"79348"},"items":null}

  I1006 12:34:03.726661 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9880" for this suite. @ 10/06/25 12:34:03.729
• [6.912 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 10/06/25 12:34:03.742
  I1006 12:34:03.742626 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename sysctl @ 10/06/25 12:34:03.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:34:03.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:34:03.762
  STEP: Creating a pod with one valid and two invalid sysctls @ 10/06/25 12:34:03.765
  I1006 12:34:03.770540 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1006 12:34:03.773425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "sysctl-3469" for this suite. @ 10/06/25 12:34:03.811
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 10/06/25 12:34:03.824
  I1006 12:34:03.824846 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename taint-multiple-pods @ 10/06/25 12:34:03.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:34:03.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:34:03.851
  I1006 12:34:03.853683 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E1006 12:34:04.773766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:05.774092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:06.774527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:07.774575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:08.775616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:09.775873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:10.775941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:11.776198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:12.776626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:13.777026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:14.777151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:15.777640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:16.778479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:17.778944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:18.779493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:19.779965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:20.780585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:21.780866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:22.781154      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:23.781452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:24.781831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:25.782331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:26.782548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:27.783210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:28.783964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:29.784593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:30.785297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:31.785827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:32.786046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:33.787009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:34.787420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:35.787515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:36.788468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:37.788675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:38.789252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:39.789502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:40.789942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:41.790290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:42.790722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:43.791475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:44.791969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:45.792266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:46.792958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:47.793177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:48.794037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:49.794173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:50.794302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:51.795001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:52.794634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:53.795527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:54.795786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:55.796012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:56.796264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:57.796497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:58.796524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:34:59.796844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:00.797289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:01.797720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:02.798270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:03.798685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:03.853809 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I1006 12:35:03.857140 24 taints.go:144] Starting informer...
  STEP: Starting pods... @ 10/06/25 12:35:03.857
  I1006 12:35:04.073645 24 taints.go:463] Pod1 is running on cncf-1-33-script-2. Tainting Node
  E1006 12:35:04.798899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:05.799245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:06.294893 24 taints.go:471] Pod2 is running on cncf-1-33-script-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/06/25 12:35:06.294
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/06/25 12:35:06.311
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 10/06/25 12:35:06.314
  E1006 12:35:06.799421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:07.799819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:08.800538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:09.800766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:10.801052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:11.801074      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:12.256167 24 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E1006 12:35:12.801782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:13.802712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:14.802828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:15.803413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:16.803607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:17.803979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:18.804505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:19.804993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:20.805147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:21.805569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:22.805815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:23.806234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:24.806528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:25.807123      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:26.807418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:27.807947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:28.808508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:29.809064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:30.809223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:31.809848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:32.302698 24 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/06/25 12:35:32.32
  I1006 12:35:32.323752 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-4012" for this suite. @ 10/06/25 12:35:32.326
• [88.509 seconds]
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 10/06/25 12:35:32.333
  I1006 12:35:32.333798 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename deployment @ 10/06/25 12:35:32.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:35:32.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:35:32.352
  I1006 12:35:32.355216 24 deployment.go:1215] Creating deployment "webserver-deployment"
  I1006 12:35:32.365373 24 deployment.go:1219] Waiting for observed generation 1
  E1006 12:35:32.810870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:33.810861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:34.375896 24 deployment.go:1224] Waiting for all required pods to come up
  I1006 12:35:34.387132 24 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 10/06/25 12:35:34.387
  I1006 12:35:34.387253 24 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I1006 12:35:34.391732 24 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I1006 12:35:34.404630 24 deployment.go:314] Updating deployment webserver-deployment
  I1006 12:35:34.404687 24 deployment.go:1243] Waiting for observed generation 2
  E1006 12:35:34.811778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:35.812168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:36.416766 24 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1006 12:35:36.420241 24 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1006 12:35:36.422573 24 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1006 12:35:36.429874 24 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1006 12:35:36.429926 24 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1006 12:35:36.432884 24 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1006 12:35:36.437934 24 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1006 12:35:36.438139 24 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1006 12:35:36.448880 24 deployment.go:314] Updating deployment webserver-deployment
  I1006 12:35:36.448971 24 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1006 12:35:36.454111 24 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1006 12:35:36.460443 24 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  E1006 12:35:36.812890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:37.813004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:38.470297 24 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "accc292d-c9b3-40ec-a249-e52a40f4e3ee",
      ResourceVersion: (string) (len=5) "79947",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 18,
      AvailableReplicas: (int32) 18,
      UnavailableReplicas: (int32) 15,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1006 12:35:38.475779 24 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
      ResourceVersion: (string) (len=5) "79795",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "accc292d-c9b3-40ec-a249-e52a40f4e3ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 63 63 63 32 39  32 64 2d 63 39 62 33 2d  |\"accc292d-c9b3-|
              00000120  34 30 65 63 2d 61 32 34  39 2d 65 35 32 61 34 30  |40ec-a249-e52a40|
              00000130  66 34 65 33 65 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f4e3ee\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 12:35:38.476699 24 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I1006 12:35:38.477019 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
      ResourceVersion: (string) (len=5) "79949",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "accc292d-c9b3-40ec-a249-e52a40f4e3ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 63 63 63 32 39  32 64 2d 63 39 62 33 2d  |\"accc292d-c9b3-|
              00000120  34 30 65 63 2d 61 32 34  39 2d 65 35 32 61 34 30  |40ec-a249-e52a40|
              00000130  66 34 65 33 65 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f4e3ee\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 19,
      AvailableReplicas: (int32) 19,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 12:35:38.488941 24 deployment.go:68] Pod "webserver-deployment-685b768f58-29lv7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-29lv7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dfc8939a-c499-4c85-b8f7-caa58cc4659b",
      ResourceVersion: (string) (len=5) "79648",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 39  38 5c 22 7d 22 3a 7b 22  |.244.2.98\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dw6g2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dw6g2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) (len=11) "10.244.2.98",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.98"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350933,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9c2ee3e5436662481bd51df074bca979691a0f6a06cec7cdb3084b6e55f98017",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dw6g2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.491285 24 deployment.go:68] Pod "webserver-deployment-685b768f58-4w8z2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4w8z2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4c25c63-3533-42dd-8962-e4a50b6c276b",
      ResourceVersion: (string) (len=5) "79899",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  30 38 5c 22 7d 22 3a 7b  |.244.2.108\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4hlk2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4hlk2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) (len=12) "10.244.2.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350937,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e9fd027137596a615457236af1975ed426aba34d2a6f415df20c96bc0a014fd0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4hlk2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.493627 24 deployment.go:68] Pod "webserver-deployment-685b768f58-58z5d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-58z5d",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27306b8e-168f-4c1b-a233-d0969222c728",
      ResourceVersion: (string) (len=5) "79645",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 39  37 5c 22 7d 22 3a 7b 22  |.244.2.97\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkzns",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkzns",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) (len=11) "10.244.2.97",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.97"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350933,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2ac2ebd41d72e00cb04c16991b45013c6fb877187b74e7928f3b8d0705ece68e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wkzns",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.495183 24 deployment.go:68] Pod "webserver-deployment-685b768f58-69sm6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-69sm6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89413494-f22a-47ca-b539-1d345999d011",
      ResourceVersion: (string) (len=5) "79932",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  30 35 5c 22 7d 22 3a 7b  |.244.1.205\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xpsqw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xpsqw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.205",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.205"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350938,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://53ee0ae2253d7d64e5b75cd3757eabc8417659f36372483af14409249d0ab4cf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xpsqw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.496836 24 deployment.go:68] Pod "webserver-deployment-685b768f58-6wv6q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6wv6q",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "42cf5bce-5f1f-4626-97f2-5e0fb09a0fdd",
      ResourceVersion: (string) (len=5) "79903",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  31 30 5c 22 7d 22 3a 7b  |.244.2.110\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7hmvs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7hmvs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) (len=12) "10.244.2.110",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.110"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350937,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://540fc1d2632c4917ddb2674a879f3555be2044ab428aa084719caf585a8f8e6a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7hmvs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.498538 24 deployment.go:68] Pod "webserver-deployment-685b768f58-6xklx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6xklx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec6c0e11-4053-432a-88e6-03e7d846769c",
      ResourceVersion: (string) (len=5) "79941",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  30 37 5c 22 7d 22 3a 7b  |.244.1.207\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8kcpq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8kcpq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.207",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.207"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350938,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://18dd26460a392148e06eed952ffbb741be37318a1202731ff951ba5d4fdb8c3d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8kcpq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.501794 24 deployment.go:68] Pod "webserver-deployment-685b768f58-7gsb8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7gsb8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a322fbc-a280-48ed-8190-bf72e82cc3db",
      ResourceVersion: (string) (len=5) "79652",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  30 31 5c 22 7d 22 3a 7b  |.244.2.101\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gcfzc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gcfzc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) (len=12) "10.244.2.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350933,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9d9e242ae70fb7c21ed99f20c525e31d6c03ed4e4b26ecf056b144876cd608bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gcfzc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.503972 24 deployment.go:68] Pod "webserver-deployment-685b768f58-bcqks" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bcqks",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b01f8759-b406-414f-8519-c1860ef13c8b",
      ResourceVersion: (string) (len=5) "79667",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  39 33 5c 22 7d 22 3a 7b  |.244.1.193\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qhsvz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qhsvz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.193",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.193"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350933,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b84b30f7a00fef1212f8b61daf5a15de979b14e1df58d2e221a552fbc68d8ebb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qhsvz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.506908 24 deployment.go:68] Pod "webserver-deployment-685b768f58-bj6k8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bj6k8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de9554b1-b11e-49b8-a00c-579d2bdacf02",
      ResourceVersion: (string) (len=5) "79944",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  30 36 5c 22 7d 22 3a 7b  |.244.1.206\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-clf9s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-clf9s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.206",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.206"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350938,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a2299395067cfee11cea925985cdaa19cd6ec492806f87d6ab190e39e2feadd8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-clf9s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.509791 24 deployment.go:68] Pod "webserver-deployment-685b768f58-bwgcp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bwgcp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9529bbbd-734c-46f6-8240-7cdbdf876b44",
      ResourceVersion: (string) (len=5) "79907",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  30 37 5c 22 7d 22 3a 7b  |.244.2.107\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8594d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8594d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) (len=12) "10.244.2.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350937,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e9fc532d958657093cc5496e3decd8588e6c333a6a58bb12a4c83f5aacfc9aef",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8594d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.512003 24 deployment.go:68] Pod "webserver-deployment-685b768f58-dxhfk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dxhfk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf88c17d-9f3e-4b2c-8b5d-41a3b1191289",
      ResourceVersion: (string) (len=5) "79654",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 39  39 5c 22 7d 22 3a 7b 22  |.244.2.99\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vhqw7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vhqw7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) (len=11) "10.244.2.99",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.99"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350933,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7c9ef46052a1a46c85f0bc77395d632113712f1015a2e9fd531b0f8c9d5c06b3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vhqw7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.514301 24 deployment.go:68] Pod "webserver-deployment-685b768f58-g9wx8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-g9wx8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de62e79d-a13c-4f74-befc-b2a618d6a306",
      ResourceVersion: (string) (len=5) "79935",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  30 32 5c 22 7d 22 3a 7b  |.244.1.202\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mnwpv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mnwpv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.202",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.202"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350938,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://28cc99aa42c3f6366d0d8bd51c9744386a843030b0770d704a4cd4bc9245b021",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mnwpv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.516759 24 deployment.go:68] Pod "webserver-deployment-685b768f58-jlh22" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jlh22",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "455d6855-4d53-42c3-8a66-401acd29699c",
      ResourceVersion: (string) (len=5) "79939",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  30 31 5c 22 7d 22 3a 7b  |.244.1.201\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zh9sv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zh9sv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350937,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9483582e45a52f526b7947074c8d6954997fa9ddbb6411faef49a235264e2bf0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zh9sv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.519457 24 deployment.go:68] Pod "webserver-deployment-685b768f58-jnk2s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jnk2s",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c7aa8a3-d20b-42ff-bb5c-9f0a497ba656",
      ResourceVersion: (string) (len=5) "79625",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  39 31 5c 22 7d 22 3a 7b  |.244.1.191\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkrz9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkrz9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.191",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.191"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350933,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b4f2d1609eae689263bdbad26d9840d5c632ba5f78dd96f26810cd1b0c922405",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wkrz9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.522710 24 deployment.go:68] Pod "webserver-deployment-685b768f58-knxnr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-knxnr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fda2db0c-4f02-442d-8ff5-a137e1ebf4d1",
      ResourceVersion: (string) (len=5) "79930",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  39 39 5c 22 7d 22 3a 7b  |.244.1.199\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zccwd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zccwd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350937,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3cdbbd1b573eadb21ce19a7f3e6ab7fec022a38692f88943951b31298095e9c8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zccwd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.525986 24 deployment.go:68] Pod "webserver-deployment-685b768f58-mmr9l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-mmr9l",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b9e040d-aed4-4062-84b0-d51c3a3ceb62",
      ResourceVersion: (string) (len=5) "79659",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  39 32 5c 22 7d 22 3a 7b  |.244.1.192\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c4dc7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c4dc7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.192",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.192"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350933,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9c0f7dad6b03ce0ef8ba62e07dbd21d9009a1733529610bfc39392212118cfc2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c4dc7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.528421 24 deployment.go:68] Pod "webserver-deployment-685b768f58-pgc5b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pgc5b",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e251c5ed-309a-4395-93f7-11932520cf8b",
      ResourceVersion: (string) (len=5) "79892",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  30 36 5c 22 7d 22 3a 7b  |.244.2.106\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jfvdz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jfvdz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) (len=12) "10.244.2.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350937,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3d61dcf6f73e3fdc9cb7548a599fcb4718d4cfec900623659178772df3ee8151",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jfvdz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.531119 24 deployment.go:68] Pod "webserver-deployment-685b768f58-rpkcj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rpkcj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04382d5e-8a66-4aee-8b4c-cd2d2167cf32",
      ResourceVersion: (string) (len=5) "79948",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  30 34 5c 22 7d 22 3a 7b  |.244.1.204\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kmtqt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kmtqt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.204",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.204"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350938,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://290bb427c41b928c4689d05cf162a3ead1915bece051f90e1bf5335baa2f4344",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kmtqt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.533505 24 deployment.go:68] Pod "webserver-deployment-685b768f58-tnmdd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tnmdd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "493bf83c-b538-4845-a505-25f90f6de035",
      ResourceVersion: (string) (len=5) "79643",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  30 30 5c 22 7d 22 3a 7b  |.244.2.100\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6pw6k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6pw6k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) (len=12) "10.244.2.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63895350933,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4a4f4ae1278a12ab850b3b39f2556c5ec8e5d0cff3947eeddb2ace42e705e5bc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6pw6k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.535851 24 deployment.go:68] Pod "webserver-deployment-685b768f58-zg4tm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zg4tm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c0432cd-de8f-4468-8d96-0b4a3de3f48e",
      ResourceVersion: (string) (len=5) "79812",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "fcbcf57f-85a5-421c-bbc8-36ee9bb34528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  62 63 66 35 37 66 2d 38  |d\":\"fcbcf57f-8|
              00000090  35 61 35 2d 34 32 31 63  2d 62 62 63 38 2d 33 36  |5a5-421c-bbc8-36|
              000000a0  65 65 39 62 62 33 34 35  32 38 5c 22 7d 22 3a 7b  |ee9bb34528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lg6bv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lg6bv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lg6bv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.538169 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-49hlp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-49hlp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db2c53b3-2107-41f1-acf4-0f4ca5a53995",
      ResourceVersion: (string) (len=5) "79823",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7z879",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7z879",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7z879",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.540365 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-4nx5h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-4nx5h",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f827e03e-afe5-480e-bf23-028b9c27524d",
      ResourceVersion: (string) (len=5) "79793",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9wz5x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9wz5x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9wz5x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.542660 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-7jg5l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-7jg5l",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2397ecdb-f836-4273-96e6-77a5b426cd82",
      ResourceVersion: (string) (len=5) "79788",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pkc5g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pkc5g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pkc5g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.545019 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-7mbgv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-7mbgv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "406453bd-76d4-4283-b117-3df54ff97dce",
      ResourceVersion: (string) (len=5) "79701",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9z26f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9z26f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9z26f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.547514 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-8sxtg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-8sxtg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01f3d3c7-e733-4c6f-aa93-f5e21d307937",
      ResourceVersion: (string) (len=5) "79821",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vv9gx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vv9gx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vv9gx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.550540 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-dwxq7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-dwxq7",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "738c70c0-1197-4ba4-9c65-7ce365b29a3b",
      ResourceVersion: (string) (len=5) "79854",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 31 39 36 5c  22 7d 22 3a 7b 22 2e 22  |4.1.196\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fs8zx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fs8zx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) (len=12) "10.244.1.196",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.196"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fs8zx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.553471 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-gzkng" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-gzkng",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "473eb500-0414-4aff-a3a5-42b1f27a4bed",
      ResourceVersion: (string) (len=5) "79827",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-csrb9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-csrb9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-csrb9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.556049 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jhlj5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jhlj5",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44b5f822-1bd0-4818-82ae-d212ac53fe65",
      ResourceVersion: (string) (len=5) "79719",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9h2vl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9h2vl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9h2vl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.559318 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kpjl5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kpjl5",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01097394-390c-4070-a7ef-187a36a651e9",
      ResourceVersion: (string) (len=5) "79806",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cplcg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cplcg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cplcg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.563074 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mthxk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mthxk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07310574-a651-46d9-8475-638abb8c2b82",
      ResourceVersion: (string) (len=5) "79815",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jg5z5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jg5z5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.108.172",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.108.172"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jg5z5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.565902 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rf28p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rf28p",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ab0ec98-5453-476f-9adf-262e3a25944e",
      ResourceVersion: (string) (len=5) "79839",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 32 2e 31 30 32 5c  22 7d 22 3a 7b 22 2e 22  |4.2.102\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hlxcd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hlxcd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) (len=12) "10.244.2.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hlxcd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.569168 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-tqqqj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-tqqqj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1918db2d-d684-4feb-98fd-a22f3f8aa388",
      ResourceVersion: (string) (len=5) "79715",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-htzsb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-htzsb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-htzsb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.571234 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xkbqm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xkbqm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20800963-6916-4afa-b4ef-f658ca1afc44",
      ResourceVersion: (string) (len=5) "79826",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "eafaf450-f34c-4662-856b-0d56f1bb3a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 61 66 34 35 30 2d 66  |d\":\"eafaf450-f|
              00000090  33 34 63 2d 34 36 36 32  2d 38 35 36 62 2d 30 64  |34c-4662-856b-0d|
              000000a0  35 36 66 31 62 62 33 61  32 63 5c 22 7d 22 3a 7b  |56f1bb3a2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bvgt6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bvgt6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895350936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895350936,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bvgt6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:35:38.573829 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7071" for this suite. @ 10/06/25 12:35:38.58
• [6.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 10/06/25 12:35:38.588
  I1006 12:35:38.588787 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/06/25 12:35:38.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:35:38.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:35:38.617
  I1006 12:35:38.624197 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7274" for this suite. @ 10/06/25 12:35:38.683
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 10/06/25 12:35:38.691
  I1006 12:35:38.691205 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename daemonsets @ 10/06/25 12:35:38.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:35:38.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:35:38.713
  STEP: Creating simple DaemonSet "daemon-set" @ 10/06/25 12:35:38.801
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/06/25 12:35:38.812
  E1006 12:35:38.813239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:38.884642 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:35:38.927616 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:35:38.928034 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  E1006 12:35:39.813709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:39.818782 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:35:39.824114 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:35:39.824366 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  E1006 12:35:40.814259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:40.819109 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:35:40.822918 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1006 12:35:40.822987 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 10/06/25 12:35:40.826
  I1006 12:35:40.830294 24 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 10/06/25 12:35:40.83
  I1006 12:35:40.841909 24 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 10/06/25 12:35:40.841
  I1006 12:35:40.844597 24 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1006 12:35:40.845019 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1006 12:35:40.845207 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1006 12:35:40.845893 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1006 12:35:40.845965 24 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-3121 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1006 12:35:40.846253 24 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 10/06/25 12:35:40.846
  STEP: watching for the daemon set status to be patched @ 10/06/25 12:35:40.861
  I1006 12:35:40.864172 24 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1006 12:35:40.864359 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1006 12:35:40.864449 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1006 12:35:40.864832 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1006 12:35:40.864878 24 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-3121 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1006 12:35:40.865014 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1006 12:35:40.865054 24 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-3121 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1006 12:35:40.865072 24 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 10/06/25 12:35:40.867
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3121, will wait for the garbage collector to delete the pods @ 10/06/25 12:35:40.867
  I1006 12:35:40.929225 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.820958ms
  I1006 12:35:41.030061 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.784976ms
  E1006 12:35:41.814897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:42.434361 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:35:42.434441 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1006 12:35:42.438268 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"80013"},"items":null}

  I1006 12:35:42.447788 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"80013"},"items":null}

  I1006 12:35:42.455612 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3121" for this suite. @ 10/06/25 12:35:42.458
• [3.775 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 10/06/25 12:35:42.468
  I1006 12:35:42.468342 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename statefulset @ 10/06/25 12:35:42.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:35:42.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:35:42.489
  STEP: Creating service test in namespace statefulset-6920 @ 10/06/25 12:35:42.493
  I1006 12:35:42.521852 24 wait.go:44] Found 0 stateful pods, waiting for 1
  E1006 12:35:42.815698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:43.816555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:44.816811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:45.817289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:46.817250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:47.817683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:48.817658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:49.817755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:50.817954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:51.818433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:35:52.518870 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 10/06/25 12:35:52.525
  I1006 12:35:52.553671 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1006 12:35:52.553880 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E1006 12:35:52.818953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:53.819466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:54.819777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:55.820008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:56.820397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:57.820568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:58.820928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:35:59.821212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:00.821583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:01.821665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:02.543729 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1006 12:36:02.543785 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 10/06/25 12:36:02.548
  STEP: Delete all of the StatefulSets @ 10/06/25 12:36:02.551
  STEP: Verify that StatefulSets have been deleted @ 10/06/25 12:36:02.559
  I1006 12:36:02.561375 24 statefulset.go:138] Deleting all statefulset in ns statefulset-6920
  I1006 12:36:02.570899 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6920" for this suite. @ 10/06/25 12:36:02.584
• [20.136 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 10/06/25 12:36:02.603
  I1006 12:36:02.603947 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename secrets @ 10/06/25 12:36:02.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:36:02.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:36:02.621
  STEP: Creating secret with name secret-test-02fd377d-5970-4feb-8df8-d04411a9e826 @ 10/06/25 12:36:02.625
  STEP: Creating a pod to test consume secrets @ 10/06/25 12:36:02.635
  E1006 12:36:02.821982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:03.822556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:36:04.657
  I1006 12:36:04.660507 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-secrets-9063db5c-bbaf-4295-a103-ef625133fa73 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 12:36:04.683
  I1006 12:36:04.709987 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3372" for this suite. @ 10/06/25 12:36:04.713
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 10/06/25 12:36:04.72
  I1006 12:36:04.720582 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/06/25 12:36:04.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:36:04.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:36:04.737
  STEP: create the container to handle the HTTPGet hook request. @ 10/06/25 12:36:04.814
  E1006 12:36:04.823318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:05.823589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:06.823964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/06/25 12:36:06.838
  E1006 12:36:07.827323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:08.825802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 10/06/25 12:36:08.86
  STEP: delete the pod with lifecycle hook @ 10/06/25 12:36:08.865
  E1006 12:36:09.826360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:10.826946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:10.886141 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1067" for this suite. @ 10/06/25 12:36:10.889
• [6.176 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 10/06/25 12:36:10.896
  I1006 12:36:10.896807 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename discovery @ 10/06/25 12:36:10.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:36:10.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:36:10.912
  STEP: Setting up server cert @ 10/06/25 12:36:10.917
  I1006 12:36:11.420968 24 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1006 12:36:11.422021 24 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1006 12:36:11.422051 24 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1006 12:36:11.422073 24 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1006 12:36:11.422085 24 discovery.go:139] Checking APIGroup: apps
  I1006 12:36:11.423162 24 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1006 12:36:11.423238 24 discovery.go:148] Versions found [{apps/v1 v1}]
  I1006 12:36:11.423279 24 discovery.go:154] apps/v1 matches apps/v1
  I1006 12:36:11.423315 24 discovery.go:139] Checking APIGroup: events.k8s.io
  I1006 12:36:11.424135 24 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1006 12:36:11.424156 24 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1006 12:36:11.424165 24 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1006 12:36:11.424186 24 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1006 12:36:11.425223 24 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1006 12:36:11.425246 24 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1006 12:36:11.425252 24 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1006 12:36:11.425258 24 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1006 12:36:11.426206 24 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1006 12:36:11.426364 24 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1006 12:36:11.426440 24 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1006 12:36:11.426595 24 discovery.go:139] Checking APIGroup: autoscaling
  I1006 12:36:11.429002 24 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1006 12:36:11.429037 24 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1006 12:36:11.429044 24 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1006 12:36:11.429079 24 discovery.go:139] Checking APIGroup: batch
  I1006 12:36:11.430330 24 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1006 12:36:11.430500 24 discovery.go:148] Versions found [{batch/v1 v1}]
  I1006 12:36:11.430705 24 discovery.go:154] batch/v1 matches batch/v1
  I1006 12:36:11.430847 24 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1006 12:36:11.432352 24 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1006 12:36:11.432371 24 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1006 12:36:11.432385 24 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1006 12:36:11.432393 24 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1006 12:36:11.433471 24 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1006 12:36:11.433601 24 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1006 12:36:11.433677 24 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1006 12:36:11.433751 24 discovery.go:139] Checking APIGroup: policy
  I1006 12:36:11.434932 24 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1006 12:36:11.434953 24 discovery.go:148] Versions found [{policy/v1 v1}]
  I1006 12:36:11.434959 24 discovery.go:154] policy/v1 matches policy/v1
  I1006 12:36:11.434965 24 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1006 12:36:11.435976 24 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1006 12:36:11.436029 24 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1006 12:36:11.436041 24 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1006 12:36:11.436063 24 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1006 12:36:11.437086 24 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1006 12:36:11.437111 24 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1006 12:36:11.437123 24 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1006 12:36:11.437159 24 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1006 12:36:11.438072 24 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1006 12:36:11.438105 24 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1006 12:36:11.438111 24 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1006 12:36:11.438117 24 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1006 12:36:11.439113 24 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1006 12:36:11.439204 24 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1006 12:36:11.439279 24 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1006 12:36:11.439348 24 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1006 12:36:11.440128 24 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1006 12:36:11.440146 24 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1006 12:36:11.440155 24 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1006 12:36:11.440166 24 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1006 12:36:11.441249 24 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1006 12:36:11.441271 24 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1006 12:36:11.441282 24 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1006 12:36:11.441292 24 discovery.go:139] Checking APIGroup: node.k8s.io
  I1006 12:36:11.442444 24 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1006 12:36:11.442460 24 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1006 12:36:11.442466 24 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1006 12:36:11.442472 24 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1006 12:36:11.443478 24 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1006 12:36:11.443541 24 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1006 12:36:11.443578 24 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1006 12:36:11.443620 24 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1006 12:36:11.444540 24 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1006 12:36:11.444612 24 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I1006 12:36:11.444653 24 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1006 12:36:11.444785 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5980" for this suite. @ 10/06/25 12:36:11.449
• [0.561 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 10/06/25 12:36:11.457
  I1006 12:36:11.457742 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename svcaccounts @ 10/06/25 12:36:11.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:36:11.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:36:11.481
  I1006 12:36:11.512772 24 service_accounts.go:281] created pod pod-service-account-defaultsa
  I1006 12:36:11.512862 24 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I1006 12:36:11.525158 24 service_accounts.go:281] created pod pod-service-account-mountsa
  I1006 12:36:11.525209 24 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I1006 12:36:11.536626 24 service_accounts.go:281] created pod pod-service-account-nomountsa
  I1006 12:36:11.536684 24 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I1006 12:36:11.545977 24 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I1006 12:36:11.546014 24 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1006 12:36:11.560908 24 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I1006 12:36:11.560951 24 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1006 12:36:11.581257 24 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I1006 12:36:11.581323 24 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1006 12:36:11.594446 24 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I1006 12:36:11.594502 24 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1006 12:36:11.608818 24 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I1006 12:36:11.608887 24 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1006 12:36:11.622596 24 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I1006 12:36:11.622650 24 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1006 12:36:11.622788 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4062" for this suite. @ 10/06/25 12:36:11.636
• [0.194 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 10/06/25 12:36:11.651
  I1006 12:36:11.651863 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename dns @ 10/06/25 12:36:11.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:36:11.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:36:11.678
  STEP: Creating a test headless service @ 10/06/25 12:36:11.681
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9317.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-9317.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9317.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9317.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9317.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-9317.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9317.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-9317.svc.cluster.local;sleep 1; done
   @ 10/06/25 12:36:11.69
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9317.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9317.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9317.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9317.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9317.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9317.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9317.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9317.svc.cluster.local;sleep 1; done
   @ 10/06/25 12:36:11.69
  STEP: creating a pod to probe DNS @ 10/06/25 12:36:11.69
  STEP: submitting the pod to kubernetes @ 10/06/25 12:36:11.69
  E1006 12:36:11.827021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:12.827333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/06/25 12:36:13.713
  STEP: looking for the results for each expected name from probers @ 10/06/25 12:36:13.715
  I1006 12:36:13.721553 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9317.svc.cluster.local from pod dns-9317/dns-test-376bee54-1e7b-4290-a056-c94e65ffa67b: the server could not find the requested resource (get pods dns-test-376bee54-1e7b-4290-a056-c94e65ffa67b)
  I1006 12:36:13.723890 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-9317.svc.cluster.local from pod dns-9317/dns-test-376bee54-1e7b-4290-a056-c94e65ffa67b: the server could not find the requested resource (get pods dns-test-376bee54-1e7b-4290-a056-c94e65ffa67b)
  I1006 12:36:13.726308 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-9317.svc.cluster.local from pod dns-9317/dns-test-376bee54-1e7b-4290-a056-c94e65ffa67b: the server could not find the requested resource (get pods dns-test-376bee54-1e7b-4290-a056-c94e65ffa67b)
  I1006 12:36:13.734387 24 dns_common.go:506] Lookups using dns-9317/dns-test-376bee54-1e7b-4290-a056-c94e65ffa67b failed for: [agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9317.svc.cluster.local agnhost_udp@dns-test-service-2.dns-9317.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-9317.svc.cluster.local]

  I1006 12:36:13.751128 24 dns_common.go:514] Pod client logs for webserver: 
  I1006 12:36:13.756318 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I1006 12:36:13.760676 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E1006 12:36:13.828076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:14.828259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:15.828513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:16.828833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:17.828894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:18.742605 24 dns_common.go:546] DNS probes using dns-9317/dns-test-376bee54-1e7b-4290-a056-c94e65ffa67b succeeded

  STEP: deleting the pod @ 10/06/25 12:36:18.742
  STEP: deleting the test headless service @ 10/06/25 12:36:18.767
  I1006 12:36:18.788585 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9317" for this suite. @ 10/06/25 12:36:18.793
• [7.153 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 10/06/25 12:36:18.804
  I1006 12:36:18.804836 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename events @ 10/06/25 12:36:18.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:36:18.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:36:18.823
  STEP: Create set of events @ 10/06/25 12:36:18.826
  E1006 12:36:18.829933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:18.837639 24 core_events.go:198] created test-event-1
  I1006 12:36:18.856889 24 core_events.go:198] created test-event-2
  I1006 12:36:18.863450 24 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 10/06/25 12:36:18.863
  STEP: delete collection of events @ 10/06/25 12:36:18.866
  I1006 12:36:18.866286 24 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/06/25 12:36:18.887
  I1006 12:36:18.887652 24 core_events.go:230] requesting list of events to confirm quantity
  I1006 12:36:18.890256 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5381" for this suite. @ 10/06/25 12:36:18.893
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 10/06/25 12:36:18.906
  I1006 12:36:18.906817 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename endpointslice @ 10/06/25 12:36:18.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:36:18.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:36:18.923
  I1006 12:36:18.931476      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1006 12:36:18.934130 24 endpointslice.go:1045] Endpoints addresses: [172.16.109.126] , ports: [6443]
  I1006 12:36:18.934181 24 endpointslice.go:1075] EndpointSlices addresses: [172.16.109.126] , ports: [6443]
  I1006 12:36:18.934759 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9981" for this suite. @ 10/06/25 12:36:18.995
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 10/06/25 12:36:19.008
  I1006 12:36:19.008535 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:36:19.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:36:19.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:36:19.026
  STEP: Creating projection with secret that has name projected-secret-test-0aa925d9-c3e3-4e22-84dd-787c3dd018b2 @ 10/06/25 12:36:19.029
  STEP: Creating a pod to test consume secrets @ 10/06/25 12:36:19.041
  E1006 12:36:19.830195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:20.830623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:21.831148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:22.831653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:36:23.072
  I1006 12:36:23.076126 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-projected-secrets-b4dc9374-d47f-4f4a-9612-81cff7f1974b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 12:36:23.082
  I1006 12:36:23.104916 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6735" for this suite. @ 10/06/25 12:36:23.109
• [4.114 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 10/06/25 12:36:23.123
  I1006 12:36:23.123248 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:36:23.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:36:23.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:36:23.145
  STEP: Creating configMap with name projected-configmap-test-volume-6c5558f6-5fa2-4cb4-98c8-c32265243014 @ 10/06/25 12:36:23.15
  STEP: Creating a pod to test consume configMaps @ 10/06/25 12:36:23.157
  E1006 12:36:23.832526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:24.832895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:25.832950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:26.833306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:36:27.193
  I1006 12:36:27.196496 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-projected-configmaps-d80271bd-8881-4d11-a7e6-5f726ebf31bb container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 10/06/25 12:36:27.202
  I1006 12:36:27.225149 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-220" for this suite. @ 10/06/25 12:36:27.228
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 10/06/25 12:36:27.24
  I1006 12:36:27.240136 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename container-probe @ 10/06/25 12:36:27.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:36:27.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:36:27.258
  STEP: Creating pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148 @ 10/06/25 12:36:27.262
  E1006 12:36:27.834429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:28.834637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/06/25 12:36:29.282
  I1006 12:36:29.285143 24 container_probe.go:1748] Initial restart count of pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 is 0
  I1006 12:36:29.287472 24 container_probe.go:1758] Get pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148
  E1006 12:36:29.835500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:30.835547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:31.290973 24 container_probe.go:1758] Get pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148
  E1006 12:36:31.836653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:32.837159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:33.295068 24 container_probe.go:1758] Get pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148
  E1006 12:36:33.837780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:34.838730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:35.300585 24 container_probe.go:1758] Get pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148
  E1006 12:36:35.839097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:36.839802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:37.305480 24 container_probe.go:1758] Get pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148
  E1006 12:36:37.840150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:38.840763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:39.310685 24 container_probe.go:1758] Get pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148
  E1006 12:36:39.841148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:40.841425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:41.316456 24 container_probe.go:1758] Get pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148
  E1006 12:36:41.842092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:42.842668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:43.321045 24 container_probe.go:1758] Get pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148
  E1006 12:36:43.842777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:44.842986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:45.326391 24 container_probe.go:1758] Get pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148
  E1006 12:36:45.842960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:46.843659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:47.330662 24 container_probe.go:1758] Get pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148
  E1006 12:36:47.844176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:48.844879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:49.334785 24 container_probe.go:1758] Get pod liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 in namespace container-probe-1148
  I1006 12:36:49.334877 24 container_probe.go:1762] Restart count of pod container-probe-1148/liveness-f4826c8e-e0a6-4319-868c-775ed2e28674 is now 1 (20.049613816s elapsed)
  STEP: deleting the pod @ 10/06/25 12:36:49.335
  I1006 12:36:49.355698 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1148" for this suite. @ 10/06/25 12:36:49.36
• [22.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 10/06/25 12:36:49.385
  I1006 12:36:49.385463 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 12:36:49.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:36:49.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:36:49.42
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1648 @ 10/06/25 12:36:49.43
  STEP: changing the ExternalName service to type=NodePort @ 10/06/25 12:36:49.437
  I1006 12:36:49.498057 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1006 12:36:49.845630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:50.845943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:51.503612 24 resource.go:361] Creating new exec pod
  E1006 12:36:51.846791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:52.847182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:53.535118 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1006 12:36:53.652197 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.99.29.132) 80 port [tcp/http] succeeded!\n"
  I1006 12:36:53.652287 24 builder.go:147] stdout: ""
  E1006 12:36:53.847812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:54.535665 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1006 12:36:54.651961 24 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.99.29.132) 80 port [tcp/http] succeeded!\n"
  I1006 12:36:54.652021 24 builder.go:147] stdout: ""
  E1006 12:36:54.848334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:55.536195 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E1006 12:36:55.849454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:56.849577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:57.655119 24 builder.go:135] rc: 1
  I1006 12:36:57.655191 24 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80:
  Command stdout:

  stderr:
  + + echonc hostName -v
   -t -w 2 externalname-service 80
  nc: connect to externalname-service (10.99.29.132) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1006 12:36:57.655266 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1006 12:36:57.764449 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.99.29.132) 80 port [tcp/http] succeeded!\n"
  I1006 12:36:57.764530 24 builder.go:147] stdout: "externalname-service-77c59569d6-49xld"
  I1006 12:36:57.764743 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.29.132 80'
  E1006 12:36:57.850239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:57.879419 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.29.132 80\nConnection to 10.99.29.132 80 port [tcp/http] succeeded!\n"
  I1006 12:36:57.879477 24 builder.go:147] stdout: "externalname-service-77c59569d6-49xld"
  I1006 12:36:57.879605 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.108.172 31267'
  E1006 12:36:58.850648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:36:59.850789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:36:59.998843 24 builder.go:135] rc: 1
  I1006 12:36:59.998923 24 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.108.172 31267:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 172.16.108.172 31267
  nc: connect to 172.16.108.172 port 31267 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1006 12:36:59.999028 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.108.172 31267'
  E1006 12:37:00.851173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:01.851471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:37:02.120138 24 builder.go:135] rc: 1
  I1006 12:37:02.120222 24 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.108.172 31267:
  Command stdout:

  stderr:
  + nc -v+  -t -w 2echo 172.16.108.172 31267 hostName

  nc: connect to 172.16.108.172 port 31267 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1006 12:37:02.120314 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.108.172 31267'
  I1006 12:37:02.236862 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.108.172 31267\nConnection to 172.16.108.172 31267 port [tcp/*] succeeded!\n"
  I1006 12:37:02.236926 24 builder.go:147] stdout: "externalname-service-77c59569d6-49xld"
  I1006 12:37:02.237121 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.109.240 31267'
  E1006 12:37:02.852568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:03.853480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:37:04.355344 24 builder.go:135] rc: 1
  I1006 12:37:04.355415 24 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.109.240 31267:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 172.16.109.240 31267
  nc: connect to 172.16.109.240 port 31267 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1006 12:37:04.355555 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.109.240 31267'
  I1006 12:37:04.470370 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.109.240 31267\nConnection to 172.16.109.240 31267 port [tcp/*] succeeded!\n"
  I1006 12:37:04.470423 24 builder.go:147] stdout: ""
  E1006 12:37:04.853698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:37:05.238179 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-1648 exec execpodv9xh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.109.240 31267'
  I1006 12:37:05.350072 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.109.240 31267\nConnection to 172.16.109.240 31267 port [tcp/*] succeeded!\n"
  I1006 12:37:05.350128 24 builder.go:147] stdout: "externalname-service-77c59569d6-jxx97"
  I1006 12:37:05.350222 24 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I1006 12:37:05.393276 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1648" for this suite. @ 10/06/25 12:37:05.398
• [16.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 10/06/25 12:37:05.406
  I1006 12:37:05.406275 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename emptydir @ 10/06/25 12:37:05.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:37:05.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:37:05.426
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/06/25 12:37:05.428
  E1006 12:37:05.854706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:06.854994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:37:07.461
  I1006 12:37:07.463788 24 output.go:207] Trying to get logs from node cncf-1-33-script-3 pod pod-f53ac3db-138f-4941-af29-1a9650f9116e container test-container: <nil>
  STEP: delete the pod @ 10/06/25 12:37:07.469
  I1006 12:37:07.489719 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5188" for this suite. @ 10/06/25 12:37:07.493
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 10/06/25 12:37:07.499
  I1006 12:37:07.499604 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename gc @ 10/06/25 12:37:07.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:37:07.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:37:07.52
  STEP: create the rc @ 10/06/25 12:37:07.523
  I1006 12:37:07.530531      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E1006 12:37:07.855301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:08.855477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:09.855614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:10.855759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:11.856066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/06/25 12:37:12.539
  STEP: wait for all pods to be garbage collected @ 10/06/25 12:37:12.552
  E1006 12:37:12.856060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:13.856592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:14.856935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:15.858022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:16.858173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/06/25 12:37:17.56
  I1006 12:37:17.654191 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1006 12:37:17.654421 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2498" for this suite. @ 10/06/25 12:37:17.659
• [10.167 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 10/06/25 12:37:17.667
  I1006 12:37:17.667176 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:37:17.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:37:17.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:37:17.684
  STEP: Creating configMap with name projected-configmap-test-volume-map-fd395ec5-66ae-4b96-ae19-69c4ae44dd62 @ 10/06/25 12:37:17.696
  STEP: Creating a pod to test consume configMaps @ 10/06/25 12:37:17.704
  E1006 12:37:17.859173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:18.859598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:19.860308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:20.860998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/06/25 12:37:21.771
  I1006 12:37:21.773385 24 output.go:207] Trying to get logs from node cncf-1-33-script-2 pod pod-projected-configmaps-b589f304-90d6-44e4-9c08-34d0b2015479 container agnhost-container: <nil>
  STEP: delete the pod @ 10/06/25 12:37:21.778
  I1006 12:37:21.803987 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3626" for this suite. @ 10/06/25 12:37:21.807
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 10/06/25 12:37:21.819
  I1006 12:37:21.819199 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename services @ 10/06/25 12:37:21.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:37:21.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:37:21.836
  STEP: creating service in namespace services-380 @ 10/06/25 12:37:21.842
  STEP: creating service affinity-nodeport-transition in namespace services-380 @ 10/06/25 12:37:21.842
  E1006 12:37:21.862263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:37:21.890398 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1006 12:37:22.862302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:23.862656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:37:23.905689 24 resource.go:361] Creating new exec pod
  E1006 12:37:24.863582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:25.864744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:37:25.932552 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E1006 12:37:26.864909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:27.865426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:37:28.061093 24 builder.go:135] rc: 1
  I1006 12:37:28.061212 24 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-nodeport-transition 80
  nc: connect to affinity-nodeport-transition (10.99.166.169) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1006 12:37:28.061349 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E1006 12:37:28.866103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:29.866357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:37:30.213293 24 builder.go:135] rc: 1
  I1006 12:37:30.213393 24 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80:
  Command stdout:

  stderr:
  + + echonc hostName -v
   -t -w 2 affinity-nodeport-transition 80
  nc: connect to affinity-nodeport-transition (10.99.166.169) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1006 12:37:30.213491 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E1006 12:37:30.868246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:31.868526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:37:32.349453 24 builder.go:135] rc: 1
  I1006 12:37:32.349544 24 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-nodeport-transition 80
  nc: connect to affinity-nodeport-transition (10.99.166.169) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1006 12:37:32.349634 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E1006 12:37:32.869254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:33.869668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:37:34.495887 24 builder.go:135] rc: 1
  I1006 12:37:34.496001 24 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-nodeport-transition 80
  nc: connect to affinity-nodeport-transition (10.99.166.169) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1006 12:37:34.496127 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1006 12:37:34.631981 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.99.166.169) 80 port [tcp/http] succeeded!\n"
  I1006 12:37:34.632075 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 12:37:34.632188 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.166.169 80'
  I1006 12:37:34.774697 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.166.169 80\nConnection to 10.99.166.169 80 port [tcp/http] succeeded!\n"
  I1006 12:37:34.774777 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 12:37:34.774924 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.108.172 32008'
  E1006 12:37:34.870728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:37:34.913918 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.108.172 32008\nConnection to 172.16.108.172 32008 port [tcp/*] succeeded!\n"
  I1006 12:37:34.913995 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 12:37:34.914115 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.109.240 32008'
  I1006 12:37:35.052026 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.109.240 32008\nConnection to 172.16.109.240 32008 port [tcp/*] succeeded!\n"
  I1006 12:37:35.052109 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1006 12:37:35.065370 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/ ; done'
  I1006 12:37:35.279118 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n"
  I1006 12:37:35.279576 24 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-5pvnv\naffinity-nodeport-transition-7d57658b6c-2cplr\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-5pvnv\naffinity-nodeport-transition-7d57658b6c-2cplr\naffinity-nodeport-transition-7d57658b6c-5pvnv\naffinity-nodeport-transition-7d57658b6c-5pvnv\naffinity-nodeport-transition-7d57658b6c-5pvnv\naffinity-nodeport-transition-7d57658b6c-5pvnv\naffinity-nodeport-transition-7d57658b6c-5pvnv\naffinity-nodeport-transition-7d57658b6c-5pvnv\naffinity-nodeport-transition-7d57658b6c-2cplr\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-5pvnv\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-2cplr"
  I1006 12:37:35.279734 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5pvnv
  I1006 12:37:35.279751 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-2cplr
  I1006 12:37:35.279764 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.279774 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5pvnv
  I1006 12:37:35.279786 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-2cplr
  I1006 12:37:35.279797 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5pvnv
  I1006 12:37:35.279808 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5pvnv
  I1006 12:37:35.279838 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5pvnv
  I1006 12:37:35.279850 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5pvnv
  I1006 12:37:35.279860 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5pvnv
  I1006 12:37:35.279917 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5pvnv
  I1006 12:37:35.279932 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-2cplr
  I1006 12:37:35.279942 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.279951 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5pvnv
  I1006 12:37:35.279961 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.279987 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-2cplr
  I1006 12:37:35.291533 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=services-380 exec execpod-affinitympwcj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/ ; done'
  I1006 12:37:35.534699 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.16.108.172:32008/\n"
  I1006 12:37:35.534808 24 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl\naffinity-nodeport-transition-7d57658b6c-c6cvl"
  I1006 12:37:35.534844 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534866 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534877 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534884 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534892 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534902 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534909 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534916 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534926 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534947 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534954 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534961 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534969 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534977 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534985 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.534994 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-c6cvl
  I1006 12:37:35.535162 24 service.go:4352] Cleaning up the exec pod
  I1006 12:37:35.634508 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-380" for this suite. @ 10/06/25 12:37:35.642
• [13.832 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 10/06/25 12:37:35.652
  I1006 12:37:35.652241 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename projected @ 10/06/25 12:37:35.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:37:35.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:37:35.676
  STEP: Creating secret with name s-test-opt-del-a87df1c5-928d-4ba1-8fd0-8f1815b7c300 @ 10/06/25 12:37:35.742
  STEP: Creating secret with name s-test-opt-upd-56df1493-6d00-46eb-85c1-9dbf073de526 @ 10/06/25 12:37:35.75
  STEP: Creating the pod @ 10/06/25 12:37:35.757
  E1006 12:37:35.870869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:36.871398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-a87df1c5-928d-4ba1-8fd0-8f1815b7c300 @ 10/06/25 12:37:37.791
  STEP: Updating secret s-test-opt-upd-56df1493-6d00-46eb-85c1-9dbf073de526 @ 10/06/25 12:37:37.799
  STEP: Creating secret with name s-test-opt-create-33b62851-31d9-405b-a1bf-9ab00a7951c7 @ 10/06/25 12:37:37.809
  STEP: waiting to observe update in volume @ 10/06/25 12:37:37.815
  E1006 12:37:37.872039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:38.872563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:39.873477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:40.874197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:41.874203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:42.874724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:43.874980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:44.875519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:45.876602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:46.876937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:47.877565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:48.878091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:49.878760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:50.879348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:51.879496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:52.880013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:53.880357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:54.880873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:55.881093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:56.881999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:57.882634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:58.882818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:37:59.882820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:00.882998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:01.883183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:02.883376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:03.883711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:04.884036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:05.884303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:06.884410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:07.884877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:08.885922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:09.886354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:10.886565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:11.887002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:12.887058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:13.887760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:14.888250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:15.888566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:16.888731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:17.888928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:18.889241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:19.889715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:20.890041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:21.890278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:22.890423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:23.890992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:24.891264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:25.891773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:26.892420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:27.892503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:28.892592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:29.892748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:30.892973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:31.893577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:32.893618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:33.893940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:34.894086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:35.894405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:36.894513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:37.895267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:38.895610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:39.896079      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:40.896532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:41.897287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:42.897506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:43.898076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:44.898370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:45.898922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:46.899596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:47.900189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:48.900732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:49.901345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:50.902128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:51.902369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:52.902724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:53.903251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:54.903442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:55.903617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:56.903809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:57.904216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:58.904505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:38:59.904513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:00.904707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:01.905035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:02.906068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:03.906490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:39:04.168353 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8046" for this suite. @ 10/06/25 12:39:04.171
• [88.527 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 10/06/25 12:39:04.179
  I1006 12:39:04.179293 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename runtimeclass @ 10/06/25 12:39:04.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:39:04.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:39:04.199
  I1006 12:39:04.206706 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8674" for this suite. @ 10/06/25 12:39:04.276
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 10/06/25 12:39:04.292
  I1006 12:39:04.292170 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename webhook @ 10/06/25 12:39:04.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:39:04.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:39:04.31
  STEP: Setting up server cert @ 10/06/25 12:39:04.343
  E1006 12:39:04.906565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/06/25 12:39:04.947
  STEP: Deploying the webhook pod @ 10/06/25 12:39:04.953
  STEP: Wait for the deployment to be ready @ 10/06/25 12:39:04.97
  I1006 12:39:04.980515 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1006 12:39:05.907312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:06.907559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:39:06.988853 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 39, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:39:07.907918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:08.908550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:39:08.993143 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 39, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:39:09.908831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:10.909348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:39:10.992828 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 39, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:39:11.909741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:12.910064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:39:12.992795 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 39, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:39:13.910903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:14.911422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:39:14.993313 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 6, 12, 39, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 6, 12, 39, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1006 12:39:15.912308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:16.912734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/06/25 12:39:16.993
  STEP: Verifying the service has paired with the endpoint @ 10/06/25 12:39:17.024
  E1006 12:39:17.913271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:39:18.025536 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 10/06/25 12:39:18.029
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 10/06/25 12:39:18.063
  STEP: Creating a configMap that should not be mutated @ 10/06/25 12:39:18.075
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 10/06/25 12:39:18.089
  STEP: Creating a configMap that should be mutated @ 10/06/25 12:39:18.101
  I1006 12:39:18.228695 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-672" for this suite. @ 10/06/25 12:39:18.238
  STEP: Destroying namespace "webhook-markers-8889" for this suite. @ 10/06/25 12:39:18.255
• [13.971 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 10/06/25 12:39:18.264
  I1006 12:39:18.264074 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename cronjob @ 10/06/25 12:39:18.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:39:18.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:39:18.293
  STEP: Creating a cronjob @ 10/06/25 12:39:18.295
  STEP: Ensuring more than one job is running at a time @ 10/06/25 12:39:18.303
  E1006 12:39:18.914091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:19.914268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:20.914423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:21.914997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:22.915712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:23.916601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:24.916774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:25.917209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:26.918336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:27.919159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:28.920053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:29.920415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:30.920816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:31.921286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:32.922175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:33.922463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:34.923369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:35.923690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:36.924854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:37.925906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:38.926932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:39.928026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:40.928834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:41.929538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:42.929607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:43.930047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:44.930238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:45.930941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:46.931359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:47.932090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:48.932032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:49.932717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:50.933181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:51.934082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:52.935020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:53.935396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:54.936445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:55.936927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:56.938012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:57.938391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:58.939237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:39:59.939676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:00.939758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:01.939970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:02.942870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:03.940281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:04.940395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:05.940592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:06.941211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:07.941731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:08.942842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:09.943246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:10.944263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:11.944641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:12.945898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:13.946520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:14.946991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:15.947475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:16.948163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:17.948742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:18.948803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:19.949258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:20.950114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:21.950454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:22.950477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:23.951507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:24.951763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:25.952144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:26.952659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:27.953089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:28.953530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:29.953979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:30.954946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:31.955302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:32.956409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:33.956803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:34.956967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:35.957338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:36.957435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:37.957845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:38.958228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:39.958563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:40.959641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:41.960134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:42.960297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:43.960337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:44.961359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:45.961886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:46.962135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:47.962280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:48.962312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:49.962754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:50.963063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:51.963382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:52.963677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:53.964559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:54.964678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:55.964797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:56.964980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:57.965162      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:58.966003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:40:59.966531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 10/06/25 12:41:00.308
  STEP: Removing cronjob @ 10/06/25 12:41:00.31
  I1006 12:41:00.320847 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3418" for this suite. @ 10/06/25 12:41:00.324
• [102.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 10/06/25 12:41:00.334
  I1006 12:41:00.334463 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename deployment @ 10/06/25 12:41:00.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:41:00.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:41:00.361
  I1006 12:41:00.364661 24 deployment.go:798] Creating deployment "test-recreate-deployment"
  I1006 12:41:00.375428 24 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1006 12:41:00.387844 24 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E1006 12:41:00.967524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1006 12:41:01.967936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:41:02.394216 24 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I1006 12:41:02.396206 24 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I1006 12:41:02.405586 24 deployment.go:314] Updating deployment test-recreate-deployment
  I1006 12:41:02.405639 24 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1006 12:41:02.531892 24 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7020",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5708288-aa97-465d-a05d-fd9a0e741345",
      ResourceVersion: (string) (len=5) "81785",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895351260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1006 12:41:02.536991 24 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7020",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "acb16072-d864-452c-a736-2ab29664073f",
      ResourceVersion: (string) (len=5) "81782",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895351262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "a5708288-aa97-465d-a05d-fd9a0e741345",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 35 37 30 38 32  38 38 2d 61 61 39 37 2d  |\"a5708288-aa97-|
              00000120  34 36 35 64 2d 61 30 35  64 2d 66 64 39 61 30 65  |465d-a05d-fd9a0e|
              00000130  37 34 31 33 34 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |741345\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 12:41:02.537652 24 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1006 12:41:02.537849 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7020",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f9d4879-0f53-466e-bae1-69943eba7288",
      ResourceVersion: (string) (len=5) "81773",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895351260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "a5708288-aa97-465d-a05d-fd9a0e741345",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 35 37 30 38 32  38 38 2d 61 61 39 37 2d  |\"a5708288-aa97-|
              00000120  34 36 35 64 2d 61 30 35  64 2d 66 64 39 61 30 65  |465d-a05d-fd9a0e|
              00000130  37 34 31 33 34 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |741345\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1006 12:41:02.558047 24 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-lgppw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-lgppw",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-7020",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46fbf373-2ef2-4c6f-9d41-67899b6f3650",
      ResourceVersion: (string) (len=5) "81784",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895351262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "acb16072-d864-452c-a736-2ab29664073f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 63  62 31 36 30 37 32 2d 64  |d\":\"acb16072-d|
              00000090  38 36 34 2d 34 35 32 63  2d 61 37 33 36 2d 32 61  |864-452c-a736-2a|
              000000a0  62 32 39 36 36 34 30 37  33 66 5c 22 7d 22 3a 7b  |b29664073f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5t2gx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5t2gx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "cncf-1-33-script-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63895351262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.16.109.240",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.16.109.240"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63895351262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5t2gx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1006 12:41:02.560572 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7020" for this suite. @ 10/06/25 12:41:02.564
• [2.240 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 10/06/25 12:41:02.574
  I1006 12:41:02.574483 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename daemonsets @ 10/06/25 12:41:02.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:41:02.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:41:02.605
  I1006 12:41:02.670357 24 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/06/25 12:41:02.676
  I1006 12:41:02.773538 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:41:02.776570 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:41:02.776784 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  E1006 12:41:02.968754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:41:03.682121 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:41:03.685685 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:41:03.685846 24 fixtures.go:131] Node cncf-1-33-script-2 is running 0 daemon pod, expected 1
  E1006 12:41:03.969226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:41:04.681384 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:41:04.684675 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1006 12:41:04.684723 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 10/06/25 12:41:04.693
  STEP: Check that daemon pods images are updated. @ 10/06/25 12:41:04.782
  I1006 12:41:04.785302 24 daemon_set.go:1193] Wrong image for pod: daemon-set-x98fj. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1006 12:41:04.788182 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1006 12:41:04.970319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:41:05.787666 24 daemon_set.go:1198] Pod daemon-set-6q7bx is not available
  I1006 12:41:05.787707 24 daemon_set.go:1193] Wrong image for pod: daemon-set-x98fj. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1006 12:41:05.791770 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1006 12:41:05.971350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:41:06.786213 24 daemon_set.go:1198] Pod daemon-set-bqnjp is not available
  I1006 12:41:06.788874 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 10/06/25 12:41:06.788
  I1006 12:41:06.790880 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:41:06.792895 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1006 12:41:06.792932 24 fixtures.go:131] Node cncf-1-33-script-3 is running 0 daemon pod, expected 1
  E1006 12:41:06.972132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:41:07.793803 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:41:07.796310 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1006 12:41:07.796384 24 fixtures.go:131] Node cncf-1-33-script-3 is running 0 daemon pod, expected 1
  E1006 12:41:07.972366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:41:08.793480 24 fixtures.go:90] DaemonSet pods can't tolerate node cncf-1-33-script-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1006 12:41:08.796574 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1006 12:41:08.796627 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/06/25 12:41:08.809
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5880, will wait for the garbage collector to delete the pods @ 10/06/25 12:41:08.809
  I1006 12:41:08.871193 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.510282ms
  I1006 12:41:08.972110 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.919676ms
  E1006 12:41:08.973283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1006 12:41:09.875962 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1006 12:41:09.876003 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1006 12:41:09.878346 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"81900"},"items":null}

  I1006 12:41:09.880580 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"81900"},"items":null}

  I1006 12:41:09.888838 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5880" for this suite. @ 10/06/25 12:41:09.891
• [7.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 10/06/25 12:41:09.905
  I1006 12:41:09.905879 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename servicecidr @ 10/06/25 12:41:09.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:41:09.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:41:09.926
  STEP: getting @ 10/06/25 12:41:09.929
  STEP: listing @ 10/06/25 12:41:09.932
  STEP: watching @ 10/06/25 12:41:09.935
  I1006 12:41:09.936529 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1006 12:41:09.973694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "servicecidr-3537" for this suite. @ 10/06/25 12:41:09.985
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 10/06/25 12:41:09.993
  I1006 12:41:09.993857 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename kubectl @ 10/06/25 12:41:09.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:41:10.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:41:10.02
  STEP: Starting the proxy @ 10/06/25 12:41:10.022
  I1006 12:41:10.023431 24 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1268397317 --namespace=kubectl-1894 proxy --unix-socket=/tmp/kubectl-proxy-unix226052641/test'
  STEP: retrieving proxy /api/ output @ 10/06/25 12:41:10.071
  I1006 12:41:10.071974 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1894" for this suite. @ 10/06/25 12:41:10.085
• [0.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 10/06/25 12:41:10.092
  I1006 12:41:10.092051 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1268397317
  STEP: Building a namespace api object, basename svcaccounts @ 10/06/25 12:41:10.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/06/25 12:41:10.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/06/25 12:41:10.114
  STEP: Creating a Serviceaccount "e2e-sa-n84jc" in namespace "svcaccounts-4094" @ 10/06/25 12:41:10.121
  STEP: Creating a ServiceaccountToken "e2e-sa-n84jc" in namespace "svcaccounts-4094" @ 10/06/25 12:41:10.128
  STEP: Creating a TokenReview for "e2e-sa-n84jc" in namespace "svcaccounts-4094" @ 10/06/25 12:41:10.134
  I1006 12:41:10.136754 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4094" for this suite. @ 10/06/25 12:41:10.185
• [0.101 seconds]
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1006 12:41:10.193066 24 suites.go:34] Running AfterSuite actions on node 1
  I1006 12:41:10.193149 24 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.050 seconds]
------------------------------

Ran 419 of 6735 Specs in 6381.222 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6316 Skipped
PASS

Ginkgo ran 1 suite in 1h46m22.501851843s
Test Suite Passed
