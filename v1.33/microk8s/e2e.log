  I0722 08:26:00.932528      22 e2e.go:109] Starting e2e run "a3e3bf07-3d7d-4fd1-a990-c490b3f14eab" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1753172760 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0722 08:26:01.039785 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 08:26:01.042005 22 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0722 08:26:01.059451 22 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0722 08:26:01.062154 22 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0722 08:26:01.062304 22 e2e.go:245] e2e test version: v1.33.0
  I0722 08:26:01.063267 22 e2e.go:254] kube-apiserver version: v1.33.0
  I0722 08:26:01.063362 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 08:26:01.066423 22 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.027 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 07/22/25 08:26:01.141
  I0722 08:26:01.141659 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename dns @ 07/22/25 08:26:01.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:26:01.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:26:01.158
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/22/25 08:26:01.161
  I0722 08:26:01.169027 22 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7824  4cffe8bf-ade2-4264-928b-81f48489eae7 3673 1 2025-07-22 08:26:01 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-07-22 08:26:01 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v8t46,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v8t46,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/22/25 08:26:35.296
  I0722 08:26:35.296828 22 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7824 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 08:26:35.296980 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 08:26:35.297091 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-7824/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0722 08:26:35.359092 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 07/22/25 08:26:35.359
  I0722 08:26:35.359176 22 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7824 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 08:26:35.359185 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 08:26:35.359237 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-7824/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0722 08:26:35.403576 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 08:26:35.403819 22 dns.go:451] Deleting pod test-dns-nameservers...
  I0722 08:26:35.417400 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7824" for this suite. @ 07/22/25 08:26:35.42
â€¢ [34.285 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 07/22/25 08:26:35.426
  I0722 08:26:35.426747 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 08:26:35.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:26:35.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:26:35.441
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4274 @ 07/22/25 08:26:35.443
  STEP: changing the ExternalName service to type=ClusterIP @ 07/22/25 08:26:35.451
  I0722 08:26:35.540899 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0722 08:26:37.544661 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:26:39.549070 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:26:41.547736 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:26:43.545051 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:26:45.551561 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:26:47.544921 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:26:49.548397 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:26:51.543786 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:26:53.552199 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:26:55.546699 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:26:57.544690 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:26:59.556878 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:27:01.543806 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:27:03.548729 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:27:05.551922 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:27:07.547506 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:27:09.544728 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 26, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 26, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7fd6fb5d7d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:27:11.547863 22 resource.go:361] Creating new exec pod
  I0722 08:27:13.566614 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4274 exec execpod7z84g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 08:27:13.671446 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.51) 80 port [tcp/http] succeeded!\n"
  I0722 08:27:13.671488 22 builder.go:147] stdout: ""
  I0722 08:27:14.600129 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4274 exec execpod7z84g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 08:27:14.678690 22 builder.go:146] stderr: "+ echo hostName+ \nnc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.51) 80 port [tcp/http] succeeded!\n"
  I0722 08:27:14.678725 22 builder.go:147] stdout: ""
  I0722 08:27:15.570404 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4274 exec execpod7z84g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 08:27:15.655222 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.51) 80 port [tcp/http] succeeded!\n"
  I0722 08:27:15.655278 22 builder.go:147] stdout: ""
  I0722 08:27:16.568802 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4274 exec execpod7z84g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 08:27:16.636595 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.51) 80 port [tcp/http] succeeded!\n"
  I0722 08:27:16.636635 22 builder.go:147] stdout: ""
  I0722 08:27:17.589109 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4274 exec execpod7z84g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 08:27:17.667542 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.51) 80 port [tcp/http] succeeded!\n"
  I0722 08:27:17.667591 22 builder.go:147] stdout: "externalname-service-7fd6fb5d7d-lqf5z"
  I0722 08:27:17.667753 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4274 exec execpod7z84g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.51 80'
  I0722 08:27:17.732211 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.51 80\nConnection to 10.152.183.51 80 port [tcp/http] succeeded!\n"
  I0722 08:27:17.732269 22 builder.go:147] stdout: ""
  I0722 08:27:18.672469 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4274 exec execpod7z84g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.51 80'
  I0722 08:27:18.741825 22 builder.go:146] stderr: "+ + echonc -v hostName -t\n -w 2 10.152.183.51 80\nConnection to 10.152.183.51 80 port [tcp/http] succeeded!\n"
  I0722 08:27:18.741875 22 builder.go:147] stdout: "externalname-service-7fd6fb5d7d-lqf5z"
  I0722 08:27:18.742224 22 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0722 08:27:18.762357 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4274" for this suite. @ 07/22/25 08:27:18.765
â€¢ [43.348 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 07/22/25 08:27:18.774
  I0722 08:27:18.774742 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 08:27:18.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:27:18.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:27:18.792
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/22/25 08:27:18.795
  STEP: Saw pod success @ 07/22/25 08:27:22.815
  I0722 08:27:22.817597 22 output.go:207] Trying to get logs from node cncf1 pod pod-df581e52-472d-49a5-8ea8-5988ce0b5f85 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 08:27:22.825
  I0722 08:27:22.837939 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8448" for this suite. @ 07/22/25 08:27:22.84
â€¢ [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 07/22/25 08:27:22.846
  I0722 08:27:22.846051 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 08:27:22.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:27:22.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:27:22.86
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/22/25 08:27:22.863
  STEP: Saw pod success @ 07/22/25 08:27:26.899
  I0722 08:27:26.901953 22 output.go:207] Trying to get logs from node cncf1 pod pod-e6f5a41c-daf3-4458-8bc7-a9a1b6ff60f2 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 08:27:26.906
  I0722 08:27:26.923036 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7383" for this suite. @ 07/22/25 08:27:26.925
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 07/22/25 08:27:26.931
  I0722 08:27:26.931079 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 08:27:26.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:27:26.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:27:26.943
  STEP: Creating pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354 @ 07/22/25 08:27:26.946
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 08:27:28.957
  I0722 08:27:28.959726 22 container_probe.go:1748] Initial restart count of pod liveness-0119b330-d316-445a-85c7-b852617a9541 is 0
  I0722 08:27:28.961434 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:30.966591 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:32.978798 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:34.982287 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:36.987735 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:38.992709 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:41.002962 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:43.059663 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:45.077881 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:47.088070 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:49.091767 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:49.091812 22 container_probe.go:1762] Restart count of pod container-probe-354/liveness-0119b330-d316-445a-85c7-b852617a9541 is now 1 (20.132033329s elapsed)
  I0722 08:27:51.107383 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:53.121569 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:55.124708 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:57.154346 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:27:59.168028 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:01.176515 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:03.181640 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:05.200084 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:07.204593 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:09.217841 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:09.217901 22 container_probe.go:1762] Restart count of pod container-probe-354/liveness-0119b330-d316-445a-85c7-b852617a9541 is now 2 (40.258129341s elapsed)
  I0722 08:28:11.234777 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:13.243515 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:15.250338 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:17.253882 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:19.258522 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:21.274636 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:23.280531 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:25.288888 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:27.305264 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:29.313095 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:29.313130 22 container_probe.go:1762] Restart count of pod container-probe-354/liveness-0119b330-d316-445a-85c7-b852617a9541 is now 3 (1m0.353360403s elapsed)
  I0722 08:28:31.316082 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:33.329446 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:35.333163 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:37.345104 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:39.359877 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:41.369249 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:43.380459 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:45.393310 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:47.404977 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:49.408693 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:49.408767 22 container_probe.go:1762] Restart count of pod container-probe-354/liveness-0119b330-d316-445a-85c7-b852617a9541 is now 4 (1m20.448979229s elapsed)
  I0722 08:28:51.420171 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:53.429489 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:55.434031 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:57.437889 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:28:59.443684 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:01.452970 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:03.460448 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:05.479562 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:07.495869 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:09.514847 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:11.527265 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:13.550669 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:15.558928 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:17.565490 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:19.587168 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:21.598043 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:23.618663 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:25.632713 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:27.646314 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:29.654203 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:31.685653 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:33.693204 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:35.697583 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:37.710007 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:39.717748 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:41.721735 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:43.727739 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:45.733020 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:47.743871 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:49.775938 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:51.809342 22 container_probe.go:1758] Get pod liveness-0119b330-d316-445a-85c7-b852617a9541 in namespace container-probe-354
  I0722 08:29:51.809435 22 container_probe.go:1762] Restart count of pod container-probe-354/liveness-0119b330-d316-445a-85c7-b852617a9541 is now 5 (2m22.849629323s elapsed)
  STEP: deleting the pod @ 07/22/25 08:29:51.81
  I0722 08:29:51.845786 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-354" for this suite. @ 07/22/25 08:29:51.854
â€¢ [144.934 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/22/25 08:29:51.868
  I0722 08:29:51.868251 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 08:29:51.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:29:51.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:29:51.912
  STEP: Creating projection with secret that has name projected-secret-test-map-892d7d85-259c-4426-b14d-a304206db382 @ 07/22/25 08:29:51.918
  STEP: Creating a pod to test consume secrets @ 07/22/25 08:29:51.938
  STEP: Saw pod success @ 07/22/25 08:29:55.989
  I0722 08:29:55.992581 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-3608708e-8216-46c8-99dc-559c41c84441 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 08:29:56.001
  I0722 08:29:56.018227 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5142" for this suite. @ 07/22/25 08:29:56.021
â€¢ [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 07/22/25 08:29:56.03
  I0722 08:29:56.030273 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 08:29:56.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:29:56.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:29:56.046
  STEP: creating service in namespace services-8240 @ 07/22/25 08:29:56.05
  STEP: creating service affinity-clusterip-transition in namespace services-8240 @ 07/22/25 08:29:56.05
  I0722 08:29:56.082168 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0722 08:29:58.098513 22 resource.go:361] Creating new exec pod
  I0722 08:30:00.113951 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-8240 exec execpod-affinityczpdv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0722 08:30:00.218800 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.152.183.148) 80 port [tcp/http] succeeded!\n"
  I0722 08:30:00.218843 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 08:30:00.218969 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-8240 exec execpod-affinityczpdv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.148 80'
  I0722 08:30:00.297084 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.148 80\nConnection to 10.152.183.148 80 port [tcp/http] succeeded!\n"
  I0722 08:30:00.297127 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 08:30:00.306972 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-8240 exec execpod-affinityczpdv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/ ; done'
  I0722 08:30:00.438927 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n"
  I0722 08:30:00.438997 22 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-pqdll\naffinity-clusterip-transition-5cffb65545-pqdll\naffinity-clusterip-transition-5cffb65545-vjx6k\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-pqdll\naffinity-clusterip-transition-5cffb65545-vjx6k\naffinity-clusterip-transition-5cffb65545-vjx6k\naffinity-clusterip-transition-5cffb65545-pqdll\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-vjx6k\naffinity-clusterip-transition-5cffb65545-pqdll\naffinity-clusterip-transition-5cffb65545-pqdll\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-vjx6k\naffinity-clusterip-transition-5cffb65545-vjx6k"
  I0722 08:30:00.439010 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-pqdll
  I0722 08:30:00.439016 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-pqdll
  I0722 08:30:00.439020 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vjx6k
  I0722 08:30:00.439028 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.439032 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-pqdll
  I0722 08:30:00.439035 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vjx6k
  I0722 08:30:00.439038 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vjx6k
  I0722 08:30:00.439054 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-pqdll
  I0722 08:30:00.439130 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.439156 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vjx6k
  I0722 08:30:00.439164 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-pqdll
  I0722 08:30:00.439168 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-pqdll
  I0722 08:30:00.439172 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.439175 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.439183 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vjx6k
  I0722 08:30:00.439188 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vjx6k
  I0722 08:30:00.446517 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-8240 exec execpod-affinityczpdv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/ ; done'
  I0722 08:30:00.566478 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.148:80/\n"
  I0722 08:30:00.566536 22 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g\naffinity-clusterip-transition-5cffb65545-5p95g"
  I0722 08:30:00.566572 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566583 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566587 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566590 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566596 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566600 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566603 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566606 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566610 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566615 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566620 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566625 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566630 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566635 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566640 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566644 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5p95g
  I0722 08:30:00.566725 22 service.go:4352] Cleaning up the exec pod
  I0722 08:30:00.614727 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8240" for this suite. @ 07/22/25 08:30:00.619
â€¢ [4.603 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 07/22/25 08:30:00.633
  I0722 08:30:00.633961 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 08:30:00.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:30:00.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:30:00.672
  I0722 08:31:00.726707 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7954" for this suite. @ 07/22/25 08:31:00.73
â€¢ [60.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 07/22/25 08:31:00.737
  I0722 08:31:00.737534 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 08:31:00.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:31:00.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:31:00.781
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 07/22/25 08:31:00.785
  STEP: Awaiting for the job to fail as all indexes are failed @ 07/22/25 08:31:00.795
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 07/22/25 08:31:06.808
  I0722 08:31:06.810293 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4221" for this suite. @ 07/22/25 08:31:06.812
â€¢ [6.080 seconds]
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/22/25 08:31:06.817
  I0722 08:31:06.817846 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename subjectreview @ 07/22/25 08:31:06.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:31:06.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:31:06.83
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-366" @ 07/22/25 08:31:06.832
  I0722 08:31:06.837176 22 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-366:e2e"
  I0722 08:31:06.837209 22 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-366"}
  I0722 08:31:06.837213 22 subjectreviews.go:71] saUID: "cdbd03e2-4a21-47f2-96d3-d666a0bb8b5d"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-366:e2e" @ 07/22/25 08:31:06.837
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-366:e2e" @ 07/22/25 08:31:06.837
  I0722 08:31:06.839375 22 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-366:e2e" api 'list' configmaps in "subjectreview-366" namespace @ 07/22/25 08:31:06.839
  I0722 08:31:06.842302 22 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-366:e2e" @ 07/22/25 08:31:06.842
  I0722 08:31:06.843758 22 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  I0722 08:31:06.843810 22 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0722 08:31:06.844000 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-366" for this suite. @ 07/22/25 08:31:06.846
â€¢ [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 07/22/25 08:31:06.853
  I0722 08:31:06.853162 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 08:31:06.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:31:06.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:31:06.867
  STEP: set up a multi version CRD @ 07/22/25 08:31:06.87
  I0722 08:31:06.870901 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: rename a version @ 07/22/25 08:31:10.03
  STEP: check the new version name is served @ 07/22/25 08:31:10.039
  STEP: check the old version name is removed @ 07/22/25 08:31:10.717
  STEP: check the other version is not changed @ 07/22/25 08:31:11.325
  I0722 08:31:13.844964 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5366" for this suite. @ 07/22/25 08:31:13.85
â€¢ [7.004 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 07/22/25 08:31:13.856
  I0722 08:31:13.856994 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename proxy @ 07/22/25 08:31:13.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:31:13.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:31:13.868
  I0722 08:31:13.870765 22 proxy.go:430] Creating pod...
  I0722 08:31:15.881742 22 proxy.go:454] Creating service...
  I0722 08:31:15.893514 22 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/pods/agnhost/proxy?method=DELETE
  I0722 08:31:15.912239 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0722 08:31:15.912342 22 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/pods/agnhost/proxy?method=OPTIONS
  I0722 08:31:15.916779 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0722 08:31:15.916933 22 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/pods/agnhost/proxy?method=PATCH
  I0722 08:31:15.919210 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0722 08:31:15.919248 22 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/pods/agnhost/proxy?method=POST
  I0722 08:31:15.921917 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0722 08:31:15.921990 22 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/pods/agnhost/proxy?method=PUT
  I0722 08:31:15.924550 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0722 08:31:15.924587 22 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/services/e2e-proxy-test-service/proxy?method=DELETE
  I0722 08:31:15.927956 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0722 08:31:15.928083 22 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0722 08:31:15.931228 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0722 08:31:15.931254 22 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/services/e2e-proxy-test-service/proxy?method=PATCH
  I0722 08:31:15.934390 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0722 08:31:15.934431 22 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/services/e2e-proxy-test-service/proxy?method=POST
  I0722 08:31:15.937700 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0722 08:31:15.937733 22 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/services/e2e-proxy-test-service/proxy?method=PUT
  I0722 08:31:15.940406 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0722 08:31:15.940582 22 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/pods/agnhost/proxy?method=GET
  I0722 08:31:15.942567 22 proxy.go:530] http.Client request:GET StatusCode:301
  I0722 08:31:15.942589 22 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/services/e2e-proxy-test-service/proxy?method=GET
  I0722 08:31:15.945261 22 proxy.go:530] http.Client request:GET StatusCode:301
  I0722 08:31:15.945288 22 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/pods/agnhost/proxy?method=HEAD
  I0722 08:31:15.946678 22 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0722 08:31:15.946736 22 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3735/services/e2e-proxy-test-service/proxy?method=HEAD
  I0722 08:31:15.948807 22 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0722 08:31:15.948925 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3735" for this suite. @ 07/22/25 08:31:15.951
â€¢ [2.101 seconds]
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 07/22/25 08:31:15.958
  I0722 08:31:15.958129 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename disruption @ 07/22/25 08:31:15.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:31:15.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:31:15.972
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/22/25 08:31:15.974
  STEP: Waiting for the pdb to be processed @ 07/22/25 08:31:15.978
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/22/25 08:31:18.006
  STEP: Waiting for all pods to be running @ 07/22/25 08:31:18.006
  I0722 08:31:18.008000 22 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 07/22/25 08:31:20.029
  STEP: Updating the pdb to allow a pod to be evicted @ 07/22/25 08:31:20.035
  STEP: Waiting for the pdb to be processed @ 07/22/25 08:31:20.041
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/22/25 08:31:22.057
  STEP: Waiting for all pods to be running @ 07/22/25 08:31:22.058
  STEP: Waiting for the pdb to observed all healthy pods @ 07/22/25 08:31:22.06
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/22/25 08:31:22.08
  STEP: Waiting for the pdb to be processed @ 07/22/25 08:31:22.092
  STEP: Waiting for all pods to be running @ 07/22/25 08:31:24.1
  STEP: locating a running pod @ 07/22/25 08:31:24.102
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/22/25 08:31:24.109
  STEP: Waiting for the pdb to be deleted @ 07/22/25 08:31:24.116
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/22/25 08:31:24.118
  STEP: Waiting for all pods to be running @ 07/22/25 08:31:24.118
  I0722 08:31:24.133302 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4925" for this suite. @ 07/22/25 08:31:24.136
â€¢ [8.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 07/22/25 08:31:24.147
  I0722 08:31:24.147225 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 08:31:24.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:31:24.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:31:24.177
  STEP: Looking for a node to schedule job pod @ 07/22/25 08:31:24.18
  STEP: Creating a job @ 07/22/25 08:31:24.183
  STEP: Ensuring job fails @ 07/22/25 08:31:24.191
  I0722 08:31:28.225131 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6995" for this suite. @ 07/22/25 08:31:28.227
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 07/22/25 08:31:28.234
  I0722 08:31:28.234379 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pv @ 07/22/25 08:31:28.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:31:28.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:31:28.245
  STEP: Creating initial PV and PVC @ 07/22/25 08:31:28.247
  I0722 08:31:28.247997 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3494" @ 07/22/25 08:31:28.259
  STEP: Listing PVCs in namespace "pv-3494" @ 07/22/25 08:31:28.262
  STEP: Patching the PV "pv-3494-ls2j4" @ 07/22/25 08:31:28.264
  STEP: Patching the PVC "pvc-jm4nj" @ 07/22/25 08:31:28.271
  STEP: Getting PV "pv-3494-ls2j4" @ 07/22/25 08:31:28.276
  STEP: Getting PVC "pvc-jm4nj" @ 07/22/25 08:31:28.278
  STEP: Deleting PVC "pvc-jm4nj" @ 07/22/25 08:31:28.28
  STEP: Confirm deletion of PVC "pvc-jm4nj" @ 07/22/25 08:31:28.288
  STEP: Deleting PV "pv-3494-ls2j4" @ 07/22/25 08:31:30.297
  STEP: Confirm deletion of PV "pv-3494-ls2j4" @ 07/22/25 08:31:30.303
  STEP: Recreating another PV & PVC @ 07/22/25 08:31:32.309
  I0722 08:31:32.309278 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-3494-x87xd" @ 07/22/25 08:31:32.322
  STEP: Updating the PVC "pvc-4zzj2" @ 07/22/25 08:31:32.359
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-4zzj2=updated" @ 07/22/25 08:31:32.364
  STEP: Deleting PVC "pvc-4zzj2" via DeleteCollection @ 07/22/25 08:31:32.366
  STEP: Confirm deletion of PVC "pvc-4zzj2" @ 07/22/25 08:31:32.371
  STEP: Deleting PV "pv-3494-x87xd" via DeleteCollection @ 07/22/25 08:31:34.415
  STEP: Confirm deletion of PV "pv-3494-x87xd" @ 07/22/25 08:31:34.423
  I0722 08:31:36.430955 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0722 08:31:36.431051 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-4zzj2"
  I0722 08:31:36.432908 22 pv.go:193] Deleting PersistentVolume "pv-3494-x87xd"
  I0722 08:31:36.434690 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3494" for this suite. @ 07/22/25 08:31:36.436
â€¢ [8.208 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/22/25 08:31:36.442
  I0722 08:31:36.442625 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 08:31:36.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:31:36.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:31:36.459
  STEP: Creating secret with name secret-test-c44b199c-7af9-46e6-9280-b035d8070498 @ 07/22/25 08:31:36.461
  STEP: Creating a pod to test consume secrets @ 07/22/25 08:31:36.465
  STEP: Saw pod success @ 07/22/25 08:31:40.502
  I0722 08:31:40.504683 22 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-b89099e7-b49f-425b-89c1-fbd3a474dbe9 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 08:31:40.511
  I0722 08:31:40.522177 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2507" for this suite. @ 07/22/25 08:31:40.524
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 07/22/25 08:31:40.528
  I0722 08:31:40.528975 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 08:31:40.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:31:40.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:31:40.54
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/22/25 08:31:40.542
  I0722 08:31:40.542640 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-2737 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0722 08:31:40.605694 22 builder.go:146] stderr: ""
  I0722 08:31:40.605760 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/22/25 08:31:40.605
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/22/25 08:32:00.687
  I0722 08:32:00.688184 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-2737 get pod e2e-test-httpd-pod -o json'
  I0722 08:32:00.725042 22 builder.go:146] stderr: ""
  I0722 08:32:00.725173 22 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"b8f663389b9d4b019a3d8e411b169260ff03e16b2ec75f6c192baf763d9f8e2f\",\n            \"cni.projectcalico.org/podIP\": \"10.1.209.84/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.1.209.84/32\"\n        },\n        \"creationTimestamp\": \"2025-07-22T08:31:40Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2737\",\n        \"resourceVersion\": \"5147\",\n        \"uid\": \"a1b0e0fc-41e5-4723-b98c-cb8a4d92f6c1\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-285m9\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"cncf1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-285m9\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-22T08:31:56Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-22T08:31:40Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-22T08:31:56Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-22T08:31:56Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-22T08:31:40Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://3cb4bf791fb1248dc31ed465254a3019fc2b5c99b33f95917525a529f40a7596\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-07-22T08:31:55Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-285m9\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.105.31\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.105.31\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.1.209.84\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.1.209.84\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-07-22T08:31:40Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/22/25 08:32:00.725
  I0722 08:32:00.725458 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-2737 replace -f -'
  I0722 08:32:00.808167 22 builder.go:146] stderr: ""
  I0722 08:32:00.808209 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/22/25 08:32:00.808
  I0722 08:32:00.812260 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-2737 delete pods e2e-test-httpd-pod'
  I0722 08:32:02.727391 22 builder.go:146] stderr: ""
  I0722 08:32:02.727469 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0722 08:32:02.727814 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2737" for this suite. @ 07/22/25 08:32:02.731
â€¢ [22.207 seconds]
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 07/22/25 08:32:02.735
  I0722 08:32:02.735931 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-selectable-fields @ 07/22/25 08:32:02.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:32:02.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:32:02.748
  STEP: Setting up server cert @ 07/22/25 08:32:02.751
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/22/25 08:32:03.151
  STEP: Deploying the custom resource conversion webhook pod @ 07/22/25 08:32:03.157
  STEP: Wait for the deployment to be ready @ 07/22/25 08:32:03.167
  I0722 08:32:03.171270 22 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/22/25 08:32:05.188
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 08:32:05.201
  I0722 08:32:06.217487 22 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 07/22/25 08:32:06.22
  I0722 08:32:06.220752 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Creating a custom resource conversion webhook @ 07/22/25 08:32:06.736
  STEP: Watching with field selectors @ 07/22/25 08:32:08.759
  STEP: Registering informers with field selectors @ 07/22/25 08:32:08.762
  STEP: Creating custom resources @ 07/22/25 08:32:08.762
  STEP: Listing v2 custom resources with field selector host=host1 @ 07/22/25 08:32:08.777
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 07/22/25 08:32:08.781
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 07/22/25 08:32:08.784
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 07/22/25 08:32:08.787
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 07/22/25 08:32:08.789
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 07/22/25 08:32:08.799
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 07/22/25 08:32:08.799
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 07/22/25 08:32:08.799
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 07/22/25 08:32:08.799
  STEP: Deleting one custom resources to ensure that deletions are observed @ 07/22/25 08:32:08.799
  STEP: Updating one custom resources to ensure that deletions are observed @ 07/22/25 08:32:08.807
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 07/22/25 08:32:08.815
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 07/22/25 08:32:08.817
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 07/22/25 08:32:08.82
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 07/22/25 08:32:08.84
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 07/22/25 08:32:08.84
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 07/22/25 08:32:08.84
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 07/22/25 08:32:08.84
  I0722 08:32:09.395872 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-927" for this suite. @ 07/22/25 08:32:09.399
â€¢ [6.685 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 07/22/25 08:32:09.42
  I0722 08:32:09.420902 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 08:32:09.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:32:09.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:32:09.445
  STEP: Discovering how many secrets are in namespace by default @ 07/22/25 08:32:09.448
  STEP: Counting existing ResourceQuota @ 07/22/25 08:32:14.458
  STEP: Creating a ResourceQuota @ 07/22/25 08:32:19.465
  STEP: Ensuring resource quota status is calculated @ 07/22/25 08:32:19.471
  STEP: Creating a Secret @ 07/22/25 08:32:21.488
  STEP: Ensuring resource quota status captures secret creation @ 07/22/25 08:32:21.498
  STEP: Deleting a secret @ 07/22/25 08:32:23.505
  STEP: Ensuring resource quota status released usage @ 07/22/25 08:32:23.512
  I0722 08:32:25.524224 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4995" for this suite. @ 07/22/25 08:32:25.527
â€¢ [16.113 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 07/22/25 08:32:25.534
  I0722 08:32:25.534817 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 08:32:25.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:32:25.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:32:25.552
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/22/25 08:32:25.555
  I0722 08:32:25.556523 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 08:32:26.817304 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 08:32:31.828234 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9919" for this suite. @ 07/22/25 08:32:31.834
â€¢ [6.305 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 07/22/25 08:32:31.839
  I0722 08:32:31.839912 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 08:32:31.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:32:31.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:32:31.851
  STEP: Setting up server cert @ 07/22/25 08:32:31.866
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 08:32:32.015
  STEP: Deploying the webhook pod @ 07/22/25 08:32:32.02
  STEP: Wait for the deployment to be ready @ 07/22/25 08:32:32.028
  I0722 08:32:32.033143 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/22/25 08:32:34.048
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 08:32:34.06
  I0722 08:32:35.064295 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/22/25 08:32:35.067
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/22/25 08:32:35.082
  STEP: Creating a configMap that should not be mutated @ 07/22/25 08:32:35.088
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/22/25 08:32:35.102
  STEP: Creating a configMap that should be mutated @ 07/22/25 08:32:35.107
  I0722 08:32:35.173177 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9213" for this suite. @ 07/22/25 08:32:35.176
  STEP: Destroying namespace "webhook-markers-7506" for this suite. @ 07/22/25 08:32:35.182
â€¢ [3.352 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 07/22/25 08:32:35.192
  I0722 08:32:35.192156 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/22/25 08:32:35.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:32:35.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:32:35.208
  STEP: create the container to handle the HTTPGet hook request. @ 07/22/25 08:32:35.215
  STEP: create the pod with lifecycle hook @ 07/22/25 08:32:37.235
  STEP: delete the pod with lifecycle hook @ 07/22/25 08:32:39.251
  STEP: check prestop hook @ 07/22/25 08:32:41.261
  I0722 08:32:41.271868 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1573" for this suite. @ 07/22/25 08:32:41.275
â€¢ [6.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 07/22/25 08:32:41.28
  I0722 08:32:41.280510 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 08:32:41.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:32:41.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:32:41.294
  STEP: Setting up server cert @ 07/22/25 08:32:41.314
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 08:32:41.745
  STEP: Deploying the webhook pod @ 07/22/25 08:32:41.75
  STEP: Wait for the deployment to be ready @ 07/22/25 08:32:41.759
  I0722 08:32:41.763889 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/22/25 08:32:43.78
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 08:32:43.792
  I0722 08:32:44.797035 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0722 08:32:44.799655 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9494-crds.webhook.example.com via the AdmissionRegistration API @ 07/22/25 08:32:45.316
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/22/25 08:32:45.327
  I0722 08:32:47.904842 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-104" for this suite. @ 07/22/25 08:32:47.907
  STEP: Destroying namespace "webhook-markers-1986" for this suite. @ 07/22/25 08:32:47.913
â€¢ [6.638 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 07/22/25 08:32:47.918
  I0722 08:32:47.918295 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 08:32:47.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:32:47.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:32:47.928
  STEP: Looking for a node to schedule job pods @ 07/22/25 08:32:47.931
  STEP: Creating a job @ 07/22/25 08:32:47.933
  STEP: Waiting for all the pods to be ready @ 07/22/25 08:32:47.938
  STEP: Fetch all running pods @ 07/22/25 08:32:51.954
  STEP: Evict all the Pods @ 07/22/25 08:32:51.956
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-vsplk/job-9369 @ 07/22/25 08:32:51.956
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-smzvb/job-9369 @ 07/22/25 08:32:51.956
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-4w4c8/job-9369 @ 07/22/25 08:32:51.957
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-vsplk/job-9369 to be deleted @ 07/22/25 08:32:51.973
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-4w4c8/job-9369 to be deleted @ 07/22/25 08:32:51.978
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-smzvb/job-9369 to be deleted @ 07/22/25 08:32:51.981
  STEP: Ensuring job reaches completions @ 07/22/25 08:32:55.992
  I0722 08:33:38.195127 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9369" for this suite. @ 07/22/25 08:33:38.198
â€¢ [50.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 07/22/25 08:33:38.207
  I0722 08:33:38.207322 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename runtimeclass @ 07/22/25 08:33:38.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:33:38.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:33:38.221
  STEP: getting /apis @ 07/22/25 08:33:38.223
  STEP: getting /apis/node.k8s.io @ 07/22/25 08:33:38.227
  STEP: getting /apis/node.k8s.io/v1 @ 07/22/25 08:33:38.228
  STEP: creating @ 07/22/25 08:33:38.229
  STEP: watching @ 07/22/25 08:33:38.239
  I0722 08:33:38.239510 22 runtimeclass.go:278] starting watch
  STEP: getting @ 07/22/25 08:33:38.244
  STEP: listing @ 07/22/25 08:33:38.245
  STEP: patching @ 07/22/25 08:33:38.247
  STEP: updating @ 07/22/25 08:33:38.251
  I0722 08:33:38.255648 22 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 07/22/25 08:33:38.255
  STEP: deleting a collection @ 07/22/25 08:33:38.262
  I0722 08:33:38.271574 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8722" for this suite. @ 07/22/25 08:33:38.273
â€¢ [0.072 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/22/25 08:33:38.279
  I0722 08:33:38.279186 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename apf @ 07/22/25 08:33:38.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:33:38.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:33:38.293
  STEP: getting /apis @ 07/22/25 08:33:38.295
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/22/25 08:33:38.298
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/22/25 08:33:38.299
  STEP: creating @ 07/22/25 08:33:38.3
  STEP: getting @ 07/22/25 08:33:38.317
  STEP: listing @ 07/22/25 08:33:38.319
  STEP: watching @ 07/22/25 08:33:38.321
  I0722 08:33:38.321843 22 flowcontrol.go:394] starting watch
  STEP: patching @ 07/22/25 08:33:38.322
  STEP: updating @ 07/22/25 08:33:38.33
  I0722 08:33:38.337588 22 flowcontrol.go:422] waiting for watch events with expected annotations
  I0722 08:33:38.337697 22 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/22/25 08:33:38.337
  STEP: patching /status @ 07/22/25 08:33:38.34
  STEP: updating /status @ 07/22/25 08:33:38.344
  STEP: deleting @ 07/22/25 08:33:38.371
  STEP: deleting a collection @ 07/22/25 08:33:38.379
  I0722 08:33:38.392292 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9577" for this suite. @ 07/22/25 08:33:38.394
â€¢ [0.119 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/22/25 08:33:38.398
  I0722 08:33:38.398669 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename cronjob @ 07/22/25 08:33:38.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:33:38.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:33:38.41
  STEP: Creating a ForbidConcurrent cronjob @ 07/22/25 08:33:38.413
  STEP: Ensuring a job is scheduled @ 07/22/25 08:33:38.418
  STEP: Ensuring exactly one is scheduled @ 07/22/25 08:34:00.487
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/22/25 08:34:00.489
  STEP: Ensuring no more jobs are scheduled @ 07/22/25 08:34:00.491
  STEP: Removing cronjob @ 07/22/25 08:34:00.492
  I0722 08:34:00.497877 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4352" for this suite. @ 07/22/25 08:34:00.5
â€¢ [22.106 seconds]
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 07/22/25 08:34:00.504
  I0722 08:34:00.505012 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 08:34:00.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:34:00.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:34:00.521
  I0722 08:34:00.526324 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3265" for this suite. @ 07/22/25 08:34:00.528
â€¢ [0.030 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/22/25 08:34:00.535
  I0722 08:34:00.535763 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/22/25 08:34:00.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:34:00.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:34:00.549
  I0722 08:34:00.552259 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 08:34:03.617921 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2646" for this suite. @ 07/22/25 08:34:03.621
â€¢ [3.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 07/22/25 08:34:03.628
  I0722 08:34:03.628222 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/22/25 08:34:03.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:34:03.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:34:03.641
  STEP: creating a policy with variables @ 07/22/25 08:34:03.649
  STEP: waiting until the marker is denied @ 07/22/25 08:34:03.668
  STEP: testing a replicated Deployment to be allowed @ 07/22/25 08:34:04.376
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/22/25 08:34:04.387
  I0722 08:34:04.487457 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4625" for this suite. @ 07/22/25 08:34:04.49
â€¢ [0.880 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 07/22/25 08:34:04.508
  I0722 08:34:04.508874 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 08:34:04.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:34:04.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:34:04.528
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/22/25 08:34:04.53
  I0722 08:34:04.531012 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8068 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0722 08:34:04.585505 22 builder.go:146] stderr: ""
  I0722 08:34:04.585542 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/22/25 08:34:04.585
  I0722 08:34:04.585663 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8068 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0722 08:34:04.627792 22 builder.go:146] stderr: ""
  I0722 08:34:04.627830 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/22/25 08:34:04.627
  I0722 08:34:04.631093 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8068 delete pods e2e-test-httpd-pod'
  I0722 08:34:05.806468 22 builder.go:146] stderr: ""
  I0722 08:34:05.806507 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0722 08:34:05.806600 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8068" for this suite. @ 07/22/25 08:34:05.809
â€¢ [1.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 07/22/25 08:34:05.813
  I0722 08:34:05.813840 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 08:34:05.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:34:05.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:34:05.825
  I0722 08:34:05.827939 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-238 create -f -'
  I0722 08:34:05.897249 22 builder.go:146] stderr: ""
  I0722 08:34:05.897321 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0722 08:34:05.897363 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-238 create -f -'
  I0722 08:34:05.982454 22 builder.go:146] stderr: ""
  I0722 08:34:05.982529 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/22/25 08:34:05.982
  I0722 08:34:06.986572 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 08:34:06.986605 22 framework.go:733] Found 1 / 1
  I0722 08:34:06.986622 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0722 08:34:06.988552 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 08:34:06.988576 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0722 08:34:06.988605 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-238 describe pod agnhost-primary-c5mkn'
  I0722 08:34:07.043889 22 builder.go:146] stderr: ""
  I0722 08:34:07.043981 22 builder.go:147] stdout: "Name:             agnhost-primary-c5mkn\nNamespace:        kubectl-238\nPriority:         0\nService Account:  default\nNode:             cncf2/192.168.105.32\nStart Time:       Tue, 22 Jul 2025 08:34:05 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 824e7046a7e5c6644fff6b2584d235ee6b4242d5dd294423430582fb21cede60\n                  cni.projectcalico.org/podIP: 10.1.161.17/32\n                  cni.projectcalico.org/podIPs: 10.1.161.17/32\nStatus:           Running\nIP:               10.1.161.17\nIPs:\n  IP:           10.1.161.17\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://5400d143ef403b995492af0076507228c888e8bc43b9eceefb2ae571d5bdf658\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 22 Jul 2025 08:34:06 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ks6hk (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-ks6hk:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-238/agnhost-primary-c5mkn to cncf2\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0722 08:34:07.044033 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-238 describe rc agnhost-primary'
  I0722 08:34:07.087077 22 builder.go:146] stderr: ""
  I0722 08:34:07.087126 22 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-238\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-c5mkn\n"
  I0722 08:34:07.087165 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-238 describe service agnhost-primary'
  I0722 08:34:07.127557 22 builder.go:146] stderr: ""
  I0722 08:34:07.127597 22 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-238\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.132\nIPs:                      10.152.183.132\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.1.161.17:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0722 08:34:07.130110 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-238 describe node cncf1'
  I0722 08:34:07.179884 22 builder.go:146] stderr: ""
  I0722 08:34:07.179979 22 builder.go:147] stdout: "Name:               cncf1\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=arm64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=arm64\n                    kubernetes.io/hostname=cncf1\n                    kubernetes.io/os=linux\n                    microk8s.io/cluster=true\n                    node.kubernetes.io/microk8s-controlplane=microk8s-controlplane\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.105.31/24\n                    projectcalico.org/IPv4VXLANTunnelAddr: 10.1.209.64\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 22 Jul 2025 07:49:48 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  cncf1\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 22 Jul 2025 08:33:59 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 22 Jul 2025 07:51:44 +0000   Tue, 22 Jul 2025 07:51:44 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Tue, 22 Jul 2025 08:32:23 +0000   Tue, 22 Jul 2025 07:49:48 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 22 Jul 2025 08:32:23 +0000   Tue, 22 Jul 2025 07:49:48 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 22 Jul 2025 08:32:23 +0000   Tue, 22 Jul 2025 07:49:48 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 22 Jul 2025 08:32:23 +0000   Tue, 22 Jul 2025 07:50:59 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.105.31\n  Hostname:    cncf1\nCapacity:\n  cpu:                4\n  ephemeral-storage:  20141632Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  hugepages-32Mi:     0\n  hugepages-64Ki:     0\n  memory:             8118748Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  19093056Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  hugepages-32Mi:     0\n  hugepages-64Ki:     0\n  memory:             8016348Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 54121613471a42beb56bb65387b87bf7\n  System UUID:                54121613471a42beb56bb65387b87bf7\n  Boot ID:                    f16385ea-ed49-40fd-8584-cf6430678840\n  Kernel Version:             5.15.0-143-generic\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               arm64\n  Container Runtime Version:  containerd://1.7.27\n  Kubelet Version:            v1.33.0\n  Kube-Proxy Version:         \nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  cronjob-4352                forbid-29219554-tnsvq                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         7s\n  kube-system                 calico-kube-controllers-79949b87d-bjmtb                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         44m\n  kube-system                 calico-node-swkpx                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         42m\n  kube-system                 coredns-ccd8f67bc-x2dwd                                    100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     44m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-13be34739e594807-rxhzv    0 (0%)        0 (0%)      0 (0%)           0 (0%)         8m56s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests   Limits\n  --------           --------   ------\n  cpu                350m (8%)  0 (0%)\n  memory             70Mi (0%)  170Mi (2%)\n  ephemeral-storage  0 (0%)     0 (0%)\n  hugepages-1Gi      0 (0%)     0 (0%)\n  hugepages-2Mi      0 (0%)     0 (0%)\n  hugepages-32Mi     0 (0%)     0 (0%)\n  hugepages-64Ki     0 (0%)     0 (0%)\nEvents:              <none>\n"
  I0722 08:34:07.180022 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-238 describe namespace kubectl-238'
  I0722 08:34:07.223216 22 builder.go:146] stderr: ""
  I0722 08:34:07.223285 22 builder.go:147] stdout: "Name:         kubectl-238\nLabels:       e2e-framework=kubectl\n              e2e-run=a3e3bf07-3d7d-4fd1-a990-c490b3f14eab\n              kubernetes.io/metadata.name=kubectl-238\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0722 08:34:07.223536 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-238" for this suite. @ 07/22/25 08:34:07.226
â€¢ [1.417 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/22/25 08:34:07.231
  I0722 08:34:07.231340 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename init-container @ 07/22/25 08:34:07.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:34:07.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:34:07.243
  STEP: creating the pod @ 07/22/25 08:34:07.246
  I0722 08:34:07.246311 22 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0722 08:34:10.435848 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7217" for this suite. @ 07/22/25 08:34:10.438
â€¢ [3.213 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/22/25 08:34:10.444
  I0722 08:34:10.444653 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pod-network-test @ 07/22/25 08:34:10.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:34:10.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:34:10.458
  STEP: Performing setup for networking test in namespace pod-network-test-4777 @ 07/22/25 08:34:10.461
  STEP: creating a selector @ 07/22/25 08:34:10.461
  STEP: Creating the service pods in kubernetes @ 07/22/25 08:34:10.461
  I0722 08:34:10.461564 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/22/25 08:34:24.529
  I0722 08:34:26.555444 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0722 08:34:26.555496 22 utils.go:495] Going to poll 10.1.209.90 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0722 08:34:26.556921 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.209.90:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4777 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 08:34:26.556973 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 08:34:26.557007 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4777/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.209.90%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0722 08:34:26.599753 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 08:34:26.599832 22 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0722 08:34:26.599841 22 utils.go:495] Going to poll 10.1.161.18 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0722 08:34:26.602266 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.161.18:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4777 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 08:34:26.602295 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 08:34:26.602360 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4777/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.161.18%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0722 08:34:26.634169 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 08:34:26.634210 22 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0722 08:34:26.634314 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4777" for this suite. @ 07/22/25 08:34:26.637
â€¢ [16.198 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/22/25 08:34:26.643
  I0722 08:34:26.643191 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-runtime @ 07/22/25 08:34:26.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:34:26.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:34:26.708
  STEP: create the container @ 07/22/25 08:34:26.711
  I0722 08:34:26.717585      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/22/25 08:34:26.717
  STEP: get the container status @ 07/22/25 08:34:28.742
  STEP: the container should be terminated @ 07/22/25 08:34:28.746
  STEP: the termination message should be set @ 07/22/25 08:34:28.746
  I0722 08:34:28.746092 22 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/22/25 08:34:28.746
  I0722 08:34:28.759666 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8439" for this suite. @ 07/22/25 08:34:28.761
â€¢ [2.123 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:704
  STEP: Creating a kubernetes client @ 07/22/25 08:34:28.766
  I0722 08:34:28.766109 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sched-pred @ 07/22/25 08:34:28.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:34:28.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:34:28.78
  I0722 08:34:28.782475 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0722 08:34:28.786580 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0722 08:34:28.788490 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node cncf1 before test
  I0722 08:34:28.793652 22 predicates.go:956] forbid-29219554-tnsvq from cronjob-4352 started at 2025-07-22 08:34:00 +0000 UTC (1 container statuses recorded)
  I0722 08:34:28.793675 22 predicates.go:958] 	Container c ready: true, restart count 0
  I0722 08:34:28.793689 22 predicates.go:956] calico-kube-controllers-79949b87d-bjmtb from kube-system started at 2025-07-22 07:50:59 +0000 UTC (1 container statuses recorded)
  I0722 08:34:28.793692 22 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0722 08:34:28.793696 22 predicates.go:956] calico-node-swkpx from kube-system started at 2025-07-22 07:51:40 +0000 UTC (1 container statuses recorded)
  I0722 08:34:28.793698 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0722 08:34:28.793701 22 predicates.go:956] coredns-ccd8f67bc-x2dwd from kube-system started at 2025-07-22 07:50:59 +0000 UTC (1 container statuses recorded)
  I0722 08:34:28.793704 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0722 08:34:28.793708 22 predicates.go:956] netserver-0 from pod-network-test-4777 started at 2025-07-22 08:34:10 +0000 UTC (1 container statuses recorded)
  I0722 08:34:28.793711 22 predicates.go:958] 	Container webserver ready: true, restart count 0
  I0722 08:34:28.793716 22 predicates.go:956] test-container-pod from pod-network-test-4777 started at 2025-07-22 08:34:24 +0000 UTC (1 container statuses recorded)
  I0722 08:34:28.793719 22 predicates.go:958] 	Container webserver ready: true, restart count 0
  I0722 08:34:28.793722 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-13be34739e594807-rxhzv from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 08:34:28.793724 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 08:34:28.793729 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0722 08:34:28.793732 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node cncf2 before test
  I0722 08:34:28.797673 22 predicates.go:956] calico-node-qdrvr from kube-system started at 2025-07-22 07:52:11 +0000 UTC (1 container statuses recorded)
  I0722 08:34:28.797696 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0722 08:34:28.797701 22 predicates.go:956] host-test-container-pod from pod-network-test-4777 started at 2025-07-22 08:34:24 +0000 UTC (1 container statuses recorded)
  I0722 08:34:28.797704 22 predicates.go:958] 	Container agnhost-container ready: true, restart count 0
  I0722 08:34:28.797707 22 predicates.go:956] netserver-1 from pod-network-test-4777 started at 2025-07-22 08:34:10 +0000 UTC (1 container statuses recorded)
  I0722 08:34:28.797710 22 predicates.go:958] 	Container webserver ready: true, restart count 0
  I0722 08:34:28.797715 22 predicates.go:956] sonobuoy from sonobuoy started at 2025-07-22 08:25:01 +0000 UTC (1 container statuses recorded)
  I0722 08:34:28.797720 22 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0722 08:34:28.797723 22 predicates.go:956] sonobuoy-e2e-job-7652fcec38e04d57 from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 08:34:28.797726 22 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0722 08:34:28.797729 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 08:34:28.797732 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-13be34739e594807-nnhtr from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 08:34:28.797737 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 08:34:28.797741 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/22/25 08:34:28.797
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/22/25 08:34:30.839
  STEP: Trying to apply a random label on the found node. @ 07/22/25 08:34:30.861
  STEP: verifying the node has the label kubernetes.io/e2e-b787d0a6-1c98-4a21-9add-8911baae2e80 95 @ 07/22/25 08:34:30.869
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/22/25 08:34:30.875
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.105.32 on the node which pod4 resides and expect not scheduled @ 07/22/25 08:34:32.896
  STEP: removing the label kubernetes.io/e2e-b787d0a6-1c98-4a21-9add-8911baae2e80 off the node cncf2 @ 07/22/25 08:39:32.908
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-b787d0a6-1c98-4a21-9add-8911baae2e80 @ 07/22/25 08:39:32.915
  I0722 08:39:32.919003 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1609" for this suite. @ 07/22/25 08:39:32.921
â€¢ [304.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/22/25 08:39:32.927
  I0722 08:39:32.927749 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename prestop @ 07/22/25 08:39:32.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:39:32.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:39:32.945
  STEP: Creating server pod server in namespace prestop-4455 @ 07/22/25 08:39:32.947
  STEP: Waiting for pods to come up. @ 07/22/25 08:39:32.953
  STEP: Creating tester pod tester in namespace prestop-4455 @ 07/22/25 08:39:34.964
  STEP: Deleting pre-stop pod @ 07/22/25 08:39:36.99
  I0722 08:39:42.038040 22 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/22/25 08:39:42.038
  I0722 08:39:42.083537 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4455" for this suite. @ 07/22/25 08:39:42.086
â€¢ [9.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 07/22/25 08:39:42.092
  I0722 08:39:42.092887 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 08:39:42.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:39:42.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:39:42.104
  I0722 08:40:04.198546 22 container_probe.go:91] Container started at 2025-07-22 08:39:42 +0000 UTC, pod became ready at 2025-07-22 08:40:03 +0000 UTC
  I0722 08:40:04.198711 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-383" for this suite. @ 07/22/25 08:40:04.201
â€¢ [22.113 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/22/25 08:40:04.205
  I0722 08:40:04.205790 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename watch @ 07/22/25 08:40:04.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:40:04.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:40:04.218
  STEP: getting a starting resourceVersion @ 07/22/25 08:40:04.221
  STEP: starting a background goroutine to produce watch events @ 07/22/25 08:40:04.222
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/22/25 08:40:04.222
  I0722 08:40:07.027023 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1361" for this suite. @ 07/22/25 08:40:07.069
â€¢ [2.916 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 07/22/25 08:40:07.122
  I0722 08:40:07.122025 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pv @ 07/22/25 08:40:07.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:40:07.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:40:07.134
  STEP: Creating initial PV and PVC @ 07/22/25 08:40:07.136
  I0722 08:40:07.136222 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4155" @ 07/22/25 08:40:07.146
  STEP: Listing PVCs in namespace "pv-4155" @ 07/22/25 08:40:07.148
  STEP: Reading "pvc-cblb6" Status @ 07/22/25 08:40:07.15
  STEP: Reading "pv-4155-6w5p9" Status @ 07/22/25 08:40:07.153
  STEP: Patching "pvc-cblb6" Status @ 07/22/25 08:40:07.156
  STEP: Patching "pv-4155-6w5p9" Status @ 07/22/25 08:40:07.165
  STEP: Updating "pvc-cblb6" Status @ 07/22/25 08:40:07.169
  STEP: Updating "pv-4155-6w5p9" Status @ 07/22/25 08:40:07.176
  I0722 08:40:07.182622 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0722 08:40:07.182663 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-cblb6"
  I0722 08:40:07.186529 22 pv.go:193] Deleting PersistentVolume "pv-4155-6w5p9"
  I0722 08:40:07.192219 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4155" for this suite. @ 07/22/25 08:40:07.194
â€¢ [0.077 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/22/25 08:40:07.199
  I0722 08:40:07.199419 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename events @ 07/22/25 08:40:07.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:40:07.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:40:07.213
  STEP: creating a test event @ 07/22/25 08:40:07.215
  STEP: listing all events in all namespaces @ 07/22/25 08:40:07.219
  STEP: patching the test event @ 07/22/25 08:40:07.221
  STEP: fetching the test event @ 07/22/25 08:40:07.226
  STEP: updating the test event @ 07/22/25 08:40:07.227
  STEP: getting the test event @ 07/22/25 08:40:07.234
  STEP: deleting the test event @ 07/22/25 08:40:07.236
  STEP: listing all events in all namespaces @ 07/22/25 08:40:07.24
  I0722 08:40:07.242618 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3068" for this suite. @ 07/22/25 08:40:07.244
â€¢ [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 07/22/25 08:40:07.249
  I0722 08:40:07.249728 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/22/25 08:40:07.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:40:07.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:40:07.261
  I0722 08:40:07.262720 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0722 08:41:07.264199 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0722 08:41:07.266913 22 taints.go:144] Starting informer...
  STEP: Starting pods... @ 07/22/25 08:41:07.266
  I0722 08:41:07.488875 22 taints.go:463] Pod1 is running on cncf1. Tainting Node
  I0722 08:41:09.711749 22 taints.go:471] Pod2 is running on cncf1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/22/25 08:41:09.711
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/22/25 08:41:09.729
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/22/25 08:41:09.732
  I0722 08:41:16.028465 22 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0722 08:41:35.451312 22 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/22/25 08:41:35.459
  I0722 08:41:35.461779 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8516" for this suite. @ 07/22/25 08:41:35.464
â€¢ [88.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 07/22/25 08:41:35.469
  I0722 08:41:35.469561 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 08:41:35.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:41:35.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:41:35.485
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/22/25 08:41:35.486
  I0722 08:41:35.487329 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 08:41:36.699470 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 08:41:41.558753 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9419" for this suite. @ 07/22/25 08:41:41.564
â€¢ [6.100 seconds]
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/22/25 08:41:41.569
  I0722 08:41:41.569713 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sysctl @ 07/22/25 08:41:41.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:41:41.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:41:41.582
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/22/25 08:41:41.584
  I0722 08:41:41.587132 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-933" for this suite. @ 07/22/25 08:41:41.589
â€¢ [0.024 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 07/22/25 08:41:41.593
  I0722 08:41:41.593691 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename security-context-test @ 07/22/25 08:41:41.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:41:41.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:41:41.605
  I0722 08:41:47.641343 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5420" for this suite. @ 07/22/25 08:41:47.643
â€¢ [6.055 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 07/22/25 08:41:47.648
  I0722 08:41:47.648832 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 08:41:47.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:41:47.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:41:47.661
  STEP: Creating service test in namespace statefulset-3414 @ 07/22/25 08:41:47.663
  STEP: Creating a new StatefulSet @ 07/22/25 08:41:47.667
  I0722 08:41:47.678051 22 wait.go:44] Found 0 stateful pods, waiting for 3
  I0722 08:41:57.685782 22 wait.go:44] Found 2 stateful pods, waiting for 3
  I0722 08:42:07.688191 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 08:42:07.688242 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0722 08:42:07.688247 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/22/25 08:42:07.694
  I0722 08:42:07.701777 22 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/22/25 08:42:07.701
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/22/25 08:42:17.714
  STEP: Performing a canary update @ 07/22/25 08:42:17.714
  I0722 08:42:17.722137 22 statefulset.go:2542] Updating stateful set ss2
  I0722 08:42:17.726813 22 wait.go:74] Waiting for Pod statefulset-3414/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/22/25 08:42:27.745
  I0722 08:42:27.806606 22 wait.go:44] Found 2 stateful pods, waiting for 3
  I0722 08:42:37.805547 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 08:42:37.805724 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0722 08:42:37.805744 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/22/25 08:42:37.81
  I0722 08:42:37.817173 22 statefulset.go:2542] Updating stateful set ss2
  I0722 08:42:37.823413 22 wait.go:74] Waiting for Pod statefulset-3414/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0722 08:42:47.831633 22 statefulset.go:2542] Updating stateful set ss2
  I0722 08:42:47.836748 22 wait.go:56] Waiting for StatefulSet statefulset-3414/ss2 to complete update
  I0722 08:42:47.836782 22 wait.go:63] Waiting for Pod statefulset-3414/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0722 08:42:57.871983 22 statefulset.go:138] Deleting all statefulset in ns statefulset-3414
  I0722 08:42:57.874231 22 rest.go:153] Scaling statefulset ss2 to 0
  I0722 08:43:07.884980 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0722 08:43:07.887317 22 rest.go:91] Deleting statefulset ss2
  I0722 08:43:07.897679 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3414" for this suite. @ 07/22/25 08:43:07.9
â€¢ [80.257 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 07/22/25 08:43:07.906
  I0722 08:43:07.907016 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 08:43:07.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:43:07.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:43:07.935
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/22/25 08:43:07.938
  STEP: Saw pod success @ 07/22/25 08:43:11.966
  I0722 08:43:11.968867 22 output.go:207] Trying to get logs from node cncf1 pod pod-b7141103-67bb-4684-b504-01db2501e2d4 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 08:43:11.973
  I0722 08:43:11.986838 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-667" for this suite. @ 07/22/25 08:43:11.989
â€¢ [4.088 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 07/22/25 08:43:11.995
  I0722 08:43:11.995535 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/22/25 08:43:11.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:43:12.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:43:12.011
  I0722 08:43:12.017084 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3540" for this suite. @ 07/22/25 08:43:12.019
â€¢ [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 07/22/25 08:43:12.039
  I0722 08:43:12.039185 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 08:43:12.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:43:12.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:43:12.052
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/22/25 08:43:12.056
  STEP: Saw pod success @ 07/22/25 08:43:14.092
  I0722 08:43:14.094430 22 output.go:207] Trying to get logs from node cncf1 pod pod-b0f56d7e-32bf-4b73-9553-b9f9af00bc88 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 08:43:14.097
  I0722 08:43:14.108336 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4117" for this suite. @ 07/22/25 08:43:14.11
â€¢ [2.076 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 07/22/25 08:43:14.115
  I0722 08:43:14.115566 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 08:43:14.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:43:14.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:43:14.127
  I0722 08:43:14.129731 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/22/25 08:43:15.37
  I0722 08:43:15.370238 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 --namespace=crd-publish-openapi-9096 create -f -'
  I0722 08:43:17.441244 22 builder.go:146] stderr: ""
  I0722 08:43:17.441284 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9547-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0722 08:43:17.441317 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 --namespace=crd-publish-openapi-9096 delete e2e-test-crd-publish-openapi-9547-crds test-foo'
  I0722 08:43:17.480302 22 builder.go:146] stderr: ""
  I0722 08:43:17.480348 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9547-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0722 08:43:17.480378 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 --namespace=crd-publish-openapi-9096 apply -f -'
  I0722 08:43:17.524595 22 builder.go:146] stderr: ""
  I0722 08:43:17.524736 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9547-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0722 08:43:17.524787 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 --namespace=crd-publish-openapi-9096 delete e2e-test-crd-publish-openapi-9547-crds test-foo'
  I0722 08:43:17.562788 22 builder.go:146] stderr: ""
  I0722 08:43:17.562830 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9547-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/22/25 08:43:17.562
  I0722 08:43:17.562920 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 --namespace=crd-publish-openapi-9096 create -f -'
  I0722 08:43:17.598485 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/22/25 08:43:17.598
  I0722 08:43:17.598623 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 --namespace=crd-publish-openapi-9096 create -f -'
  I0722 08:43:17.633426 22 builder.go:135] rc: 1
  I0722 08:43:17.633506 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 --namespace=crd-publish-openapi-9096 apply -f -'
  I0722 08:43:17.674698 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/22/25 08:43:17.674
  I0722 08:43:17.674848 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 --namespace=crd-publish-openapi-9096 create -f -'
  I0722 08:43:17.709868 22 builder.go:135] rc: 1
  I0722 08:43:17.709949 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 --namespace=crd-publish-openapi-9096 apply -f -'
  I0722 08:43:17.749056 22 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/22/25 08:43:17.749
  I0722 08:43:17.749160 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 explain e2e-test-crd-publish-openapi-9547-crds'
  I0722 08:43:17.783810 22 builder.go:146] stderr: ""
  I0722 08:43:17.783866 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9547-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/22/25 08:43:17.784
  I0722 08:43:17.784114 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 explain e2e-test-crd-publish-openapi-9547-crds.metadata'
  I0722 08:43:17.818162 22 builder.go:146] stderr: ""
  I0722 08:43:17.818271 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9547-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0722 08:43:17.818424 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 explain e2e-test-crd-publish-openapi-9547-crds.spec'
  I0722 08:43:17.853777 22 builder.go:146] stderr: ""
  I0722 08:43:17.853821 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9547-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0722 08:43:17.853877 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 explain e2e-test-crd-publish-openapi-9547-crds.spec.bars'
  I0722 08:43:17.890488 22 builder.go:146] stderr: ""
  I0722 08:43:17.890645 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9547-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/22/25 08:43:17.89
  I0722 08:43:17.891018 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9096 explain e2e-test-crd-publish-openapi-9547-crds.spec.bars2'
  I0722 08:43:17.925325 22 builder.go:135] rc: 1
  I0722 08:43:19.161889 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9096" for this suite. @ 07/22/25 08:43:19.167
â€¢ [5.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/22/25 08:43:19.173
  I0722 08:43:19.173436 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/22/25 08:43:19.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:43:19.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:43:19.2
  STEP: creating @ 07/22/25 08:43:19.202
  STEP: getting @ 07/22/25 08:43:19.211
  STEP: listing in namespace @ 07/22/25 08:43:19.213
  STEP: patching @ 07/22/25 08:43:19.216
  STEP: deleting @ 07/22/25 08:43:19.221
  I0722 08:43:19.230816 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5988" for this suite. @ 07/22/25 08:43:19.233
â€¢ [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 07/22/25 08:43:19.238
  I0722 08:43:19.238855 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 08:43:19.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:43:19.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:43:19.251
  I0722 08:43:19.263870 22 service_accounts.go:646] created pod
  STEP: Saw pod success @ 07/22/25 08:43:21.276
  I0722 08:43:51.280652 22 service_accounts.go:652] polling logs
  I0722 08:43:51.285250 22 service_accounts.go:662] Pod logs: 
  I0722 08:43:19.826724       1 log.go:245] OK: Got token
  I0722 08:43:19.826843       1 log.go:245] validating with in-cluster discovery
  I0722 08:43:19.827079       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0722 08:43:19.827094       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7291:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0x400021dc80), NotBefore:(*jwt.NumericDate)(0x400021de10), IssuedAt:(*jwt.NumericDate)(0x400021dcd0), ID:"10d7ce57-9529-4a42-9b50-6c9f1f51b682"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7291", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"895692bd-75a5-4741-a11e-571da11e23b0"}}}
  I0722 08:43:19.833923       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0722 08:43:19.836370       1 log.go:245] OK: Validated signature on JWT
  I0722 08:43:19.836404       1 log.go:245] OK: Got valid claims from token!
  I0722 08:43:19.836415       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7291:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0x400024edb0), NotBefore:(*jwt.NumericDate)(0x400024edd8), IssuedAt:(*jwt.NumericDate)(0x400024edb8), ID:"10d7ce57-9529-4a42-9b50-6c9f1f51b682"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7291", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"895692bd-75a5-4741-a11e-571da11e23b0"}}}

  I0722 08:43:51.285283 22 service_accounts.go:666] completed pod
  I0722 08:43:51.290010 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7291" for this suite. @ 07/22/25 08:43:51.292
â€¢ [32.058 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 07/22/25 08:43:51.297
  I0722 08:43:51.297261 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 08:43:51.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:43:51.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:43:51.309
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/22/25 08:43:51.311
  STEP: Saw pod success @ 07/22/25 08:43:55.351
  I0722 08:43:55.353991 22 output.go:207] Trying to get logs from node cncf1 pod pod-7eb1c0cc-2244-4045-b49d-1a6ceb73f751 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 08:43:55.357
  I0722 08:43:55.371099 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7776" for this suite. @ 07/22/25 08:43:55.373
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 07/22/25 08:43:55.378
  I0722 08:43:55.378389 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 08:43:55.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:43:55.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:43:55.391
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 07/22/25 08:43:55.394
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 07/22/25 08:43:55.4
  STEP: Ensure that the job reaches completions @ 07/22/25 08:43:59.455
  STEP: Verifying that the job status to ensure correct final state @ 07/22/25 08:43:59.461
  I0722 08:43:59.465479 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9818" for this suite. @ 07/22/25 08:43:59.468
â€¢ [4.097 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/22/25 08:43:59.475
  I0722 08:43:59.475496 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-runtime @ 07/22/25 08:43:59.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:43:59.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:43:59.487
  STEP: create the container @ 07/22/25 08:43:59.489
  I0722 08:43:59.495092      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/22/25 08:43:59.495
  STEP: get the container status @ 07/22/25 08:44:02.516
  STEP: the container should be terminated @ 07/22/25 08:44:02.518
  STEP: the termination message should be set @ 07/22/25 08:44:02.518
  I0722 08:44:02.518813 22 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/22/25 08:44:02.518
  I0722 08:44:02.531326 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4314" for this suite. @ 07/22/25 08:44:02.533
â€¢ [3.062 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/22/25 08:44:02.538
  I0722 08:44:02.538027 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-runtime @ 07/22/25 08:44:02.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:44:02.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:44:02.552
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/22/25 08:44:02.559
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/22/25 08:44:17.675
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/22/25 08:44:17.678
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/22/25 08:44:17.681
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/22/25 08:44:17.681
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/22/25 08:44:17.696
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/22/25 08:44:19.731
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/22/25 08:44:21.746
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/22/25 08:44:21.751
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/22/25 08:44:21.751
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/22/25 08:44:21.771
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/22/25 08:44:22.777
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/22/25 08:44:24.786
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/22/25 08:44:24.79
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/22/25 08:44:24.79
  I0722 08:44:24.809762 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5326" for this suite. @ 07/22/25 08:44:24.812
â€¢ [22.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 07/22/25 08:44:24.817
  I0722 08:44:24.817854 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 08:44:24.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:44:24.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:44:24.832
  STEP: Creating the pod @ 07/22/25 08:44:24.834
  I0722 08:44:27.366826 22 pod_client.go:173] Successfully updated pod "labelsupdate96b483ac-0373-4b79-b2f0-63e59fe8210c"
  I0722 08:44:29.395551 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3309" for this suite. @ 07/22/25 08:44:29.398
â€¢ [4.587 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 07/22/25 08:44:29.404
  I0722 08:44:29.404655 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 08:44:29.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:44:29.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:44:29.417
  STEP: creating a secret @ 07/22/25 08:44:29.433
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/22/25 08:44:29.437
  STEP: patching the secret @ 07/22/25 08:44:29.44
  STEP: deleting the secret using a LabelSelector @ 07/22/25 08:44:29.449
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/22/25 08:44:29.454
  I0722 08:44:29.459888 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4955" for this suite. @ 07/22/25 08:44:29.462
â€¢ [0.062 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 07/22/25 08:44:29.466
  I0722 08:44:29.466613 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 08:44:29.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:44:29.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:44:29.477
  STEP: Read namespace status @ 07/22/25 08:44:29.48
  I0722 08:44:29.482775 22 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/22/25 08:44:29.482
  I0722 08:44:29.486992 22 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/22/25 08:44:29.487
  I0722 08:44:29.494482 22 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0722 08:44:29.494844 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9585" for this suite. @ 07/22/25 08:44:29.498
â€¢ [0.037 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 07/22/25 08:44:29.504
  I0722 08:44:29.504275 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 08:44:29.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:44:29.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:44:29.515
  I0722 08:44:29.519722      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 07/22/25 08:44:29.519
  I0722 08:44:29.523229      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 07/22/25 08:44:29.523
  I0722 08:44:29.524362      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 07/22/25 08:44:29.524
  I0722 08:44:29.526327      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 07/22/25 08:44:29.526
  I0722 08:44:29.530036      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 08:44:29.531547      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/22/25 08:44:29.531
  I0722 08:44:29.533640      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 07/22/25 08:44:29.533
  I0722 08:44:29.537849      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 08:44:29.538904      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/22/25 08:44:29.538
  I0722 08:44:29.540697      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 07/22/25 08:44:29.54
  I0722 08:44:29.545697      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 07/22/25 08:44:29.545
  I0722 08:44:29.546573      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/22/25 08:44:29.546
  I0722 08:44:29.548319      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 08:44:29.548438 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-156" for this suite. @ 07/22/25 08:44:29.55
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 07/22/25 08:44:29.555
  I0722 08:44:29.555421 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 08:44:29.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:44:29.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:44:29.567
  STEP: Creating configMap with name configmap-test-volume-ac33729e-7493-4ff4-9541-02e618c163de @ 07/22/25 08:44:29.57
  STEP: Creating a pod to test consume configMaps @ 07/22/25 08:44:29.574
  STEP: Saw pod success @ 07/22/25 08:44:33.602
  I0722 08:44:33.604661 22 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-c9d0ef62-2ea2-482c-8aa0-3c32c6225df9 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 08:44:33.608
  I0722 08:44:33.620568 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7248" for this suite. @ 07/22/25 08:44:33.622
â€¢ [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/22/25 08:44:33.627
  I0722 08:44:33.627981 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename subpath @ 07/22/25 08:44:33.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:44:33.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:44:33.64
  STEP: Setting up data @ 07/22/25 08:44:33.642
  STEP: Creating pod pod-subpath-test-configmap-vnb4 @ 07/22/25 08:44:33.65
  STEP: Creating a pod to test atomic-volume-subpath @ 07/22/25 08:44:33.65
  STEP: Saw pod success @ 07/22/25 08:44:57.876
  I0722 08:44:57.878597 22 output.go:207] Trying to get logs from node cncf1 pod pod-subpath-test-configmap-vnb4 container test-container-subpath-configmap-vnb4: <nil>
  STEP: delete the pod @ 07/22/25 08:44:57.882
  STEP: Deleting pod pod-subpath-test-configmap-vnb4 @ 07/22/25 08:44:57.893
  I0722 08:44:57.893873 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-vnb4" in namespace "subpath-940"
  I0722 08:44:57.896108 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-940" for this suite. @ 07/22/25 08:44:57.898
â€¢ [24.275 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 07/22/25 08:44:57.903
  I0722 08:44:57.903864 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename aggregator @ 07/22/25 08:44:57.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:44:57.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:44:57.915
  I0722 08:44:57.918074 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Registering the sample API server. @ 07/22/25 08:44:57.918
  I0722 08:44:58.730518 22 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0722 08:44:58.750992 22 deployment.go:223] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  I0722 08:45:00.793327 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:02.809987 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:04.812085 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:06.815089 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:08.803874 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:10.799810 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:12.815022 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:14.796355 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:16.820148 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:18.811343 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:20.821471 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:22.811154 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:24.817998 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:26.804768 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:28.806701 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:30.815874 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:32.816925 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:34.819766 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:36.798578 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:38.796064 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:40.798397 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:42.800739 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:44.796471 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:46.814140 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:48.799444 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:50.853722 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:52.797126 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 8, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 08:45:54.912071 22 aggregator.go:756] Waited 107.325494ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/22/25 08:45:54.94
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/22/25 08:45:54.943
  STEP: List APIServices @ 07/22/25 08:45:54.949
  I0722 08:45:54.953840 22 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/22/25 08:45:54.953
  I0722 08:45:54.965891 22 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/22/25 08:45:54.965
  I0722 08:45:54.990929 22 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.July, 22, 8, 45, 54, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/22/25 08:45:54.991
  I0722 08:45:54.994723 22 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-07-22 08:45:54 +0000 UTC Passed all checks passed}
  I0722 08:45:54.994776 22 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 08:45:54.994792 22 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/22/25 08:45:54.994
  I0722 08:45:55.005709 22 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-359684739" @ 07/22/25 08:45:55.005
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/22/25 08:45:55.013
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/22/25 08:45:55.018
  STEP: Patch APIService Status @ 07/22/25 08:45:55.02
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/22/25 08:45:55.025
  I0722 08:45:55.027690 22 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-07-22 08:45:54 +0000 UTC Passed all checks passed}
  I0722 08:45:55.027723 22 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 08:45:55.027728 22 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0722 08:45:55.027735 22 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/22/25 08:45:55.027
  STEP: Confirm that the generated APIService has been deleted @ 07/22/25 08:45:55.034
  I0722 08:45:55.034171 22 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0722 08:45:55.036464 22 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0722 08:45:55.036490 22 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0722 08:45:55.127944 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1449" for this suite. @ 07/22/25 08:45:55.131
â€¢ [57.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 07/22/25 08:45:55.137
  I0722 08:45:55.137345 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/22/25 08:45:55.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:45:55.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:45:55.151
  STEP: creating the policy @ 07/22/25 08:45:55.157
  STEP: waiting until the marker is denied @ 07/22/25 08:45:55.172
  STEP: testing a replicated Deployment to be allowed @ 07/22/25 08:45:55.677
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/22/25 08:45:55.688
  I0722 08:45:55.754869 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-79" for this suite. @ 07/22/25 08:45:55.759
â€¢ [0.628 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/22/25 08:45:55.764
  I0722 08:45:55.764981 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename csi-storageclass @ 07/22/25 08:45:55.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:45:55.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:45:55.781
  STEP: Creating a StorageClass @ 07/22/25 08:45:55.783
  STEP: Get StorageClass "e2e-t2czl" @ 07/22/25 08:45:55.787
  STEP: Patching the StorageClass "e2e-t2czl" @ 07/22/25 08:45:55.789
  STEP: Delete StorageClass "e2e-t2czl" @ 07/22/25 08:45:55.793
  STEP: Confirm deletion of StorageClass "e2e-t2czl" @ 07/22/25 08:45:55.797
  STEP: Create a replacement StorageClass @ 07/22/25 08:45:55.798
  STEP: Updating StorageClass "e2e-v2-r2m9n" @ 07/22/25 08:45:55.802
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-r2m9n=updated" @ 07/22/25 08:45:55.806
  STEP: Deleting StorageClass "e2e-v2-r2m9n" via DeleteCollection @ 07/22/25 08:45:55.808
  STEP: Confirm deletion of StorageClass "e2e-v2-r2m9n" @ 07/22/25 08:45:55.814
  I0722 08:45:55.816178 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8797" for this suite. @ 07/22/25 08:45:55.818
â€¢ [0.058 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/22/25 08:45:55.823
  I0722 08:45:55.823234 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename deployment @ 07/22/25 08:45:55.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:45:55.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:45:55.835
  I0722 08:45:55.836845 22 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0722 08:45:55.843309 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0722 08:46:00.864043 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 08:46:00.864
  I0722 08:46:00.864128 22 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0722 08:46:00.872012 22 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0722 08:46:00.876208 22 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0722 08:46:02.892489 22 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0722 08:46:02.894414 22 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0722 08:46:02.900375 22 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4a85cb9-4281-4ed2-bdab-101a53efa17d",
      ResourceVersion: (string) (len=4) "9032",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770760,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 08:46:02.902986 22 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c77a4602-58f3-4b48-9b89-43518396a9f9",
      ResourceVersion: (string) (len=4) "9022",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770760,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a4a85cb9-4281-4ed2-bdab-101a53efa17d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 34 61 38 35 63  62 39 2d 34 32 38 31 2d  |\"a4a85cb9-4281-|
              00000120  34 65 64 32 2d 62 64 61  62 2d 31 30 31 61 35 33  |4ed2-bdab-101a53|
              00000130  65 66 61 31 37 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |efa17d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 08:46:02.903320 22 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0722 08:46:02.903496 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e13913e-dd51-49f7-9068-b99a9f69c8d8",
      ResourceVersion: (string) (len=4) "9031",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770755,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a4a85cb9-4281-4ed2-bdab-101a53efa17d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770755,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 34 61 38 35 63 62  |"uid\":\"a4a85cb|
              000000b0  39 2d 34 32 38 31 2d 34  65 64 32 2d 62 64 61 62  |9-4281-4ed2-bdab|
              000000c0  2d 31 30 31 61 35 33 65  66 61 31 37 64 5c 22 7d  |-101a53efa17d\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 08:46:02.906336 22 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-tmbwd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-tmbwd",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-4113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1778a3b9-0680-4d7d-a6fe-eafc104bac84",
      ResourceVersion: (string) (len=4) "9021",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770760,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.119/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a105eaaee18d11553a1c7dda7bdd09bd25239ff9296dac9b19c8c725e8afcf9f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.119/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "c77a4602-58f3-4b48-9b89-43518396a9f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  37 61 34 36 30 32 2d 35  |d\":\"c77a4602-5|
              00000090  38 66 33 2d 34 62 34 38  2d 39 62 38 39 2d 34 33  |8f3-4b48-9b89-43|
              000000a0  35 31 38 33 39 36 61 39  66 39 5c 22 7d 22 3a 7b  |518396a9f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770761,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 31  31 39 5c 22 7d 22 3a 7b  |.1.209.119\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wdvnz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wdvnz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=12) "10.1.209.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.209.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770760,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770761,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://7442dde531480bff6c404d91c06d19dbeef02d60a14332e4117804fee75bf6fc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wdvnz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:02.907203 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4113" for this suite. @ 07/22/25 08:46:02.91
â€¢ [7.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/22/25 08:46:02.916
  I0722 08:46:02.916149 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename deployment @ 07/22/25 08:46:02.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:46:02.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:46:02.928
  I0722 08:46:02.934847 22 deployment.go:1215] Creating deployment "webserver-deployment"
  I0722 08:46:02.939138 22 deployment.go:1219] Waiting for observed generation 1
  I0722 08:46:04.945035 22 deployment.go:1224] Waiting for all required pods to come up
  I0722 08:46:04.950370 22 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/22/25 08:46:04.95
  I0722 08:46:04.950508 22 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0722 08:46:04.954622 22 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0722 08:46:04.961963 22 deployment.go:314] Updating deployment webserver-deployment
  I0722 08:46:04.962026 22 deployment.go:1243] Waiting for observed generation 2
  I0722 08:46:06.988213 22 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0722 08:46:06.990312 22 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0722 08:46:06.992158 22 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0722 08:46:06.996727 22 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0722 08:46:06.996768 22 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0722 08:46:06.999068 22 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0722 08:46:07.002381 22 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0722 08:46:07.002415 22 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0722 08:46:07.010424 22 deployment.go:314] Updating deployment webserver-deployment
  I0722 08:46:07.010463 22 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0722 08:46:07.014478 22 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0722 08:46:07.017705 22 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0722 08:46:09.031433 22 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e48bbfae-2b0a-4f9d-994a-0504ff1eafda",
      ResourceVersion: (string) (len=4) "9510",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770762,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 14,
      AvailableReplicas: (int32) 14,
      UnavailableReplicas: (int32) 19,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 08:46:09.034578 22 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
      ResourceVersion: (string) (len=4) "9355",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "e48bbfae-2b0a-4f9d-994a-0504ff1eafda",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 34 38 62 62 66  61 65 2d 32 62 30 61 2d  |\"e48bbfae-2b0a-|
              00000120  34 66 39 64 2d 39 39 34  61 2d 30 35 30 34 66 66  |4f9d-994a-0504ff|
              00000130  31 65 61 66 64 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1eafda\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 08:46:09.035042 22 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0722 08:46:09.035281 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
      ResourceVersion: (string) (len=4) "9506",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770762,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "e48bbfae-2b0a-4f9d-994a-0504ff1eafda",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 34 38 62 62 66  61 65 2d 32 62 30 61 2d  |\"e48bbfae-2b0a-|
              00000120  34 66 39 64 2d 39 39 34  61 2d 30 35 30 34 66 66  |4f9d-994a-0504ff|
              00000130  31 65 61 66 64 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1eafda\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 14,
      AvailableReplicas: (int32) 14,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 08:46:09.043741 22 deployment.go:68] Pod "webserver-deployment-685b768f58-52szj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-52szj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95573fea-9f51-4af4-99b5-072d310cd5bc",
      ResourceVersion: (string) (len=4) "9489",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5f689c143120db2ce62890cde72ccfebb35e474aad64d6ef4b4b32ddc7219b44",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.70/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.70/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 37  30 5c 22 7d 22 3a 7b 22  |.1.209.70\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jc8zv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jc8zv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=11) "10.1.209.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770768,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b94b82d91b6788971d1ae34621efad0205a942824eeebde6948cc0f0cba59745",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jc8zv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.045000 22 deployment.go:68] Pod "webserver-deployment-685b768f58-5sjfn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5sjfn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff706060-d5c0-4aaa-90e9-0d3b7a74d5de",
      ResourceVersion: (string) (len=4) "9467",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0a77457c5956dd6cf9ca9bb1f426c88d225878ff6798d7a8a33a847c5d1162fc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.39/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.39/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g5nms",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g5nms",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g5nms",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.046155 22 deployment.go:68] Pod "webserver-deployment-685b768f58-6qvsd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6qvsd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b42cff4-2ac5-4bb7-97fc-6ae1e0b76489",
      ResourceVersion: (string) (len=4) "9491",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "de96e25481fee827360be0ace8a0cfe6f74bf95815478080fef3d10308c3a009",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.67/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.67/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 36  37 5c 22 7d 22 3a 7b 22  |.1.209.67\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2mss9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2mss9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=11) "10.1.209.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770768,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8a6096eb5d954085cd36328920f0f8d711cc6922fa4760949b14448d9b649a88",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2mss9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.047183 22 deployment.go:68] Pod "webserver-deployment-685b768f58-76z8c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-76z8c",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9af3f12-1d1e-4595-9b8b-ff8070c0e9fb",
      ResourceVersion: (string) (len=4) "9494",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "66d887d4526e81f73a9b2d9201564db8cbe6f2ee933b37af8bae3f78a211abec",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.73/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.73/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b5lwd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b5lwd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b5lwd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.048103 22 deployment.go:68] Pod "webserver-deployment-685b768f58-8zkhg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8zkhg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09d1bcfd-d1a8-4f8f-8ab3-bfe39c1dbedc",
      ResourceVersion: (string) (len=4) "9178",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5b4a2cc716b4bd7fb78b9bb60632d778b7d413889ddf5381303fcc4abf16a2f5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.121/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.121/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 31  32 31 5c 22 7d 22 3a 7b  |.1.209.121\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xkv74",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xkv74",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=12) "10.1.209.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.209.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770763,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6e098492d118ad34d5a8ed10bd352079d41290d1cfb2bf7a07165cbc8ae1ba30",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xkv74",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.049461 22 deployment.go:68] Pod "webserver-deployment-685b768f58-9t77n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9t77n",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58ff4c01-30e3-4c96-9dee-4cc7f02fb2bb",
      ResourceVersion: (string) (len=4) "9169",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7e98e89829fc74a5924da7776bbaf3075b46f7dbfc829d6f805735f35bdccfc1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.29/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 31 2e 32  39 5c 22 7d 22 3a 7b 22  |.1.161.29\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gs7b9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gs7b9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) (len=11) "10.1.161.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770763,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cb4894717f31dcbb12712388307d747b8b2e1b22104fa77dde05121587f54226",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gs7b9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.050694 22 deployment.go:68] Pod "webserver-deployment-685b768f58-9vxcx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9vxcx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5de4c53-1305-4aa5-8770-4afdeec55088",
      ResourceVersion: (string) (len=4) "9186",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.124/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "00c8aeb460c983ba059990767e1a4dc3f679374de1f698878a7c3f14636a58e1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.124/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 31  32 34 5c 22 7d 22 3a 7b  |.1.209.124\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fglsw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fglsw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=12) "10.1.209.124",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.209.124"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770764,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://62eddffcb9d31e3cefd0a6f4a3028b5cd47216f71364113b8e5296ccf6770a57",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fglsw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.051622 22 deployment.go:68] Pod "webserver-deployment-685b768f58-b5wf2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-b5wf2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94d17956-eed6-4dbb-aea0-32dc0ee6ce5e",
      ResourceVersion: (string) (len=4) "9466",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "310a73fa581c54df40db4082293b9dd3e0165fbacaa35e41d9ce740e3a4d75ad",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.35/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.35/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 31 2e 33  35 5c 22 7d 22 3a 7b 22  |.1.161.35\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z7tgs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z7tgs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) (len=11) "10.1.161.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770768,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://568bce9d19ec77af3f1f71c08b5d2ea06f3412beaf3c64a9c79bee7de2b1faf8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z7tgs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.052487 22 deployment.go:68] Pod "webserver-deployment-685b768f58-b7pfp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-b7pfp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "629aadc4-9fcb-427f-b762-cf4fe15b2ae7",
      ResourceVersion: (string) (len=4) "9521",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b764febe8a358e9bf7058b1ff834e0200486f2f814f605946056735d39cfb026",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.74/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.74/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2gw82",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2gw82",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2gw82",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.053374 22 deployment.go:68] Pod "webserver-deployment-685b768f58-cmthr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cmthr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad64a427-42dd-4732-b7cd-3b36439a332a",
      ResourceVersion: (string) (len=4) "9493",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "588b58a50b6fd0532c3380fe138905db1a7deb638d78a15a197d4e95cb0a6f08",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.69/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.69/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 36  39 5c 22 7d 22 3a 7b 22  |.1.209.69\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-57vhz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-57vhz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=11) "10.1.209.69",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.69"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770768,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9ecb28d43a2e23aae498158ae063993a5efcead559f50e3d7da0ecff81d4a236",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-57vhz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.054312 22 deployment.go:68] Pod "webserver-deployment-685b768f58-czhv6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-czhv6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e95ebbd-777b-4ef1-90ae-be8f60fdea8f",
      ResourceVersion: (string) (len=4) "9166",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3d654fe827959f205ba12c9e97bf9b898b8d47a02f26e877fc1a945a64ad427f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 31 2e 32  37 5c 22 7d 22 3a 7b 22  |.1.161.27\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-swwxz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-swwxz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) (len=11) "10.1.161.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770763,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cf172cf43ee2128d536f025896bed755b86aa571fc7c136831eae3cd2637b97f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-swwxz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.055244 22 deployment.go:68] Pod "webserver-deployment-685b768f58-fchtf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fchtf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e406e02-81fa-4f2d-9171-61f3b336aaf2",
      ResourceVersion: (string) (len=4) "9172",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9b7596b5fe28dd37f6be2a31e68260d6cbfc78f632cf9de5ceffd16682ab8709",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.28/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 31 2e 32  38 5c 22 7d 22 3a 7b 22  |.1.161.28\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6gbsp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6gbsp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) (len=11) "10.1.161.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770763,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3f426a815a7c437e9a2b679ac9da36285c994b8070dc37de6df40f65c1be8607",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6gbsp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.056264 22 deployment.go:68] Pod "webserver-deployment-685b768f58-gdg75" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gdg75",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71f4eed4-dc0e-4c7b-b307-c9cb95352c7c",
      ResourceVersion: (string) (len=4) "9461",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.34/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9f943cb24eb08a5a0700a3cf9b18aa846993e22c93496c68b3d5f39b75ed1fc4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.34/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 31 2e 33  34 5c 22 7d 22 3a 7b 22  |.1.161.34\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rht4g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rht4g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) (len=11) "10.1.161.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770767,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b6494ebc622361e9857c78fe82aa5b2c6e5d6f12d4f8f093ab3cf129b77aa85f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rht4g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.057192 22 deployment.go:68] Pod "webserver-deployment-685b768f58-ghjdn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ghjdn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ce5b075-0c04-4c02-b094-be02c09bb06f",
      ResourceVersion: (string) (len=4) "9429",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "82a27524420eaa8350557805b3a22c835e37f482d3ad726649e841c0c99175f8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.68/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.68/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f7zdh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f7zdh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f7zdh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.058105 22 deployment.go:68] Pod "webserver-deployment-685b768f58-hpw2b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hpw2b",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "012524a1-1425-4ffa-872c-5890fccc3cbe",
      ResourceVersion: (string) (len=4) "9503",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.76/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "422446b9dee0c20a5c22a8bc4a0f72df5b5f5aa685e1405362743953e04a1512",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.76/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-54cxc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-54cxc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-54cxc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.058981 22 deployment.go:68] Pod "webserver-deployment-685b768f58-m2tsl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-m2tsl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb04445b-56db-44b1-8607-9e648ef2d0d3",
      ResourceVersion: (string) (len=4) "9163",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.26/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.26/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "869c778305c6d7f6bf5d3ed3693f0d3adef8e0943a827cf77063c53cd7c5a9d9"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 31 2e 32  36 5c 22 7d 22 3a 7b 22  |.1.161.26\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fpcq9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fpcq9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) (len=11) "10.1.161.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770762,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770763,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d7570734cb4a344517538be7a199f79bb0f3cb6e1a75364685fe8a9561a58d7b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fpcq9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.060117 22 deployment.go:68] Pod "webserver-deployment-685b768f58-nklkm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nklkm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b292a7c1-3025-400d-abd5-125ed41af4f0",
      ResourceVersion: (string) (len=4) "9183",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.122/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.122/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "82fb7b2c78f90bb883a6b6368a325874e78792326e551bb8bd7937677c4ecb9c"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 31  32 32 5c 22 7d 22 3a 7b  |.1.209.122\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k89nr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k89nr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=12) "10.1.209.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.209.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770763,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e290fdbf208a70265dbfa764fe1552f4f402afc1bbfc21d850816219e7139d02",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k89nr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.061042 22 deployment.go:68] Pod "webserver-deployment-685b768f58-pkms9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pkms9",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ac9b3ec-b2c7-4b2f-967f-e75a2825cb30",
      ResourceVersion: (string) (len=4) "9438",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.38/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f876e8049c9403974c874ab4b0d3852c1a17ae3b3da309e8b4b39970027d0292",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-786q9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-786q9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-786q9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.061978 22 deployment.go:68] Pod "webserver-deployment-685b768f58-w8b9r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-w8b9r",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce3586ed-33ba-4fc5-ab71-706ca2377e9d",
      ResourceVersion: (string) (len=4) "9161",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e15ffe2a482c8b7a2d5916c07fdbf21cd5bcd394404e727a2d838d7d38cf13c3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.30/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.30/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 31 2e 33  30 5c 22 7d 22 3a 7b 22  |.1.161.30\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wlhkk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wlhkk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) (len=11) "10.1.161.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770763,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b65021acc54824ff592a1961d4bd13a68cc1bddca5c263fdf9ac81173b6b2e4f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wlhkk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.062929 22 deployment.go:68] Pod "webserver-deployment-685b768f58-x6t7b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-x6t7b",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d4bbd52-ca4b-4233-b24e-7d9f9358eaba",
      ResourceVersion: (string) (len=4) "9471",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4b770f96c7f2f8083030e6456bb840daa2e16c984b66d0ddd3db68e2c76a3cde",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.36/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.36/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f36eb36-2fc7-4cc5-b548-8c0b7c28c141",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  33 36 65 62 33 36 2d 32  |d\":\"4f36eb36-2|
              00000090  66 63 37 2d 34 63 63 35  2d 62 35 34 38 2d 38 63  |fc7-4cc5-b548-8c|
              000000a0  30 62 37 63 32 38 63 31  34 31 5c 22 7d 22 3a 7b  |0b7c28c141\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 31 2e 33  36 5c 22 7d 22 3a 7b 22  |.1.161.36\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8vphd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8vphd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) (len=11) "10.1.161.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888770768,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a36f1e481054f16bd4e2bb35aafc1566cbeff97eabbf3828e1aa9efd98849ea4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8vphd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.064105 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-5tsn7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-5tsn7",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9529212c-194d-480a-8d44-4d111de0260b",
      ResourceVersion: (string) (len=4) "9492",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.40/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9ff7ce017c7c123c09df4aec7a59d26a75dd5592f391ed03d19cdef4c9940c7a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.40/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8qd8j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8qd8j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8qd8j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.065024 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hwkcp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hwkcp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1fd9abb2-f826-4002-9df1-8213d90d6dbf",
      ResourceVersion: (string) (len=4) "9247",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a03c793b8a66a8a9477483e7ceb3d083e2ee9cf325d83f99330f565875dd56a5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.31/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.31/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pw785",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pw785",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770764,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pw785",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.066109 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jm6fp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jm6fp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa49a53c-db2f-47da-a874-5debc5f3a40e",
      ResourceVersion: (string) (len=4) "9389",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cbe25c59ebfe26a4c084c6c3fc18f15f451da64bd3de4e10a26c8c702fc2280e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.33/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.33/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rgjlk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rgjlk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rgjlk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.067034 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-l6j57" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-l6j57",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "256f0814-bbda-4bae-93bd-ee74711be88d",
      ResourceVersion: (string) (len=4) "9504",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "07860953acbcc5c97fd2798ba38e031ba4cb44cb66d9bc521980c9e5a8cd9571",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.41/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.41/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qhrrp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qhrrp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qhrrp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.067902 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-r55xh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-r55xh",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7cfd3999-3c0d-4b80-8b6d-3bb526242290",
      ResourceVersion: (string) (len=4) "9411",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.71/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b32f6bfb03d1f48092955b46b0d399ee548a1a126a9c51b28cdc46544152d265",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.71/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gs2z7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gs2z7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gs2z7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.069062 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rjrlq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rjrlq",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d4e1bbf-44ed-4cb5-8a43-cb8926fbb5bf",
      ResourceVersion: (string) (len=4) "9252",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "edcc697ce1e195c5ff71a209d7679c9c2cedace4a396937c5368d40c60bbe757",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.126/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.126/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cl6t7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cl6t7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cl6t7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.070052 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-tbwvm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-tbwvm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8f5de78-2902-4c34-9750-20ed689bc894",
      ResourceVersion: (string) (len=4) "9515",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.75/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b06aa6bee9487d8cef26a3e7471eb6917e109a5ab9a6fae97d4131036281b0c7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.75/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5jwhz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5jwhz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5jwhz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.083106 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vcv2d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vcv2d",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af4c083c-7c24-4b8e-ba0c-a46b49d567a2",
      ResourceVersion: (string) (len=4) "9524",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "63d39d33d0db10da28b754ea3e6aec7b5d2dac3fc705b1519895e9fc278f6790",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.78/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.78/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gp5fg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gp5fg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gp5fg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.084272 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wdspq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wdspq",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa25e732-0da6-4472-befa-1efa4d36544c",
      ResourceVersion: (string) (len=4) "9258",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1fb87139d4c2751a740c75d93174b22a815a35261a69ce444e47dd267185e646",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.127/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.127/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pcdkn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pcdkn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pcdkn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.086356 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-whxkn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-whxkn",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2583777a-5e6e-405b-9613-e374333e1f30",
      ResourceVersion: (string) (len=4) "9457",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.72/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.72/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d1e36dfc4787dfe09a19490e1b9f4ba2242bc9ded641effcb53be615af856f43"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4fxhb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4fxhb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4fxhb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.087995 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-z4tfg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-z4tfg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb359abb-b8a8-4ac8-8ab4-81d3cc3782e7",
      ResourceVersion: (string) (len=4) "9430",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.37/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7e0caf2bcf736879e165ac878767ae48792aa7c2636b319110ea8401f8b6a57f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.37/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qrmnp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qrmnp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qrmnp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.088891 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zrtg2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zrtg2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb59cecc-33af-42b8-808f-760ce711c243",
      ResourceVersion: (string) (len=4) "9253",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e02a5bd96a2adb0a856b9a5397470f258e0042c959856d6d30bd601f2d7c0c03",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.32/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.32/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jb47m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jb47m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jb47m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.090360 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zxr95" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zxr95",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf03af43-d652-40bc-ac8a-c62e2cd2164a",
      ResourceVersion: (string) (len=4) "9245",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.125/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7c0a04027cde35e0d41c37e0d8717f1659358d9443998cf88478176da41c475a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.125/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "102c1cf4-a1fe-4f3d-a563-4e72c2757ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  32 63 31 63 66 34 2d 61  |d\":\"102c1cf4-a|
              00000090  31 66 65 2d 34 66 33 64  2d 61 35 36 33 2d 34 65  |1fe-4f3d-a563-4e|
              000000a0  37 32 63 32 37 35 37 64  64 63 5c 22 7d 22 3a 7b  |72c2757ddc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9zw96",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9zw96",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888770765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888770765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9zw96",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 08:46:09.091985 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8969" for this suite. @ 07/22/25 08:46:09.095
â€¢ [6.185 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/22/25 08:46:09.101
  I0722 08:46:09.101830 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename watch @ 07/22/25 08:46:09.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:46:09.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:46:09.119
  STEP: creating a new configmap @ 07/22/25 08:46:09.121
  STEP: modifying the configmap once @ 07/22/25 08:46:09.127
  STEP: modifying the configmap a second time @ 07/22/25 08:46:09.133
  STEP: deleting the configmap @ 07/22/25 08:46:09.138
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/22/25 08:46:09.143
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/22/25 08:46:09.144
  I0722 08:46:09.144677 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3838  0663ec0d-fbbc-466b-a615-e1b23739c8d4 9550 0 2025-07-22 08:46:09 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-22 08:46:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 08:46:09.144793 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3838  0663ec0d-fbbc-466b-a615-e1b23739c8d4 9551 0 2025-07-22 08:46:09 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-22 08:46:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 08:46:09.144861 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3838" for this suite. @ 07/22/25 08:46:09.147
â€¢ [0.051 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 07/22/25 08:46:09.152
  I0722 08:46:09.152603 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 08:46:09.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:46:09.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:46:09.163
  STEP: apply creating a deployment @ 07/22/25 08:46:09.167
  I0722 08:46:09.175182 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7534" for this suite. @ 07/22/25 08:46:09.177
â€¢ [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 07/22/25 08:46:09.182
  I0722 08:46:09.182518 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 08:46:09.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:46:09.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:46:09.194
  STEP: Creating configMap with name projected-configmap-test-volume-e5d6d54e-6970-422d-afd1-97dd9e72fad0 @ 07/22/25 08:46:09.196
  STEP: Creating a pod to test consume configMaps @ 07/22/25 08:46:09.201
  STEP: Saw pod success @ 07/22/25 08:46:13.23
  I0722 08:46:13.232534 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-5e1da79b-fcbc-49d4-8be4-e14e74217945 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 08:46:13.236
  I0722 08:46:13.247364 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1556" for this suite. @ 07/22/25 08:46:13.25
â€¢ [4.072 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/22/25 08:46:13.255
  I0722 08:46:13.255053 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 08:46:13.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:46:13.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:46:13.268
  STEP: Creating a pod to test downward api env vars @ 07/22/25 08:46:13.27
  STEP: Saw pod success @ 07/22/25 08:46:17.319
  I0722 08:46:17.321298 22 output.go:207] Trying to get logs from node cncf1 pod downward-api-7c5cb39c-4eb7-4513-9519-4c71473d23ac container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 08:46:17.324
  I0722 08:46:17.335412 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6912" for this suite. @ 07/22/25 08:46:17.337
â€¢ [4.087 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/22/25 08:46:17.342
  I0722 08:46:17.342533 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 08:46:17.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:46:17.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:46:17.355
  STEP: Creating secret with name secret-test-dc770934-1353-4d7e-90c9-d43c5847a33c @ 07/22/25 08:46:17.357
  STEP: Creating a pod to test consume secrets @ 07/22/25 08:46:17.361
  STEP: Saw pod success @ 07/22/25 08:46:21.39
  I0722 08:46:21.392355 22 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-e9812aee-49fc-40de-9e55-7a989b9f029f container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 08:46:21.396
  I0722 08:46:21.408437 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3274" for this suite. @ 07/22/25 08:46:21.41
â€¢ [4.072 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 07/22/25 08:46:21.415
  I0722 08:46:21.415117 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 08:46:21.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:46:21.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:46:21.43
  STEP: set up a multi version CRD @ 07/22/25 08:46:21.434
  I0722 08:46:21.434364 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: mark a version not serverd @ 07/22/25 08:46:24.576
  STEP: check the unserved version gets removed @ 07/22/25 08:46:24.587
  STEP: check the other version is not changed @ 07/22/25 08:46:25.289
  I0722 08:46:27.771368 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5348" for this suite. @ 07/22/25 08:46:27.776
â€¢ [6.366 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 07/22/25 08:46:27.781
  I0722 08:46:27.781869 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/22/25 08:46:27.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:46:27.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:46:27.794
  STEP: create the container to handle the HTTPGet hook request. @ 07/22/25 08:46:27.8
  STEP: create the pod with lifecycle hook @ 07/22/25 08:46:29.828
  STEP: check poststart hook @ 07/22/25 08:46:31.868
  STEP: delete the pod with lifecycle hook @ 07/22/25 08:46:31.88
  I0722 08:46:33.923274 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1716" for this suite. @ 07/22/25 08:46:33.926
â€¢ [6.150 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:747
  STEP: Creating a kubernetes client @ 07/22/25 08:46:33.931
  I0722 08:46:33.931413 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sched-preemption @ 07/22/25 08:46:33.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:46:33.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:46:33.942
  I0722 08:46:33.956724 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0722 08:47:33.966555 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/22/25 08:47:33.969
  I0722 08:47:33.969877 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/22/25 08:47:33.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:47:33.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:47:34
  STEP: Finding an available node @ 07/22/25 08:47:34.002
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/22/25 08:47:34.002
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/22/25 08:47:36.026
  I0722 08:47:36.036447 22 preemption.go:710] found a healthy node: cncf1
  STEP: Adding a custom resource @ 07/22/25 08:47:36.038
  I0722 08:47:42.123950 22 preemption.go:829] pods created so far: [1 1 1]
  I0722 08:47:42.124049 22 preemption.go:830] length of pods created so far: 3
  I0722 08:47:44.137093 22 preemption.go:847] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 07/22/25 08:47:51.169
  STEP: Removing a custom resource @ 07/22/25 08:47:51.209
  STEP: Removing a custom resource @ 07/22/25 08:47:51.215
  I0722 08:47:51.220010 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4392" for this suite. @ 07/22/25 08:47:51.222
  I0722 08:47:51.227183 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-394" for this suite. @ 07/22/25 08:47:51.229
â€¢ [77.303 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/22/25 08:47:51.235
  I0722 08:47:51.235669 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 08:47:51.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:47:51.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:47:51.246
  STEP: Creating projection with secret that has name projected-secret-test-577bc9ff-b82c-40df-aaf0-81c7c4f302d2 @ 07/22/25 08:47:51.249
  STEP: Creating a pod to test consume secrets @ 07/22/25 08:47:51.253
  STEP: Saw pod success @ 07/22/25 08:47:53.263
  I0722 08:47:53.265989 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-cd8c603a-edff-4099-ade8-38aa182d0cf3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 08:47:53.272
  I0722 08:47:53.284585 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4661" for this suite. @ 07/22/25 08:47:53.288
â€¢ [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 07/22/25 08:47:53.293
  I0722 08:47:53.293834 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 08:47:53.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:47:53.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:47:53.307
  I0722 08:47:53.309970 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 08:47:55.850686      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0722 08:47:55.850719      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0722 08:47:55.850723      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0722 08:47:55.850727      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0722 08:47:55.850731      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0722 08:47:56.389061 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2495" for this suite. @ 07/22/25 08:47:56.391
â€¢ [3.105 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 07/22/25 08:47:56.398
  I0722 08:47:56.398568 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename dns @ 07/22/25 08:47:56.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:47:56.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:47:56.424
  STEP: Creating a test headless service @ 07/22/25 08:47:56.427
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7586.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-7586.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 07/22/25 08:47:56.446
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7586.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7586.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/22/25 08:47:56.446
  STEP: creating a pod to probe DNS @ 07/22/25 08:47:56.446
  STEP: submitting the pod to kubernetes @ 07/22/25 08:47:56.446
  STEP: retrieving the pod @ 07/22/25 08:48:32.704
  STEP: looking for the results for each expected name from probers @ 07/22/25 08:48:32.707
  I0722 08:48:32.720814 22 dns_common.go:546] DNS probes using dns-7586/dns-test-e85cc6c8-71ba-4124-bc8b-993ccdd9a9d8 succeeded

  STEP: deleting the pod @ 07/22/25 08:48:32.72
  STEP: deleting the test headless service @ 07/22/25 08:48:32.731
  I0722 08:48:32.747087 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7586" for this suite. @ 07/22/25 08:48:32.749
â€¢ [36.356 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/22/25 08:48:32.754
  I0722 08:48:32.754442 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pod-network-test @ 07/22/25 08:48:32.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:48:32.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:48:32.771
  STEP: Performing setup for networking test in namespace pod-network-test-5433 @ 07/22/25 08:48:32.774
  STEP: creating a selector @ 07/22/25 08:48:32.774
  STEP: Creating the service pods in kubernetes @ 07/22/25 08:48:32.774
  I0722 08:48:32.774144 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/22/25 08:48:46.895
  I0722 08:48:48.927265 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0722 08:48:48.927347 22 utils.go:495] Going to poll 10.1.209.89 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0722 08:48:48.929114 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.209.89 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5433 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 08:48:48.929162 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 08:48:48.929231 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5433/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.209.89+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0722 08:48:50.004832 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 08:48:50.005065 22 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0722 08:48:50.005091 22 utils.go:495] Going to poll 10.1.161.44 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0722 08:48:50.010601 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.161.44 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5433 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 08:48:50.010661 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 08:48:50.010719 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5433/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.161.44+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0722 08:48:51.099757 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 08:48:51.100221 22 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0722 08:48:51.101115 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5433" for this suite. @ 07/22/25 08:48:51.111
â€¢ [18.373 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 07/22/25 08:48:51.127
  I0722 08:48:51.128039 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubelet-test @ 07/22/25 08:48:51.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:48:51.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:48:51.147
  I0722 08:48:53.190523 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-246" for this suite. @ 07/22/25 08:48:53.193
â€¢ [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 07/22/25 08:48:53.201
  I0722 08:48:53.201281 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 08:48:53.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:48:53.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:48:53.218
  STEP: creating the pod @ 07/22/25 08:48:53.22
  I0722 08:48:53.220898 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7173 create -f -'
  I0722 08:48:53.300809 22 builder.go:146] stderr: ""
  I0722 08:48:53.300842 22 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/22/25 08:48:55.307
  I0722 08:48:55.307536 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7173 label pods pause testing-label=testing-label-value'
  I0722 08:48:55.354501 22 builder.go:146] stderr: ""
  I0722 08:48:55.354557 22 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/22/25 08:48:55.354
  I0722 08:48:55.354627 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7173 get pod pause -L testing-label'
  I0722 08:48:55.396478 22 builder.go:146] stderr: ""
  I0722 08:48:55.396553 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/22/25 08:48:55.396
  I0722 08:48:55.396648 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7173 label pods pause testing-label-'
  I0722 08:48:55.447276 22 builder.go:146] stderr: ""
  I0722 08:48:55.447334 22 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/22/25 08:48:55.447
  I0722 08:48:55.447399 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7173 get pod pause -L testing-label'
  I0722 08:48:55.487344 22 builder.go:146] stderr: ""
  I0722 08:48:55.487416 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 07/22/25 08:48:55.487
  I0722 08:48:55.487595 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7173 delete --grace-period=0 --force -f -'
  I0722 08:48:55.536009 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 08:48:55.536048 22 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0722 08:48:55.536080 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7173 get rc,svc -l name=pause --no-headers'
  I0722 08:48:55.591457 22 builder.go:146] stderr: "No resources found in kubectl-7173 namespace.\n"
  I0722 08:48:55.591508 22 builder.go:147] stdout: ""
  I0722 08:48:55.591575 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7173 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0722 08:48:55.632311 22 builder.go:146] stderr: ""
  I0722 08:48:55.632361 22 builder.go:147] stdout: ""
  I0722 08:48:55.632492 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7173" for this suite. @ 07/22/25 08:48:55.636
â€¢ [2.441 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 07/22/25 08:48:55.642
  I0722 08:48:55.642902 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 08:48:55.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:48:55.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:48:55.658
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 08:48:55.661
  STEP: Saw pod success @ 07/22/25 08:48:59.681
  I0722 08:48:59.695426 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-2a1371b5-d18a-42ba-9c44-3beb63badf55 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 08:48:59.699
  I0722 08:48:59.714814 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1806" for this suite. @ 07/22/25 08:48:59.718
â€¢ [4.096 seconds]
------------------------------
S
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/22/25 08:48:59.738
  I0722 08:48:59.738892 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename limitrange @ 07/22/25 08:48:59.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:48:59.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:48:59.761
  STEP: Creating LimitRange "e2e-limitrange-p5n84" in namespace "limitrange-4627" @ 07/22/25 08:48:59.776
  STEP: Creating another limitRange in another namespace @ 07/22/25 08:48:59.789
  I0722 08:48:59.798734 22 limit_range.go:299] Namespace "e2e-limitrange-p5n84-6946" created
  I0722 08:48:59.798827 22 limit_range.go:300] Creating LimitRange "e2e-limitrange-p5n84" in namespace "e2e-limitrange-p5n84-6946"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-p5n84" @ 07/22/25 08:48:59.803
  I0722 08:48:59.805966 22 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-p5n84" in "limitrange-4627" namespace @ 07/22/25 08:48:59.806
  I0722 08:48:59.811911 22 limit_range.go:335] LimitRange "e2e-limitrange-p5n84" has been patched
  STEP: Delete LimitRange "e2e-limitrange-p5n84" by Collection with labelSelector: "e2e-limitrange-p5n84=patched" @ 07/22/25 08:48:59.811
  STEP: Confirm that the limitRange "e2e-limitrange-p5n84" has been deleted @ 07/22/25 08:48:59.817
  I0722 08:48:59.817200 22 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0722 08:48:59.819100 22 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-p5n84=patched"
  I0722 08:48:59.819126 22 limit_range.go:344] LimitRange "e2e-limitrange-p5n84" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-p5n84" @ 07/22/25 08:48:59.819
  I0722 08:48:59.820959 22 limit_range.go:350] Found 1 limitRange
  I0722 08:48:59.821087 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4627" for this suite. @ 07/22/25 08:48:59.823
  STEP: Destroying namespace "e2e-limitrange-p5n84-6946" for this suite. @ 07/22/25 08:48:59.827
â€¢ [0.093 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 07/22/25 08:48:59.832
  I0722 08:48:59.832504 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 08:48:59.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:48:59.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:48:59.845
  I0722 08:48:59.847645 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 08:49:02.378104      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0722 08:49:02.378188      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0722 08:49:02.378195      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0722 08:49:02.378204      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0722 08:49:02.378211      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0722 08:49:02.915621 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9838" for this suite. @ 07/22/25 08:49:02.918
â€¢ [3.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 07/22/25 08:49:02.923
  I0722 08:49:02.923611 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 08:49:02.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:49:02.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:49:02.937
  STEP: Creating a job @ 07/22/25 08:49:02.939
  STEP: Ensuring job reaches completions @ 07/22/25 08:49:02.944
  I0722 08:49:12.998448 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-929" for this suite. @ 07/22/25 08:49:13.001
â€¢ [10.083 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 07/22/25 08:49:13.006
  I0722 08:49:13.006360 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 08:49:13.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:49:13.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:49:13.017
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/22/25 08:49:13.02
  STEP: Saw pod success @ 07/22/25 08:49:17.045
  I0722 08:49:17.047279 22 output.go:207] Trying to get logs from node cncf1 pod pod-83da62a8-11e2-4a60-936c-d2c988d0236e container test-container: <nil>
  STEP: delete the pod @ 07/22/25 08:49:17.05
  I0722 08:49:17.064594 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7625" for this suite. @ 07/22/25 08:49:17.066
â€¢ [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/22/25 08:49:17.072
  I0722 08:49:17.072441 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename watch @ 07/22/25 08:49:17.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:49:17.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:49:17.084
  STEP: creating a watch on configmaps with label A @ 07/22/25 08:49:17.086
  STEP: creating a watch on configmaps with label B @ 07/22/25 08:49:17.087
  STEP: creating a watch on configmaps with label A or B @ 07/22/25 08:49:17.088
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/22/25 08:49:17.089
  I0722 08:49:17.093708 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-933  bf9a9a73-afa2-4175-85f4-988e3c984ad9 11084 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 08:49:17.093860 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-933  bf9a9a73-afa2-4175-85f4-988e3c984ad9 11084 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/22/25 08:49:17.093
  I0722 08:49:17.098763 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-933  bf9a9a73-afa2-4175-85f4-988e3c984ad9 11085 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 08:49:17.098936 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-933  bf9a9a73-afa2-4175-85f4-988e3c984ad9 11085 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/22/25 08:49:17.099
  I0722 08:49:17.104607 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-933  bf9a9a73-afa2-4175-85f4-988e3c984ad9 11086 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 08:49:17.104692 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-933  bf9a9a73-afa2-4175-85f4-988e3c984ad9 11086 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/22/25 08:49:17.104
  I0722 08:49:17.109133 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-933  bf9a9a73-afa2-4175-85f4-988e3c984ad9 11087 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 08:49:17.109220 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-933  bf9a9a73-afa2-4175-85f4-988e3c984ad9 11087 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/22/25 08:49:17.109
  I0722 08:49:17.112771 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-933  a5aa2432-5b80-4f8b-985a-0349d88445df 11088 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 08:49:17.112966 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-933  a5aa2432-5b80-4f8b-985a-0349d88445df 11088 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/22/25 08:49:27.128
  I0722 08:49:27.135885 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-933  a5aa2432-5b80-4f8b-985a-0349d88445df 11145 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 08:49:27.135942 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-933  a5aa2432-5b80-4f8b-985a-0349d88445df 11145 0 2025-07-22 08:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-22 08:49:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 08:49:37.148738 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-933" for this suite. @ 07/22/25 08:49:37.152
â€¢ [20.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 07/22/25 08:49:37.158
  I0722 08:49:37.158185 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename containers @ 07/22/25 08:49:37.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:49:37.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:49:37.225
  STEP: Creating a pod to test override all @ 07/22/25 08:49:37.237
  STEP: Saw pod success @ 07/22/25 08:49:41.313
  I0722 08:49:41.316450 22 output.go:207] Trying to get logs from node cncf1 pod client-containers-36af02fc-b961-40b2-913d-d289640db87e container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 08:49:41.321
  I0722 08:49:41.335894 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8325" for this suite. @ 07/22/25 08:49:41.338
â€¢ [4.186 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 07/22/25 08:49:41.344
  I0722 08:49:41.344793 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubelet-test @ 07/22/25 08:49:41.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:49:41.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:49:41.362
  I0722 08:49:45.386315 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6619" for this suite. @ 07/22/25 08:49:45.389
â€¢ [4.050 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 07/22/25 08:49:45.395
  I0722 08:49:45.395213 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 08:49:45.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:49:45.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:49:45.408
  I0722 08:49:45.411279 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  W0722 08:49:45.412082      22 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0x400007efe0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  I0722 08:49:48.006016      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0722 08:49:48.006077      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0722 08:49:48.006081      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0722 08:49:48.006085      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0722 08:49:48.006089      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0722 08:49:48.549018 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3841" for this suite. @ 07/22/25 08:49:48.552
â€¢ [3.162 seconds]
------------------------------
S
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/22/25 08:49:48.557
  I0722 08:49:48.557450 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename hostport @ 07/22/25 08:49:48.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:49:48.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:49:48.574
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/22/25 08:49:48.58
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.105.31 on the node which pod1 resides and expect scheduled @ 07/22/25 08:49:50.604
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.105.31 but use UDP protocol on the node which pod2 resides @ 07/22/25 08:49:52.623
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/22/25 08:49:56.652
  I0722 08:49:56.652752 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.105.31 http://127.0.0.1:54323/hostname] Namespace:hostport-2904 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 08:49:56.652774 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 08:49:56.652827 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-2904/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.105.31+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0722 08:49:56.694162 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.105.31, port: 54323 @ 07/22/25 08:49:56.694
  I0722 08:49:56.694267 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.105.31:54323/hostname] Namespace:hostport-2904 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 08:49:56.694274 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 08:49:56.694323 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-2904/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.105.31%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0722 08:49:56.727116 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.105.31, port: 54323 UDP @ 07/22/25 08:49:56.727
  I0722 08:49:56.727301 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.105.31 54323] Namespace:hostport-2904 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 08:49:56.727314 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 08:49:56.727356 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-2904/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.105.31+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0722 08:50:01.765825 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 08:50:01.766112 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2904" for this suite. @ 07/22/25 08:50:01.769
â€¢ [13.218 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 07/22/25 08:50:01.775
  I0722 08:50:01.775593 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/22/25 08:50:01.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:50:01.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:50:01.794
  STEP: create the container to handle the HTTPGet hook request. @ 07/22/25 08:50:01.8
  STEP: create the pod with lifecycle hook @ 07/22/25 08:50:03.828
  STEP: check poststart hook @ 07/22/25 08:50:05.85
  STEP: delete the pod with lifecycle hook @ 07/22/25 08:50:05.859
  I0722 08:50:07.879721 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5943" for this suite. @ 07/22/25 08:50:07.882
â€¢ [6.113 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 07/22/25 08:50:07.888
  I0722 08:50:07.888696 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 08:50:07.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:50:07.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:50:07.902
  STEP: Setting up server cert @ 07/22/25 08:50:07.918
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 08:50:08.529
  STEP: Deploying the webhook pod @ 07/22/25 08:50:08.546
  STEP: Wait for the deployment to be ready @ 07/22/25 08:50:08.559
  I0722 08:50:08.565278 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/22/25 08:50:10.575
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 08:50:10.587
  I0722 08:50:11.591860 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/22/25 08:50:11.594
  STEP: create a configmap that should be updated by the webhook @ 07/22/25 08:50:11.606
  I0722 08:50:11.663167 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1079" for this suite. @ 07/22/25 08:50:11.665
  STEP: Destroying namespace "webhook-markers-862" for this suite. @ 07/22/25 08:50:11.672
â€¢ [3.791 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 07/22/25 08:50:11.681
  I0722 08:50:11.681070 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 08:50:11.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:50:11.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:50:11.698
  STEP: creating secret secrets-7793/secret-test-c7d4c9be-5bc1-43a0-9492-0f012a8a52c9 @ 07/22/25 08:50:11.701
  STEP: Creating a pod to test consume secrets @ 07/22/25 08:50:11.706
  STEP: Saw pod success @ 07/22/25 08:50:15.733
  I0722 08:50:15.735504 22 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-a3b29aa1-772b-4fb5-851e-c719970755ca container env-test: <nil>
  STEP: delete the pod @ 07/22/25 08:50:15.739
  I0722 08:50:15.757860 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7793" for this suite. @ 07/22/25 08:50:15.76
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/22/25 08:50:15.768
  I0722 08:50:15.768920 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 08:50:15.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:50:15.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:50:15.784
  I0722 08:50:15.802000 22 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0722 08:50:15.807568 22 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0722 08:50:15.811491 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 08:50:15.811559 22 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  I0722 08:50:16.818153 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 08:50:16.818219 22 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  I0722 08:50:17.815335 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 08:50:17.815397 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0722 08:50:17.815413 22 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0722 08:50:17.823948 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I0722 08:50:19.836804 22 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0722 08:50:19.843218 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I0722 08:50:19.843272 22 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0722 08:50:19.845640 22 daemon_set.go:1193] Wrong image for pod: daemon-set-xv8zn. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0722 08:50:19.845668 22 daemon_set.go:1198] Pod daemon-set-xv8zn is not available
  I0722 08:50:22.855792 22 daemon_set.go:1198] Pod daemon-set-wvmxv is not available
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 08:50:22.862
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8424, will wait for the garbage collector to delete the pods @ 07/22/25 08:50:22.862
  I0722 08:50:22.920730 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.196576ms
  I0722 08:50:23.021725 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.985181ms
  I0722 08:50:24.824724 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 08:50:24.824764 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 08:50:24.827298 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11669"},"items":null}

  I0722 08:50:24.829230 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11669"},"items":null}

  I0722 08:50:24.835269 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8424" for this suite. @ 07/22/25 08:50:24.837
â€¢ [9.074 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 07/22/25 08:50:24.843
  I0722 08:50:24.843394 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 08:50:24.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:50:24.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:50:24.857
  STEP: Counting existing ResourceQuota @ 07/22/25 08:50:24.859
  STEP: Creating a ResourceQuota @ 07/22/25 08:50:29.868
  STEP: Ensuring resource quota status is calculated @ 07/22/25 08:50:29.874
  STEP: Creating a ReplicaSet @ 07/22/25 08:50:31.883
  STEP: Ensuring resource quota status captures replicaset creation @ 07/22/25 08:50:31.893
  STEP: Deleting a ReplicaSet @ 07/22/25 08:50:33.896
  STEP: Ensuring resource quota status released usage @ 07/22/25 08:50:33.902
  I0722 08:50:35.906301 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4605" for this suite. @ 07/22/25 08:50:35.909
â€¢ [11.072 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/22/25 08:50:35.917
  I0722 08:50:35.917732 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename discovery @ 07/22/25 08:50:35.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:50:35.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:50:35.931
  STEP: Setting up server cert @ 07/22/25 08:50:35.934
  I0722 08:50:36.028840 22 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0722 08:50:36.029917 22 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0722 08:50:36.029962 22 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0722 08:50:36.029974 22 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0722 08:50:36.029978 22 discovery.go:139] Checking APIGroup: apps
  I0722 08:50:36.030885 22 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0722 08:50:36.030911 22 discovery.go:148] Versions found [{apps/v1 v1}]
  I0722 08:50:36.030918 22 discovery.go:154] apps/v1 matches apps/v1
  I0722 08:50:36.030922 22 discovery.go:139] Checking APIGroup: events.k8s.io
  I0722 08:50:36.031647 22 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0722 08:50:36.031690 22 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0722 08:50:36.031699 22 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0722 08:50:36.031702 22 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0722 08:50:36.032458 22 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0722 08:50:36.032535 22 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0722 08:50:36.032543 22 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0722 08:50:36.032554 22 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0722 08:50:36.033312 22 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0722 08:50:36.033332 22 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0722 08:50:36.033335 22 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0722 08:50:36.033338 22 discovery.go:139] Checking APIGroup: autoscaling
  I0722 08:50:36.034180 22 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0722 08:50:36.034199 22 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0722 08:50:36.034203 22 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0722 08:50:36.034206 22 discovery.go:139] Checking APIGroup: batch
  I0722 08:50:36.034920 22 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0722 08:50:36.034931 22 discovery.go:148] Versions found [{batch/v1 v1}]
  I0722 08:50:36.034934 22 discovery.go:154] batch/v1 matches batch/v1
  I0722 08:50:36.034937 22 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0722 08:50:36.035738 22 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0722 08:50:36.035753 22 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0722 08:50:36.035757 22 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0722 08:50:36.035761 22 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0722 08:50:36.036604 22 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0722 08:50:36.036618 22 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0722 08:50:36.036648 22 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0722 08:50:36.036663 22 discovery.go:139] Checking APIGroup: policy
  I0722 08:50:36.037389 22 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0722 08:50:36.037411 22 discovery.go:148] Versions found [{policy/v1 v1}]
  I0722 08:50:36.037415 22 discovery.go:154] policy/v1 matches policy/v1
  I0722 08:50:36.037418 22 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0722 08:50:36.037985 22 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0722 08:50:36.038042 22 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0722 08:50:36.038047 22 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0722 08:50:36.038050 22 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0722 08:50:36.038827 22 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0722 08:50:36.038839 22 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0722 08:50:36.038842 22 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0722 08:50:36.038845 22 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0722 08:50:36.039660 22 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0722 08:50:36.039681 22 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0722 08:50:36.039685 22 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0722 08:50:36.039688 22 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0722 08:50:36.040487 22 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0722 08:50:36.040509 22 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0722 08:50:36.040513 22 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0722 08:50:36.040517 22 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0722 08:50:36.041663 22 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0722 08:50:36.041680 22 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0722 08:50:36.041684 22 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0722 08:50:36.041687 22 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0722 08:50:36.042482 22 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0722 08:50:36.042539 22 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0722 08:50:36.042543 22 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0722 08:50:36.042547 22 discovery.go:139] Checking APIGroup: node.k8s.io
  I0722 08:50:36.043392 22 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0722 08:50:36.043437 22 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0722 08:50:36.043444 22 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0722 08:50:36.043448 22 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0722 08:50:36.044060 22 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0722 08:50:36.044092 22 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0722 08:50:36.044098 22 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0722 08:50:36.044101 22 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0722 08:50:36.045007 22 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0722 08:50:36.045024 22 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0722 08:50:36.045028 22 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0722 08:50:36.045038 22 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0722 08:50:36.045786 22 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0722 08:50:36.045815 22 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0722 08:50:36.045822 22 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0722 08:50:36.045829 22 discovery.go:139] Checking APIGroup: policy.networking.k8s.io
  I0722 08:50:36.046541 22 discovery.go:147] PreferredVersion.GroupVersion: policy.networking.k8s.io/v1alpha1
  I0722 08:50:36.046553 22 discovery.go:148] Versions found [{policy.networking.k8s.io/v1alpha1 v1alpha1}]
  I0722 08:50:36.046556 22 discovery.go:154] policy.networking.k8s.io/v1alpha1 matches policy.networking.k8s.io/v1alpha1
  I0722 08:50:36.046620 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4497" for this suite. @ 07/22/25 08:50:36.049
â€¢ [0.136 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 07/22/25 08:50:36.054
  I0722 08:50:36.054373 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 08:50:36.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:50:36.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:50:36.066
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 08:50:36.068
  STEP: Saw pod success @ 07/22/25 08:50:40.118
  I0722 08:50:40.131147 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-37d419ed-f8f5-4148-b299-93a5dd8d1a27 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 08:50:40.139
  I0722 08:50:40.155708 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3312" for this suite. @ 07/22/25 08:50:40.158
â€¢ [4.109 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 07/22/25 08:50:40.163
  I0722 08:50:40.163913 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 08:50:40.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:50:40.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:50:40.176
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 08:50:40.179
  STEP: Saw pod success @ 07/22/25 08:50:44.234
  I0722 08:50:44.236788 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-5ff0b77a-1726-43de-8946-c4af86436210 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 08:50:44.24
  I0722 08:50:44.254229 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-165" for this suite. @ 07/22/25 08:50:44.256
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 07/22/25 08:50:44.262
  I0722 08:50:44.262338 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 08:50:44.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:50:44.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:50:44.275
  STEP: reading a file in the container @ 07/22/25 08:50:46.352
  I0722 08:50:46.352513 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8275 pod-service-account-17cd535f-e1b9-4746-a2af-aa61759d0566 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/22/25 08:50:46.437
  I0722 08:50:46.437467 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8275 pod-service-account-17cd535f-e1b9-4746-a2af-aa61759d0566 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 07/22/25 08:50:46.503
  I0722 08:50:46.503352 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8275 pod-service-account-17cd535f-e1b9-4746-a2af-aa61759d0566 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0722 08:50:46.573274 22 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-8275"
  I0722 08:50:46.575119 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8275" for this suite. @ 07/22/25 08:50:46.578
â€¢ [2.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 07/22/25 08:50:46.584
  I0722 08:50:46.584399 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 08:50:46.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:50:46.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:50:46.596
  STEP: Setting up server cert @ 07/22/25 08:50:46.611
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 08:50:46.827
  STEP: Deploying the webhook pod @ 07/22/25 08:50:46.832
  STEP: Wait for the deployment to be ready @ 07/22/25 08:50:46.84
  I0722 08:50:46.844413 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/22/25 08:50:48.875
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 08:50:48.894
  I0722 08:50:49.895805 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/22/25 08:50:49.898
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/22/25 08:50:49.898
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/22/25 08:50:49.909
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/22/25 08:50:50.929
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/22/25 08:50:50.929
  STEP: Having no error when timeout is longer than webhook latency @ 07/22/25 08:50:51.954
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/22/25 08:50:51.954
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/22/25 08:50:56.99
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/22/25 08:50:56.99
  I0722 08:51:02.088895 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7508" for this suite. @ 07/22/25 08:51:02.094
  STEP: Destroying namespace "webhook-markers-2272" for this suite. @ 07/22/25 08:51:02.1
â€¢ [15.524 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 07/22/25 08:51:02.109
  I0722 08:51:02.109422 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 08:51:02.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:51:02.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:51:02.156
  STEP: creating service in namespace services-4805 @ 07/22/25 08:51:02.159
  STEP: creating service affinity-clusterip in namespace services-4805 @ 07/22/25 08:51:02.159
  I0722 08:51:02.184945 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0722 08:51:04.199762 22 resource.go:361] Creating new exec pod
  I0722 08:51:06.222881 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4805 exec execpod-affinity5r9jp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0722 08:51:06.292979 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.152.183.183) 80 port [tcp/http] succeeded!\n"
  I0722 08:51:06.293037 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 08:51:06.293103 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4805 exec execpod-affinity5r9jp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.183 80'
  I0722 08:51:06.364680 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.183 80\nConnection to 10.152.183.183 80 port [tcp/http] succeeded!\n"
  I0722 08:51:06.364852 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 08:51:06.365000 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4805 exec execpod-affinity5r9jp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/ ; done'
  I0722 08:51:06.484053 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.183:80/\n"
  I0722 08:51:06.484124 22 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp\naffinity-clusterip-6dd57cf8dc-nlqjp"
  I0722 08:51:06.484134 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484140 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484144 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484147 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484151 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484155 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484166 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484169 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484174 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484177 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484180 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484183 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484186 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484191 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484204 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484209 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-nlqjp
  I0722 08:51:06.484259 22 service.go:4352] Cleaning up the exec pod
  I0722 08:51:06.536024 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4805" for this suite. @ 07/22/25 08:51:06.54
â€¢ [4.450 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 07/22/25 08:51:06.559
  I0722 08:51:06.559578 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename ingress @ 07/22/25 08:51:06.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:51:06.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:51:06.577
  STEP: getting /apis @ 07/22/25 08:51:06.592
  STEP: getting /apis/networking.k8s.io @ 07/22/25 08:51:06.596
  STEP: getting /apis/networking.k8s.iov1 @ 07/22/25 08:51:06.597
  STEP: creating @ 07/22/25 08:51:06.598
  STEP: getting @ 07/22/25 08:51:06.618
  STEP: listing @ 07/22/25 08:51:06.62
  STEP: watching @ 07/22/25 08:51:06.623
  I0722 08:51:06.623084 22 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 07/22/25 08:51:06.624
  STEP: cluster-wide watching @ 07/22/25 08:51:06.626
  I0722 08:51:06.626607 22 ingress.go:198] starting watch
  STEP: patching @ 07/22/25 08:51:06.627
  STEP: updating @ 07/22/25 08:51:06.632
  I0722 08:51:06.638408 22 ingress.go:221] waiting for watch events with expected annotations
  I0722 08:51:06.638494 22 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 07/22/25 08:51:06.638
  STEP: updating /status @ 07/22/25 08:51:06.647
  STEP: get /status @ 07/22/25 08:51:06.655
  STEP: deleting @ 07/22/25 08:51:06.658
  STEP: deleting a collection @ 07/22/25 08:51:06.667
  I0722 08:51:06.677750 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-69" for this suite. @ 07/22/25 08:51:06.68
â€¢ [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 07/22/25 08:51:06.686
  I0722 08:51:06.686781 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 08:51:06.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:51:06.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:51:06.71
  STEP: Creating a pod to test env composition @ 07/22/25 08:51:06.712
  STEP: Saw pod success @ 07/22/25 08:51:10.753
  I0722 08:51:10.758866 22 output.go:207] Trying to get logs from node cncf1 pod var-expansion-cfc397f6-5f8b-4a8f-b010-216b5a3d5073 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 08:51:10.765
  I0722 08:51:10.779661 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4502" for this suite. @ 07/22/25 08:51:10.783
â€¢ [4.102 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/22/25 08:51:10.788
  I0722 08:51:10.788626 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename discovery @ 07/22/25 08:51:10.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:51:10.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:51:10.805
  STEP: Setting up server cert @ 07/22/25 08:51:10.81
  STEP: Requesting APIResourceList from "/api/v1" @ 07/22/25 08:51:11.313
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/22/25 08:51:11.315
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/22/25 08:51:11.316
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/22/25 08:51:11.317
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/22/25 08:51:11.318
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/22/25 08:51:11.319
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/22/25 08:51:11.32
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/22/25 08:51:11.321
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/22/25 08:51:11.322
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/22/25 08:51:11.322
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/22/25 08:51:11.323
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/22/25 08:51:11.324
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/22/25 08:51:11.325
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/22/25 08:51:11.326
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/22/25 08:51:11.327
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/22/25 08:51:11.327
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/22/25 08:51:11.328
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/22/25 08:51:11.329
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/22/25 08:51:11.33
  I0722 08:51:11.331233 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9997" for this suite. @ 07/22/25 08:51:11.334
â€¢ [0.551 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/22/25 08:51:11.339
  I0722 08:51:11.339275 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pod-network-test @ 07/22/25 08:51:11.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:51:11.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:51:11.482
  STEP: Performing setup for networking test in namespace pod-network-test-9430 @ 07/22/25 08:51:11.485
  STEP: creating a selector @ 07/22/25 08:51:11.485
  STEP: Creating the service pods in kubernetes @ 07/22/25 08:51:11.485
  I0722 08:51:11.485110 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/22/25 08:51:25.593
  I0722 08:51:27.606954 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0722 08:51:27.606997 22 networking.go:42] Breadth first check of 10.1.209.115 on host 192.168.105.31...
  I0722 08:51:27.609327 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.209.114:9080/dial?request=hostname&protocol=udp&host=10.1.209.115&port=8081&tries=1'] Namespace:pod-network-test-9430 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 08:51:27.609419 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 08:51:27.609469 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9430/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.209.114%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.209.115%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0722 08:51:27.643553 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 08:51:27.643661 22 utils.go:355] Waiting for responses: map[]
  I0722 08:51:27.643674 22 utils.go:359] reached 10.1.209.115 after 0/1 tries
  I0722 08:51:27.643680 22 networking.go:42] Breadth first check of 10.1.161.48 on host 192.168.105.32...
  I0722 08:51:27.646448 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.209.114:9080/dial?request=hostname&protocol=udp&host=10.1.161.48&port=8081&tries=1'] Namespace:pod-network-test-9430 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 08:51:27.646472 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 08:51:27.646497 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9430/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.209.114%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.161.48%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0722 08:51:27.678682 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 08:51:27.678761 22 utils.go:355] Waiting for responses: map[]
  I0722 08:51:27.678772 22 utils.go:359] reached 10.1.161.48 after 0/1 tries
  I0722 08:51:27.678777 22 networking.go:53] Going to retry 0 out of 2 pods....
  I0722 08:51:27.679012 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9430" for this suite. @ 07/22/25 08:51:27.682
â€¢ [16.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/22/25 08:51:27.688
  I0722 08:51:27.688552 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename events @ 07/22/25 08:51:27.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:51:27.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:51:27.703
  STEP: Create set of events @ 07/22/25 08:51:27.705
  STEP: get a list of Events with a label in the current namespace @ 07/22/25 08:51:27.716
  STEP: delete a list of events @ 07/22/25 08:51:27.718
  I0722 08:51:27.718839 22 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/22/25 08:51:27.733
  I0722 08:51:27.734656 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4479" for this suite. @ 07/22/25 08:51:27.736
â€¢ [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 07/22/25 08:51:27.742
  I0722 08:51:27.742667 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 08:51:27.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:51:27.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:51:27.757
  STEP: Creating a pod to test substitution in container's args @ 07/22/25 08:51:27.759
  STEP: Saw pod success @ 07/22/25 08:51:31.834
  I0722 08:51:31.836424 22 output.go:207] Trying to get logs from node cncf1 pod var-expansion-76043ad8-dd4c-465d-be2a-7f2f00e91986 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 08:51:31.839
  I0722 08:51:31.850722 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1858" for this suite. @ 07/22/25 08:51:31.853
â€¢ [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 07/22/25 08:51:31.859
  I0722 08:51:31.859750 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 08:51:31.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:51:31.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:51:31.871
  STEP: Creating pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001 @ 07/22/25 08:51:31.874
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 08:51:33.892
  I0722 08:51:33.894059 22 container_probe.go:1748] Initial restart count of pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 is 0
  I0722 08:51:33.896079 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:35.917537 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:37.922333 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:39.933155 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:41.937176 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:43.956280 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:45.982322 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:47.992225 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:49.995858 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:52.011716 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:54.016162 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:56.037318 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:51:58.044951 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:00.051659 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:02.055942 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:04.074064 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:06.103904 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:08.129099 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:10.133120 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:12.144506 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:14.149206 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:16.152714 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:18.155727 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:20.159751 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:22.193336 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:24.203292 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:26.210919 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:28.223257 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:30.226855 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:32.274270 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:34.286105 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:36.319255 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:38.341749 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:40.352752 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:42.381021 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:44.394279 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:46.397136 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:48.402155 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:50.408245 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:52.429273 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:54.434008 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:56.440660 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:52:58.448727 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:00.474252 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:02.488213 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:04.503053 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:06.509845 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:08.518911 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:10.529335 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:12.535817 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:14.541233 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:16.547272 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:18.573589 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:20.585077 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:22.593101 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:24.602563 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:26.606083 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:28.626669 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:30.634331 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:32.639174 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:34.643122 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:36.648407 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:38.651571 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:40.659188 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:42.664035 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:44.667318 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:46.682549 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:48.688265 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:50.708787 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:52.746727 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:54.784267 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:56.787941 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:53:58.798057 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:00.822798 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:02.828156 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:04.832683 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:06.863050 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:08.869937 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:10.875115 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:12.880360 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:14.884123 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:16.891064 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:18.913990 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:20.922556 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:22.933219 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:24.965759 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:26.975858 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:28.996271 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:31.016616 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:33.025166 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:35.042528 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:37.047659 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:39.052977 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:41.071273 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:43.080397 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:45.093486 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:47.099652 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:49.103215 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:51.110093 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:53.115222 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:55.133163 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:57.147824 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:54:59.154752 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:01.168783 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:03.179390 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:05.188691 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:07.193432 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:09.196591 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:11.200426 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:13.208179 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:15.224014 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:17.239461 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:19.254394 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:21.268547 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:23.288605 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:25.294603 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:27.300132 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:29.303890 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:31.308503 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  I0722 08:55:33.318518 22 container_probe.go:1758] Get pod test-grpc-25044668-9fb4-4d4c-9cc5-2cda61c0cd11 in namespace container-probe-8001
  STEP: deleting the pod @ 07/22/25 08:55:35.319
  I0722 08:55:35.332508 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8001" for this suite. @ 07/22/25 08:55:35.338
â€¢ [243.485 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 07/22/25 08:55:35.345
  I0722 08:55:35.345697 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/22/25 08:55:35.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:55:35.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:55:35.378
  I0722 08:55:35.395571 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 08:55:38.456273 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7564" for this suite. @ 07/22/25 08:55:38.458
â€¢ [3.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 07/22/25 08:55:38.464
  I0722 08:55:38.464241 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename dns @ 07/22/25 08:55:38.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:55:38.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:55:38.477
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6059.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-6059.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 07/22/25 08:55:38.479
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6059.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6059.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/22/25 08:55:38.479
  STEP: creating a pod to probe /etc/hosts @ 07/22/25 08:55:38.479
  STEP: submitting the pod to kubernetes @ 07/22/25 08:55:38.479
  STEP: retrieving the pod @ 07/22/25 08:55:40.57
  STEP: looking for the results for each expected name from probers @ 07/22/25 08:55:40.573
  I0722 08:55:40.588527 22 dns_common.go:546] DNS probes using dns-6059/dns-test-6e264e17-2ca3-4a64-99fc-40ffa5730f24 succeeded

  STEP: deleting the pod @ 07/22/25 08:55:40.588
  I0722 08:55:40.600140 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6059" for this suite. @ 07/22/25 08:55:40.603
â€¢ [2.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/22/25 08:55:40.608
  I0722 08:55:40.608970 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 08:55:40.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:55:40.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:55:40.626
  STEP: Creating secret with name s-test-opt-del-f790bb96-d9af-46c3-91b7-b88a3db4ab77 @ 07/22/25 08:55:40.631
  STEP: Creating secret with name s-test-opt-upd-6b653a8a-674f-4175-8a3e-fe5600142343 @ 07/22/25 08:55:40.635
  STEP: Creating the pod @ 07/22/25 08:55:40.639
  STEP: Deleting secret s-test-opt-del-f790bb96-d9af-46c3-91b7-b88a3db4ab77 @ 07/22/25 08:55:42.667
  STEP: Updating secret s-test-opt-upd-6b653a8a-674f-4175-8a3e-fe5600142343 @ 07/22/25 08:55:42.673
  STEP: Creating secret with name s-test-opt-create-596338a2-40af-4231-9f36-c0f77a8c1ac5 @ 07/22/25 08:55:42.678
  STEP: waiting to observe update in volume @ 07/22/25 08:55:42.681
  I0722 08:55:44.711825 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6632" for this suite. @ 07/22/25 08:55:44.714
â€¢ [4.111 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/22/25 08:55:44.72
  I0722 08:55:44.720814 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename podtemplate @ 07/22/25 08:55:44.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:55:44.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:55:44.735
  STEP: Create a pod template @ 07/22/25 08:55:44.737
  STEP: Replace a pod template @ 07/22/25 08:55:44.742
  I0722 08:55:44.747869 22 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0722 08:55:44.748058 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3567" for this suite. @ 07/22/25 08:55:44.75
â€¢ [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 07/22/25 08:55:44.756
  I0722 08:55:44.756111 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 08:55:44.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:55:44.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:55:44.768
  I0722 08:55:44.770748 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-3057 version'
  I0722 08:55:44.853886 22 builder.go:146] stderr: ""
  I0722 08:55:44.853927 22 builder.go:147] stdout: "Client Version: v1.33.0\nKustomize Version: v5.6.0\nServer Version: v1.33.0\n"
  I0722 08:55:44.854524 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3057" for this suite. @ 07/22/25 08:55:44.857
â€¢ [0.107 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 07/22/25 08:55:44.863
  I0722 08:55:44.863367 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 08:55:44.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:55:44.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:55:44.877
  STEP: Setting up server cert @ 07/22/25 08:55:44.896
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 08:55:45.155
  STEP: Deploying the webhook pod @ 07/22/25 08:55:45.16
  STEP: Wait for the deployment to be ready @ 07/22/25 08:55:45.171
  I0722 08:55:45.175569 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/22/25 08:55:47.182
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 08:55:47.194
  I0722 08:55:48.194581 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/22/25 08:55:48.197
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/22/25 08:55:48.198
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/22/25 08:55:48.198
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/22/25 08:55:48.198
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/22/25 08:55:48.199
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/22/25 08:55:48.199
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/22/25 08:55:48.199
  I0722 08:55:48.241541 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4660" for this suite. @ 07/22/25 08:55:48.244
  STEP: Destroying namespace "webhook-markers-8390" for this suite. @ 07/22/25 08:55:48.249
â€¢ [3.392 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 07/22/25 08:55:48.255
  I0722 08:55:48.255854 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 08:55:48.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:55:48.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:55:48.27
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 08:55:48.272
  STEP: Saw pod success @ 07/22/25 08:55:52.297
  I0722 08:55:52.299401 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-e71151ad-19fe-4755-8d2c-49ff0aa75f3b container client-container: <nil>
  STEP: delete the pod @ 07/22/25 08:55:52.302
  I0722 08:55:52.314709 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6491" for this suite. @ 07/22/25 08:55:52.317
â€¢ [4.067 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 07/22/25 08:55:52.323
  I0722 08:55:52.323156 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 08:55:52.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:55:52.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:55:52.337
  STEP: Creating service test in namespace statefulset-4416 @ 07/22/25 08:55:52.339
  I0722 08:55:52.355363 22 wait.go:44] Found 0 stateful pods, waiting for 1
  I0722 08:56:02.363957 22 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/22/25 08:56:02.367
  I0722 08:56:02.379374 22 wait.go:44] Found 1 stateful pods, waiting for 2
  I0722 08:56:12.391313 22 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 08:56:12.391392 22 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/22/25 08:56:12.395
  STEP: Delete all of the StatefulSets @ 07/22/25 08:56:12.397
  STEP: Verify that StatefulSets have been deleted @ 07/22/25 08:56:12.404
  I0722 08:56:12.406564 22 statefulset.go:138] Deleting all statefulset in ns statefulset-4416
  I0722 08:56:12.415714 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4416" for this suite. @ 07/22/25 08:56:12.418
â€¢ [20.218 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:125
  STEP: Creating a kubernetes client @ 07/22/25 08:56:12.541
  I0722 08:56:12.541858 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sched-preemption @ 07/22/25 08:56:12.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:56:12.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:56:12.57
  I0722 08:56:12.620338 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0722 08:57:12.663132 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/22/25 08:57:12.666
  STEP: Adding a custom resource @ 07/22/25 08:57:12.666
  I0722 08:57:12.682680 22 preemption.go:169] Created pod: pod0-0-sched-preemption-low-priority
  I0722 08:57:12.688192 22 preemption.go:169] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/22/25 08:57:12.688
  I0722 08:57:12.719514 22 preemption.go:169] Created pod: pod1-0-sched-preemption-medium-priority
  I0722 08:57:12.729767 22 preemption.go:169] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/22/25 08:57:12.729
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/22/25 08:57:14.748
  STEP: Removing a custom resource @ 07/22/25 08:57:16.801
  STEP: Removing a custom resource @ 07/22/25 08:57:16.823
  I0722 08:57:16.836170 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1346" for this suite. @ 07/22/25 08:57:16.839
â€¢ [64.302 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/22/25 08:57:16.844
  I0722 08:57:16.844197 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 08:57:16.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:57:16.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:57:16.857
  STEP: Creating secret with name secret-test-d1bfba5b-cce1-43b0-8b6a-75eb94a6469b @ 07/22/25 08:57:16.86
  STEP: Creating a pod to test consume secrets @ 07/22/25 08:57:16.864
  STEP: Saw pod success @ 07/22/25 08:57:18.883
  I0722 08:57:18.885597 22 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-fe083f02-3de2-4678-aab1-8d2c0ded1248 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 08:57:18.889
  I0722 08:57:18.901622 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8637" for this suite. @ 07/22/25 08:57:18.904
â€¢ [2.067 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 07/22/25 08:57:18.911
  I0722 08:57:18.911241 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 08:57:18.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:57:18.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:57:18.922
  STEP: creating Agnhost RC @ 07/22/25 08:57:18.925
  I0722 08:57:18.925363 22 kubectl.go:1540] namespace kubectl-4946
  I0722 08:57:18.925442 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-4946 create -f -'
  I0722 08:57:19.015451 22 builder.go:146] stderr: ""
  I0722 08:57:19.015495 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/22/25 08:57:19.015
  I0722 08:57:20.024911 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 08:57:20.024987 22 framework.go:733] Found 1 / 1
  I0722 08:57:20.025028 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0722 08:57:20.028141 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 08:57:20.028175 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0722 08:57:20.028191 22 kubectl.go:1547] wait on agnhost-primary startup in kubectl-4946 
  I0722 08:57:20.028239 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-4946 logs agnhost-primary-h7q4s agnhost-primary'
  I0722 08:57:20.076314 22 builder.go:146] stderr: ""
  I0722 08:57:20.076357 22 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 07/22/25 08:57:20.076
  I0722 08:57:20.076437 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-4946 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0722 08:57:20.132410 22 builder.go:146] stderr: ""
  I0722 08:57:20.132448 22 builder.go:147] stdout: "service/rm2 exposed\n"
  I0722 08:57:20.135215 22 utils.go:1115] Service rm2 in namespace kubectl-4946 found.
  STEP: exposing service @ 07/22/25 08:57:22.142
  I0722 08:57:22.142643 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-4946 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0722 08:57:22.213101 22 builder.go:146] stderr: ""
  I0722 08:57:22.213158 22 builder.go:147] stdout: "service/rm3 exposed\n"
  I0722 08:57:22.217844 22 utils.go:1115] Service rm3 in namespace kubectl-4946 found.
  I0722 08:57:24.257115 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4946" for this suite. @ 07/22/25 08:57:24.259
â€¢ [5.354 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 07/22/25 08:57:24.265
  I0722 08:57:24.265314 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 08:57:24.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:57:24.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:57:24.278
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/22/25 08:57:24.28
  STEP: Saw pod success @ 07/22/25 08:57:28.308
  I0722 08:57:28.310087 22 output.go:207] Trying to get logs from node cncf1 pod pod-07bd209d-3f94-49ad-a01c-69ddf48c59e4 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 08:57:28.314
  I0722 08:57:28.325253 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-65" for this suite. @ 07/22/25 08:57:28.327
â€¢ [4.068 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/22/25 08:57:28.333
  I0722 08:57:28.333479 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename init-container @ 07/22/25 08:57:28.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:57:28.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:57:28.345
  STEP: creating the pod @ 07/22/25 08:57:28.347
  I0722 08:57:28.348050 22 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0722 08:57:31.859272 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9492" for this suite. @ 07/22/25 08:57:31.862
â€¢ [3.535 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 07/22/25 08:57:31.867
  I0722 08:57:31.867976 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename runtimeclass @ 07/22/25 08:57:31.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:57:31.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:57:31.881
  STEP: Deleting RuntimeClass runtimeclass-3895-delete-me @ 07/22/25 08:57:31.888
  STEP: Waiting for the RuntimeClass to disappear @ 07/22/25 08:57:31.895
  I0722 08:57:31.900933 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3895" for this suite. @ 07/22/25 08:57:31.903
â€¢ [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 07/22/25 08:57:31.91
  I0722 08:57:31.910571 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 08:57:31.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:57:31.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:57:31.924
  STEP: Creating the pod @ 07/22/25 08:57:31.927
  I0722 08:57:34.459202 22 pod_client.go:173] Successfully updated pod "labelsupdate2073e872-1b74-49d1-9d26-ca3887e571d6"
  I0722 08:57:36.470094 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-839" for this suite. @ 07/22/25 08:57:36.472
â€¢ [4.567 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 07/22/25 08:57:36.478
  I0722 08:57:36.478135 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/22/25 08:57:36.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:57:36.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:57:36.49
  STEP: create the container to handle the HTTPGet hook request. @ 07/22/25 08:57:36.495
  STEP: create the pod with lifecycle hook @ 07/22/25 08:57:38.516
  STEP: delete the pod with lifecycle hook @ 07/22/25 08:57:40.544
  STEP: check prestop hook @ 07/22/25 08:57:44.559
  I0722 08:57:44.563789 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5126" for this suite. @ 07/22/25 08:57:44.566
â€¢ [8.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 07/22/25 08:57:44.573
  I0722 08:57:44.573939 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-webhook @ 07/22/25 08:57:44.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:57:44.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:57:44.59
  STEP: Setting up server cert @ 07/22/25 08:57:44.592
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/22/25 08:57:44.994
  STEP: Deploying the custom resource conversion webhook pod @ 07/22/25 08:57:45
  STEP: Wait for the deployment to be ready @ 07/22/25 08:57:45.011
  I0722 08:57:45.015820 22 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/22/25 08:57:47.024
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 08:57:47.037
  I0722 08:57:48.056952 22 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0722 08:57:48.059962 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Creating a v1 custom resource @ 07/22/25 08:57:50.597
  STEP: Create a v2 custom resource @ 07/22/25 08:57:50.612
  STEP: List CRs in v1 @ 07/22/25 08:57:50.625
  STEP: List CRs in v2 @ 07/22/25 08:57:50.628
  I0722 08:57:51.194935 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-436" for this suite. @ 07/22/25 08:57:51.197
â€¢ [6.636 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 07/22/25 08:57:51.21
  I0722 08:57:51.210281 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 08:57:51.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:57:51.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:57:51.245
  I0722 08:57:53.275325 22 delete.go:62] Deleting pod "var-expansion-a47b05d6-d4fe-4b8a-b4e4-420ce7f13991" in namespace "var-expansion-7554"
  I0722 08:57:53.281925 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-a47b05d6-d4fe-4b8a-b4e4-420ce7f13991" to be fully deleted
  I0722 08:57:55.295071 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7554" for this suite. @ 07/22/25 08:57:55.297
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 07/22/25 08:57:55.304
  I0722 08:57:55.304692 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename runtimeclass @ 07/22/25 08:57:55.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:57:55.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:57:55.317
  I0722 08:57:57.346042 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7230" for this suite. @ 07/22/25 08:57:57.349
â€¢ [2.049 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 07/22/25 08:57:57.354
  I0722 08:57:57.354290 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 08:57:57.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:57:57.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:57:57.366
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-0883af31-c909-4bb6-a5e5-3d2f9ad848f4 @ 07/22/25 08:57:57.371
  STEP: Creating the pod @ 07/22/25 08:57:57.376
  STEP: Updating configmap projected-configmap-test-upd-0883af31-c909-4bb6-a5e5-3d2f9ad848f4 @ 07/22/25 08:57:59.404
  STEP: waiting to observe update in volume @ 07/22/25 08:57:59.409
  I0722 08:58:03.448905 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-619" for this suite. @ 07/22/25 08:58:03.452
â€¢ [6.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 07/22/25 08:58:03.457
  I0722 08:58:03.457297 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 08:58:03.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:58:03.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:58:03.469
  STEP: Creating a ResourceQuota with best effort scope @ 07/22/25 08:58:03.472
  STEP: Ensuring ResourceQuota status is calculated @ 07/22/25 08:58:03.476
  STEP: Creating a ResourceQuota with not best effort scope @ 07/22/25 08:58:05.484
  STEP: Ensuring ResourceQuota status is calculated @ 07/22/25 08:58:05.491
  STEP: Creating a best-effort pod @ 07/22/25 08:58:07.522
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/22/25 08:58:07.547
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/22/25 08:58:09.555
  STEP: Deleting the pod @ 07/22/25 08:58:11.561
  STEP: Ensuring resource quota status released the pod usage @ 07/22/25 08:58:11.571
  STEP: Creating a not best-effort pod @ 07/22/25 08:58:13.591
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/22/25 08:58:13.62
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/22/25 08:58:15.624
  STEP: Deleting the pod @ 07/22/25 08:58:17.638
  STEP: Ensuring resource quota status released the pod usage @ 07/22/25 08:58:17.647
  I0722 08:58:19.655317 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8196" for this suite. @ 07/22/25 08:58:19.659
â€¢ [16.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 07/22/25 08:58:19.666
  I0722 08:58:19.666591 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 08:58:19.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:58:19.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:58:19.686
  STEP: Creating configMap with name configmap-test-volume-map-da32c12a-75aa-47fa-99fa-8498c9e869d3 @ 07/22/25 08:58:19.688
  STEP: Creating a pod to test consume configMaps @ 07/22/25 08:58:19.693
  STEP: Saw pod success @ 07/22/25 08:58:23.738
  I0722 08:58:23.740758 22 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-83596ac9-7a60-42ca-b8ad-25923cb6b7c8 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 08:58:23.745
  I0722 08:58:23.758749 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-524" for this suite. @ 07/22/25 08:58:23.761
â€¢ [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/22/25 08:58:23.77
  I0722 08:58:23.770380 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-runtime @ 07/22/25 08:58:23.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:58:23.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:58:23.788
  STEP: create the container @ 07/22/25 08:58:23.799
  I0722 08:58:23.806072      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 07/22/25 08:58:23.806
  STEP: get the container status @ 07/22/25 08:58:26.824
  STEP: the container should be terminated @ 07/22/25 08:58:26.826
  STEP: the termination message should be set @ 07/22/25 08:58:26.827
  I0722 08:58:26.827066 22 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/22/25 08:58:26.827
  I0722 08:58:26.866303 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-531" for this suite. @ 07/22/25 08:58:26.87
â€¢ [3.110 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/22/25 08:58:26.881
  I0722 08:58:26.881413 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pods @ 07/22/25 08:58:26.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:58:26.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:58:26.911
  STEP: Saw pod success @ 07/22/25 08:58:33.024
  I0722 08:58:33.026884 22 output.go:207] Trying to get logs from node cncf1 pod client-envvars-c7e34b69-6434-4d41-8987-12ecff8ea5da container env3cont: <nil>
  STEP: delete the pod @ 07/22/25 08:58:33.031
  I0722 08:58:33.044464 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8485" for this suite. @ 07/22/25 08:58:33.047
â€¢ [6.172 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/22/25 08:58:33.053
  I0722 08:58:33.053204 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 08:58:33.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:58:33.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:58:33.071
  STEP: Creating secret with name secret-test-map-aa8ffbce-3c6a-4cf9-b7db-e4fcd50293a8 @ 07/22/25 08:58:33.073
  STEP: Creating a pod to test consume secrets @ 07/22/25 08:58:33.08
  STEP: Saw pod success @ 07/22/25 08:58:37.104
  I0722 08:58:37.106950 22 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-fe1e3fbc-e74f-4ad4-a977-88b2519df57b container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 08:58:37.11
  I0722 08:58:37.123408 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-950" for this suite. @ 07/22/25 08:58:37.126
â€¢ [4.078 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 07/22/25 08:58:37.131
  I0722 08:58:37.131260 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 08:58:37.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:58:37.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:58:37.151
  I0722 08:58:37.154066 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/22/25 08:58:38.548
  I0722 08:58:38.548181 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-7056 --namespace=crd-publish-openapi-7056 create -f -'
  I0722 08:58:40.631984 22 builder.go:146] stderr: ""
  I0722 08:58:40.632072 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5902-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0722 08:58:40.632120 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-7056 --namespace=crd-publish-openapi-7056 delete e2e-test-crd-publish-openapi-5902-crds test-cr'
  I0722 08:58:40.675395 22 builder.go:146] stderr: ""
  I0722 08:58:40.675435 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5902-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0722 08:58:40.675468 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-7056 --namespace=crd-publish-openapi-7056 apply -f -'
  I0722 08:58:40.721956 22 builder.go:146] stderr: ""
  I0722 08:58:40.722023 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5902-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0722 08:58:40.722083 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-7056 --namespace=crd-publish-openapi-7056 delete e2e-test-crd-publish-openapi-5902-crds test-cr'
  I0722 08:58:40.763529 22 builder.go:146] stderr: ""
  I0722 08:58:40.763575 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5902-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/22/25 08:58:40.763
  I0722 08:58:40.763654 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-7056 explain e2e-test-crd-publish-openapi-5902-crds'
  I0722 08:58:40.800731 22 builder.go:146] stderr: ""
  I0722 08:58:40.800786 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5902-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0722 08:58:41.985978 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7056" for this suite. @ 07/22/25 08:58:41.992
â€¢ [4.869 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/22/25 08:58:42
  I0722 08:58:42.000854 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-watch @ 07/22/25 08:58:42.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:58:42.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:58:42.014
  I0722 08:58:42.016981 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Creating first CR  @ 07/22/25 08:58:44.582
  I0722 08:58:44.587288 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T08:58:44Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T08:58:44Z]] name:name1 resourceVersion:14082 uid:cb571f95-a297-4fcc-abd6-1360b50f8335] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 07/22/25 08:58:54.59
  I0722 08:58:54.596481 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T08:58:54Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T08:58:54Z]] name:name2 resourceVersion:14101 uid:5d55497e-5703-4a77-a5e3-84eddc18526e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 07/22/25 08:59:04.607
  I0722 08:59:04.614766 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T08:58:44Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T08:59:04Z]] name:name1 resourceVersion:14116 uid:cb571f95-a297-4fcc-abd6-1360b50f8335] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 07/22/25 08:59:14.627
  I0722 08:59:14.635119 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T08:58:54Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T08:59:14Z]] name:name2 resourceVersion:14132 uid:5d55497e-5703-4a77-a5e3-84eddc18526e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 07/22/25 08:59:24.648
  I0722 08:59:24.657465 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T08:58:44Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T08:59:04Z]] name:name1 resourceVersion:14146 uid:cb571f95-a297-4fcc-abd6-1360b50f8335] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 07/22/25 08:59:34.66
  I0722 08:59:34.667978 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T08:58:54Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T08:59:14Z]] name:name2 resourceVersion:14161 uid:5d55497e-5703-4a77-a5e3-84eddc18526e] num:map[num1:9223372036854775807 num2:1000000]]}
  I0722 08:59:45.185114 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6089" for this suite. @ 07/22/25 08:59:45.189
â€¢ [63.196 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 07/22/25 08:59:45.197
  I0722 08:59:45.197316 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 08:59:45.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:59:45.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:59:45.231
  STEP: Creating a Serviceaccount "e2e-sa-2jjmb" in namespace "svcaccounts-644" @ 07/22/25 08:59:45.233
  STEP: Creating a ServiceaccountToken "e2e-sa-2jjmb" in namespace "svcaccounts-644" @ 07/22/25 08:59:45.238
  STEP: Creating a TokenReview for "e2e-sa-2jjmb" in namespace "svcaccounts-644" @ 07/22/25 08:59:45.243
  I0722 08:59:45.245478 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-644" for this suite. @ 07/22/25 08:59:45.248
â€¢ [0.058 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 07/22/25 08:59:45.254
  I0722 08:59:45.254997 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 08:59:45.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:59:45.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:59:45.27
  STEP: Creating a test namespace @ 07/22/25 08:59:45.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:59:45.284
  STEP: Creating a service in the namespace @ 07/22/25 08:59:45.287
  STEP: Deleting the namespace @ 07/22/25 08:59:45.299
  STEP: Waiting for the namespace to be removed. @ 07/22/25 08:59:45.307
  STEP: Recreating the namespace @ 07/22/25 08:59:51.333
  STEP: Verifying there is no service in the namespace @ 07/22/25 08:59:51.346
  I0722 08:59:51.348475 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2504" for this suite. @ 07/22/25 08:59:51.351
  STEP: Destroying namespace "nsdeletetest-4999" for this suite. @ 07/22/25 08:59:51.356
  I0722 08:59:51.358901 22 framework.go:370] Namespace nsdeletetest-4999 was already deleted
  STEP: Destroying namespace "nsdeletetest-3629" for this suite. @ 07/22/25 08:59:51.358
â€¢ [6.110 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 07/22/25 08:59:51.365
  I0722 08:59:51.365434 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 08:59:51.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 08:59:51.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 08:59:51.382
  STEP: creating a replication controller @ 07/22/25 08:59:51.385
  I0722 08:59:51.385173 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 create -f -'
  I0722 08:59:51.465929 22 builder.go:146] stderr: ""
  I0722 08:59:51.465972 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/22/25 08:59:51.466
  I0722 08:59:51.466098 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 08:59:51.514070 22 builder.go:146] stderr: ""
  I0722 08:59:51.514106 22 builder.go:147] stdout: "update-demo-nautilus-b5rv4 update-demo-nautilus-h8l96 "
  I0722 08:59:51.514141 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-b5rv4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 08:59:51.552021 22 builder.go:146] stderr: ""
  I0722 08:59:51.552057 22 builder.go:147] stdout: ""
  I0722 08:59:51.552074 22 kubectl.go:2505] update-demo-nautilus-b5rv4 is created but not running
  I0722 08:59:56.552887 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 08:59:56.595779 22 builder.go:146] stderr: ""
  I0722 08:59:56.595818 22 builder.go:147] stdout: "update-demo-nautilus-b5rv4 update-demo-nautilus-h8l96 "
  I0722 08:59:56.595860 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-b5rv4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 08:59:56.637270 22 builder.go:146] stderr: ""
  I0722 08:59:56.637343 22 builder.go:147] stdout: ""
  I0722 08:59:56.637351 22 kubectl.go:2505] update-demo-nautilus-b5rv4 is created but not running
  I0722 09:00:01.641494 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 09:00:01.686509 22 builder.go:146] stderr: ""
  I0722 09:00:01.686564 22 builder.go:147] stdout: "update-demo-nautilus-b5rv4 update-demo-nautilus-h8l96 "
  I0722 09:00:01.686663 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-b5rv4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:00:01.739237 22 builder.go:146] stderr: ""
  I0722 09:00:01.739294 22 builder.go:147] stdout: ""
  I0722 09:00:01.739302 22 kubectl.go:2505] update-demo-nautilus-b5rv4 is created but not running
  I0722 09:00:06.742531 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 09:00:06.787927 22 builder.go:146] stderr: ""
  I0722 09:00:06.787960 22 builder.go:147] stdout: "update-demo-nautilus-b5rv4 update-demo-nautilus-h8l96 "
  I0722 09:00:06.788009 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-b5rv4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:00:06.838514 22 builder.go:146] stderr: ""
  I0722 09:00:06.838555 22 builder.go:147] stdout: ""
  I0722 09:00:06.838636 22 kubectl.go:2505] update-demo-nautilus-b5rv4 is created but not running
  I0722 09:00:11.838938 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 09:00:11.882651 22 builder.go:146] stderr: ""
  I0722 09:00:11.882690 22 builder.go:147] stdout: "update-demo-nautilus-b5rv4 update-demo-nautilus-h8l96 "
  I0722 09:00:11.882770 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-b5rv4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:00:11.922504 22 builder.go:146] stderr: ""
  I0722 09:00:11.922548 22 builder.go:147] stdout: ""
  I0722 09:00:11.922559 22 kubectl.go:2505] update-demo-nautilus-b5rv4 is created but not running
  I0722 09:00:16.931456 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 09:00:16.972978 22 builder.go:146] stderr: ""
  I0722 09:00:16.973050 22 builder.go:147] stdout: "update-demo-nautilus-b5rv4 update-demo-nautilus-h8l96 "
  I0722 09:00:16.973108 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-b5rv4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:00:17.011196 22 builder.go:146] stderr: ""
  I0722 09:00:17.011232 22 builder.go:147] stdout: ""
  I0722 09:00:17.011238 22 kubectl.go:2505] update-demo-nautilus-b5rv4 is created but not running
  I0722 09:00:22.018894 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 09:00:22.060342 22 builder.go:146] stderr: ""
  I0722 09:00:22.060388 22 builder.go:147] stdout: "update-demo-nautilus-b5rv4 update-demo-nautilus-h8l96 "
  I0722 09:00:22.060416 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-b5rv4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:00:22.097572 22 builder.go:146] stderr: ""
  I0722 09:00:22.097667 22 builder.go:147] stdout: "true"
  I0722 09:00:22.097731 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-b5rv4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 09:00:22.133206 22 builder.go:146] stderr: ""
  I0722 09:00:22.133241 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 09:00:22.133248 22 kubectl.go:2396] validating pod update-demo-nautilus-b5rv4
  I0722 09:00:22.137957 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0722 09:00:22.138140 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 09:00:22.138161 22 kubectl.go:2523] update-demo-nautilus-b5rv4 is verified up and running
  I0722 09:00:22.138192 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-h8l96 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:00:22.173406 22 builder.go:146] stderr: ""
  I0722 09:00:22.173460 22 builder.go:147] stdout: "true"
  I0722 09:00:22.173522 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-h8l96 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 09:00:22.210341 22 builder.go:146] stderr: ""
  I0722 09:00:22.210376 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 09:00:22.210383 22 kubectl.go:2396] validating pod update-demo-nautilus-h8l96
  I0722 09:00:22.214429 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0722 09:00:22.214481 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 09:00:22.214488 22 kubectl.go:2523] update-demo-nautilus-h8l96 is verified up and running
  STEP: scaling down the replication controller @ 07/22/25 09:00:22.214
  I0722 09:00:22.215441 22 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0722 09:00:22.215467 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0722 09:00:23.268573 22 builder.go:146] stderr: ""
  I0722 09:00:23.268631 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/22/25 09:00:23.268
  I0722 09:00:23.268764 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 09:00:23.306683 22 builder.go:146] stderr: ""
  I0722 09:00:23.306718 22 builder.go:147] stdout: "update-demo-nautilus-b5rv4 update-demo-nautilus-h8l96 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 07/22/25 09:00:23.306
  I0722 09:00:28.312872 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 09:00:28.350913 22 builder.go:146] stderr: ""
  I0722 09:00:28.350965 22 builder.go:147] stdout: "update-demo-nautilus-h8l96 "
  I0722 09:00:28.351000 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-h8l96 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:00:28.386266 22 builder.go:146] stderr: ""
  I0722 09:00:28.386306 22 builder.go:147] stdout: "true"
  I0722 09:00:28.386338 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-h8l96 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 09:00:28.422667 22 builder.go:146] stderr: ""
  I0722 09:00:28.422707 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 09:00:28.422716 22 kubectl.go:2396] validating pod update-demo-nautilus-h8l96
  I0722 09:00:28.425989 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0722 09:00:28.426076 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 09:00:28.426085 22 kubectl.go:2523] update-demo-nautilus-h8l96 is verified up and running
  STEP: scaling up the replication controller @ 07/22/25 09:00:28.426
  I0722 09:00:28.426802 22 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0722 09:00:28.426833 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0722 09:00:29.472518 22 builder.go:146] stderr: ""
  I0722 09:00:29.472577 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/22/25 09:00:29.472
  I0722 09:00:29.472941 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 09:00:29.511174 22 builder.go:146] stderr: ""
  I0722 09:00:29.511220 22 builder.go:147] stdout: "update-demo-nautilus-h8l96 update-demo-nautilus-xscgm "
  I0722 09:00:29.511318 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-h8l96 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:00:29.547291 22 builder.go:146] stderr: ""
  I0722 09:00:29.547331 22 builder.go:147] stdout: "true"
  I0722 09:00:29.547375 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-h8l96 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 09:00:29.583411 22 builder.go:146] stderr: ""
  I0722 09:00:29.583453 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 09:00:29.583461 22 kubectl.go:2396] validating pod update-demo-nautilus-h8l96
  I0722 09:00:29.588245 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0722 09:00:29.588291 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 09:00:29.588301 22 kubectl.go:2523] update-demo-nautilus-h8l96 is verified up and running
  I0722 09:00:29.588393 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-xscgm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:00:29.624268 22 builder.go:146] stderr: ""
  I0722 09:00:29.624330 22 builder.go:147] stdout: "true"
  I0722 09:00:29.624424 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods update-demo-nautilus-xscgm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 09:00:29.661737 22 builder.go:146] stderr: ""
  I0722 09:00:29.661776 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 09:00:29.661784 22 kubectl.go:2396] validating pod update-demo-nautilus-xscgm
  I0722 09:00:29.665178 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0722 09:00:29.665244 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 09:00:29.665251 22 kubectl.go:2523] update-demo-nautilus-xscgm is verified up and running
  STEP: using delete to clean up resources @ 07/22/25 09:00:29.665
  I0722 09:00:29.665331 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 delete --grace-period=0 --force -f -'
  I0722 09:00:29.704990 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 09:00:29.705024 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0722 09:00:29.705082 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get rc,svc -l name=update-demo --no-headers'
  I0722 09:00:29.778415 22 builder.go:146] stderr: "No resources found in kubectl-520 namespace.\n"
  I0722 09:00:29.778480 22 builder.go:147] stdout: ""
  I0722 09:00:29.789982 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-520 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0722 09:00:29.839825 22 builder.go:146] stderr: ""
  I0722 09:00:29.839865 22 builder.go:147] stdout: ""
  I0722 09:00:29.840396 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-520" for this suite. @ 07/22/25 09:00:29.844
â€¢ [38.485 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 07/22/25 09:00:29.851
  I0722 09:00:29.851379 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 09:00:29.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:00:29.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:00:29.87
  I0722 09:00:29.875023 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/22/25 09:00:31.166
  I0722 09:00:31.166144 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-7740 --namespace=crd-publish-openapi-7740 create -f -'
  I0722 09:00:31.238955 22 builder.go:146] stderr: ""
  I0722 09:00:31.238994 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6380-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0722 09:00:31.239040 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-7740 --namespace=crd-publish-openapi-7740 delete e2e-test-crd-publish-openapi-6380-crds test-cr'
  I0722 09:00:31.279335 22 builder.go:146] stderr: ""
  I0722 09:00:31.279386 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6380-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0722 09:00:31.279422 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-7740 --namespace=crd-publish-openapi-7740 apply -f -'
  I0722 09:00:31.323463 22 builder.go:146] stderr: ""
  I0722 09:00:31.323518 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6380-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0722 09:00:31.323580 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-7740 --namespace=crd-publish-openapi-7740 delete e2e-test-crd-publish-openapi-6380-crds test-cr'
  I0722 09:00:31.364660 22 builder.go:146] stderr: ""
  I0722 09:00:31.364734 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6380-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/22/25 09:00:31.364
  I0722 09:00:31.364808 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-7740 explain e2e-test-crd-publish-openapi-6380-crds'
  I0722 09:00:31.400001 22 builder.go:146] stderr: ""
  I0722 09:00:31.400082 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6380-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0722 09:00:32.602295 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7740" for this suite. @ 07/22/25 09:00:32.608
â€¢ [2.763 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/22/25 09:00:32.614
  I0722 09:00:32.614359 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 09:00:32.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:00:32.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:00:32.628
  STEP: Creating secret with name secret-test-map-02e8fdfb-ce70-4f72-9983-0cba5b9aa3a1 @ 07/22/25 09:00:32.63
  STEP: Creating a pod to test consume secrets @ 07/22/25 09:00:32.635
  STEP: Saw pod success @ 07/22/25 09:00:36.653
  I0722 09:00:36.655505 22 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-0119ba74-f39c-4140-bee2-d44c99e62847 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 09:00:36.663
  I0722 09:00:36.676438 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2207" for this suite. @ 07/22/25 09:00:36.678
â€¢ [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 07/22/25 09:00:36.683
  I0722 09:00:36.683593 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pods @ 07/22/25 09:00:36.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:00:36.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:00:36.694
  STEP: creating a Pod with a static label @ 07/22/25 09:00:36.701
  STEP: watching for Pod to be ready @ 07/22/25 09:00:36.777
  I0722 09:00:36.778756 22 pods.go:947] observed Pod pod-test in namespace pods-9438 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0722 09:00:36.782480 22 pods.go:947] observed Pod pod-test in namespace pods-9438 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC  }]
  I0722 09:00:36.792325 22 pods.go:947] observed Pod pod-test in namespace pods-9438 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC  }]
  I0722 09:00:37.521862 22 pods.go:947] observed Pod pod-test in namespace pods-9438 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC  }]
  I0722 09:00:38.622692 22 pods.go:950] Found Pod pod-test in namespace pods-9438 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:38 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:38 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:38 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:00:36 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/22/25 09:00:38.626
  STEP: getting the Pod and ensuring that it's patched @ 07/22/25 09:00:38.636
  STEP: replacing the Pod's status Ready condition to False @ 07/22/25 09:00:38.639
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/22/25 09:00:38.648
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/22/25 09:00:38.648
  STEP: watching for the Pod to be deleted @ 07/22/25 09:00:38.657
  I0722 09:00:38.659754 22 pods.go:1060] observed event type MODIFIED
  I0722 09:00:40.643731 22 pods.go:1060] observed event type MODIFIED
  I0722 09:00:40.783483 22 pods.go:1060] observed event type MODIFIED
  I0722 09:00:40.893319 22 pods.go:1060] observed event type MODIFIED
  I0722 09:00:41.649551 22 pods.go:1060] observed event type MODIFIED
  I0722 09:00:41.655786 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9438" for this suite. @ 07/22/25 09:00:41.658
â€¢ [4.980 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/22/25 09:00:41.663
  I0722 09:00:41.663884 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pods @ 07/22/25 09:00:41.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:00:41.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:00:41.676
  STEP: creating pod @ 07/22/25 09:00:41.678
  I0722 09:00:43.698860 22 pods.go:83] Pod pod-hostip-74873195-5ecf-4910-8010-4992ff380d5f has hostIP: 192.168.105.31
  I0722 09:00:43.698974 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6120" for this suite. @ 07/22/25 09:00:43.701
â€¢ [2.043 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 07/22/25 09:00:43.707
  I0722 09:00:43.707342 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 09:00:43.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:00:43.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:00:43.72
  STEP: Updating Namespace "namespaces-1154" @ 07/22/25 09:00:43.722
  I0722 09:00:43.728636 22 namespace.go:390] Namespace "namespaces-1154" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"a3e3bf07-3d7d-4fd1-a990-c490b3f14eab", "kubernetes.io/metadata.name":"namespaces-1154", "namespaces-1154":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0722 09:00:43.728762 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1154" for this suite. @ 07/22/25 09:00:43.731
â€¢ [0.029 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 07/22/25 09:00:43.736
  I0722 09:00:43.736826 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 09:00:43.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:00:43.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:00:43.747
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 07/22/25 09:00:43.751
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/22/25 09:00:43.756
  STEP: Ensure that the job reaches completions @ 07/22/25 09:00:47.802
  STEP: Verifying that the only appropriately index succeeded @ 07/22/25 09:00:47.806
  I0722 09:00:47.807773 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7876" for this suite. @ 07/22/25 09:00:47.81
â€¢ [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 07/22/25 09:00:47.816
  I0722 09:00:47.816298 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 09:00:47.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:00:47.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:00:47.832
  STEP: Creating configMap with name configmap-test-volume-6f7b4d11-27a8-4b68-9a78-003230abb875 @ 07/22/25 09:00:47.834
  STEP: Creating a pod to test consume configMaps @ 07/22/25 09:00:47.838
  STEP: Saw pod success @ 07/22/25 09:00:51.88
  I0722 09:00:51.882207 22 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-af37e1f0-2f63-4145-8312-d5393044c93b container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:00:51.886
  I0722 09:00:51.899565 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6501" for this suite. @ 07/22/25 09:00:51.901
â€¢ [4.091 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 07/22/25 09:00:51.907
  I0722 09:00:51.907592 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:00:51.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:00:51.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:00:51.92
  STEP: creating a collection of services @ 07/22/25 09:00:51.922
  I0722 09:00:51.922912 22 service.go:3666] Creating e2e-svc-a-79hxm
  I0722 09:00:51.934835 22 service.go:3666] Creating e2e-svc-b-dkbss
  I0722 09:00:51.950435 22 service.go:3666] Creating e2e-svc-c-2ksb2
  STEP: deleting service collection @ 07/22/25 09:00:51.966
  I0722 09:00:51.993279 22 service.go:3701] Collection of services has been deleted
  I0722 09:00:51.993375 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7724" for this suite. @ 07/22/25 09:00:51.995
â€¢ [0.094 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/22/25 09:00:52.001
  I0722 09:00:52.001677 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename apf @ 07/22/25 09:00:52.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:00:52.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:00:52.013
  STEP: getting /apis @ 07/22/25 09:00:52.016
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/22/25 09:00:52.019
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/22/25 09:00:52.02
  STEP: creating @ 07/22/25 09:00:52.021
  STEP: getting @ 07/22/25 09:00:52.033
  STEP: listing @ 07/22/25 09:00:52.035
  STEP: watching @ 07/22/25 09:00:52.037
  I0722 09:00:52.037590 22 flowcontrol.go:620] starting watch
  STEP: patching @ 07/22/25 09:00:52.038
  STEP: updating @ 07/22/25 09:00:52.042
  I0722 09:00:52.048047 22 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 07/22/25 09:00:52.048
  STEP: patching /status @ 07/22/25 09:00:52.05
  STEP: updating /status @ 07/22/25 09:00:52.054
  STEP: deleting @ 07/22/25 09:00:52.06
  STEP: deleting a collection @ 07/22/25 09:00:52.067
  I0722 09:00:52.079631 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5830" for this suite. @ 07/22/25 09:00:52.081
â€¢ [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/22/25 09:00:52.086
  I0722 09:00:52.086889 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename subpath @ 07/22/25 09:00:52.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:00:52.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:00:52.098
  STEP: Setting up data @ 07/22/25 09:00:52.1
  STEP: Creating pod pod-subpath-test-secret-6wzr @ 07/22/25 09:00:52.108
  STEP: Creating a pod to test atomic-volume-subpath @ 07/22/25 09:00:52.108
  STEP: Saw pod success @ 07/22/25 09:01:14.223
  I0722 09:01:14.225957 22 output.go:207] Trying to get logs from node cncf1 pod pod-subpath-test-secret-6wzr container test-container-subpath-secret-6wzr: <nil>
  STEP: delete the pod @ 07/22/25 09:01:14.229
  STEP: Deleting pod pod-subpath-test-secret-6wzr @ 07/22/25 09:01:14.24
  I0722 09:01:14.240801 22 delete.go:62] Deleting pod "pod-subpath-test-secret-6wzr" in namespace "subpath-5046"
  I0722 09:01:14.242683 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5046" for this suite. @ 07/22/25 09:01:14.244
â€¢ [22.163 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 07/22/25 09:01:14.249
  I0722 09:01:14.249722 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 09:01:14.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:01:14.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:01:14.262
  STEP: Creating pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138 @ 07/22/25 09:01:14.265
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 09:01:16.29
  I0722 09:01:16.292273 22 container_probe.go:1748] Initial restart count of pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 is 0
  I0722 09:01:16.294021 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:18.302986 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:20.306645 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:22.325114 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:24.337203 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:26.356579 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:28.360364 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:30.370061 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:32.381416 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:34.394416 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:36.418405 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:38.421395 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:40.436649 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:42.442510 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:44.453744 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:46.457736 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:48.471391 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:50.496748 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:52.505699 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:54.518160 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:56.522397 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:01:58.525519 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:00.531380 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:02.549947 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:04.556387 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:06.565820 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:08.582784 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:10.586551 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:12.594817 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:14.606154 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:16.610215 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:18.632145 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:20.648295 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:22.651719 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:24.654688 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:26.657916 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:28.667207 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:30.671251 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:32.676125 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:34.687166 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:36.692714 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:38.728485 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:40.742526 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:42.759394 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:44.771829 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:46.780106 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:48.783427 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:50.793929 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:52.804813 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:54.809257 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:56.829832 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:02:58.836336 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:00.841421 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:02.856863 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:04.861635 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:06.879354 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:08.894697 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:10.913330 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:12.927184 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:14.938003 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:16.994365 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:19.003637 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:21.007591 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:23.014264 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:25.026222 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:27.042000 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:29.049177 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:31.060404 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:33.065267 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:35.069206 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:37.072692 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:39.076578 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:41.082058 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:43.091081 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:45.099510 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:47.115114 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:49.124559 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:51.129190 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:53.144924 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:55.148989 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:57.153411 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:03:59.166143 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:01.171069 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:03.185906 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:05.196208 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:07.201335 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:09.207881 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:11.213904 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:13.223294 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:15.267725 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:17.275570 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:19.283859 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:21.287962 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:23.292533 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:25.323054 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:27.326857 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:29.335115 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:31.355745 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:33.364534 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:35.367882 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:37.371179 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:39.388407 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:41.397380 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:43.405963 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:45.418913 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:47.434100 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:49.441774 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:51.444810 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:53.455611 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:55.469937 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:57.473160 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:04:59.486172 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:05:01.494399 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:05:03.507188 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:05:05.529698 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:05:07.540282 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:05:09.551254 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:05:11.558795 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:05:13.563834 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  I0722 09:05:15.570013 22 container_probe.go:1758] Get pod liveness-39046b18-923c-47e4-9a57-9fd60e96ae29 in namespace container-probe-5138
  STEP: deleting the pod @ 07/22/25 09:05:17.583
  I0722 09:05:17.606579 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5138" for this suite. @ 07/22/25 09:05:17.611
â€¢ [243.383 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/22/25 09:05:17.636
  I0722 09:05:17.636593 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 09:05:17.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:05:17.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:05:17.667
  I0722 09:05:17.671088 22 replica_set.go:192] Creating ReplicaSet my-hostname-basic-2990bbb8-8286-4827-b753-ff36bd933445
  I0722 09:05:17.682294 22 resource.go:81] Pod name my-hostname-basic-2990bbb8-8286-4827-b753-ff36bd933445: Found 0 pods out of 1
  I0722 09:05:22.696618 22 resource.go:81] Pod name my-hostname-basic-2990bbb8-8286-4827-b753-ff36bd933445: Found 1 pods out of 1
  I0722 09:05:22.696666 22 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-2990bbb8-8286-4827-b753-ff36bd933445" is running
  I0722 09:05:22.698868 22 replica_set.go:221] Pod "my-hostname-basic-2990bbb8-8286-4827-b753-ff36bd933445-5wtfp" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 09:05:18 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 09:05:17 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 09:05:18 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 09:05:18 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 09:05:17 +0000 UTC Reason: Message:}])
  I0722 09:05:22.698921 22 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/22/25 09:05:22.698
  I0722 09:05:22.710830 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5719" for this suite. @ 07/22/25 09:05:22.716
â€¢ [5.089 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 07/22/25 09:05:22.725
  I0722 09:05:22.725563 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename dns @ 07/22/25 09:05:22.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:05:22.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:05:22.741
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/22/25 09:05:22.743
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/22/25 09:05:22.743
  STEP: creating a pod to probe DNS @ 07/22/25 09:05:22.743
  STEP: submitting the pod to kubernetes @ 07/22/25 09:05:22.743
  STEP: retrieving the pod @ 07/22/25 09:05:24.764
  STEP: looking for the results for each expected name from probers @ 07/22/25 09:05:24.767
  I0722 09:05:24.780685 22 dns_common.go:546] DNS probes using dns-3275/dns-test-8dc2280e-ce18-4a41-b01a-07bcdef99803 succeeded

  STEP: deleting the pod @ 07/22/25 09:05:24.78
  I0722 09:05:24.792222 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3275" for this suite. @ 07/22/25 09:05:24.795
â€¢ [2.075 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/22/25 09:05:24.8
  I0722 09:05:24.800338 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/22/25 09:05:24.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:05:24.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:05:24.813
  I0722 09:05:24.815991 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 09:05:25.347965 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3774" for this suite. @ 07/22/25 09:05:25.351
â€¢ [0.556 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 07/22/25 09:05:25.356
  I0722 09:05:25.356149 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 09:05:25.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:05:25.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:05:25.373
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/22/25 09:05:25.375
  STEP: Saw pod success @ 07/22/25 09:05:29.392
  I0722 09:05:29.395763 22 output.go:207] Trying to get logs from node cncf1 pod pod-033dd9f5-4da1-44f7-954e-632febddc94e container test-container: <nil>
  STEP: delete the pod @ 07/22/25 09:05:29.406
  I0722 09:05:29.420437 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3697" for this suite. @ 07/22/25 09:05:29.423
â€¢ [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 07/22/25 09:05:29.43
  I0722 09:05:29.430704 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:05:29.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:05:29.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:05:29.446
  STEP: creating service endpoint-test2 in namespace services-82 @ 07/22/25 09:05:29.449
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-82 to expose endpoints map[] @ 07/22/25 09:05:29.46
  I0722 09:05:29.464493      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:05:29.464583 22 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0722 09:05:30.469380      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:05:30.472212 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-82 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-82 @ 07/22/25 09:05:30.472
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-82 to expose endpoints map[pod1:[80]] @ 07/22/25 09:05:32.487
  I0722 09:05:32.490829      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:05:32.493403 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-82 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/22/25 09:05:32.493
  I0722 09:05:32.493446 22 resource.go:361] Creating new exec pod
  I0722 09:05:34.506257 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-82 exec execpodpk5kg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0722 09:05:34.587881 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.53) 80 port [tcp/http] succeeded!\n"
  I0722 09:05:34.587920 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:05:34.588096 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-82 exec execpodpk5kg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80'
  I0722 09:05:34.658720 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.53 80\nConnection to 10.152.183.53 80 port [tcp/http] succeeded!\n"
  I0722 09:05:34.658787 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-82 @ 07/22/25 09:05:34.658
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-82 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/22/25 09:05:36.672
  I0722 09:05:36.678290      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:05:36.680929 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-82 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/22/25 09:05:36.68
  I0722 09:05:36.682374 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-82 exec execpodpk5kg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0722 09:05:36.758837 22 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.152.183.53) 80 port [tcp/http] succeeded!\n"
  I0722 09:05:36.758887 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:05:36.758977 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-82 exec execpodpk5kg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80'
  I0722 09:05:36.825551 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.53 80\nConnection to 10.152.183.53 80 port [tcp/http] succeeded!\n"
  I0722 09:05:36.825591 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-82 @ 07/22/25 09:05:36.825
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-82 to expose endpoints map[pod2:[80]] @ 07/22/25 09:05:36.844
  I0722 09:05:36.851413      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:05:36.854306 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-82 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/22/25 09:05:36.854
  I0722 09:05:36.855959 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-82 exec execpodpk5kg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0722 09:05:36.934929 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.53) 80 port [tcp/http] succeeded!\n"
  I0722 09:05:36.934974 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:05:36.935035 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-82 exec execpodpk5kg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80'
  I0722 09:05:37.007716 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.53 80\nConnection to 10.152.183.53 80 port [tcp/http] succeeded!\n"
  I0722 09:05:37.007762 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-82 @ 07/22/25 09:05:37.007
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-82 to expose endpoints map[] @ 07/22/25 09:05:37.024
  I0722 09:05:37.028119      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:05:37.031677 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-82 exposes endpoints map[]
  I0722 09:05:37.057991 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-82" for this suite. @ 07/22/25 09:05:37.061
â€¢ [7.637 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/22/25 09:05:37.068
  I0722 09:05:37.068261 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:05:37.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:05:37.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:05:37.084
  STEP: Creating secret with name projected-secret-test-48e7e51b-f95c-4108-8a15-ad469c1490d3 @ 07/22/25 09:05:37.087
  STEP: Creating a pod to test consume secrets @ 07/22/25 09:05:37.093
  STEP: Saw pod success @ 07/22/25 09:05:41.119
  I0722 09:05:41.122422 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-846e52dd-1669-4d47-b6a9-7e6fb3057dec container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 09:05:41.126
  I0722 09:05:41.139975 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8779" for this suite. @ 07/22/25 09:05:41.141
â€¢ [4.080 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 07/22/25 09:05:41.148
  I0722 09:05:41.148510 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename gc @ 07/22/25 09:05:41.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:05:41.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:05:41.16
  STEP: create the rc @ 07/22/25 09:05:41.163
  I0722 09:05:41.169225      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 07/22/25 09:05:46.175
  STEP: wait for all pods to be garbage collected @ 07/22/25 09:05:46.18
  STEP: Gathering metrics @ 07/22/25 09:05:51.189
  W0722 09:05:51.195788      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 09:05:51.195887 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 09:05:51.196078 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9131" for this suite. @ 07/22/25 09:05:51.198
â€¢ [10.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 07/22/25 09:05:51.205
  I0722 09:05:51.205500 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 09:05:51.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:05:51.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:05:51.221
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/22/25 09:05:51.223
  STEP: When a replication controller with a matching selector is created @ 07/22/25 09:05:53.257
  STEP: Then the orphan pod is adopted @ 07/22/25 09:05:53.261
  I0722 09:05:54.270081 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6144" for this suite. @ 07/22/25 09:05:54.272
â€¢ [3.075 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 07/22/25 09:05:54.28
  I0722 09:05:54.280968 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-webhook @ 07/22/25 09:05:54.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:05:54.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:05:54.294
  STEP: Setting up server cert @ 07/22/25 09:05:54.296
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/22/25 09:05:54.535
  STEP: Deploying the custom resource conversion webhook pod @ 07/22/25 09:05:54.539
  STEP: Wait for the deployment to be ready @ 07/22/25 09:05:54.548
  I0722 09:05:54.552654 22 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/22/25 09:05:56.56
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:05:56.572
  I0722 09:05:57.584748 22 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0722 09:05:57.587537 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Creating a v1 custom resource @ 07/22/25 09:06:00.124
  STEP: v2 custom resource should be converted @ 07/22/25 09:06:00.129
  I0722 09:06:00.682525 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4372" for this suite. @ 07/22/25 09:06:00.686
â€¢ [6.420 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/22/25 09:06:00.701
  I0722 09:06:00.701890 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename security-context @ 07/22/25 09:06:00.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:06:00.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:06:00.731
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/22/25 09:06:00.733
  STEP: Saw pod success @ 07/22/25 09:06:02.762
  I0722 09:06:02.765864 22 output.go:207] Trying to get logs from node cncf1 pod security-context-ad89a43b-2cd4-41f7-9477-b061759ac67c container test-container: <nil>
  STEP: delete the pod @ 07/22/25 09:06:02.77
  I0722 09:06:02.790197 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2833" for this suite. @ 07/22/25 09:06:02.793
â€¢ [2.098 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/22/25 09:06:02.8
  I0722 09:06:02.800105 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename security-context @ 07/22/25 09:06:02.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:06:02.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:06:02.819
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/22/25 09:06:02.822
  STEP: Saw pod success @ 07/22/25 09:06:04.848
  I0722 09:06:04.851160 22 output.go:207] Trying to get logs from node cncf1 pod security-context-6d0230dd-c86e-479b-8104-87eee509b047 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 09:06:04.855
  I0722 09:06:04.867584 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-395" for this suite. @ 07/22/25 09:06:04.87
â€¢ [2.077 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/22/25 09:06:04.876
  I0722 09:06:04.876935 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename init-container @ 07/22/25 09:06:04.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:06:04.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:06:04.893
  STEP: creating the pod @ 07/22/25 09:06:04.896
  I0722 09:06:04.896339 22 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0722 09:06:08.808387 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5592" for this suite. @ 07/22/25 09:06:08.812
â€¢ [3.941 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 07/22/25 09:06:08.817
  I0722 09:06:08.817938 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 09:06:08.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:06:08.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:06:08.831
  STEP: creating a replication controller @ 07/22/25 09:06:08.834
  I0722 09:06:08.834634 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7128 create -f -'
  I0722 09:06:08.917102 22 builder.go:146] stderr: ""
  I0722 09:06:08.917155 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/22/25 09:06:08.917
  I0722 09:06:08.917333 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7128 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 09:06:08.965536 22 builder.go:146] stderr: ""
  I0722 09:06:08.965577 22 builder.go:147] stdout: "update-demo-nautilus-k9pbg update-demo-nautilus-l4dm9 "
  I0722 09:06:08.965660 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7128 get pods update-demo-nautilus-k9pbg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:06:09.004346 22 builder.go:146] stderr: ""
  I0722 09:06:09.004591 22 builder.go:147] stdout: ""
  I0722 09:06:09.004604 22 kubectl.go:2505] update-demo-nautilus-k9pbg is created but not running
  I0722 09:06:14.007318 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7128 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 09:06:14.046398 22 builder.go:146] stderr: ""
  I0722 09:06:14.046441 22 builder.go:147] stdout: "update-demo-nautilus-k9pbg update-demo-nautilus-l4dm9 "
  I0722 09:06:14.046496 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7128 get pods update-demo-nautilus-k9pbg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:06:14.083350 22 builder.go:146] stderr: ""
  I0722 09:06:14.083386 22 builder.go:147] stdout: "true"
  I0722 09:06:14.083463 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7128 get pods update-demo-nautilus-k9pbg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 09:06:14.119755 22 builder.go:146] stderr: ""
  I0722 09:06:14.119808 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 09:06:14.119818 22 kubectl.go:2396] validating pod update-demo-nautilus-k9pbg
  I0722 09:06:14.124039 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0722 09:06:14.124123 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 09:06:14.124133 22 kubectl.go:2523] update-demo-nautilus-k9pbg is verified up and running
  I0722 09:06:14.124159 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7128 get pods update-demo-nautilus-l4dm9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 09:06:14.162632 22 builder.go:146] stderr: ""
  I0722 09:06:14.162665 22 builder.go:147] stdout: "true"
  I0722 09:06:14.162698 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7128 get pods update-demo-nautilus-l4dm9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 09:06:14.200191 22 builder.go:146] stderr: ""
  I0722 09:06:14.200256 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 09:06:14.200268 22 kubectl.go:2396] validating pod update-demo-nautilus-l4dm9
  I0722 09:06:14.204261 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0722 09:06:14.204313 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 09:06:14.204319 22 kubectl.go:2523] update-demo-nautilus-l4dm9 is verified up and running
  STEP: using delete to clean up resources @ 07/22/25 09:06:14.204
  I0722 09:06:14.204423 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7128 delete --grace-period=0 --force -f -'
  I0722 09:06:14.245965 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 09:06:14.246037 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0722 09:06:14.246075 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7128 get rc,svc -l name=update-demo --no-headers'
  I0722 09:06:14.299060 22 builder.go:146] stderr: "No resources found in kubectl-7128 namespace.\n"
  I0722 09:06:14.299102 22 builder.go:147] stdout: ""
  I0722 09:06:14.299154 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7128 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0722 09:06:14.359490 22 builder.go:146] stderr: ""
  I0722 09:06:14.359570 22 builder.go:147] stdout: ""
  I0722 09:06:14.359784 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7128" for this suite. @ 07/22/25 09:06:14.362
â€¢ [5.554 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 07/22/25 09:06:14.371
  I0722 09:06:14.371922 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:06:14.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:06:14.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:06:14.389
  STEP: Setting up server cert @ 07/22/25 09:06:14.411
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:06:14.686
  STEP: Deploying the webhook pod @ 07/22/25 09:06:14.692
  STEP: Wait for the deployment to be ready @ 07/22/25 09:06:14.703
  I0722 09:06:14.708606 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 09:06:16.729
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:06:16.744
  I0722 09:06:17.748340 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/22/25 09:06:17.752
  STEP: create a pod that should be denied by the webhook @ 07/22/25 09:06:17.765
  STEP: create a pod that causes the webhook to hang @ 07/22/25 09:06:17.774
  STEP: create a configmap that should be denied by the webhook @ 07/22/25 09:06:27.782
  STEP: create a configmap that should be admitted by the webhook @ 07/22/25 09:06:27.798
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/22/25 09:06:27.806
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/22/25 09:06:27.814
  STEP: create a namespace that bypass the webhook @ 07/22/25 09:06:27.818
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/22/25 09:06:27.83
  I0722 09:06:27.892669 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8595" for this suite. @ 07/22/25 09:06:27.898
  STEP: Destroying namespace "webhook-markers-6926" for this suite. @ 07/22/25 09:06:27.907
  STEP: Destroying namespace "exempted-namespace-6190" for this suite. @ 07/22/25 09:06:27.92
â€¢ [13.556 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/22/25 09:06:27.928
  I0722 09:06:27.928834 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename subpath @ 07/22/25 09:06:27.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:06:27.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:06:27.949
  STEP: Setting up data @ 07/22/25 09:06:27.957
  STEP: Creating pod pod-subpath-test-configmap-flgx @ 07/22/25 09:06:27.975
  STEP: Creating a pod to test atomic-volume-subpath @ 07/22/25 09:06:27.976
  STEP: Saw pod success @ 07/22/25 09:06:50.101
  I0722 09:06:50.103798 22 output.go:207] Trying to get logs from node cncf1 pod pod-subpath-test-configmap-flgx container test-container-subpath-configmap-flgx: <nil>
  STEP: delete the pod @ 07/22/25 09:06:50.107
  STEP: Deleting pod pod-subpath-test-configmap-flgx @ 07/22/25 09:06:50.121
  I0722 09:06:50.122053 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-flgx" in namespace "subpath-4859"
  I0722 09:06:50.124499 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4859" for this suite. @ 07/22/25 09:06:50.127
â€¢ [22.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/22/25 09:06:50.132
  I0722 09:06:50.132832 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/22/25 09:06:50.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:06:50.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:06:50.145
  I0722 09:06:50.147617 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 09:06:56.495400 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6213" for this suite. @ 07/22/25 09:06:56.498
â€¢ [6.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 07/22/25 09:06:56.505
  I0722 09:06:56.505404 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 09:06:56.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:06:56.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:06:56.517
  STEP: Creating resourceQuota "e2e-rq-status-nvrq2" @ 07/22/25 09:06:56.522
  I0722 09:06:56.527504 22 resource_quota.go:1106] Resource quota "e2e-rq-status-nvrq2" reports spec: hard cpu limit of 500m
  I0722 09:06:56.527537 22 resource_quota.go:1108] Resource quota "e2e-rq-status-nvrq2" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-nvrq2" /status @ 07/22/25 09:06:56.527
  STEP: Confirm /status for "e2e-rq-status-nvrq2" resourceQuota via watch @ 07/22/25 09:06:56.549
  I0722 09:06:56.550737 22 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-nvrq2" in namespace "resourcequota-1243" with hard status: v1.ResourceList(nil)
  I0722 09:06:56.550859 22 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-nvrq2" in namespace "resourcequota-1243" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0722 09:06:56.550878 22 resource_quota.go:1145] ResourceQuota "e2e-rq-status-nvrq2" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/22/25 09:06:56.553
  I0722 09:06:56.559464 22 resource_quota.go:1156] Resource quota "e2e-rq-status-nvrq2" reports spec: hard cpu limit of 1
  I0722 09:06:56.559495 22 resource_quota.go:1157] Resource quota "e2e-rq-status-nvrq2" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-nvrq2" /status @ 07/22/25 09:06:56.559
  STEP: Confirm /status for "e2e-rq-status-nvrq2" resourceQuota via watch @ 07/22/25 09:06:56.564
  I0722 09:06:56.565731 22 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-nvrq2" in namespace "resourcequota-1243" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0722 09:06:56.565758 22 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-nvrq2" in namespace "resourcequota-1243" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0722 09:06:56.565765 22 resource_quota.go:1189] ResourceQuota "e2e-rq-status-nvrq2" /status was patched
  STEP: Get "e2e-rq-status-nvrq2" /status @ 07/22/25 09:06:56.565
  I0722 09:06:56.568579 22 resource_quota.go:1200] Resourcequota "e2e-rq-status-nvrq2" reports status: hard cpu of 1
  I0722 09:06:56.568639 22 resource_quota.go:1202] Resourcequota "e2e-rq-status-nvrq2" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-nvrq2" /status before checking Spec is unchanged @ 07/22/25 09:06:56.57
  I0722 09:06:56.575010 22 resource_quota.go:1222] Resourcequota "e2e-rq-status-nvrq2" reports status: hard cpu of 2
  I0722 09:06:56.575038 22 resource_quota.go:1224] Resourcequota "e2e-rq-status-nvrq2" reports status: hard memory of 2Gi
  I0722 09:06:56.576111 22 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-nvrq2" in namespace "resourcequota-1243" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0722 09:06:56.578242 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005b65ae8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005b65b48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005b65b78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:01.588295 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005b65c68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005b65c98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005b65cc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:06.580988 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041f3b48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041f3ba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041f3bd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:11.579586 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041f3c98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041f3cc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041f3cf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:16.579139 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041f3de8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041f3e18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041f3e48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:21.582139 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005b65de8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005b65e18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005b65e48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:26.580275 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041f3f38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041f3f68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004740030), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:31.579062 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005b65f38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005b65f68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a018), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:36.583587 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004740120), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004740150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004740180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:41.589499 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a1b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:46.581507 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a288), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a2b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:51.590035 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a3f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a450), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:07:56.621771 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40047402a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40047402d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004740300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:01.592229 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40047403c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40047403f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004740420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:06.586790 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40047404e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004740510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004740540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:11.594245 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a5a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a5d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:16.587561 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a750), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a7b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:21.591109 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a930), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:26.580746 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004740630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004740660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40047406a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:31.580537 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467aa80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467aab0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467aaf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:36.579998 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:41.584622 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a0a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a0f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:46.587282 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40008082b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40008082e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:51.589250 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a240), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a270), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:08:56.580636 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:01.583478 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a3c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:06.578915 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40008086c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808738), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:11.582239 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400467a570), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:16.584845 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:21.582857 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808a08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808a38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808a80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:26.593437 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40066b8060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40066b8090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40066b80c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:31.590291 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808b88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808bb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808be8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:36.590849 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40066b81c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40066b81f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40066b8228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:41.581424 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808d08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808d50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808d98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:46.594728 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40066b8318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40066b8348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40066b8378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:51.606516 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-nvrq2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nvrq2", GenerateName:"", Namespace:"resourcequota-1243", SelfLink:"", UID:"78bab4ee-7042-45ef-8a77-7579f2935fb7", ResourceVersion:"16052", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nvrq2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808ea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808ed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 6, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4000808f18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 09:09:56.582661 22 resource_quota.go:1264] ResourceQuota "e2e-rq-status-nvrq2" Spec was unchanged and /status reset
  I0722 09:09:56.583701 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1243" for this suite. @ 07/22/25 09:09:56.588
â€¢ [180.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 07/22/25 09:09:56.596
  I0722 09:09:56.596800 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename gc @ 07/22/25 09:09:56.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:09:56.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:09:56.613
  I0722 09:09:56.674412 22 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"6438ba25-1954-475e-9d91-8f118c6cca99", Controller:(*bool)(0x4002b7d2be), BlockOwnerDeletion:(*bool)(0x4002b7d2bf)}}
  I0722 09:09:56.684823 22 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"59a6e2c6-6b5c-4b88-9649-9b9721f3b3c8", Controller:(*bool)(0x400338605e), BlockOwnerDeletion:(*bool)(0x400338605f)}}
  I0722 09:09:56.694245 22 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"6ca21a57-737b-406e-bbff-a848d04f9cc1", Controller:(*bool)(0x400338629e), BlockOwnerDeletion:(*bool)(0x400338629f)}}
  I0722 09:10:01.706101 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5636" for this suite. @ 07/22/25 09:10:01.709
â€¢ [5.123 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 07/22/25 09:10:01.719
  I0722 09:10:01.719598 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:10:01.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:01.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:01.733
  STEP: Setting up server cert @ 07/22/25 09:10:01.753
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:10:02.172
  STEP: Deploying the webhook pod @ 07/22/25 09:10:02.177
  STEP: Wait for the deployment to be ready @ 07/22/25 09:10:02.187
  I0722 09:10:02.192416 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/22/25 09:10:04.208
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:10:04.222
  I0722 09:10:05.226502 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/22/25 09:10:05.229
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/22/25 09:10:05.241
  I0722 09:10:05.241452 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 09:10:05.302477 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1098" for this suite. @ 07/22/25 09:10:05.306
  STEP: Destroying namespace "webhook-markers-5663" for this suite. @ 07/22/25 09:10:05.312
â€¢ [3.599 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/22/25 09:10:05.318
  I0722 09:10:05.318982 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 09:10:05.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:05.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:05.333
  I0722 09:10:05.365236 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1103" for this suite. @ 07/22/25 09:10:05.367
â€¢ [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/22/25 09:10:05.372
  I0722 09:10:05.372412 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 09:10:05.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:05.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:05.393
  STEP: Create a Replicaset @ 07/22/25 09:10:05.397
  STEP: Verify that the required pods have come up. @ 07/22/25 09:10:05.402
  I0722 09:10:05.404342 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0722 09:10:10.428015 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 09:10:10.428
  STEP: Getting /status @ 07/22/25 09:10:10.428
  I0722 09:10:10.441323 22 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/22/25 09:10:10.441
  I0722 09:10:10.450298 22 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/22/25 09:10:10.45
  I0722 09:10:10.452222 22 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0722 09:10:10.452514 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0722 09:10:10.452599 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0722 09:10:10.452824 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0722 09:10:10.452886 22 replica_set.go:688] Found replicaset test-rs in namespace replicaset-1446 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0722 09:10:10.452893 22 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/22/25 09:10:10.452
  I0722 09:10:10.452938 22 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0722 09:10:10.459099 22 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/22/25 09:10:10.459
  I0722 09:10:10.461145 22 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0722 09:10:10.461225 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0722 09:10:10.461281 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0722 09:10:10.461440 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0722 09:10:10.461477 22 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-1446 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 09:10:10.461741 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0722 09:10:10.461788 22 replica_set.go:724] Found replicaset test-rs in namespace replicaset-1446 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0722 09:10:10.461799 22 replica_set.go:735] Replicaset test-rs has a patched status
  I0722 09:10:10.461876 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1446" for this suite. @ 07/22/25 09:10:10.467
â€¢ [5.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 07/22/25 09:10:10.474
  I0722 09:10:10.474502 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 09:10:10.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:10.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:10.495
  STEP: creating a ServiceAccount @ 07/22/25 09:10:10.5
  STEP: watching for the ServiceAccount to be added @ 07/22/25 09:10:10.509
  STEP: patching the ServiceAccount @ 07/22/25 09:10:10.511
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/22/25 09:10:10.518
  STEP: deleting the ServiceAccount @ 07/22/25 09:10:10.523
  I0722 09:10:10.540465 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2516" for this suite. @ 07/22/25 09:10:10.543
â€¢ [0.078 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 07/22/25 09:10:10.552
  I0722 09:10:10.552815 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:10:10.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:10.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:10.569
  STEP: Setting up server cert @ 07/22/25 09:10:10.591
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:10:10.821
  STEP: Deploying the webhook pod @ 07/22/25 09:10:10.827
  STEP: Wait for the deployment to be ready @ 07/22/25 09:10:10.839
  I0722 09:10:10.847136 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 09:10:12.863
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:10:12.876
  I0722 09:10:13.877175 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/22/25 09:10:13.882
  STEP: create the configmap with a random name @ 07/22/25 09:10:13.908
  STEP: verify the configmap is mutated @ 07/22/25 09:10:13.939
  STEP: create the configmap with 'skip-me' name @ 07/22/25 09:10:13.939
  I0722 09:10:13.994541 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5725" for this suite. @ 07/22/25 09:10:13.998
  STEP: Destroying namespace "webhook-markers-3619" for this suite. @ 07/22/25 09:10:14.008
â€¢ [3.465 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 07/22/25 09:10:14.018
  I0722 09:10:14.018741 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 09:10:14.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:14.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:14.036
  STEP: validating api versions @ 07/22/25 09:10:14.038
  I0722 09:10:14.038973 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-6835 api-versions'
  I0722 09:10:14.312989 22 builder.go:146] stderr: ""
  I0722 09:10:14.313073 22 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy.networking.k8s.io/v1alpha1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0722 09:10:14.313255 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6835" for this suite. @ 07/22/25 09:10:14.32
â€¢ [0.314 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 07/22/25 09:10:14.335
  I0722 09:10:14.335546 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 09:10:14.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:14.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:14.376
  STEP: Creating simple DaemonSet "daemon-set" @ 07/22/25 09:10:14.403
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 09:10:14.43
  I0722 09:10:14.438592 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:10:14.438695 22 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  I0722 09:10:15.443760 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:10:15.443850 22 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  I0722 09:10:16.441097 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 09:10:16.441309 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 07/22/25 09:10:16.443
  I0722 09:10:16.446045 22 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/22/25 09:10:16.446
  I0722 09:10:16.455633 22 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/22/25 09:10:16.455
  I0722 09:10:16.458423 22 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0722 09:10:16.458556 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0722 09:10:16.458666 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0722 09:10:16.458849 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0722 09:10:16.458903 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0722 09:10:16.459081 22 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-174 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0722 09:10:16.459123 22 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/22/25 09:10:16.459
  STEP: watching for the daemon set status to be patched @ 07/22/25 09:10:16.465
  I0722 09:10:16.467767 22 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0722 09:10:16.467923 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0722 09:10:16.468006 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0722 09:10:16.468145 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0722 09:10:16.468531 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0722 09:10:16.468568 22 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-174 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0722 09:10:16.468634 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0722 09:10:16.468655 22 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-174 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0722 09:10:16.468676 22 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 09:10:16.472
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-174, will wait for the garbage collector to delete the pods @ 07/22/25 09:10:16.472
  I0722 09:10:16.535123 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.824711ms
  I0722 09:10:16.635871 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.745613ms
  I0722 09:10:18.946195 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:10:18.946262 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 09:10:18.949045 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16637"},"items":null}

  I0722 09:10:18.951451 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16637"},"items":null}

  I0722 09:10:18.987155 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-174" for this suite. @ 07/22/25 09:10:18.993
â€¢ [4.668 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 07/22/25 09:10:19.003
  I0722 09:10:19.003727 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename fake-node @ 07/22/25 09:10:19.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:19.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:19.057
  STEP: Create "e2e-fake-node-mpmwf" @ 07/22/25 09:10:19.066
  STEP: Getting "e2e-fake-node-mpmwf" @ 07/22/25 09:10:19.075
  STEP: Patching "e2e-fake-node-mpmwf" @ 07/22/25 09:10:19.082
  STEP: Listing nodes with LabelSelector "e2e-fake-node-mpmwf=patched" @ 07/22/25 09:10:19.183
  STEP: Updating "e2e-fake-node-mpmwf" @ 07/22/25 09:10:19.325
  STEP: Delete "e2e-fake-node-mpmwf" @ 07/22/25 09:10:19.38
  STEP: Confirm deletion of "e2e-fake-node-mpmwf" @ 07/22/25 09:10:19.387
  I0722 09:10:19.393792 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-9179" for this suite. @ 07/22/25 09:10:19.401
â€¢ [0.406 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 07/22/25 09:10:19.409
  I0722 09:10:19.409366 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:10:19.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:19.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:19.433
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:10:19.436
  STEP: Saw pod success @ 07/22/25 09:10:23.464
  I0722 09:10:23.468663 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-86ba1a5c-36ff-4d18-8458-c609d76946f6 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:10:23.484
  I0722 09:10:23.542547 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2118" for this suite. @ 07/22/25 09:10:23.549
â€¢ [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/22/25 09:10:23.56
  I0722 09:10:23.560053 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename certificates @ 07/22/25 09:10:23.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:23.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:23.599
  STEP: getting /apis @ 07/22/25 09:10:24.771
  STEP: getting /apis/certificates.k8s.io @ 07/22/25 09:10:24.792
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/22/25 09:10:24.797
  STEP: creating @ 07/22/25 09:10:24.799
  STEP: getting @ 07/22/25 09:10:24.862
  STEP: listing @ 07/22/25 09:10:24.868
  STEP: watching @ 07/22/25 09:10:24.874
  I0722 09:10:24.874566 22 certificates.go:316] starting watch
  STEP: patching @ 07/22/25 09:10:24.876
  STEP: updating @ 07/22/25 09:10:24.886
  I0722 09:10:24.931870 22 certificates.go:332] waiting for watch events with expected annotations
  I0722 09:10:24.931917 22 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 07/22/25 09:10:24.932
  STEP: patching /approval @ 07/22/25 09:10:24.936
  STEP: updating /approval @ 07/22/25 09:10:24.951
  STEP: getting /status @ 07/22/25 09:10:24.964
  STEP: patching /status @ 07/22/25 09:10:24.969
  STEP: updating /status @ 07/22/25 09:10:25.024
  STEP: deleting @ 07/22/25 09:10:25.032
  STEP: deleting a collection @ 07/22/25 09:10:25.059
  I0722 09:10:25.083026 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1945" for this suite. @ 07/22/25 09:10:25.089
â€¢ [1.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 07/22/25 09:10:25.109
  I0722 09:10:25.109537 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:10:25.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:25.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:25.179
  STEP: Setting up server cert @ 07/22/25 09:10:25.275
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:10:25.772
  STEP: Deploying the webhook pod @ 07/22/25 09:10:25.788
  STEP: Wait for the deployment to be ready @ 07/22/25 09:10:25.826
  I0722 09:10:25.843676 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 09:10:27.872
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:10:27.889
  I0722 09:10:28.890361 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/22/25 09:10:28.899
  STEP: verifying the mutating webhook match conditions @ 07/22/25 09:10:28.909
  STEP: updating the mutating webhook match conditions @ 07/22/25 09:10:28.931
  STEP: verifying the mutating webhook match conditions @ 07/22/25 09:10:28.953
  I0722 09:10:29.184006 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9599" for this suite. @ 07/22/25 09:10:29.193
  STEP: Destroying namespace "webhook-markers-8865" for this suite. @ 07/22/25 09:10:29.232
â€¢ [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/22/25 09:10:29.253
  I0722 09:10:29.254175 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/22/25 09:10:29.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:29.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:29.28
  STEP: Creating two CSIDrivers @ 07/22/25 09:10:29.285
  STEP: Getting "inline-driver-173b325f-cf6b-4d3a-8f83-9efefd12ef40" & "inline-driver-c38f0faa-b888-44b0-8af6-82f0edfed3b7" @ 07/22/25 09:10:29.309
  STEP: Patching the CSIDriver "inline-driver-c38f0faa-b888-44b0-8af6-82f0edfed3b7" @ 07/22/25 09:10:29.316
  STEP: Updating the CSIDriver "inline-driver-c38f0faa-b888-44b0-8af6-82f0edfed3b7" @ 07/22/25 09:10:29.325
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4146" @ 07/22/25 09:10:29.335
  STEP: Deleting CSIDriver "inline-driver-173b325f-cf6b-4d3a-8f83-9efefd12ef40" @ 07/22/25 09:10:29.338
  STEP: Confirm deletion of CSIDriver "inline-driver-173b325f-cf6b-4d3a-8f83-9efefd12ef40" @ 07/22/25 09:10:29.345
  STEP: Deleting CSIDriver "inline-driver-c38f0faa-b888-44b0-8af6-82f0edfed3b7" via DeleteCollection @ 07/22/25 09:10:29.348
  STEP: Confirm deletion of CSIDriver "inline-driver-c38f0faa-b888-44b0-8af6-82f0edfed3b7" @ 07/22/25 09:10:29.422
  I0722 09:10:29.425239 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4146" for this suite. @ 07/22/25 09:10:29.428
â€¢ [0.182 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/22/25 09:10:29.435
  I0722 09:10:29.435868 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename chunking @ 07/22/25 09:10:29.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:10:29.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:10:29.474
  STEP: creating a large number of resources @ 07/22/25 09:10:29.48
  I0722 09:10:30.765846      22 request.go:752] "Waited before sending request" delay="1.014927989s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.152.183.1:443/api/v1/namespaces/chunking-9667/podtemplates"
  I0722 09:10:40.898775      22 request.go:752] "Waited before sending request" delay="1.004408165s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.152.183.1:443/api/v1/namespaces/chunking-9667/podtemplates"
  STEP: retrieving the first page @ 07/22/25 09:10:47.172
  I0722 09:10:47.193245 22 chunking.go:163] Retrieved 40/40 results with rv 17267 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 07/22/25 09:10:47.193
  I0722 09:11:07.202971 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:11:27.205323 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:11:47.244986 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:12:07.203505 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:12:27.204819 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:12:47.204501 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:13:07.199832 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:13:27.202674 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:13:47.205777 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:14:07.205799 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:14:27.205584 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:14:47.220977 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:15:07.207842 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:15:27.213252 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:15:47.219198 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:16:07.208176 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:16:27.222653 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0722 09:16:47.212102 22 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0722 09:16:47.212353 22 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/22/25 09:16:47.212
  STEP: retrieving all remaining pages @ 07/22/25 09:16:47.22
  I0722 09:16:47.225841 22 chunking.go:221] Retrieved 40/40 results with rv 17771 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc3NzEsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0722 09:16:47.231420 22 chunking.go:221] Retrieved 40/40 results with rv 17771 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc3NzEsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0722 09:16:47.236514 22 chunking.go:221] Retrieved 40/40 results with rv 17771 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc3NzEsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0722 09:16:47.254219 22 chunking.go:221] Retrieved 40/40 results with rv 17771 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc3NzEsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0722 09:16:47.266253 22 chunking.go:221] Retrieved 40/40 results with rv 17771 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc3NzEsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0722 09:16:47.271409 22 chunking.go:221] Retrieved 40/40 results with rv 17771 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc3NzEsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0722 09:16:47.276472 22 chunking.go:221] Retrieved 40/40 results with rv 17771 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc3NzEsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0722 09:16:47.280538 22 chunking.go:221] Retrieved 40/40 results with rv 17771 and continue 
  I0722 09:16:47.281138 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9667" for this suite. @ 07/22/25 09:16:47.285
â€¢ [377.856 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:331
  STEP: Creating a kubernetes client @ 07/22/25 09:16:47.292
  I0722 09:16:47.292711 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sched-pred @ 07/22/25 09:16:47.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:16:47.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:16:47.318
  I0722 09:16:47.321710 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0722 09:16:47.328400 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0722 09:16:47.331580 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node cncf1 before test
  I0722 09:16:47.343682 22 predicates.go:956] calico-node-swkpx from kube-system started at 2025-07-22 07:51:40 +0000 UTC (1 container statuses recorded)
  I0722 09:16:47.343736 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0722 09:16:47.343764 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-13be34739e594807-rxhzv from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 09:16:47.343768 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 09:16:47.343771 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0722 09:16:47.343782 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node cncf2 before test
  I0722 09:16:47.350991 22 predicates.go:956] calico-kube-controllers-79949b87d-6p5mg from kube-system started at 2025-07-22 08:41:09 +0000 UTC (1 container statuses recorded)
  I0722 09:16:47.351021 22 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0722 09:16:47.351025 22 predicates.go:956] calico-node-qdrvr from kube-system started at 2025-07-22 07:52:11 +0000 UTC (1 container statuses recorded)
  I0722 09:16:47.351028 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0722 09:16:47.351032 22 predicates.go:956] coredns-ccd8f67bc-hsmn2 from kube-system started at 2025-07-22 08:41:09 +0000 UTC (1 container statuses recorded)
  I0722 09:16:47.351035 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0722 09:16:47.351038 22 predicates.go:956] sonobuoy from sonobuoy started at 2025-07-22 08:25:01 +0000 UTC (1 container statuses recorded)
  I0722 09:16:47.351041 22 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0722 09:16:47.351044 22 predicates.go:956] sonobuoy-e2e-job-7652fcec38e04d57 from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 09:16:47.351047 22 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0722 09:16:47.351050 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 09:16:47.351053 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-13be34739e594807-nnhtr from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 09:16:47.351056 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 09:16:47.351059 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node cncf1 @ 07/22/25 09:16:47.368
  STEP: verifying the node has the label node cncf2 @ 07/22/25 09:16:47.385
  I0722 09:16:47.397893 22 predicates.go:371] Pod calico-kube-controllers-79949b87d-6p5mg requesting resource cpu=0m on Node cncf2
  I0722 09:16:47.397958 22 predicates.go:371] Pod calico-node-qdrvr requesting resource cpu=250m on Node cncf2
  I0722 09:16:47.397991 22 predicates.go:371] Pod calico-node-swkpx requesting resource cpu=250m on Node cncf1
  I0722 09:16:47.397996 22 predicates.go:371] Pod coredns-ccd8f67bc-hsmn2 requesting resource cpu=100m on Node cncf2
  I0722 09:16:47.397999 22 predicates.go:371] Pod sonobuoy requesting resource cpu=0m on Node cncf2
  I0722 09:16:47.398002 22 predicates.go:371] Pod sonobuoy-e2e-job-7652fcec38e04d57 requesting resource cpu=0m on Node cncf2
  I0722 09:16:47.398006 22 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-13be34739e594807-nnhtr requesting resource cpu=0m on Node cncf2
  I0722 09:16:47.398009 22 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-13be34739e594807-rxhzv requesting resource cpu=0m on Node cncf1
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/22/25 09:16:47.398
  I0722 09:16:47.398051 22 predicates.go:381] Creating a pod which consumes cpu=2625m on Node cncf1
  I0722 09:16:47.436624 22 predicates.go:381] Creating a pod which consumes cpu=2555m on Node cncf2
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/22/25 09:16:49.463
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-798c2819-c734-488c-b08f-29d4cf1f29fc.1854881bb3e92653], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6862/filler-pod-798c2819-c734-488c-b08f-29d4cf1f29fc to cncf2] @ 07/22/25 09:16:49.467
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-798c2819-c734-488c-b08f-29d4cf1f29fc.1854881bd7e2229e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/22/25 09:16:49.467
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-798c2819-c734-488c-b08f-29d4cf1f29fc.1854881bda313e5d], Reason = [Created], Message = [Created container: filler-pod-798c2819-c734-488c-b08f-29d4cf1f29fc] @ 07/22/25 09:16:49.467
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-798c2819-c734-488c-b08f-29d4cf1f29fc.1854881bdd277b56], Reason = [Started], Message = [Started container filler-pod-798c2819-c734-488c-b08f-29d4cf1f29fc] @ 07/22/25 09:16:49.467
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e680159d-bde8-466c-bb5f-f3cd9b78354d.1854881bb41f9ff6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6862/filler-pod-e680159d-bde8-466c-bb5f-f3cd9b78354d to cncf1] @ 07/22/25 09:16:49.467
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e680159d-bde8-466c-bb5f-f3cd9b78354d.1854881bda825cdc], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/22/25 09:16:49.468
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e680159d-bde8-466c-bb5f-f3cd9b78354d.1854881bdc00d20b], Reason = [Created], Message = [Created container: filler-pod-e680159d-bde8-466c-bb5f-f3cd9b78354d] @ 07/22/25 09:16:49.468
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e680159d-bde8-466c-bb5f-f3cd9b78354d.1854881bdfd143e6], Reason = [Started], Message = [Started container filler-pod-e680159d-bde8-466c-bb5f-f3cd9b78354d] @ 07/22/25 09:16:49.468
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1854881c2c51ed3e], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 07/22/25 09:16:49.479
  STEP: removing the label node off the node cncf1 @ 07/22/25 09:16:50.487
  STEP: verifying the node doesn't have the label node @ 07/22/25 09:16:50.496
  STEP: removing the label node off the node cncf2 @ 07/22/25 09:16:50.5
  STEP: verifying the node doesn't have the label node @ 07/22/25 09:16:50.509
  I0722 09:16:50.513743 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6862" for this suite. @ 07/22/25 09:16:50.517
â€¢ [3.231 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 07/22/25 09:16:50.523
  I0722 09:16:50.523574 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:16:50.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:16:50.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:16:50.542
  STEP: Creating configMap with name projected-configmap-test-volume-map-f27bc9fb-ec55-4b56-a39b-c91047df08fe @ 07/22/25 09:16:50.545
  STEP: Creating a pod to test consume configMaps @ 07/22/25 09:16:50.55
  STEP: Saw pod success @ 07/22/25 09:16:54.586
  I0722 09:16:54.588735 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-7ddbe97b-e3c5-4e25-8a7f-f08fdc544003 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:16:54.596
  I0722 09:16:54.609250 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-69" for this suite. @ 07/22/25 09:16:54.612
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 07/22/25 09:16:54.617
  I0722 09:16:54.617424 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 09:16:54.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:16:54.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:16:54.631
  I0722 09:16:54.633274 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/22/25 09:16:55.927
  I0722 09:16:55.927509 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9732 --namespace=crd-publish-openapi-9732 create -f -'
  I0722 09:16:56.004184 22 builder.go:146] stderr: ""
  I0722 09:16:56.004230 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3708-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0722 09:16:56.004298 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9732 --namespace=crd-publish-openapi-9732 delete e2e-test-crd-publish-openapi-3708-crds test-cr'
  I0722 09:16:56.062065 22 builder.go:146] stderr: ""
  I0722 09:16:56.062108 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3708-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0722 09:16:56.062139 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9732 --namespace=crd-publish-openapi-9732 apply -f -'
  I0722 09:16:56.108534 22 builder.go:146] stderr: ""
  I0722 09:16:56.108583 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3708-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0722 09:16:56.108640 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9732 --namespace=crd-publish-openapi-9732 delete e2e-test-crd-publish-openapi-3708-crds test-cr'
  I0722 09:16:56.152392 22 builder.go:146] stderr: ""
  I0722 09:16:56.152431 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3708-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/22/25 09:16:56.152
  I0722 09:16:56.152501 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=crd-publish-openapi-9732 explain e2e-test-crd-publish-openapi-3708-crds'
  I0722 09:16:56.191739 22 builder.go:146] stderr: ""
  I0722 09:16:56.191788 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-3708-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0722 09:16:57.381297 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9732" for this suite. @ 07/22/25 09:16:57.387
â€¢ [2.776 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 07/22/25 09:16:57.393
  I0722 09:16:57.393122 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 09:16:57.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:16:57.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:16:57.406
  STEP: Creating service test in namespace statefulset-8717 @ 07/22/25 09:16:57.409
  STEP: Looking for a node to schedule stateful set and pod @ 07/22/25 09:16:57.413
  STEP: Creating pod with conflicting port in namespace statefulset-8717 @ 07/22/25 09:16:57.416
  STEP: Waiting until pod test-pod will start running in namespace statefulset-8717 @ 07/22/25 09:16:57.423
  STEP: Creating statefulset with conflicting port in namespace statefulset-8717 @ 07/22/25 09:16:59.441
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8717 @ 07/22/25 09:16:59.446
  I0722 09:16:59.455853 22 statefulset.go:884] Observed stateful pod in namespace: statefulset-8717, name: ss-0, uid: aeeae325-8ee1-4702-a534-08acee0f680c, status phase: Pending. Waiting for statefulset controller to delete.
  I0722 09:16:59.468154 22 statefulset.go:884] Observed stateful pod in namespace: statefulset-8717, name: ss-0, uid: aeeae325-8ee1-4702-a534-08acee0f680c, status phase: Failed. Waiting for statefulset controller to delete.
  I0722 09:16:59.481956 22 statefulset.go:884] Observed stateful pod in namespace: statefulset-8717, name: ss-0, uid: aeeae325-8ee1-4702-a534-08acee0f680c, status phase: Failed. Waiting for statefulset controller to delete.
  I0722 09:16:59.490060 22 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-8717
  STEP: Removing pod with conflicting port in namespace statefulset-8717 @ 07/22/25 09:16:59.49
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8717 and will be in running state @ 07/22/25 09:16:59.502
  I0722 09:17:01.521511 22 statefulset.go:138] Deleting all statefulset in ns statefulset-8717
  I0722 09:17:01.523934 22 rest.go:153] Scaling statefulset ss to 0
  I0722 09:17:11.554658 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0722 09:17:11.557276 22 rest.go:91] Deleting statefulset ss
  I0722 09:17:11.569245 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8717" for this suite. @ 07/22/25 09:17:11.573
â€¢ [14.187 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 07/22/25 09:17:11.581
  I0722 09:17:11.581057 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:17:11.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:17:11.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:17:11.598
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5238 @ 07/22/25 09:17:11.601
  STEP: changing the ExternalName service to type=NodePort @ 07/22/25 09:17:11.607
  I0722 09:17:11.649769 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0722 09:17:13.673556 22 resource.go:361] Creating new exec pod
  I0722 09:17:15.693096 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5238 exec execpodgr2x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 09:17:15.771247 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.203) 80 port [tcp/http] succeeded!\n"
  I0722 09:17:15.771289 22 builder.go:147] stdout: ""
  I0722 09:17:16.700805 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5238 exec execpodgr2x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 09:17:16.819166 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.203) 80 port [tcp/http] succeeded!\n"
  I0722 09:17:16.819220 22 builder.go:147] stdout: ""
  I0722 09:17:17.694163 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5238 exec execpodgr2x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 09:17:17.777851 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.203) 80 port [tcp/http] succeeded!\n"
  I0722 09:17:17.777903 22 builder.go:147] stdout: ""
  I0722 09:17:18.693779 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5238 exec execpodgr2x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 09:17:18.789429 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.203) 80 port [tcp/http] succeeded!\n"
  I0722 09:17:18.789469 22 builder.go:147] stdout: ""
  I0722 09:17:19.705797 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5238 exec execpodgr2x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 09:17:19.797575 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.203) 80 port [tcp/http] succeeded!\n"
  I0722 09:17:19.797687 22 builder.go:147] stdout: "externalname-service-7d7c8f87c7-qvz7q"
  I0722 09:17:19.797762 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5238 exec execpodgr2x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.203 80'
  I0722 09:17:19.864607 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.203 80\nConnection to 10.152.183.203 80 port [tcp/http] succeeded!\n"
  I0722 09:17:19.864648 22 builder.go:147] stdout: ""
  I0722 09:17:20.802569 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5238 exec execpodgr2x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.203 80'
  I0722 09:17:20.875437 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.203 80\nConnection to 10.152.183.203 80 port [tcp/http] succeeded!\n"
  I0722 09:17:20.875486 22 builder.go:147] stdout: "externalname-service-7d7c8f87c7-jstv9"
  I0722 09:17:20.875591 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5238 exec execpodgr2x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.31 31124'
  I0722 09:17:20.947854 22 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.105.31 31124\n+ echo hostName\nConnection to 192.168.105.31 31124 port [tcp/*] succeeded!\n"
  I0722 09:17:20.947897 22 builder.go:147] stdout: "externalname-service-7d7c8f87c7-qvz7q"
  I0722 09:17:20.947965 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5238 exec execpodgr2x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.32 31124'
  I0722 09:17:21.022642 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.105.32 31124\nConnection to 192.168.105.32 31124 port [tcp/*] succeeded!\n"
  I0722 09:17:21.022702 22 builder.go:147] stdout: ""
  I0722 09:17:21.957886 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5238 exec execpodgr2x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.32 31124'
  I0722 09:17:22.030971 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.105.32 31124\nConnection to 192.168.105.32 31124 port [tcp/*] succeeded!\n"
  I0722 09:17:22.031027 22 builder.go:147] stdout: "externalname-service-7d7c8f87c7-jstv9"
  I0722 09:17:22.031212 22 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0722 09:17:22.063578 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5238" for this suite. @ 07/22/25 09:17:22.068
â€¢ [10.494 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 07/22/25 09:17:22.076
  I0722 09:17:22.076682 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:17:22.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:17:22.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:17:22.091
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3902 @ 07/22/25 09:17:22.093
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/22/25 09:17:22.106
  STEP: creating service externalsvc in namespace services-3902 @ 07/22/25 09:17:22.107
  I0722 09:17:22.134592 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the ClusterIP service to type=ExternalName @ 07/22/25 09:17:24.144
  I0722 09:17:24.161164 22 resource.go:361] Creating new exec pod
  I0722 09:17:26.180572 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-3902 exec execpods668x -- /bin/sh -x -c nslookup clusterip-service.services-3902.svc.cluster.local'
  I0722 09:17:26.366164 22 builder.go:146] stderr: "+ nslookup clusterip-service.services-3902.svc.cluster.local\n"
  I0722 09:17:26.366226 22 builder.go:147] stdout: "Server:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nclusterip-service.services-3902.svc.cluster.local\tcanonical name = externalsvc.services-3902.svc.cluster.local.\nName:\texternalsvc.services-3902.svc.cluster.local\nAddress: 10.152.183.52\n\n"
  I0722 09:17:26.452372 22 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0722 09:17:26.491295 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3902" for this suite. @ 07/22/25 09:17:26.497
â€¢ [4.428 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 07/22/25 09:17:26.505
  I0722 09:17:26.505887 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 09:17:26.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:17:26.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:17:26.525
  STEP: Counting existing ResourceQuota @ 07/22/25 09:17:26.529
  STEP: Creating a ResourceQuota @ 07/22/25 09:17:31.537
  STEP: Ensuring resource quota status is calculated @ 07/22/25 09:17:31.543
  I0722 09:17:33.557980 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1564" for this suite. @ 07/22/25 09:17:33.561
â€¢ [7.061 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/22/25 09:17:33.567
  I0722 09:17:33.567069 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 09:17:33.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:17:33.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:17:33.58
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/22/25 09:17:33.582
  STEP: When a replicaset with a matching selector is created @ 07/22/25 09:17:35.607
  STEP: Then the orphan pod is adopted @ 07/22/25 09:17:35.614
  STEP: When the matched label of one of its pods change @ 07/22/25 09:17:36.626
  I0722 09:17:36.628577 22 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/22/25 09:17:36.635
  I0722 09:17:37.647438 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5811" for this suite. @ 07/22/25 09:17:37.662
â€¢ [4.115 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 07/22/25 09:17:37.682
  I0722 09:17:37.682927 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 09:17:37.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:17:37.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:17:37.704
  STEP: creating a ReplicationController @ 07/22/25 09:17:37.71
  STEP: waiting for RC to be added @ 07/22/25 09:17:37.717
  STEP: waiting for available Replicas @ 07/22/25 09:17:37.718
  STEP: patching ReplicationController @ 07/22/25 09:17:38.77
  STEP: waiting for RC to be modified @ 07/22/25 09:17:38.777
  STEP: patching ReplicationController status @ 07/22/25 09:17:38.778
  STEP: waiting for RC to be modified @ 07/22/25 09:17:38.784
  STEP: waiting for available Replicas @ 07/22/25 09:17:38.784
  STEP: fetching ReplicationController status @ 07/22/25 09:17:38.789
  STEP: patching ReplicationController scale @ 07/22/25 09:17:38.791
  STEP: waiting for RC to be modified @ 07/22/25 09:17:38.798
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/22/25 09:17:38.798
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/22/25 09:17:40.343
  STEP: updating ReplicationController status @ 07/22/25 09:17:40.346
  STEP: waiting for RC to be modified @ 07/22/25 09:17:40.351
  STEP: listing all ReplicationControllers @ 07/22/25 09:17:40.351
  STEP: checking that ReplicationController has expected values @ 07/22/25 09:17:40.354
  STEP: deleting ReplicationControllers by collection @ 07/22/25 09:17:40.354
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/22/25 09:17:40.362
  I0722 09:17:40.399045 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0722 09:17:40.399347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7949" for this suite. @ 07/22/25 09:17:40.402
â€¢ [2.725 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 07/22/25 09:17:40.408
  I0722 09:17:40.409050 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:17:40.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:17:40.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:17:40.427
  STEP: Creating configMap with name projected-configmap-test-volume-4a3c7c70-4f4d-4f6d-9c3c-36802ea6fc42 @ 07/22/25 09:17:40.43
  STEP: Creating a pod to test consume configMaps @ 07/22/25 09:17:40.435
  E0722 09:17:41.411070      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:42.429408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:43.439347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:44.445829      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:17:44.463
  I0722 09:17:44.466567 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-2424f67f-f6c6-4af0-9678-1f8bd591c1df container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:17:44.471
  I0722 09:17:44.489555 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9828" for this suite. @ 07/22/25 09:17:44.492
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 07/22/25 09:17:44.499
  I0722 09:17:44.499275 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:17:44.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:17:44.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:17:44.516
  STEP: Setting up server cert @ 07/22/25 09:17:44.534
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:17:44.942
  STEP: Deploying the webhook pod @ 07/22/25 09:17:44.947
  STEP: Wait for the deployment to be ready @ 07/22/25 09:17:44.958
  I0722 09:17:44.963701 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0722 09:17:45.446903      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:46.457991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:17:46.971
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:17:46.983
  E0722 09:17:47.466778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:17:47.996833 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/22/25 09:17:48.041
  STEP: Creating a configMap that should be mutated @ 07/22/25 09:17:48.052
  STEP: Deleting the collection of validation webhooks @ 07/22/25 09:17:48.07
  STEP: Creating a configMap that should not be mutated @ 07/22/25 09:17:48.124
  I0722 09:17:48.184152 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4214" for this suite. @ 07/22/25 09:17:48.186
  STEP: Destroying namespace "webhook-markers-198" for this suite. @ 07/22/25 09:17:48.195
â€¢ [3.703 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 07/22/25 09:17:48.202
  I0722 09:17:48.202224 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:17:48.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:17:48.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:17:48.216
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:17:48.218
  E0722 09:17:48.471267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:49.474073      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:50.474633      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:51.474473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:17:52.236
  I0722 09:17:52.238777 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-a374cca1-2b94-4388-a20c-a8b5e835d620 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:17:52.243
  I0722 09:17:52.255423 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5200" for this suite. @ 07/22/25 09:17:52.258
â€¢ [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/22/25 09:17:52.264
  I0722 09:17:52.264410 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:17:52.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:17:52.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:17:52.279
  STEP: Creating a pod to test downward api env vars @ 07/22/25 09:17:52.281
  E0722 09:17:52.474770      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:53.492464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:54.494210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:55.507002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:17:56.326
  I0722 09:17:56.328703 22 output.go:207] Trying to get logs from node cncf1 pod downward-api-7281911b-814a-4d0a-b18b-8aff087d3a66 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 09:17:56.333
  I0722 09:17:56.348198 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7675" for this suite. @ 07/22/25 09:17:56.351
â€¢ [4.093 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/22/25 09:17:56.358
  I0722 09:17:56.358155 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename watch @ 07/22/25 09:17:56.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:17:56.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:17:56.373
  STEP: creating a watch on configmaps with a certain label @ 07/22/25 09:17:56.376
  STEP: creating a new configmap @ 07/22/25 09:17:56.377
  STEP: modifying the configmap once @ 07/22/25 09:17:56.381
  STEP: changing the label value of the configmap @ 07/22/25 09:17:56.388
  STEP: Expecting to observe a delete notification for the watched object @ 07/22/25 09:17:56.395
  I0722 09:17:56.395180 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4246  8c1143a1-ead1-429b-8b6d-e83d5f1ea644 19030 0 2025-07-22 09:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 09:17:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 09:17:56.395297 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4246  8c1143a1-ead1-429b-8b6d-e83d5f1ea644 19031 0 2025-07-22 09:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 09:17:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 09:17:56.395370 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4246  8c1143a1-ead1-429b-8b6d-e83d5f1ea644 19032 0 2025-07-22 09:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 09:17:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/22/25 09:17:56.395
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/22/25 09:17:56.402
  E0722 09:17:56.508341      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:57.519312      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:58.526637      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:17:59.536227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:00.537891      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:01.539927      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:02.546116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:03.555709      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:04.557580      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:05.560331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 07/22/25 09:18:06.407
  STEP: modifying the configmap a third time @ 07/22/25 09:18:06.414
  STEP: deleting the configmap @ 07/22/25 09:18:06.422
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/22/25 09:18:06.426
  I0722 09:18:06.426964 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4246  8c1143a1-ead1-429b-8b6d-e83d5f1ea644 19064 0 2025-07-22 09:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 09:18:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 09:18:06.427178 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4246  8c1143a1-ead1-429b-8b6d-e83d5f1ea644 19065 0 2025-07-22 09:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 09:18:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 09:18:06.427242 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4246  8c1143a1-ead1-429b-8b6d-e83d5f1ea644 19066 0 2025-07-22 09:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 09:18:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 09:18:06.427293 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4246" for this suite. @ 07/22/25 09:18:06.43
â€¢ [10.078 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/22/25 09:18:06.435
  I0722 09:18:06.435852 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pods @ 07/22/25 09:18:06.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:18:06.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:18:06.449
  STEP: creating the pod @ 07/22/25 09:18:06.451
  STEP: submitting the pod to kubernetes @ 07/22/25 09:18:06.451
  I0722 09:18:06.458546      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0722 09:18:06.560554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:07.564855      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/22/25 09:18:08.466
  STEP: updating the pod @ 07/22/25 09:18:08.469
  E0722 09:18:08.565687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:18:08.981273 22 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-0c51248f-c873-4057-abf0-c1daf06fb8d4"
  E0722 09:18:09.573397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:10.575401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:11.587041      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:12.588497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:18:13.008151 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8349" for this suite. @ 07/22/25 09:18:13.011
â€¢ [6.581 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/22/25 09:18:13.018
  I0722 09:18:13.018067 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:18:13.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:18:13.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:18:13.034
  STEP: Creating projection with secret that has name projected-secret-test-map-49a9c22f-d429-4941-b43a-b8d3ad83bc70 @ 07/22/25 09:18:13.036
  STEP: Creating a pod to test consume secrets @ 07/22/25 09:18:13.041
  E0722 09:18:13.595735      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:14.596298      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:15.599894      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:16.601339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:18:17.079
  I0722 09:18:17.083719 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-62f703c5-a13c-4a07-b8f3-09ea035d2aad container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 09:18:17.091
  I0722 09:18:17.111277 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1784" for this suite. @ 07/22/25 09:18:17.115
â€¢ [4.107 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 07/22/25 09:18:17.126
  I0722 09:18:17.127007 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 09:18:17.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:18:17.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:18:17.156
  STEP: Creating configMap with name configmap-test-volume-0e4ed8d1-3b7b-4e7f-b0f5-cedd6a7479f9 @ 07/22/25 09:18:17.159
  STEP: Creating a pod to test consume configMaps @ 07/22/25 09:18:17.178
  E0722 09:18:17.602191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:18.602965      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:19.607320      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:20.608308      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:18:21.22
  I0722 09:18:21.225312 22 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-3f60185b-69dc-40f3-90b4-df4d7788b4f4 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:18:21.232
  I0722 09:18:21.251182 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4804" for this suite. @ 07/22/25 09:18:21.255
â€¢ [4.138 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 07/22/25 09:18:21.266
  I0722 09:18:21.266889 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:18:21.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:18:21.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:18:21.286
  STEP: Setting up server cert @ 07/22/25 09:18:21.312
  E0722 09:18:21.609312      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:18:21.642
  STEP: Deploying the webhook pod @ 07/22/25 09:18:21.649
  STEP: Wait for the deployment to be ready @ 07/22/25 09:18:21.663
  I0722 09:18:21.671137 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0722 09:18:22.610952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:23.611082      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:18:23.68
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:18:23.692
  E0722 09:18:24.611405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:18:24.697329 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/22/25 09:18:24.759
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/22/25 09:18:24.79
  STEP: Deleting the collection of validation webhooks @ 07/22/25 09:18:24.811
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/22/25 09:18:24.855
  I0722 09:18:24.922047 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5880" for this suite. @ 07/22/25 09:18:24.925
  STEP: Destroying namespace "webhook-markers-4012" for this suite. @ 07/22/25 09:18:24.935
â€¢ [3.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 07/22/25 09:18:24.945
  I0722 09:18:24.945109 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename deployment @ 07/22/25 09:18:24.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:18:24.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:18:24.962
  STEP: creating a Deployment @ 07/22/25 09:18:24.972
  I0722 09:18:24.972177 22 deployment.go:506] Creating simple deployment test-deployment-vvsqj
  I0722 09:18:24.984651 22 deployment.go:223] deployment "test-deployment-vvsqj" doesn't have the required revision set
  E0722 09:18:25.611595      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:26.620329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 07/22/25 09:18:26.999
  I0722 09:18:27.002741 22 deployment.go:531] Deployment test-deployment-vvsqj has Conditions: [{Available True 2025-07-22 09:18:26 +0000 UTC 2025-07-22 09:18:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-07-22 09:18:26 +0000 UTC 2025-07-22 09:18:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vvsqj-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/22/25 09:18:27.002
  I0722 09:18:27.009519 22 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 9, 18, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 9, 18, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 9, 18, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 9, 18, 25, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-vvsqj-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/22/25 09:18:27.009
  I0722 09:18:27.011223 22 deployment.go:578] Observed &Deployment event: ADDED
  I0722 09:18:27.011270 22 deployment.go:574] Observed Deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 09:18:25 +0000 UTC 2025-07-22 09:18:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vvsqj-6fb4c74686"}
  I0722 09:18:27.011524 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0722 09:18:27.011565 22 deployment.go:574] Observed Deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 09:18:25 +0000 UTC 2025-07-22 09:18:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vvsqj-6fb4c74686"}
  I0722 09:18:27.011571 22 deployment.go:574] Observed Deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-22 09:18:25 +0000 UTC 2025-07-22 09:18:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0722 09:18:27.011658 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0722 09:18:27.011677 22 deployment.go:574] Observed Deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-22 09:18:25 +0000 UTC 2025-07-22 09:18:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0722 09:18:27.011682 22 deployment.go:574] Observed Deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 09:18:25 +0000 UTC 2025-07-22 09:18:25 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vvsqj-6fb4c74686" is progressing.}
  I0722 09:18:27.011753 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0722 09:18:27.012002 22 deployment.go:574] Observed Deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-22 09:18:26 +0000 UTC 2025-07-22 09:18:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0722 09:18:27.012030 22 deployment.go:574] Observed Deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 09:18:26 +0000 UTC 2025-07-22 09:18:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vvsqj-6fb4c74686" has successfully progressed.}
  I0722 09:18:27.012134 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0722 09:18:27.012155 22 deployment.go:574] Observed Deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-22 09:18:26 +0000 UTC 2025-07-22 09:18:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0722 09:18:27.012305 22 deployment.go:574] Observed Deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 09:18:26 +0000 UTC 2025-07-22 09:18:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vvsqj-6fb4c74686" has successfully progressed.}
  I0722 09:18:27.012322 22 deployment.go:571] Found Deployment test-deployment-vvsqj in namespace deployment-2040 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 09:18:27.012330 22 deployment.go:582] Deployment test-deployment-vvsqj has an updated status
  STEP: patching the Statefulset Status @ 07/22/25 09:18:27.012
  I0722 09:18:27.012501 22 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0722 09:18:27.017722 22 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/22/25 09:18:27.017
  I0722 09:18:27.019109 22 deployment.go:615] Observed &Deployment event: ADDED
  I0722 09:18:27.019151 22 deployment.go:611] Observed deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 09:18:25 +0000 UTC 2025-07-22 09:18:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vvsqj-6fb4c74686"}
  I0722 09:18:27.019245 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0722 09:18:27.019254 22 deployment.go:611] Observed deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 09:18:25 +0000 UTC 2025-07-22 09:18:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vvsqj-6fb4c74686"}
  I0722 09:18:27.019259 22 deployment.go:611] Observed deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-22 09:18:25 +0000 UTC 2025-07-22 09:18:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0722 09:18:27.019321 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0722 09:18:27.019469 22 deployment.go:611] Observed deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-22 09:18:25 +0000 UTC 2025-07-22 09:18:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0722 09:18:27.019486 22 deployment.go:611] Observed deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 09:18:25 +0000 UTC 2025-07-22 09:18:25 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vvsqj-6fb4c74686" is progressing.}
  I0722 09:18:27.019580 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0722 09:18:27.019631 22 deployment.go:611] Observed deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-22 09:18:26 +0000 UTC 2025-07-22 09:18:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0722 09:18:27.019637 22 deployment.go:611] Observed deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 09:18:26 +0000 UTC 2025-07-22 09:18:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vvsqj-6fb4c74686" has successfully progressed.}
  I0722 09:18:27.019698 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0722 09:18:27.019777 22 deployment.go:611] Observed deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-22 09:18:26 +0000 UTC 2025-07-22 09:18:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0722 09:18:27.019784 22 deployment.go:611] Observed deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 09:18:26 +0000 UTC 2025-07-22 09:18:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vvsqj-6fb4c74686" has successfully progressed.}
  I0722 09:18:27.019788 22 deployment.go:611] Observed deployment test-deployment-vvsqj in namespace deployment-2040 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 09:18:27.019891 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0722 09:18:27.019898 22 deployment.go:608] Found deployment test-deployment-vvsqj in namespace deployment-2040 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0722 09:18:27.019909 22 deployment.go:619] Deployment test-deployment-vvsqj has a patched status
  I0722 09:18:27.023183 22 deployment.go:632] Deployment "test-deployment-vvsqj":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-vvsqj",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2040",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "452ec91c-0fba-4031-aa78-9839107e6815",
      ResourceVersion: (string) (len=5) "19309",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888772705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 09:18:27.026247 22 deployment.go:40] New ReplicaSet "test-deployment-vvsqj-6fb4c74686" of Deployment "test-deployment-vvsqj":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-vvsqj-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2040",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "633ebe51-aa4b-4c66-806a-d13b16f1bbd8",
      ResourceVersion: (string) (len=5) "19290",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888772705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-vvsqj",
          UID: (types.UID) (len=36) "452ec91c-0fba-4031-aa78-9839107e6815",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 34 35 32  |k:{\"uid\":\"452|
              00000120  65 63 39 31 63 2d 30 66  62 61 2d 34 30 33 31 2d  |ec91c-0fba-4031-|
              00000130  61 61 37 38 2d 39 38 33  39 31 30 37 65 36 38 31  |aa78-9839107e681|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 09:18:27.030737 22 deployment.go:68] Pod "test-deployment-vvsqj-6fb4c74686-w6cb2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-vvsqj-6fb4c74686-w6cb2",
      GenerateName: (string) (len=33) "test-deployment-vvsqj-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-2040",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a9313ac-1436-4c4f-95c8-3e1bc9eb6903",
      ResourceVersion: (string) (len=5) "19289",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888772705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2473c7543fffb0c363e0ea9659cfed777026d01fcee8600ee0f6cec6564f0607",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.67/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.67/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-vvsqj-6fb4c74686",
          UID: (types.UID) (len=36) "633ebe51-aa4b-4c66-806a-d13b16f1bbd8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 36 33 33 65 62 65 35  31 2d 61 61 34 62 2d 34  |"633ebe51-aa4b-4|
              000000a0  63 36 36 2d 38 30 36 61  2d 64 31 33 62 31 36 66  |c66-806a-d13b16f|
              000000b0  31 62 62 64 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |1bbd8\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 36  37 5c 22 7d 22 3a 7b 22  |.1.209.67\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8bns4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8bns4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888772705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=11) "10.1.209.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888772705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888772705,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f7e1d05e5c4250f7260825849760cdd243e79b9032525f71d0095a87af1b0e49",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8bns4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 09:18:27.031557 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2040" for this suite. @ 07/22/25 09:18:27.035
â€¢ [2.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 07/22/25 09:18:27.041
  I0722 09:18:27.041309 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 09:18:27.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:18:27.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:18:27.064
  STEP: Creating configMap that has name configmap-test-emptyKey-f41d8dd1-2011-40fd-b4fe-499790119056 @ 07/22/25 09:18:27.069
  I0722 09:18:27.072860 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5067" for this suite. @ 07/22/25 09:18:27.08
â€¢ [0.045 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/22/25 09:18:27.086
  I0722 09:18:27.086493 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 09:18:27.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:18:27.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:18:27.1
  STEP: Create a ReplicaSet @ 07/22/25 09:18:27.103
  STEP: Verify that the required pods have come up @ 07/22/25 09:18:27.108
  I0722 09:18:27.110565 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  E0722 09:18:27.620462      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:28.620705      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:29.626340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:30.627062      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:31.632633      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:18:32.130914 22 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/22/25 09:18:32.13
  I0722 09:18:32.133496 22 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/22/25 09:18:32.133
  STEP: DeleteCollection of the ReplicaSets @ 07/22/25 09:18:32.137
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/22/25 09:18:32.153
  I0722 09:18:32.158608 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6178" for this suite. @ 07/22/25 09:18:32.162
â€¢ [5.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/22/25 09:18:32.187
  I0722 09:18:32.187779 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:18:32.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:18:32.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:18:32.239
  STEP: Creating secret with name s-test-opt-del-c346051d-3fb7-4273-9949-4be97f723968 @ 07/22/25 09:18:32.251
  STEP: Creating secret with name s-test-opt-upd-a35bb65b-cc4b-42d6-91c0-a1622f80ee03 @ 07/22/25 09:18:32.262
  STEP: Creating the pod @ 07/22/25 09:18:32.273
  E0722 09:18:32.633695      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:33.634185      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-c346051d-3fb7-4273-9949-4be97f723968 @ 07/22/25 09:18:34.323
  STEP: Updating secret s-test-opt-upd-a35bb65b-cc4b-42d6-91c0-a1622f80ee03 @ 07/22/25 09:18:34.33
  STEP: Creating secret with name s-test-opt-create-99b0f0d0-3182-4e3b-8184-f0af9d8d2332 @ 07/22/25 09:18:34.337
  STEP: waiting to observe update in volume @ 07/22/25 09:18:34.341
  E0722 09:18:34.635074      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:35.637302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:36.637565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:37.640509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:38.640721      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:39.641057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:40.641391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:41.643257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:42.643318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:43.644544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:44.644984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:45.650137      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:46.652770      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:47.653316      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:48.658269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:49.660879      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:50.670127      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:51.670112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:52.672541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:53.672996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:54.673392      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:55.673850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:56.674243      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:57.675069      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:58.677079      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:18:59.688473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:00.694503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:01.717994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:02.730727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:03.745456      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:04.759844      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:05.759916      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:06.760205      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:07.761187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:08.761506      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:09.761730      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:10.762997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:11.764081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:12.765134      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:13.784440      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:14.785252      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:15.785812      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:16.786306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:17.797496      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:18.797927      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:19.799611      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:20.801814      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:21.806675      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:22.813670      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:23.821284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:24.822221      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:25.842225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:26.845478      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:27.854963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:28.862746      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:29.862843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:30.865882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:31.889295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:32.893585      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:33.894008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:34.894519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:35.895234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:36.895361      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:37.924332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:38.925108      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:39.926452      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:40.931871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:41.937437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:42.951619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:43.952479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:44.953755      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:45.960883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:46.967913      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:47.971188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:48.971342      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:49.972362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:50.990752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:51.995539      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:53.000966      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:54.007001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:19:54.835928 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1677" for this suite. @ 07/22/25 09:19:54.84
â€¢ [82.660 seconds]
------------------------------
SSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 07/22/25 09:19:54.847
  I0722 09:19:54.848070 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename servicecidr @ 07/22/25 09:19:54.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:19:54.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:19:54.865
  STEP: getting @ 07/22/25 09:19:54.868
  STEP: patching @ 07/22/25 09:19:54.871
  STEP: updating @ 07/22/25 09:19:54.876
  STEP: listing @ 07/22/25 09:19:54.904
  STEP: watching @ 07/22/25 09:19:54.906
  I0722 09:19:54.907729 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-8389" for this suite. @ 07/22/25 09:19:54.91
â€¢ [0.069 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 07/22/25 09:19:54.916
  I0722 09:19:54.917013 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubelet-test @ 07/22/25 09:19:54.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:19:54.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:19:54.932
  I0722 09:19:54.958868 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1652" for this suite. @ 07/22/25 09:19:54.962
â€¢ [0.068 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 07/22/25 09:19:54.986
  I0722 09:19:54.986655 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl-logs @ 07/22/25 09:19:54.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:19:55.005
  E0722 09:19:55.006871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:19:55.011
  STEP: creating a pod @ 07/22/25 09:19:55.015
  I0722 09:19:55.015511 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-logs-4972 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0722 09:19:55.075956 22 builder.go:146] stderr: ""
  I0722 09:19:55.076029 22 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/22/25 09:19:55.079
  I0722 09:19:55.079336 22 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0722 09:19:56.020716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:57.021453      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:19:57.086924 22 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/22/25 09:19:57.086
  I0722 09:19:57.087063 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-logs-4972 logs logs-generator logs-generator'
  I0722 09:19:57.129924 22 builder.go:146] stderr: ""
  I0722 09:19:57.129965 22 builder.go:147] stdout: "I0722 09:19:55.743632       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/qds 228\nI0722 09:19:55.945267       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/6cf 265\nI0722 09:19:56.144645       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/5fmn 586\nI0722 09:19:56.347075       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/l7d 212\nI0722 09:19:56.544561       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/zmxr 359\nI0722 09:19:56.751518       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/b4c 560\nI0722 09:19:56.950427       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/x6s 432\nI0722 09:19:57.148826       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/wsf 233\n"
  STEP: limiting log lines @ 07/22/25 09:19:57.129
  I0722 09:19:57.130031 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-logs-4972 logs logs-generator logs-generator --tail=1'
  I0722 09:19:57.173528 22 builder.go:146] stderr: ""
  I0722 09:19:57.173709 22 builder.go:147] stdout: "I0722 09:19:57.148826       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/wsf 233\n"
  I0722 09:19:57.173732 22 logs.go:180] got output "I0722 09:19:57.148826       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/wsf 233\n"
  STEP: limiting log bytes @ 07/22/25 09:19:57.173
  I0722 09:19:57.173810 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-logs-4972 logs logs-generator logs-generator --limit-bytes=1'
  I0722 09:19:57.215400 22 builder.go:146] stderr: ""
  I0722 09:19:57.215452 22 builder.go:147] stdout: "I"
  I0722 09:19:57.215463 22 logs.go:186] got output "I"
  STEP: exposing timestamps @ 07/22/25 09:19:57.215
  I0722 09:19:57.215552 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-logs-4972 logs logs-generator logs-generator --tail=1 --timestamps'
  I0722 09:19:57.255966 22 builder.go:146] stderr: ""
  I0722 09:19:57.256025 22 builder.go:147] stdout: "2025-07-22T11:19:57.148958353+02:00 I0722 09:19:57.148826       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/wsf 233\n"
  I0722 09:19:57.256032 22 logs.go:192] got output "2025-07-22T11:19:57.148958353+02:00 I0722 09:19:57.148826       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/wsf 233\n"
  STEP: restricting to a time range @ 07/22/25 09:19:57.256
  E0722 09:19:58.021865      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:19:59.027525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:19:59.757791 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-logs-4972 logs logs-generator logs-generator --since=1s'
  I0722 09:19:59.813432 22 builder.go:146] stderr: ""
  I0722 09:19:59.813515 22 builder.go:147] stdout: "I0722 09:19:58.944486       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/pr4 494\nI0722 09:19:59.154868       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/frn 421\nI0722 09:19:59.352858       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/z8p 483\nI0722 09:19:59.544294       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/qsl 210\nI0722 09:19:59.745787       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/kvt 308\n"
  I0722 09:19:59.813560 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-logs-4972 logs logs-generator logs-generator --since=24h'
  I0722 09:19:59.862985 22 builder.go:146] stderr: ""
  I0722 09:19:59.863156 22 builder.go:147] stdout: "I0722 09:19:55.743632       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/qds 228\nI0722 09:19:55.945267       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/6cf 265\nI0722 09:19:56.144645       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/5fmn 586\nI0722 09:19:56.347075       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/l7d 212\nI0722 09:19:56.544561       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/zmxr 359\nI0722 09:19:56.751518       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/b4c 560\nI0722 09:19:56.950427       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/x6s 432\nI0722 09:19:57.148826       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/wsf 233\nI0722 09:19:57.344160       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/m5zw 536\nI0722 09:19:57.549142       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/kwjj 361\nI0722 09:19:57.750404       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/vcs 211\nI0722 09:19:57.946644       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/rmdp 527\nI0722 09:19:58.150920       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/flw 309\nI0722 09:19:58.344943       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/9rm 489\nI0722 09:19:58.544245       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/6cdt 404\nI0722 09:19:58.746119       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/rdm 441\nI0722 09:19:58.944486       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/pr4 494\nI0722 09:19:59.154868       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/frn 421\nI0722 09:19:59.352858       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/z8p 483\nI0722 09:19:59.544294       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/qsl 210\nI0722 09:19:59.745787       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/kvt 308\n"
  I0722 09:19:59.863294 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-logs-4972 delete pod logs-generator'
  E0722 09:20:00.028948      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:20:00.843301 22 builder.go:146] stderr: ""
  I0722 09:20:00.843352 22 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0722 09:20:00.843478 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-4972" for this suite. @ 07/22/25 09:20:00.847
â€¢ [5.867 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 07/22/25 09:20:00.853
  I0722 09:20:00.853883 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:20:00.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:20:00.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:20:00.869
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:20:00.871
  E0722 09:20:01.029067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:02.033645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:03.044217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:04.048219      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:20:04.904
  I0722 09:20:04.906817 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-3c0c031a-60f7-41f8-91bd-6fb2d8a01b72 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:20:04.911
  I0722 09:20:04.924071 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3948" for this suite. @ 07/22/25 09:20:04.927
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/22/25 09:20:04.935
  I0722 09:20:04.935580 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename podtemplate @ 07/22/25 09:20:04.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:20:04.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:20:04.951
  I0722 09:20:04.981626 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3990" for this suite. @ 07/22/25 09:20:04.984
â€¢ [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 07/22/25 09:20:04.99
  I0722 09:20:04.990584 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename gc @ 07/22/25 09:20:04.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:20:05.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:20:05.006
  STEP: create the rc @ 07/22/25 09:20:05.011
  I0722 09:20:05.016501      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0722 09:20:05.048793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:06.050375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:07.050317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:08.062313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:09.051173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:10.054570      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/22/25 09:20:11.023
  E0722 09:20:11.054338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 07/22/25 09:20:11.111
  E0722 09:20:12.055204      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:13.055349      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:14.057270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:15.059033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:16.060189      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/22/25 09:20:16.118
  E0722 09:20:17.065699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:18.070207      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:19.070287      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:20.070761      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:21.073960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:22.075071      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:23.075577      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:24.077987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:25.079287      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:26.080537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:27.080036      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:28.080762      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:29.082162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:30.095151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:31.101420      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:32.101277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:33.108408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:34.114697      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:35.116708      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:36.116847      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:37.127370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:38.129813      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:39.130242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:40.130863      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:41.146038      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:42.149170      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:43.156612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:44.162036      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:45.165530      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:46.166111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/22/25 09:20:46.18
  W0722 09:20:46.190402      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 09:20:46.190635 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 09:20:46.190733 22 delete.go:95] Deleting pod "simpletest.rc-25mc9" in namespace "gc-7550"
  I0722 09:20:46.228369 22 delete.go:95] Deleting pod "simpletest.rc-27xfz" in namespace "gc-7550"
  I0722 09:20:46.246707 22 delete.go:95] Deleting pod "simpletest.rc-2p27t" in namespace "gc-7550"
  I0722 09:20:46.283329 22 delete.go:95] Deleting pod "simpletest.rc-47w8q" in namespace "gc-7550"
  I0722 09:20:46.357225 22 delete.go:95] Deleting pod "simpletest.rc-48ssm" in namespace "gc-7550"
  I0722 09:20:46.464793 22 delete.go:95] Deleting pod "simpletest.rc-5dkfd" in namespace "gc-7550"
  I0722 09:20:46.567639 22 delete.go:95] Deleting pod "simpletest.rc-5tqfg" in namespace "gc-7550"
  I0722 09:20:46.582240 22 delete.go:95] Deleting pod "simpletest.rc-6955q" in namespace "gc-7550"
  I0722 09:20:46.606302 22 delete.go:95] Deleting pod "simpletest.rc-6b4zt" in namespace "gc-7550"
  I0722 09:20:46.627744 22 delete.go:95] Deleting pod "simpletest.rc-6kb7q" in namespace "gc-7550"
  I0722 09:20:46.666403 22 delete.go:95] Deleting pod "simpletest.rc-6w54k" in namespace "gc-7550"
  I0722 09:20:46.734219 22 delete.go:95] Deleting pod "simpletest.rc-79x29" in namespace "gc-7550"
  I0722 09:20:46.825949 22 delete.go:95] Deleting pod "simpletest.rc-7m5b7" in namespace "gc-7550"
  I0722 09:20:46.881403 22 delete.go:95] Deleting pod "simpletest.rc-7pd7p" in namespace "gc-7550"
  I0722 09:20:46.946178 22 delete.go:95] Deleting pod "simpletest.rc-7phwk" in namespace "gc-7550"
  I0722 09:20:47.033121 22 delete.go:95] Deleting pod "simpletest.rc-8qg9d" in namespace "gc-7550"
  I0722 09:20:47.084352 22 delete.go:95] Deleting pod "simpletest.rc-96642" in namespace "gc-7550"
  E0722 09:20:47.167186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:20:47.171627 22 delete.go:95] Deleting pod "simpletest.rc-9fnlz" in namespace "gc-7550"
  I0722 09:20:47.200583 22 delete.go:95] Deleting pod "simpletest.rc-9nkh7" in namespace "gc-7550"
  I0722 09:20:47.233295 22 delete.go:95] Deleting pod "simpletest.rc-b6ln5" in namespace "gc-7550"
  I0722 09:20:47.257510 22 delete.go:95] Deleting pod "simpletest.rc-b7kj4" in namespace "gc-7550"
  I0722 09:20:47.307720 22 delete.go:95] Deleting pod "simpletest.rc-bvsqw" in namespace "gc-7550"
  I0722 09:20:47.414841 22 delete.go:95] Deleting pod "simpletest.rc-bz75t" in namespace "gc-7550"
  I0722 09:20:47.450032 22 delete.go:95] Deleting pod "simpletest.rc-bztsb" in namespace "gc-7550"
  I0722 09:20:47.517933 22 delete.go:95] Deleting pod "simpletest.rc-cg26f" in namespace "gc-7550"
  I0722 09:20:47.542164 22 delete.go:95] Deleting pod "simpletest.rc-ch2j7" in namespace "gc-7550"
  I0722 09:20:47.622059 22 delete.go:95] Deleting pod "simpletest.rc-cwhxb" in namespace "gc-7550"
  I0722 09:20:47.700067 22 delete.go:95] Deleting pod "simpletest.rc-d4699" in namespace "gc-7550"
  I0722 09:20:47.762306 22 delete.go:95] Deleting pod "simpletest.rc-d5kmh" in namespace "gc-7550"
  I0722 09:20:47.797348 22 delete.go:95] Deleting pod "simpletest.rc-dg5wx" in namespace "gc-7550"
  I0722 09:20:47.834442 22 delete.go:95] Deleting pod "simpletest.rc-dw22s" in namespace "gc-7550"
  I0722 09:20:47.893149 22 delete.go:95] Deleting pod "simpletest.rc-fq95v" in namespace "gc-7550"
  I0722 09:20:47.941258 22 delete.go:95] Deleting pod "simpletest.rc-fswb9" in namespace "gc-7550"
  I0722 09:20:48.004467 22 delete.go:95] Deleting pod "simpletest.rc-g6w65" in namespace "gc-7550"
  I0722 09:20:48.044837 22 delete.go:95] Deleting pod "simpletest.rc-h7dgq" in namespace "gc-7550"
  I0722 09:20:48.098237 22 delete.go:95] Deleting pod "simpletest.rc-hdw7x" in namespace "gc-7550"
  I0722 09:20:48.159059 22 delete.go:95] Deleting pod "simpletest.rc-hp9bk" in namespace "gc-7550"
  E0722 09:20:48.168081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:20:48.203807 22 delete.go:95] Deleting pod "simpletest.rc-htq5b" in namespace "gc-7550"
  I0722 09:20:48.278375 22 delete.go:95] Deleting pod "simpletest.rc-hz9c4" in namespace "gc-7550"
  I0722 09:20:48.381290 22 delete.go:95] Deleting pod "simpletest.rc-j4hfv" in namespace "gc-7550"
  I0722 09:20:48.504779 22 delete.go:95] Deleting pod "simpletest.rc-j5r29" in namespace "gc-7550"
  I0722 09:20:48.647214 22 delete.go:95] Deleting pod "simpletest.rc-j87vk" in namespace "gc-7550"
  I0722 09:20:48.837179 22 delete.go:95] Deleting pod "simpletest.rc-jm2sl" in namespace "gc-7550"
  I0722 09:20:48.865776 22 delete.go:95] Deleting pod "simpletest.rc-jrt4t" in namespace "gc-7550"
  I0722 09:20:48.906392 22 delete.go:95] Deleting pod "simpletest.rc-kfv58" in namespace "gc-7550"
  I0722 09:20:48.939744 22 delete.go:95] Deleting pod "simpletest.rc-kfzsp" in namespace "gc-7550"
  I0722 09:20:48.985441 22 delete.go:95] Deleting pod "simpletest.rc-kgmqx" in namespace "gc-7550"
  I0722 09:20:49.058148 22 delete.go:95] Deleting pod "simpletest.rc-kj6xp" in namespace "gc-7550"
  I0722 09:20:49.107351 22 delete.go:95] Deleting pod "simpletest.rc-l2kw9" in namespace "gc-7550"
  I0722 09:20:49.130289 22 delete.go:95] Deleting pod "simpletest.rc-lpbkb" in namespace "gc-7550"
  E0722 09:20:49.168667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:20:49.200502 22 delete.go:95] Deleting pod "simpletest.rc-lzb98" in namespace "gc-7550"
  I0722 09:20:49.300076 22 delete.go:95] Deleting pod "simpletest.rc-m9lvf" in namespace "gc-7550"
  I0722 09:20:49.343230 22 delete.go:95] Deleting pod "simpletest.rc-mjqqk" in namespace "gc-7550"
  I0722 09:20:49.368131 22 delete.go:95] Deleting pod "simpletest.rc-mk7zc" in namespace "gc-7550"
  I0722 09:20:49.447351 22 delete.go:95] Deleting pod "simpletest.rc-mntsb" in namespace "gc-7550"
  I0722 09:20:49.497359 22 delete.go:95] Deleting pod "simpletest.rc-mqzsn" in namespace "gc-7550"
  I0722 09:20:49.516939 22 delete.go:95] Deleting pod "simpletest.rc-msr95" in namespace "gc-7550"
  I0722 09:20:49.564198 22 delete.go:95] Deleting pod "simpletest.rc-n4krk" in namespace "gc-7550"
  I0722 09:20:49.605595 22 delete.go:95] Deleting pod "simpletest.rc-nvdnn" in namespace "gc-7550"
  I0722 09:20:49.692952 22 delete.go:95] Deleting pod "simpletest.rc-p76th" in namespace "gc-7550"
  I0722 09:20:49.747204 22 delete.go:95] Deleting pod "simpletest.rc-pcp6l" in namespace "gc-7550"
  I0722 09:20:50.011746 22 delete.go:95] Deleting pod "simpletest.rc-pj5sd" in namespace "gc-7550"
  E0722 09:20:50.172564      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:20:50.183509 22 delete.go:95] Deleting pod "simpletest.rc-ptklh" in namespace "gc-7550"
  I0722 09:20:50.377028 22 delete.go:95] Deleting pod "simpletest.rc-q4c6v" in namespace "gc-7550"
  I0722 09:20:50.877958 22 delete.go:95] Deleting pod "simpletest.rc-q5p9f" in namespace "gc-7550"
  I0722 09:20:50.954759 22 delete.go:95] Deleting pod "simpletest.rc-q7lhq" in namespace "gc-7550"
  I0722 09:20:51.050693 22 delete.go:95] Deleting pod "simpletest.rc-q89fn" in namespace "gc-7550"
  E0722 09:20:51.171828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:20:51.172861 22 delete.go:95] Deleting pod "simpletest.rc-qjdf6" in namespace "gc-7550"
  I0722 09:20:51.261322 22 delete.go:95] Deleting pod "simpletest.rc-qpksk" in namespace "gc-7550"
  I0722 09:20:51.328254 22 delete.go:95] Deleting pod "simpletest.rc-qppjp" in namespace "gc-7550"
  I0722 09:20:51.431750 22 delete.go:95] Deleting pod "simpletest.rc-qs9k9" in namespace "gc-7550"
  I0722 09:20:51.470217 22 delete.go:95] Deleting pod "simpletest.rc-qv5c6" in namespace "gc-7550"
  I0722 09:20:51.547929 22 delete.go:95] Deleting pod "simpletest.rc-qwp8n" in namespace "gc-7550"
  I0722 09:20:51.623595 22 delete.go:95] Deleting pod "simpletest.rc-qz58c" in namespace "gc-7550"
  I0722 09:20:51.678259 22 delete.go:95] Deleting pod "simpletest.rc-r8cxv" in namespace "gc-7550"
  I0722 09:20:51.743145 22 delete.go:95] Deleting pod "simpletest.rc-r9zhd" in namespace "gc-7550"
  I0722 09:20:51.777320 22 delete.go:95] Deleting pod "simpletest.rc-rjqgh" in namespace "gc-7550"
  I0722 09:20:51.814724 22 delete.go:95] Deleting pod "simpletest.rc-rq2tw" in namespace "gc-7550"
  I0722 09:20:51.887968 22 delete.go:95] Deleting pod "simpletest.rc-s5w8v" in namespace "gc-7550"
  E0722 09:20:52.173371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:20:52.189386 22 delete.go:95] Deleting pod "simpletest.rc-s67lg" in namespace "gc-7550"
  I0722 09:20:52.394351 22 delete.go:95] Deleting pod "simpletest.rc-scntl" in namespace "gc-7550"
  I0722 09:20:52.494378 22 delete.go:95] Deleting pod "simpletest.rc-tfk69" in namespace "gc-7550"
  I0722 09:20:52.574384 22 delete.go:95] Deleting pod "simpletest.rc-tgkm9" in namespace "gc-7550"
  I0722 09:20:52.708245 22 delete.go:95] Deleting pod "simpletest.rc-th2r7" in namespace "gc-7550"
  I0722 09:20:52.770545 22 delete.go:95] Deleting pod "simpletest.rc-tj6x2" in namespace "gc-7550"
  I0722 09:20:52.829086 22 delete.go:95] Deleting pod "simpletest.rc-txt9l" in namespace "gc-7550"
  I0722 09:20:52.878970 22 delete.go:95] Deleting pod "simpletest.rc-v4qtm" in namespace "gc-7550"
  I0722 09:20:52.934537 22 delete.go:95] Deleting pod "simpletest.rc-vjkx9" in namespace "gc-7550"
  I0722 09:20:52.972880 22 delete.go:95] Deleting pod "simpletest.rc-vmz4x" in namespace "gc-7550"
  I0722 09:20:53.007734 22 delete.go:95] Deleting pod "simpletest.rc-w6gjp" in namespace "gc-7550"
  I0722 09:20:53.041016 22 delete.go:95] Deleting pod "simpletest.rc-w97h8" in namespace "gc-7550"
  I0722 09:20:53.073567 22 delete.go:95] Deleting pod "simpletest.rc-wtttw" in namespace "gc-7550"
  I0722 09:20:53.114103 22 delete.go:95] Deleting pod "simpletest.rc-x27cw" in namespace "gc-7550"
  E0722 09:20:53.175015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:20:53.192156 22 delete.go:95] Deleting pod "simpletest.rc-xchfj" in namespace "gc-7550"
  I0722 09:20:53.335193 22 delete.go:95] Deleting pod "simpletest.rc-xcv99" in namespace "gc-7550"
  I0722 09:20:53.369353 22 delete.go:95] Deleting pod "simpletest.rc-xlg8z" in namespace "gc-7550"
  I0722 09:20:53.485053 22 delete.go:95] Deleting pod "simpletest.rc-z7kt4" in namespace "gc-7550"
  I0722 09:20:53.550463 22 delete.go:95] Deleting pod "simpletest.rc-ztdjj" in namespace "gc-7550"
  I0722 09:20:53.615429 22 delete.go:95] Deleting pod "simpletest.rc-zwt7c" in namespace "gc-7550"
  I0722 09:20:53.717500 22 delete.go:95] Deleting pod "simpletest.rc-zz6gp" in namespace "gc-7550"
  I0722 09:20:53.755457 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7550" for this suite. @ 07/22/25 09:20:53.788
â€¢ [48.853 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 07/22/25 09:20:53.858
  I0722 09:20:53.858340 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:20:53.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:20:53.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:20:53.921
  STEP: Creating the pod @ 07/22/25 09:20:53.926
  E0722 09:20:54.178535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:55.188060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:56.188937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:57.192459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:20:58.197692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:20:58.556520 22 pod_client.go:173] Successfully updated pod "annotationupdatee853e25f-747d-4146-bc07-4f458919fb0f"
  E0722 09:20:59.197738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:00.197957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:01.203660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:02.204874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:21:02.608005 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-368" for this suite. @ 07/22/25 09:21:02.612
â€¢ [8.760 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 07/22/25 09:21:02.618
  I0722 09:21:02.618736 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:21:02.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:21:02.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:21:02.635
  STEP: Setting up server cert @ 07/22/25 09:21:02.654
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:21:03.015
  STEP: Deploying the webhook pod @ 07/22/25 09:21:03.019
  STEP: Wait for the deployment to be ready @ 07/22/25 09:21:03.03
  I0722 09:21:03.036502 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0722 09:21:03.214367      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:04.229561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:21:05.046
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:21:05.063
  E0722 09:21:05.238102      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:21:06.072649 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/22/25 09:21:06.077
  I0722 09:21:06.141928 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2553" for this suite. @ 07/22/25 09:21:06.145
  STEP: Destroying namespace "webhook-markers-7484" for this suite. @ 07/22/25 09:21:06.153
â€¢ [3.544 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 07/22/25 09:21:06.163
  I0722 09:21:06.163317 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 09:21:06.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:21:06.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:21:06.182
  STEP: Creating configMap with name configmap-test-upd-c9b7ab5a-2003-4e39-adc9-a429ace4cde1 @ 07/22/25 09:21:06.189
  STEP: Creating the pod @ 07/22/25 09:21:06.194
  E0722 09:21:06.239994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:07.240080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:08.240913      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-c9b7ab5a-2003-4e39-adc9-a429ace4cde1 @ 07/22/25 09:21:08.244
  STEP: waiting to observe update in volume @ 07/22/25 09:21:08.25
  E0722 09:21:09.245888      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:10.246202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:21:10.267618 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7247" for this suite. @ 07/22/25 09:21:10.271
â€¢ [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/22/25 09:21:10.28
  I0722 09:21:10.280910 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename proxy @ 07/22/25 09:21:10.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:21:10.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:21:10.299
  STEP: starting an echo server on multiple ports @ 07/22/25 09:21:10.32
  I0722 09:21:10.366192 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0722 09:21:11.257531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:12.260377      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:21:12.381899      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:21:12.382037 22 proxy.go:273] setup took 2.079996713s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/22/25 09:21:12.382
  I0722 09:21:12.391291 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 8.904166ms)
  I0722 09:21:12.391373 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 8.996333ms)
  I0722 09:21:12.393235 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 10.788675ms)
  I0722 09:21:12.394003 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 11.770596ms)
  I0722 09:21:12.394434 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 12.272723ms)
  I0722 09:21:12.394695 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 12.36089ms)
  I0722 09:21:12.397792 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 15.312528ms)
  I0722 09:21:12.400255 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 17.682956ms)
  I0722 09:21:12.400263 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 17.767081ms)
  I0722 09:21:12.400294 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 18.002416ms)
  I0722 09:21:12.401715 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 19.182796ms)
  I0722 09:21:12.401886 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 19.275171ms)
  I0722 09:21:12.402201 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 19.627798ms)
  I0722 09:21:12.403804 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 21.447599ms)
  I0722 09:21:12.403812 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 21.592724ms)
  I0722 09:21:12.403851 22 proxy.go:601] (0) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 21.404765ms)
  I0722 09:21:12.408062 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 3.687975ms)
  I0722 09:21:12.408082 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 4.083019ms)
  I0722 09:21:12.408110 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 3.654725ms)
  I0722 09:21:12.408647 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 4.297228ms)
  I0722 09:21:12.409139 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 4.898648ms)
  I0722 09:21:12.409144 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 4.732063ms)
  I0722 09:21:12.409176 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 4.991898ms)
  I0722 09:21:12.409177 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 5.177023ms)
  I0722 09:21:12.410131 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 5.978152ms)
  I0722 09:21:12.410229 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 6.023236ms)
  I0722 09:21:12.410273 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 5.838527ms)
  I0722 09:21:12.410586 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 6.103695ms)
  I0722 09:21:12.410714 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 6.439613ms)
  I0722 09:21:12.411688 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 7.184158ms)
  I0722 09:21:12.411702 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 7.585201ms)
  I0722 09:21:12.411714 22 proxy.go:601] (1) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 7.499618ms)
  I0722 09:21:12.415883 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 4.057519ms)
  I0722 09:21:12.416763 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 4.839398ms)
  I0722 09:21:12.417245 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 5.075399ms)
  I0722 09:21:12.417288 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 5.460859ms)
  I0722 09:21:12.417299 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.121273ms)
  I0722 09:21:12.418160 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 6.282028ms)
  I0722 09:21:12.418237 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 6.430488ms)
  I0722 09:21:12.418700 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 6.623197ms)
  I0722 09:21:12.419129 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 7.018657ms)
  I0722 09:21:12.419176 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 7.1147ms)
  I0722 09:21:12.419605 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 7.579618ms)
  I0722 09:21:12.419725 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 7.826244ms)
  I0722 09:21:12.419782 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 7.899786ms)
  I0722 09:21:12.419792 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 7.639952ms)
  I0722 09:21:12.420190 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 8.084037ms)
  I0722 09:21:12.420624 22 proxy.go:601] (2) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 8.481664ms)
  I0722 09:21:12.424841 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 3.969519ms)
  I0722 09:21:12.425266 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 4.260895ms)
  I0722 09:21:12.425759 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 5.032607ms)
  I0722 09:21:12.425824 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 4.722938ms)
  I0722 09:21:12.425863 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 5.074524ms)
  I0722 09:21:12.425869 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.047523ms)
  I0722 09:21:12.425878 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 4.903022ms)
  I0722 09:21:12.426504 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 5.740109ms)
  I0722 09:21:12.426525 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 5.683359ms)
  I0722 09:21:12.426661 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 5.623442ms)
  I0722 09:21:12.427354 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 6.675863ms)
  I0722 09:21:12.427670 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 6.651114ms)
  I0722 09:21:12.428135 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 7.228283ms)
  I0722 09:21:12.428778 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 7.909953ms)
  I0722 09:21:12.428798 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 8.041537ms)
  I0722 09:21:12.428804 22 proxy.go:601] (3) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 7.974412ms)
  I0722 09:21:12.432399 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 3.401599ms)
  I0722 09:21:12.432672 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 3.694684ms)
  I0722 09:21:12.432996 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 3.953976ms)
  I0722 09:21:12.433015 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 3.853268ms)
  I0722 09:21:12.433023 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 3.849726ms)
  I0722 09:21:12.433030 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 3.971601ms)
  I0722 09:21:12.435045 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 5.843402ms)
  I0722 09:21:12.435449 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 6.318112ms)
  I0722 09:21:12.435469 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 6.36307ms)
  I0722 09:21:12.435478 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 6.341363ms)
  I0722 09:21:12.435483 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 6.610155ms)
  I0722 09:21:12.435991 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 6.773448ms)
  I0722 09:21:12.436024 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 6.81924ms)
  I0722 09:21:12.436043 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 6.952323ms)
  I0722 09:21:12.437228 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 8.297704ms)
  I0722 09:21:12.437240 22 proxy.go:601] (4) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 8.15862ms)
  I0722 09:21:12.440859 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 2.915972ms)
  I0722 09:21:12.440973 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 3.6486ms)
  I0722 09:21:12.442042 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 4.143061ms)
  I0722 09:21:12.442079 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 4.217853ms)
  I0722 09:21:12.442342 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 4.843772ms)
  I0722 09:21:12.442800 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.075607ms)
  I0722 09:21:12.442827 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 5.461984ms)
  I0722 09:21:12.442912 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 5.606692ms)
  I0722 09:21:12.442922 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 5.226649ms)
  I0722 09:21:12.442930 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 5.278274ms)
  I0722 09:21:12.443311 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.400899ms)
  I0722 09:21:12.443662 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 6.15407ms)
  I0722 09:21:12.444005 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 6.529863ms)
  I0722 09:21:12.444019 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 6.634573ms)
  I0722 09:21:12.444025 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 6.596572ms)
  I0722 09:21:12.444471 22 proxy.go:601] (5) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 6.657698ms)
  I0722 09:21:12.447513 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 2.995389ms)
  I0722 09:21:12.448482 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 3.581267ms)
  I0722 09:21:12.449073 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 4.34852ms)
  I0722 09:21:12.449095 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 4.509729ms)
  I0722 09:21:12.449471 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 4.653897ms)
  I0722 09:21:12.449679 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 4.986065ms)
  I0722 09:21:12.449741 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 5.07119ms)
  I0722 09:21:12.449896 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 5.062315ms)
  I0722 09:21:12.450443 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 5.88461ms)
  I0722 09:21:12.450475 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 5.815735ms)
  I0722 09:21:12.450484 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 5.629984ms)
  I0722 09:21:12.450494 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 5.687567ms)
  I0722 09:21:12.450649 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.726193ms)
  I0722 09:21:12.450716 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 5.974861ms)
  I0722 09:21:12.451661 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 6.86799ms)
  I0722 09:21:12.451763 22 proxy.go:601] (6) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 7.14695ms)
  I0722 09:21:12.456024 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 4.060226ms)
  I0722 09:21:12.457089 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.20594ms)
  I0722 09:21:12.457131 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 5.157482ms)
  I0722 09:21:12.458018 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 6.198112ms)
  I0722 09:21:12.458034 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 5.946902ms)
  I0722 09:21:12.458067 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 6.183403ms)
  I0722 09:21:12.458079 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 6.047361ms)
  I0722 09:21:12.458087 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 5.970194ms)
  I0722 09:21:12.458093 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 6.31007ms)
  I0722 09:21:12.458098 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 5.963611ms)
  I0722 09:21:12.458885 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 6.816448ms)
  I0722 09:21:12.458999 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 6.980907ms)
  I0722 09:21:12.459182 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 7.003282ms)
  I0722 09:21:12.459324 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 7.413118ms)
  I0722 09:21:12.459801 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 7.808786ms)
  I0722 09:21:12.460347 22 proxy.go:601] (7) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 8.399997ms)
  I0722 09:21:12.464342 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 3.873726ms)
  I0722 09:21:12.464356 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 3.765517ms)
  I0722 09:21:12.464341 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 3.696975ms)
  I0722 09:21:12.464578 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 3.958434ms)
  I0722 09:21:12.465424 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 4.881064ms)
  I0722 09:21:12.465482 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 5.070106ms)
  I0722 09:21:12.466333 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 5.708609ms)
  I0722 09:21:12.466362 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 5.667526ms)
  I0722 09:21:12.466368 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.685901ms)
  I0722 09:21:12.467046 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 6.592238ms)
  I0722 09:21:12.467126 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 6.52603ms)
  I0722 09:21:12.467133 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 6.673198ms)
  I0722 09:21:12.467530 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 7.022907ms)
  I0722 09:21:12.467539 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 6.887324ms)
  I0722 09:21:12.467709 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 7.216575ms)
  I0722 09:21:12.467728 22 proxy.go:601] (8) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 7.312825ms)
  I0722 09:21:12.470902 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 3.147181ms)
  I0722 09:21:12.471178 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 3.365141ms)
  I0722 09:21:12.472054 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 4.153644ms)
  I0722 09:21:12.472074 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 4.185269ms)
  I0722 09:21:12.472684 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 4.742147ms)
  I0722 09:21:12.472712 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 4.781564ms)
  I0722 09:21:12.473402 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.448692ms)
  I0722 09:21:12.474093 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 6.264612ms)
  I0722 09:21:12.474203 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 6.226779ms)
  I0722 09:21:12.474704 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 6.719072ms)
  I0722 09:21:12.475222 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 7.457409ms)
  I0722 09:21:12.475241 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 7.298575ms)
  I0722 09:21:12.475260 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 7.364617ms)
  I0722 09:21:12.475444 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 7.611743ms)
  I0722 09:21:12.475786 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 7.874994ms)
  I0722 09:21:12.475795 22 proxy.go:601] (9) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 7.771328ms)
  I0722 09:21:12.479283 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 3.435932ms)
  I0722 09:21:12.479314 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 3.224765ms)
  I0722 09:21:12.479625 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 3.546683ms)
  I0722 09:21:12.480134 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 3.912226ms)
  I0722 09:21:12.480163 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 4.219811ms)
  I0722 09:21:12.480685 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 4.495187ms)
  I0722 09:21:12.481759 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 5.556525ms)
  I0722 09:21:12.481857 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 5.645318ms)
  I0722 09:21:12.481931 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 5.883569ms)
  I0722 09:21:12.481945 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 5.780819ms)
  I0722 09:21:12.481958 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 5.991277ms)
  I0722 09:21:12.482676 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 6.549488ms)
  I0722 09:21:12.483068 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 6.959157ms)
  I0722 09:21:12.483122 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 6.976907ms)
  I0722 09:21:12.483130 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 6.902657ms)
  I0722 09:21:12.483156 22 proxy.go:601] (10) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 6.900114ms)
  I0722 09:21:12.486212 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 2.948222ms)
  I0722 09:21:12.487016 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 3.716975ms)
  I0722 09:21:12.487511 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 4.075518ms)
  I0722 09:21:12.487515 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 4.163394ms)
  I0722 09:21:12.487844 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 4.448812ms)
  I0722 09:21:12.487852 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 4.39302ms)
  I0722 09:21:12.487854 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 4.429895ms)
  I0722 09:21:12.487880 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 4.506438ms)
  I0722 09:21:12.488177 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 4.819522ms)
  I0722 09:21:12.488512 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 5.313191ms)
  I0722 09:21:12.488584 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 5.264274ms)
  I0722 09:21:12.488978 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 5.641526ms)
  I0722 09:21:12.489397 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 5.951569ms)
  I0722 09:21:12.489453 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 6.087194ms)
  I0722 09:21:12.489464 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 5.990653ms)
  I0722 09:21:12.490237 22 proxy.go:601] (11) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 7.046574ms)
  I0722 09:21:12.496105 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 5.614151ms)
  I0722 09:21:12.496081 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 5.321983ms)
  I0722 09:21:12.496909 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 6.383487ms)
  I0722 09:21:12.499141 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 8.68254ms)
  I0722 09:21:12.499174 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 8.840082ms)
  I0722 09:21:12.499174 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 8.78079ms)
  I0722 09:21:12.499186 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 8.480289ms)
  I0722 09:21:12.499583 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 8.795998ms)
  I0722 09:21:12.499857 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 9.486169ms)
  I0722 09:21:12.500277 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 9.848712ms)
  I0722 09:21:12.500341 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 9.689586ms)
  I0722 09:21:12.501504 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 10.889217ms)
  I0722 09:21:12.501504 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 10.915925ms)
  I0722 09:21:12.502076 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 11.33951ms)
  I0722 09:21:12.502095 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 11.270677ms)
  I0722 09:21:12.502276 22 proxy.go:601] (12) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 11.96668ms)
  I0722 09:21:12.508016 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.419608ms)
  I0722 09:21:12.508091 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 5.618859ms)
  I0722 09:21:12.508595 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 6.013403ms)
  I0722 09:21:12.508608 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 5.975235ms)
  I0722 09:21:12.508607 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 6.001694ms)
  I0722 09:21:12.508628 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.969069ms)
  I0722 09:21:12.508644 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 6.133903ms)
  I0722 09:21:12.508650 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 6.285487ms)
  I0722 09:21:12.508654 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 6.10457ms)
  I0722 09:21:12.519197 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 16.73191ms)
  I0722 09:21:12.519237 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 16.716868ms)
  I0722 09:21:12.519204 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 16.758869ms)
  I0722 09:21:12.519281 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 16.664535ms)
  I0722 09:21:12.519279 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 16.74816ms)
  I0722 09:21:12.519319 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 16.653076ms)
  I0722 09:21:12.519910 22 proxy.go:601] (13) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 17.278954ms)
  I0722 09:21:12.524513 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 4.314561ms)
  I0722 09:21:12.524565 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 4.501229ms)
  I0722 09:21:12.524663 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 4.610563ms)
  I0722 09:21:12.524682 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 4.403145ms)
  I0722 09:21:12.525111 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.036981ms)
  I0722 09:21:12.525905 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 5.678901ms)
  I0722 09:21:12.526324 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 6.116445ms)
  I0722 09:21:12.526324 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 6.170279ms)
  I0722 09:21:12.527218 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 6.909906ms)
  I0722 09:21:12.527427 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 7.236033ms)
  I0722 09:21:12.527766 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 7.583826ms)
  I0722 09:21:12.527782 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 7.659036ms)
  I0722 09:21:12.528682 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 8.446413ms)
  I0722 09:21:12.528717 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 8.475414ms)
  I0722 09:21:12.528874 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 8.607748ms)
  I0722 09:21:12.528911 22 proxy.go:601] (14) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 8.936874ms)
  I0722 09:21:12.534117 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 4.895356ms)
  I0722 09:21:12.534138 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 5.204857ms)
  I0722 09:21:12.534139 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 4.75248ms)
  I0722 09:21:12.534153 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 4.729605ms)
  I0722 09:21:12.534156 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 4.889689ms)
  I0722 09:21:12.534161 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 5.096774ms)
  I0722 09:21:12.534162 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 4.815397ms)
  I0722 09:21:12.534166 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 4.791521ms)
  I0722 09:21:12.534156 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 5.114023ms)
  I0722 09:21:12.534185 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 4.75723ms)
  I0722 09:21:12.534169 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 5.086106ms)
  I0722 09:21:12.534795 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 5.39015ms)
  I0722 09:21:12.534814 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 5.401191ms)
  I0722 09:21:12.535634 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 6.239362ms)
  I0722 09:21:12.535650 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 6.337362ms)
  I0722 09:21:12.535661 22 proxy.go:601] (15) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 6.407863ms)
  I0722 09:21:12.540120 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 4.32777ms)
  I0722 09:21:12.540122 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 4.214436ms)
  I0722 09:21:12.540174 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 4.485771ms)
  I0722 09:21:12.540190 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 4.445228ms)
  I0722 09:21:12.540665 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 4.751981ms)
  I0722 09:21:12.540703 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 4.72698ms)
  I0722 09:21:12.541354 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 5.491358ms)
  I0722 09:21:12.541500 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 5.56465ms)
  I0722 09:21:12.542057 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 6.17907ms)
  I0722 09:21:12.542482 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 6.65928ms)
  I0722 09:21:12.543028 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 7.345075ms)
  I0722 09:21:12.543094 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 7.364408ms)
  I0722 09:21:12.543119 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 7.163408ms)
  I0722 09:21:12.543822 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 8.022287ms)
  I0722 09:21:12.543844 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 7.847786ms)
  I0722 09:21:12.543857 22 proxy.go:601] (16) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 7.971412ms)
  I0722 09:21:12.549311 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 5.112565ms)
  I0722 09:21:12.549354 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 5.291858ms)
  I0722 09:21:12.549368 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 5.015565ms)
  I0722 09:21:12.549380 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 5.270024ms)
  I0722 09:21:12.550230 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 5.796901ms)
  I0722 09:21:12.550278 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 5.951527ms)
  I0722 09:21:12.550821 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 6.675781ms)
  I0722 09:21:12.550836 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 6.306404ms)
  I0722 09:21:12.550843 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 6.967824ms)
  I0722 09:21:12.551948 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 7.495826ms)
  I0722 09:21:12.552389 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 8.361996ms)
  I0722 09:21:12.552388 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 7.994412ms)
  I0722 09:21:12.552386 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 7.893995ms)
  I0722 09:21:12.552406 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 8.124704ms)
  I0722 09:21:12.553423 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 9.430835ms)
  I0722 09:21:12.553431 22 proxy.go:601] (17) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 9.167792ms)
  I0722 09:21:12.557588 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 4.129519ms)
  I0722 09:21:12.557646 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 3.885143ms)
  I0722 09:21:12.557666 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 4.138561ms)
  I0722 09:21:12.557701 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 4.149644ms)
  I0722 09:21:12.568445 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 14.694651ms)
  I0722 09:21:12.568833 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 15.074319ms)
  I0722 09:21:12.568831 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 15.115028ms)
  I0722 09:21:12.568917 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 15.269112ms)
  I0722 09:21:12.568998 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 15.350154ms)
  I0722 09:21:12.569005 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 15.32432ms)
  I0722 09:21:12.569009 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 15.540238ms)
  I0722 09:21:12.569017 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 15.284361ms)
  I0722 09:21:12.569032 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 15.468738ms)
  I0722 09:21:12.569038 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 15.554863ms)
  I0722 09:21:12.569070 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 15.382195ms)
  I0722 09:21:12.571623 22 proxy.go:601] (18) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 18.021208ms)
  I0722 09:21:12.579031 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:460/proxy/: tls baz (200; 6.911698ms)
  I0722 09:21:12.581203 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 9.466835ms)
  I0722 09:21:12.581238 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:160/proxy/: foo (200; 8.953666ms)
  I0722 09:21:12.581283 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:1080/proxy/r... (200; 8.844541ms)
  I0722 09:21:12.581296 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n/proxy/rewriteme">... (200; 9.089167ms)
  I0722 09:21:12.581317 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:443/proxy/t... (200; 9.092708ms)
  I0722 09:21:12.581568 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/pods/http:proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 9.581794ms)
  I0722 09:21:12.581735 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:162/proxy/: bar (200; 9.323001ms)
  I0722 09:21:12.581824 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname2/proxy/: bar (200; 9.706919ms)
  I0722 09:21:12.581855 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname2/proxy/: bar (200; 9.894796ms)
  I0722 09:21:12.581891 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/services/http:proxy-service-kgswz:portname1/proxy/: foo (200; 9.719711ms)
  I0722 09:21:12.582038 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-1498/pods/proxy-service-kgswz-75994464f-nqp6n:1080/proxy/rewrit... (200; 9.644753ms)
  I0722 09:21:12.582064 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname1/proxy/: tls baz (200; 9.697587ms)
  I0722 09:21:12.582073 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/services/proxy-service-kgswz:portname1/proxy/: foo (200; 9.770795ms)
  I0722 09:21:12.582082 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/services/https:proxy-service-kgswz:tlsportname2/proxy/: tls qux (200; 9.891087ms)
  I0722 09:21:12.582096 22 proxy.go:601] (19) /api/v1/namespaces/proxy-1498/pods/https:proxy-service-kgswz-75994464f-nqp6n:462/proxy/: tls qux (200; 9.949213ms)
  I0722 09:21:12.589886 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1498" for this suite. @ 07/22/25 09:21:12.593
â€¢ [2.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 07/22/25 09:21:12.602
  I0722 09:21:12.602444 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 09:21:12.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:21:12.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:21:12.634
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/22/25 09:21:12.637
  E0722 09:21:13.260639      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:14.262664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:15.268228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:16.270828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:21:16.66
  I0722 09:21:16.663020 22 output.go:207] Trying to get logs from node cncf1 pod pod-de508395-4b67-42aa-a67f-674d6f9d851d container test-container: <nil>
  STEP: delete the pod @ 07/22/25 09:21:16.667
  I0722 09:21:16.679017 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8641" for this suite. @ 07/22/25 09:21:16.681
â€¢ [4.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 07/22/25 09:21:16.687
  I0722 09:21:16.687124 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:21:16.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:21:16.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:21:16.7
  STEP: creating service in namespace services-4206 @ 07/22/25 09:21:16.703
  STEP: creating service affinity-nodeport-transition in namespace services-4206 @ 07/22/25 09:21:16.703
  I0722 09:21:16.730082 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0722 09:21:17.271409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:18.271801      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:21:18.750779 22 resource.go:361] Creating new exec pod
  E0722 09:21:19.272102      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:20.272525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:21:20.772142 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4206 exec execpod-affinitypxd6k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0722 09:21:20.903343 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.152.183.174) 80 port [tcp/http] succeeded!\n"
  I0722 09:21:20.903394 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:21:20.903444 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4206 exec execpod-affinitypxd6k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.174 80'
  I0722 09:21:20.995122 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.174 80\nConnection to 10.152.183.174 80 port [tcp/http] succeeded!\n"
  I0722 09:21:20.995160 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:21:20.995250 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4206 exec execpod-affinitypxd6k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.31 31608'
  I0722 09:21:21.082843 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.105.31 31608\nConnection to 192.168.105.31 31608 port [tcp/*] succeeded!\n"
  I0722 09:21:21.082891 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:21:21.082973 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4206 exec execpod-affinitypxd6k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.32 31608'
  I0722 09:21:21.233679 22 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.105.32 31608\n+ echo hostName\nConnection to 192.168.105.32 31608 port [tcp/*] succeeded!\n"
  I0722 09:21:21.233753 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:21:21.243741 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4206 exec execpod-affinitypxd6k -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/ ; done'
  E0722 09:21:21.272858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:21:21.378741 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n"
  I0722 09:21:21.378789 22 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-9mmmm\naffinity-nodeport-transition-7d57658b6c-9mmmm\naffinity-nodeport-transition-7d57658b6c-9mmmm\naffinity-nodeport-transition-7d57658b6c-9mmmm\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-9mmmm\naffinity-nodeport-transition-7d57658b6c-qx7vs\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-9mmmm\naffinity-nodeport-transition-7d57658b6c-9mmmm\naffinity-nodeport-transition-7d57658b6c-qx7vs\naffinity-nodeport-transition-7d57658b6c-qx7vs\naffinity-nodeport-transition-7d57658b6c-9mmmm\naffinity-nodeport-transition-7d57658b6c-qx7vs\naffinity-nodeport-transition-7d57658b6c-qx7vs\naffinity-nodeport-transition-7d57658b6c-9mmmm"
  I0722 09:21:21.378797 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-9mmmm
  I0722 09:21:21.378803 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-9mmmm
  I0722 09:21:21.378807 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-9mmmm
  I0722 09:21:21.378810 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-9mmmm
  I0722 09:21:21.378814 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.378818 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-9mmmm
  I0722 09:21:21.378821 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qx7vs
  I0722 09:21:21.378824 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.378839 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-9mmmm
  I0722 09:21:21.378842 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-9mmmm
  I0722 09:21:21.378846 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qx7vs
  I0722 09:21:21.378848 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qx7vs
  I0722 09:21:21.378851 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-9mmmm
  I0722 09:21:21.378855 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qx7vs
  I0722 09:21:21.378868 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qx7vs
  I0722 09:21:21.378871 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-9mmmm
  I0722 09:21:21.386993 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4206 exec execpod-affinitypxd6k -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/ ; done'
  I0722 09:21:21.504857 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:31608/\n"
  I0722 09:21:21.504918 22 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh\naffinity-nodeport-transition-7d57658b6c-qm9fh"
  I0722 09:21:21.504928 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504936 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504940 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504943 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504960 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504963 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504967 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504970 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504973 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504977 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504980 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504985 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.504997 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.505000 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.505005 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.505009 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qm9fh
  I0722 09:21:21.505064 22 service.go:4352] Cleaning up the exec pod
  I0722 09:21:21.674174 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4206" for this suite. @ 07/22/25 09:21:21.679
â€¢ [5.010 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/22/25 09:21:21.697
  I0722 09:21:21.697087 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename endpointslice @ 07/22/25 09:21:21.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:21:21.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:21:21.737
  E0722 09:21:22.273382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:23.273826      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/22/25 09:21:23.904
  I0722 09:21:23.911352      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 07/22/25 09:21:23.911
  I0722 09:21:23.920542      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/22/25 09:21:23.92
  I0722 09:21:23.928151      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 07/22/25 09:21:23.928
  I0722 09:21:23.950686 22 endpointslice.go:938] EndpointSlice for Service endpointslice-5934/example-named-port not found
  E0722 09:21:24.274341      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:25.291780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:21:25.970159      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:21:25.970709 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5934" for this suite. @ 07/22/25 09:21:25.973
â€¢ [4.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 07/22/25 09:21:25.979
  I0722 09:21:25.979733 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 09:21:25.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:21:25.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:21:25.994
  STEP: Creating simple DaemonSet "daemon-set" @ 07/22/25 09:21:26.007
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 09:21:26.011
  I0722 09:21:26.018042 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:21:26.018137 22 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0722 09:21:26.293174      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:21:27.018499 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:21:27.018539 22 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0722 09:21:27.293676      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:21:28.026652 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 09:21:28.026699 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/22/25 09:21:28.03
  STEP: DeleteCollection of the DaemonSets @ 07/22/25 09:21:28.032
  STEP: Verify that ReplicaSets have been deleted @ 07/22/25 09:21:28.038
  I0722 09:21:28.046070 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22667"},"items":null}

  I0722 09:21:28.049890 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22667"},"items":[{"metadata":{"name":"daemon-set-c4dsx","generateName":"daemon-set-","namespace":"daemonsets-3641","uid":"3c4d6708-d6ad-43fe-b70e-23da204345e1","resourceVersion":"22664","generation":1,"creationTimestamp":"2025-07-22T09:21:26Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"b465b8d8df7b8408f45f6e24db11d6ac239a29a1fea63677a1aebd853b15c500","cni.projectcalico.org/podIP":"10.1.161.54/32","cni.projectcalico.org/podIPs":"10.1.161.54/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"636e954a-792e-40d4-896e-352838d22014","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-07-22T09:21:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-07-22T09:21:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"636e954a-792e-40d4-896e-352838d22014\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-07-22T09:21:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.161.54\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-82vx7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-82vx7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T09:21:27Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T09:21:26Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T09:21:27Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T09:21:27Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T09:21:26Z"}],"hostIP":"192.168.105.32","hostIPs":[{"ip":"192.168.105.32"}],"podIP":"10.1.161.54","podIPs":[{"ip":"10.1.161.54"}],"startTime":"2025-07-22T09:21:26Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-22T09:21:26Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://29a594be2ec7ad95f6f0c87c06dd8bc7ca8a9d0787595431dde20e95158951aa","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-82vx7","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-lxbrk","generateName":"daemon-set-","namespace":"daemonsets-3641","uid":"70b151c7-062b-49c8-b0d7-8158d652935d","resourceVersion":"22662","generation":1,"creationTimestamp":"2025-07-22T09:21:26Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"4c21e3e78ad6ce61a9bb6aa8a3e9ef4e581e06a0d4fa8dbd0888eef557cb7b4f","cni.projectcalico.org/podIP":"10.1.209.76/32","cni.projectcalico.org/podIPs":"10.1.209.76/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"636e954a-792e-40d4-896e-352838d22014","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-07-22T09:21:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-07-22T09:21:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"636e954a-792e-40d4-896e-352838d22014\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-07-22T09:21:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.209.76\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2j9k5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2j9k5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T09:21:27Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T09:21:26Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T09:21:27Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T09:21:27Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T09:21:26Z"}],"hostIP":"192.168.105.31","hostIPs":[{"ip":"192.168.105.31"}],"podIP":"10.1.209.76","podIPs":[{"ip":"10.1.209.76"}],"startTime":"2025-07-22T09:21:26Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-22T09:21:26Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://6d36192175e7cf5399529a759ee79871f6b56e2939aae860a0b3cf505b01a7cb","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-2j9k5","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0722 09:21:28.058394 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3641" for this suite. @ 07/22/25 09:21:28.06
â€¢ [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 07/22/25 09:21:28.068
  I0722 09:21:28.068485 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 09:21:28.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:21:28.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:21:28.081
  STEP: Creating configMap with name cm-test-opt-del-92100027-d286-494d-8431-f9d930a4fb3c @ 07/22/25 09:21:28.085
  STEP: Creating configMap with name cm-test-opt-upd-0ea5b5b1-a1cb-49b4-89d6-440c87f910dc @ 07/22/25 09:21:28.089
  STEP: Creating the pod @ 07/22/25 09:21:28.093
  E0722 09:21:28.301999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:29.302056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-92100027-d286-494d-8431-f9d930a4fb3c @ 07/22/25 09:21:30.124
  STEP: Updating configmap cm-test-opt-upd-0ea5b5b1-a1cb-49b4-89d6-440c87f910dc @ 07/22/25 09:21:30.131
  STEP: Creating configMap with name cm-test-opt-create-a4d173f9-484d-4acd-bf86-6cd148b44443 @ 07/22/25 09:21:30.137
  STEP: waiting to observe update in volume @ 07/22/25 09:21:30.141
  E0722 09:21:30.303123      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:31.314254      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:21:32.166329 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8003" for this suite. @ 07/22/25 09:21:32.168
â€¢ [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 07/22/25 09:21:32.175
  I0722 09:21:32.175141 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename volumeattachment @ 07/22/25 09:21:32.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:21:32.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:21:32.187
  STEP: Create VolumeAttachment "va-e2e-p6ql5" on node "cncf2" @ 07/22/25 09:21:32.192
  STEP: Patch VolumeAttachment "va-e2e-p6ql5" on node "cncf2" @ 07/22/25 09:21:32.198
  STEP: Reading "va-e2e-p6ql5" Status @ 07/22/25 09:21:32.203
  STEP: Patching "va-e2e-p6ql5" Status @ 07/22/25 09:21:32.206
  I0722 09:21:32.210427 22 volume_attachment.go:224] "va-e2e-p6ql5" Status.Attached: true
  STEP: Updating "va-e2e-p6ql5" Status @ 07/22/25 09:21:32.21
  I0722 09:21:32.216146 22 volume_attachment.go:240] "va-e2e-p6ql5" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-p6ql5" on node "cncf2" @ 07/22/25 09:21:32.216
  STEP: Confirm deletion of VolumeAttachment "va-e2e-p6ql5" on node "cncf2" @ 07/22/25 09:21:32.22
  I0722 09:21:32.223363 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-5825" for this suite. @ 07/22/25 09:21:32.226
â€¢ [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 07/22/25 09:21:32.232
  I0722 09:21:32.232210 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 09:21:32.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:21:32.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:21:32.244
  STEP: Creating ServiceAccount "e2e-sa-r9mp7"  @ 07/22/25 09:21:32.247
  I0722 09:21:32.251185 22 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-r9mp7"  @ 07/22/25 09:21:32.251
  I0722 09:21:32.257356 22 service_accounts.go:867] AutomountServiceAccountToken: true
  I0722 09:21:32.257473 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6883" for this suite. @ 07/22/25 09:21:32.259
â€¢ [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 07/22/25 09:21:32.267
  I0722 09:21:32.267380 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename cronjob @ 07/22/25 09:21:32.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:21:32.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:21:32.28
  STEP: Creating a ReplaceConcurrent cronjob @ 07/22/25 09:21:32.282
  STEP: Ensuring a job is scheduled @ 07/22/25 09:21:32.288
  E0722 09:21:32.323276      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:33.332972      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:34.341747      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:35.342725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:36.343074      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:37.353418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:38.377727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:39.392165      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:40.392550      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:41.393524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:42.394149      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:43.396121      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:44.396948      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:45.397302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:46.399636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:47.399845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:48.404670      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:49.404859      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:50.411874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:51.412335      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:52.421874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:53.452080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:54.452818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:55.457086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:56.462314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:57.462602      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:58.475628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:21:59.477718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/22/25 09:22:00.298
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/22/25 09:22:00.301
  STEP: Ensuring the job is replaced with a new one @ 07/22/25 09:22:00.304
  E0722 09:22:00.480981      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:01.483905      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:02.485280      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:03.487989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:04.499056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:05.499581      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:06.506754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:07.508785      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:08.514231      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:09.517398      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:10.524754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:11.527362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:12.528426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:13.543503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:14.544282      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:15.544975      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:16.545440      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:17.579180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:18.557417      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:19.562417      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:20.562891      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:21.569284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:22.569708      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:23.569774      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:24.570691      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:25.571191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:26.572187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:27.573596      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:28.577178      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:29.584957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:30.597329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:31.606877      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:32.610076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:33.610257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:34.610898      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:35.611017      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:36.614749      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:37.620666      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:38.621515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:39.621794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:40.622934      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:41.624853      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:42.627310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:43.627567      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:44.627823      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:45.635495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:46.643466      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:47.643471      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:48.657180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:49.657977      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:50.664327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:51.672223      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:52.673275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:53.675681      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:54.684103      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:55.684531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:56.685426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:57.685895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:58.686030      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:22:59.690731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/22/25 09:23:00.313
  I0722 09:23:00.323933 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6999" for this suite. @ 07/22/25 09:23:00.331
â€¢ [88.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/22/25 09:23:00.343
  I0722 09:23:00.343975 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename events @ 07/22/25 09:23:00.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:23:00.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:23:00.38
  STEP: Create set of events @ 07/22/25 09:23:00.39
  I0722 09:23:00.396854 22 core_events.go:198] created test-event-1
  I0722 09:23:00.402608 22 core_events.go:198] created test-event-2
  I0722 09:23:00.408331 22 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/22/25 09:23:00.408
  STEP: delete collection of events @ 07/22/25 09:23:00.411
  I0722 09:23:00.411381 22 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/22/25 09:23:00.428
  I0722 09:23:00.428473 22 core_events.go:230] requesting list of events to confirm quantity
  I0722 09:23:00.431375 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6256" for this suite. @ 07/22/25 09:23:00.434
â€¢ [0.098 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/22/25 09:23:00.442
  I0722 09:23:00.442844 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 09:23:00.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:23:00.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:23:00.461
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/22/25 09:23:00.48
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 09:23:00.487
  I0722 09:23:00.495848 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:23:00.496025 22 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0722 09:23:00.694779      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:01.497213 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 09:23:01.497252 22 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0722 09:23:01.697430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:02.497085 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 09:23:02.497136 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/22/25 09:23:02.499
  I0722 09:23:02.515783 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 09:23:02.515812 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/22/25 09:23:02.515
  E0722 09:23:02.703806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 09:23:03.522
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5493, will wait for the garbage collector to delete the pods @ 07/22/25 09:23:03.522
  I0722 09:23:03.587343 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.541058ms
  I0722 09:23:03.687872 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.526466ms
  E0722 09:23:03.706140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:04.712019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:05.712800      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:06.491905 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:23:06.492019 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 09:23:06.494872 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23102"},"items":null}

  I0722 09:23:06.497467 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23102"},"items":null}

  I0722 09:23:06.506761 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5493" for this suite. @ 07/22/25 09:23:06.51
â€¢ [6.074 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 07/22/25 09:23:06.517
  I0722 09:23:06.517099 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:23:06.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:23:06.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:23:06.534
  STEP: Setting up server cert @ 07/22/25 09:23:06.553
  E0722 09:23:06.714518      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:23:07.034
  STEP: Deploying the webhook pod @ 07/22/25 09:23:07.04
  STEP: Wait for the deployment to be ready @ 07/22/25 09:23:07.051
  I0722 09:23:07.056730 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0722 09:23:07.718366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:08.718668      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:23:09.079
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:23:09.099
  E0722 09:23:09.726847      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:10.102162 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/22/25 09:23:10.113
  I0722 09:23:10.170156 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-730" for this suite. @ 07/22/25 09:23:10.173
  STEP: Destroying namespace "webhook-markers-3319" for this suite. @ 07/22/25 09:23:10.18
â€¢ [3.676 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 07/22/25 09:23:10.193
  I0722 09:23:10.193584 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 09:23:10.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:23:10.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:23:10.209
  STEP: Creating a pod to test substitution in volume subpath @ 07/22/25 09:23:10.213
  E0722 09:23:10.731236      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:11.732638      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:12.732385      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:13.747823      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:23:14.265
  I0722 09:23:14.267695 22 output.go:207] Trying to get logs from node cncf1 pod var-expansion-955d4002-2ad0-416b-b971-5dd4f62ed365 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 09:23:14.275
  I0722 09:23:14.288388 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4041" for this suite. @ 07/22/25 09:23:14.291
â€¢ [4.104 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 07/22/25 09:23:14.297
  I0722 09:23:14.297660 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 09:23:14.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:23:14.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:23:14.312
  STEP: Creating service test in namespace statefulset-3674 @ 07/22/25 09:23:14.314
  STEP: Creating stateful set ss in namespace statefulset-3674 @ 07/22/25 09:23:14.319
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3674 @ 07/22/25 09:23:14.329
  I0722 09:23:14.331273 22 wait.go:44] Found 0 stateful pods, waiting for 1
  E0722 09:23:14.760300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:15.783902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:16.796636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:17.808431      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:18.808718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:19.809142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:20.810712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:21.822514      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:22.822967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:23.823121      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:24.340972 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/22/25 09:23:24.341
  I0722 09:23:24.343855 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-3674 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 09:23:24.435442 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 09:23:24.435478 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 09:23:24.435488 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 09:23:24.438587 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0722 09:23:24.823403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:25.827674      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:26.831367      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:27.833921      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:28.837984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:29.845822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:30.857020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:31.859316      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:32.870034      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:33.872740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:34.442103 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0722 09:23:34.442155 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0722 09:23:34.459687 22 resource.go:168] POD   NODE   PHASE    GRACE  CONDITIONS
  I0722 09:23:34.459874 22 resource.go:175] ss-0  cncf1  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:15 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:14 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:14 +0000 UTC  }]
  I0722 09:23:34.459893 22 resource.go:178] 
  I0722 09:23:34.459903 22 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 1
  E0722 09:23:34.873490      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:35.476564 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.984395221s
  E0722 09:23:35.879924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:36.496524 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.977344515s
  E0722 09:23:36.886513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:37.500887 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.959541646s
  E0722 09:23:37.895351      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:38.522404 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.938374165s
  E0722 09:23:38.895815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:39.533688 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.927826594s
  E0722 09:23:39.898482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:40.542389 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.917934042s
  E0722 09:23:40.898692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:41.551410 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.90966972s
  E0722 09:23:41.899105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:42.555362 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.90481613s
  E0722 09:23:42.901534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:43.560576 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 900.342142ms
  E0722 09:23:43.904138      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3674 @ 07/22/25 09:23:44.576
  I0722 09:23:44.580816 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-3674 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 09:23:44.652217 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 09:23:44.652251 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 09:23:44.652258 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 09:23:44.652298 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-3674 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 09:23:44.755060 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0722 09:23:44.755147 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 09:23:44.755155 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 09:23:44.755385 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-3674 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 09:23:44.829400 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0722 09:23:44.829836 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 09:23:44.829846 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 09:23:44.833733 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0722 09:23:44.905022      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:45.905431      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:46.906371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:47.912081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:48.933255      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:49.943263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:50.943404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:51.944232      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:52.945297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:53.945520      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:54.838604 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 09:23:54.838641 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0722 09:23:54.838646 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/22/25 09:23:54.838
  I0722 09:23:54.841488 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-3674 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 09:23:54.912211 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 09:23:54.912254 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 09:23:54.912261 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 09:23:54.912293 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-3674 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0722 09:23:54.945915      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:23:54.984315 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 09:23:54.984419 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 09:23:54.984427 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 09:23:54.984605 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-3674 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 09:23:55.055275 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 09:23:55.055319 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 09:23:55.055326 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 09:23:55.055355 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0722 09:23:55.058209 22 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0722 09:23:55.955820      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:56.959931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:57.961128      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:58.962397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:23:59.962972      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:00.963200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:01.971557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:02.973465      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:03.977547      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:04.978028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:05.064473 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0722 09:24:05.064591 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0722 09:24:05.064597 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0722 09:24:05.076578 22 resource.go:168] POD   NODE   PHASE    GRACE  CONDITIONS
  I0722 09:24:05.076694 22 resource.go:175] ss-0  cncf1  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:15 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:14 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:14 +0000 UTC  }]
  I0722 09:24:05.076728 22 resource.go:175] ss-1  cncf2  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:35 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:34 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:34 +0000 UTC  }]
  I0722 09:24:05.076744 22 resource.go:175] ss-2  cncf1  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:35 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:34 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 09:23:34 +0000 UTC  }]
  I0722 09:24:05.076747 22 resource.go:178] 
  I0722 09:24:05.076759 22 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E0722 09:24:05.982162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:06.084092 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 8.992349828s
  E0722 09:24:06.983275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:07.108531 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.969808909s
  E0722 09:24:07.997573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:08.138454 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.939239668s
  E0722 09:24:09.002188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:09.142438 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.933974384s
  E0722 09:24:10.010824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:10.146733 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.930482579s
  E0722 09:24:11.017677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:11.150458 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.925710956s
  E0722 09:24:12.022906      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:12.153962 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.921795601s
  E0722 09:24:13.023937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:13.158241 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.917960847s
  E0722 09:24:14.037408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:14.176962 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 899.313515ms
  E0722 09:24:15.037787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3674 @ 07/22/25 09:24:15.178
  I0722 09:24:15.182576 22 rest.go:153] Scaling statefulset ss to 0
  I0722 09:24:15.189037 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0722 09:24:15.192481 22 statefulset.go:138] Deleting all statefulset in ns statefulset-3674
  I0722 09:24:15.195439 22 rest.go:153] Scaling statefulset ss to 0
  I0722 09:24:15.202059 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0722 09:24:15.205677 22 rest.go:91] Deleting statefulset ss
  I0722 09:24:15.223786 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3674" for this suite. @ 07/22/25 09:24:15.228
â€¢ [60.945 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/22/25 09:24:15.244
  I0722 09:24:15.244569 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename limitrange @ 07/22/25 09:24:15.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:24:15.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:24:15.302
  STEP: Creating a LimitRange @ 07/22/25 09:24:15.305
  STEP: Setting up watch @ 07/22/25 09:24:15.305
  STEP: Submitting a LimitRange @ 07/22/25 09:24:15.41
  STEP: Verifying LimitRange creation was observed @ 07/22/25 09:24:15.417
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/22/25 09:24:15.418
  I0722 09:24:15.421010 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0722 09:24:15.421160 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/22/25 09:24:15.421
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/22/25 09:24:15.427
  I0722 09:24:15.454015 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0722 09:24:15.454116 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/22/25 09:24:15.454
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/22/25 09:24:15.461
  I0722 09:24:15.465377 22 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0722 09:24:15.465416 22 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/22/25 09:24:15.465
  STEP: Failing to create a Pod with more than max resources @ 07/22/25 09:24:15.468
  STEP: Updating a LimitRange @ 07/22/25 09:24:15.47
  STEP: Verifying LimitRange updating is effective @ 07/22/25 09:24:15.476
  E0722 09:24:16.045017      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:17.046978      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 07/22/25 09:24:17.488
  STEP: Failing to create a Pod with more than max resources @ 07/22/25 09:24:17.493
  STEP: Deleting a LimitRange @ 07/22/25 09:24:17.496
  STEP: Verifying the LimitRange was deleted @ 07/22/25 09:24:17.505
  E0722 09:24:18.047000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:19.048419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:20.049308      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:21.050337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:22.052044      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:22.513526 22 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/22/25 09:24:22.513
  I0722 09:24:22.523171 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4645" for this suite. @ 07/22/25 09:24:22.526
â€¢ [7.290 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:443
  STEP: Creating a kubernetes client @ 07/22/25 09:24:22.534
  I0722 09:24:22.534653 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sched-pred @ 07/22/25 09:24:22.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:24:22.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:24:22.548
  I0722 09:24:22.551343 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0722 09:24:22.557250 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0722 09:24:22.559588 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node cncf1 before test
  I0722 09:24:22.567486 22 predicates.go:956] calico-node-swkpx from kube-system started at 2025-07-22 07:51:40 +0000 UTC (1 container statuses recorded)
  I0722 09:24:22.567544 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0722 09:24:22.567564 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-13be34739e594807-rxhzv from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 09:24:22.567569 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 09:24:22.567572 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0722 09:24:22.567576 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node cncf2 before test
  I0722 09:24:22.575389 22 predicates.go:956] calico-kube-controllers-79949b87d-6p5mg from kube-system started at 2025-07-22 08:41:09 +0000 UTC (1 container statuses recorded)
  I0722 09:24:22.575427 22 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0722 09:24:22.575432 22 predicates.go:956] calico-node-qdrvr from kube-system started at 2025-07-22 07:52:11 +0000 UTC (1 container statuses recorded)
  I0722 09:24:22.575435 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0722 09:24:22.575438 22 predicates.go:956] coredns-ccd8f67bc-hsmn2 from kube-system started at 2025-07-22 08:41:09 +0000 UTC (1 container statuses recorded)
  I0722 09:24:22.575441 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0722 09:24:22.575444 22 predicates.go:956] sonobuoy from sonobuoy started at 2025-07-22 08:25:01 +0000 UTC (1 container statuses recorded)
  I0722 09:24:22.575448 22 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0722 09:24:22.575451 22 predicates.go:956] sonobuoy-e2e-job-7652fcec38e04d57 from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 09:24:22.575453 22 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0722 09:24:22.575456 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 09:24:22.575459 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-13be34739e594807-nnhtr from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 09:24:22.575462 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 09:24:22.575465 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/22/25 09:24:22.575
  E0722 09:24:23.059474      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:24.062550      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:25.072249      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:26.085718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:27.089191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:28.094211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18548887138f0c96], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 07/22/25 09:24:28.644
  E0722 09:24:29.095060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:29.648198 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-852" for this suite. @ 07/22/25 09:24:29.651
â€¢ [7.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 07/22/25 09:24:29.657
  I0722 09:24:29.657352 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 09:24:29.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:24:29.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:24:29.673
  STEP: Creating secret with name secret-test-705a751d-0c43-4e3f-8549-2cc2575d8f44 @ 07/22/25 09:24:29.675
  STEP: Creating a pod to test consume secrets @ 07/22/25 09:24:29.68
  E0722 09:24:30.099821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:31.108430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:32.108653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:33.123311      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:24:33.756
  I0722 09:24:33.759573 22 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-153052bc-a3d4-43d7-bcd9-5beffb5a0460 container secret-env-test: <nil>
  STEP: delete the pod @ 07/22/25 09:24:33.764
  I0722 09:24:33.782529 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7066" for this suite. @ 07/22/25 09:24:33.785
â€¢ [4.135 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 07/22/25 09:24:33.792
  I0722 09:24:33.792859 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 09:24:33.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:24:33.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:24:33.809
  STEP: creating the pod @ 07/22/25 09:24:33.811
  STEP: waiting for pod running @ 07/22/25 09:24:33.818
  E0722 09:24:34.123480      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:35.129867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 07/22/25 09:24:35.83
  I0722 09:24:35.833874 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3363 PodName:var-expansion-ab6ec8b4-6fa2-4642-abb5-36a4525befd7 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 09:24:35.833915 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 09:24:35.833994 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-3363/pods/var-expansion-ab6ec8b4-6fa2-4642-abb5-36a4525befd7/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0722 09:24:35.876496 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 07/22/25 09:24:35.876
  I0722 09:24:35.879276 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3363 PodName:var-expansion-ab6ec8b4-6fa2-4642-abb5-36a4525befd7 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 09:24:35.879302 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 09:24:35.879335 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-3363/pods/var-expansion-ab6ec8b4-6fa2-4642-abb5-36a4525befd7/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0722 09:24:35.927786 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 07/22/25 09:24:35.927
  E0722 09:24:36.135416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:24:36.482271 22 pod_client.go:173] Successfully updated pod "var-expansion-ab6ec8b4-6fa2-4642-abb5-36a4525befd7"
  STEP: waiting for annotated pod running @ 07/22/25 09:24:36.482
  STEP: deleting the pod gracefully @ 07/22/25 09:24:36.488
  I0722 09:24:36.488898 22 delete.go:62] Deleting pod "var-expansion-ab6ec8b4-6fa2-4642-abb5-36a4525befd7" in namespace "var-expansion-3363"
  I0722 09:24:36.496500 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-ab6ec8b4-6fa2-4642-abb5-36a4525befd7" to be fully deleted
  E0722 09:24:37.138747      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:38.148363      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:39.149089      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:40.150257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:41.151403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:42.152363      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:43.152611      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:44.158020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:45.182919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:46.183599      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:47.190473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:48.190648      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:49.190704      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:50.190874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:51.198343      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:52.200193      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:53.200606      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:54.202386      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:55.202539      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:56.205709      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:57.207752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:58.220207      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:24:59.220529      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:00.220525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:01.223088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:02.223763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:03.224239      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:04.227379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:05.229294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:06.248303      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:07.249314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:08.249467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:09.250886      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:10.254063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:25:10.660458 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3363" for this suite. @ 07/22/25 09:25:10.665
â€¢ [36.879 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/22/25 09:25:10.672
  I0722 09:25:10.672664 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pods @ 07/22/25 09:25:10.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:25:10.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:25:10.692
  STEP: creating the pod @ 07/22/25 09:25:10.695
  STEP: setting up watch @ 07/22/25 09:25:10.695
  STEP: submitting the pod to kubernetes @ 07/22/25 09:25:10.8
  STEP: verifying the pod is in kubernetes @ 07/22/25 09:25:10.81
  STEP: verifying pod creation was observed @ 07/22/25 09:25:10.814
  E0722 09:25:11.254398      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:12.262015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/22/25 09:25:12.834
  STEP: verifying pod deletion was observed @ 07/22/25 09:25:12.841
  E0722 09:25:13.261897      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:14.262115      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:25:15.067037 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6420" for this suite. @ 07/22/25 09:25:15.07
â€¢ [4.403 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 07/22/25 09:25:15.075
  I0722 09:25:15.075653 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 09:25:15.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:25:15.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:25:15.088
  STEP: Creating an indexed job with successPolicy @ 07/22/25 09:25:15.091
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/22/25 09:25:15.096
  E0722 09:25:15.262378      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:16.262417      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:17.263025      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:18.272822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:19.276727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:20.276919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/22/25 09:25:21.121
  STEP: Verifying that the job status to ensure correct final state @ 07/22/25 09:25:21.125
  I0722 09:25:21.127800 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4176" for this suite. @ 07/22/25 09:25:21.131
â€¢ [6.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 07/22/25 09:25:21.138
  I0722 09:25:21.138041 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 09:25:21.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:25:21.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:25:21.17
  STEP: Creating configMap with name configmap-test-volume-map-160da9f3-e459-47e8-bb7b-0590b80f3b84 @ 07/22/25 09:25:21.173
  STEP: Creating a pod to test consume configMaps @ 07/22/25 09:25:21.179
  E0722 09:25:21.277369      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:22.279498      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:23.281417      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:24.296375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:25:25.205
  I0722 09:25:25.208278 22 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-04d0a07b-3043-4078-b6dd-dabbd308b416 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:25:25.214
  I0722 09:25:25.230860 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4249" for this suite. @ 07/22/25 09:25:25.234
â€¢ [4.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/22/25 09:25:25.242
  I0722 09:25:25.242862 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename runtimeclass @ 07/22/25 09:25:25.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:25:25.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:25:25.264
  I0722 09:25:25.275370 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8573" for this suite. @ 07/22/25 09:25:25.278
â€¢ [0.043 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 07/22/25 09:25:25.286
  I0722 09:25:25.286487 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/22/25 09:25:25.287
  E0722 09:25:25.297354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:25:25.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:25:25.307
  I0722 09:25:25.313788 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  E0722 09:25:26.298446      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:27.299023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:28.302751      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:25:28.385226 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4705" for this suite. @ 07/22/25 09:25:28.388
â€¢ [3.110 seconds]
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/22/25 09:25:28.397
  I0722 09:25:28.397109 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename tables @ 07/22/25 09:25:28.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:25:28.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:25:28.41
  I0722 09:25:28.416957 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4993" for this suite. @ 07/22/25 09:25:28.419
â€¢ [0.028 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/22/25 09:25:28.425
  I0722 09:25:28.425249 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename subpath @ 07/22/25 09:25:28.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:25:28.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:25:28.443
  STEP: Setting up data @ 07/22/25 09:25:28.445
  STEP: Creating pod pod-subpath-test-projected-vx7b @ 07/22/25 09:25:28.456
  STEP: Creating a pod to test atomic-volume-subpath @ 07/22/25 09:25:28.456
  E0722 09:25:29.309105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:30.310776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:31.316814      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:32.323445      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:33.342864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:34.342937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:35.343073      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:36.355760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:37.358371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:38.359456      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:39.364978      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:40.365344      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:41.375734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:42.375602      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:43.377583      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:44.392191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:45.397690      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:46.409433      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:47.421318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:48.435562      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:49.436512      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:50.437676      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:25:50.647
  I0722 09:25:50.650056 22 output.go:207] Trying to get logs from node cncf1 pod pod-subpath-test-projected-vx7b container test-container-subpath-projected-vx7b: <nil>
  STEP: delete the pod @ 07/22/25 09:25:50.656
  STEP: Deleting pod pod-subpath-test-projected-vx7b @ 07/22/25 09:25:50.673
  I0722 09:25:50.673516 22 delete.go:62] Deleting pod "pod-subpath-test-projected-vx7b" in namespace "subpath-793"
  I0722 09:25:50.677059 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-793" for this suite. @ 07/22/25 09:25:50.682
â€¢ [22.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 07/22/25 09:25:50.692
  I0722 09:25:50.692695 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 09:25:50.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:25:50.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:25:50.717
  I0722 09:25:50.738822 22 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0722 09:25:50.738983 22 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0722 09:25:50.745439 22 service_accounts.go:281] created pod pod-service-account-mountsa
  I0722 09:25:50.745472 22 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0722 09:25:50.759748 22 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0722 09:25:50.759782 22 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0722 09:25:50.776090 22 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0722 09:25:50.776131 22 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0722 09:25:50.794077 22 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0722 09:25:50.794106 22 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0722 09:25:50.811406 22 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0722 09:25:50.811465 22 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0722 09:25:50.855701 22 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0722 09:25:50.855774 22 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0722 09:25:50.870151 22 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0722 09:25:50.870253 22 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0722 09:25:50.892614 22 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0722 09:25:50.892925 22 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0722 09:25:50.893056 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1702" for this suite. @ 07/22/25 09:25:50.909
â€¢ [0.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 07/22/25 09:25:51.046
  I0722 09:25:51.046848 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 09:25:51.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:25:51.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:25:51.109
  STEP: Creating Indexed job @ 07/22/25 09:25:51.116
  STEP: Ensuring job reaches completions @ 07/22/25 09:25:51.133
  E0722 09:25:51.437836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:52.438450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:53.439331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:54.447452      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:55.447747      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:56.448107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:57.450137      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:25:58.472008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 07/22/25 09:25:59.179
  I0722 09:25:59.183510 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6540" for this suite. @ 07/22/25 09:25:59.186
â€¢ [8.147 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 07/22/25 09:25:59.193
  I0722 09:25:59.194050 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 09:25:59.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:25:59.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:25:59.208
  STEP: Creating configMap configmap-5977/configmap-test-1db85fff-1c40-414a-aaf1-020797292720 @ 07/22/25 09:25:59.211
  STEP: Creating a pod to test consume configMaps @ 07/22/25 09:25:59.216
  E0722 09:25:59.472910      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:00.474016      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:01.478790      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:02.482730      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:26:03.278
  I0722 09:26:03.283002 22 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-38316248-c072-478a-bc75-dfb0a9dbba02 container env-test: <nil>
  STEP: delete the pod @ 07/22/25 09:26:03.297
  I0722 09:26:03.313487 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5977" for this suite. @ 07/22/25 09:26:03.317
â€¢ [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/22/25 09:26:03.323
  I0722 09:26:03.323630 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:26:03.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:03.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:03.338
  STEP: Creating a pod to test downward api env vars @ 07/22/25 09:26:03.342
  E0722 09:26:03.492511      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:04.494011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:05.504142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:06.509076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:26:07.379
  I0722 09:26:07.383212 22 output.go:207] Trying to get logs from node cncf1 pod downward-api-cfc454f2-29b9-4665-8a44-d7f74f77e36a container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 09:26:07.403
  I0722 09:26:07.419369 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4724" for this suite. @ 07/22/25 09:26:07.423
â€¢ [4.107 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/22/25 09:26:07.43
  I0722 09:26:07.430581 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename endpointslice @ 07/22/25 09:26:07.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:07.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:07.449
  STEP: getting /apis @ 07/22/25 09:26:07.452
  STEP: getting /apis/discovery.k8s.io @ 07/22/25 09:26:07.458
  STEP: getting /apis/discovery.k8s.iov1 @ 07/22/25 09:26:07.459
  STEP: creating @ 07/22/25 09:26:07.461
  STEP: getting @ 07/22/25 09:26:07.483
  STEP: listing @ 07/22/25 09:26:07.489
  STEP: watching @ 07/22/25 09:26:07.492
  I0722 09:26:07.492966 22 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 07/22/25 09:26:07.494
  STEP: cluster-wide watching @ 07/22/25 09:26:07.499
  I0722 09:26:07.499831 22 endpointslice.go:459] starting watch
  STEP: patching @ 07/22/25 09:26:07.502
  E0722 09:26:07.510392      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating @ 07/22/25 09:26:07.512
  I0722 09:26:07.592351 22 endpointslice.go:482] waiting for watch events with expected annotations
  I0722 09:26:07.592426 22 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 07/22/25 09:26:07.592
  STEP: deleting a collection @ 07/22/25 09:26:07.61
  I0722 09:26:07.632802 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1623" for this suite. @ 07/22/25 09:26:07.639
â€¢ [0.217 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 07/22/25 09:26:07.648
  I0722 09:26:07.648116 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 09:26:07.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:07.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:07.678
  STEP: Creating a job @ 07/22/25 09:26:07.683
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/22/25 09:26:07.689
  E0722 09:26:08.545499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:09.554255      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/22/25 09:26:09.7
  STEP: updating /status @ 07/22/25 09:26:09.709
  STEP: get /status @ 07/22/25 09:26:09.717
  I0722 09:26:09.720745 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3906" for this suite. @ 07/22/25 09:26:09.728
â€¢ [2.088 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 07/22/25 09:26:09.736
  I0722 09:26:09.736178 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 09:26:09.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:09.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:09.751
  STEP: apply creating a deployment @ 07/22/25 09:26:09.754
  I0722 09:26:09.765859 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-170" for this suite. @ 07/22/25 09:26:09.801
â€¢ [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 07/22/25 09:26:09.807
  I0722 09:26:09.807956 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:26:09.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:09.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:09.823
  STEP: Creating a pod to test downward api env vars @ 07/22/25 09:26:09.825
  E0722 09:26:10.554997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:11.556709      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:12.557292      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:13.562271      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:26:13.862
  I0722 09:26:13.865705 22 output.go:207] Trying to get logs from node cncf1 pod downward-api-b922634d-64c0-4242-98e5-6cb52c6efb2c container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 09:26:13.871
  I0722 09:26:13.884742 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3059" for this suite. @ 07/22/25 09:26:13.887
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 07/22/25 09:26:13.895
  I0722 09:26:13.895290 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename proxy @ 07/22/25 09:26:13.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:13.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:13.912
  I0722 09:26:13.914744 22 proxy.go:336] Creating pod...
  E0722 09:26:14.564575      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:15.572857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:26:15.968344 22 proxy.go:360] Creating service...
  I0722 09:26:15.989585 22 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy/some/path/with/DELETE
  I0722 09:26:15.995634 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0722 09:26:15.995700 22 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy/some/path/with/GET
  I0722 09:26:16.001311 22 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0722 09:26:16.001355 22 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy/some/path/with/HEAD
  I0722 09:26:16.004281 22 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0722 09:26:16.004324 22 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy/some/path/with/OPTIONS
  I0722 09:26:16.008224 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0722 09:26:16.008324 22 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy/some/path/with/PATCH
  I0722 09:26:16.011673 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0722 09:26:16.011721 22 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy/some/path/with/POST
  I0722 09:26:16.014279 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0722 09:26:16.014318 22 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy/some/path/with/PUT
  I0722 09:26:16.017207 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0722 09:26:16.017261 22 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/test-service/proxy/some/path/with/DELETE
  I0722 09:26:16.021178 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0722 09:26:16.021222 22 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/test-service/proxy/some/path/with/GET
  I0722 09:26:16.024599 22 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0722 09:26:16.024648 22 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/test-service/proxy/some/path/with/HEAD
  I0722 09:26:16.028341 22 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0722 09:26:16.028379 22 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/test-service/proxy/some/path/with/OPTIONS
  I0722 09:26:16.031975 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0722 09:26:16.032035 22 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/test-service/proxy/some/path/with/PATCH
  I0722 09:26:16.036707 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0722 09:26:16.036770 22 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/test-service/proxy/some/path/with/POST
  I0722 09:26:16.041483 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0722 09:26:16.041524 22 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/test-service/proxy/some/path/with/PUT
  I0722 09:26:16.045416 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0722 09:26:16.045563 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5894" for this suite. @ 07/22/25 09:26:16.049
â€¢ [2.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/22/25 09:26:16.058
  I0722 09:26:16.058583 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 09:26:16.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:16.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:16.074
  STEP: Creating secret with name secret-test-f4760668-2399-43f1-b738-124ddb7d8f14 @ 07/22/25 09:26:16.077
  STEP: Creating a pod to test consume secrets @ 07/22/25 09:26:16.081
  E0722 09:26:16.574939      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:17.577911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:18.586599      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:19.620479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:26:20.107
  I0722 09:26:20.109971 22 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-28f287bd-1bfb-45c0-a97d-7bf4c9db31fe container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 09:26:20.116
  I0722 09:26:20.134747 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5553" for this suite. @ 07/22/25 09:26:20.138
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 07/22/25 09:26:20.144
  I0722 09:26:20.144730 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 09:26:20.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:20.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:20.164
  STEP: Creating a pod to test service account token:  @ 07/22/25 09:26:20.167
  E0722 09:26:20.620503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:21.622288      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:22.631275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:23.638376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:26:24.192
  I0722 09:26:24.194500 22 output.go:207] Trying to get logs from node cncf1 pod test-pod-2bd070f1-4c87-4ac4-864f-38bd1ea0e351 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:26:24.2
  I0722 09:26:24.217736 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1323" for this suite. @ 07/22/25 09:26:24.221
â€¢ [4.085 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 07/22/25 09:26:24.23
  I0722 09:26:24.230592 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 09:26:24.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:24.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:24.249
  STEP: Counting existing ResourceQuota @ 07/22/25 09:26:24.252
  E0722 09:26:24.640604      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:25.641484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:26.641844      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:27.642718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:28.650957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/22/25 09:26:29.263
  STEP: Ensuring resource quota status is calculated @ 07/22/25 09:26:29.269
  E0722 09:26:29.651112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:30.655497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 07/22/25 09:26:31.28
  STEP: Creating a NodePort Service @ 07/22/25 09:26:31.312
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/22/25 09:26:31.332
  STEP: Ensuring resource quota status captures service creation @ 07/22/25 09:26:31.358
  E0722 09:26:31.655660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:32.656176      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 07/22/25 09:26:33.363
  STEP: Ensuring resource quota status released usage @ 07/22/25 09:26:33.422
  E0722 09:26:33.657147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:34.662280      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:26:35.426429 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8139" for this suite. @ 07/22/25 09:26:35.429
â€¢ [11.204 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 07/22/25 09:26:35.435
  I0722 09:26:35.435356 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 09:26:35.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:35.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:35.45
  STEP: Creating namespace "e2e-ns-4j4ql" @ 07/22/25 09:26:35.453
  I0722 09:26:35.464626 22 namespace.go:412] Namespace "e2e-ns-4j4ql-6153" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-4j4ql-6153" @ 07/22/25 09:26:35.464
  I0722 09:26:35.475032 22 namespace.go:435] Namespace "e2e-ns-4j4ql-6153" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-4j4ql-6153" @ 07/22/25 09:26:35.475
  I0722 09:26:35.482824 22 namespace.go:464] Namespace "e2e-ns-4j4ql-6153" has []v1.FinalizerName{"kubernetes"}
  I0722 09:26:35.483050 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1690" for this suite. @ 07/22/25 09:26:35.486
  STEP: Destroying namespace "e2e-ns-4j4ql-6153" for this suite. @ 07/22/25 09:26:35.492
â€¢ [0.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 07/22/25 09:26:35.5
  I0722 09:26:35.500234 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 09:26:35.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:35.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:35.514
  STEP: Starting the proxy @ 07/22/25 09:26:35.516
  I0722 09:26:35.517527 22 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-1562 proxy --unix-socket=/tmp/kubectl-proxy-unix3869743451/test'
  STEP: retrieving proxy /api/ output @ 07/22/25 09:26:35.557
  I0722 09:26:35.559574 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1562" for this suite. @ 07/22/25 09:26:35.563
â€¢ [0.068 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 07/22/25 09:26:35.568
  I0722 09:26:35.568158 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:26:35.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:35.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:35.582
  STEP: Creating configMap with name projected-configmap-test-volume-map-4a795cce-dbab-450e-90a3-8af707f0fb1b @ 07/22/25 09:26:35.583
  STEP: Creating a pod to test consume configMaps @ 07/22/25 09:26:35.588
  E0722 09:26:35.680805      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:36.702965      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:37.703072      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:38.703344      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:26:39.626
  I0722 09:26:39.628878 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-1496a491-9699-4d17-9759-ea83f5ba2f93 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:26:39.632
  I0722 09:26:39.645829 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4011" for this suite. @ 07/22/25 09:26:39.648
â€¢ [4.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/22/25 09:26:39.655
  I0722 09:26:39.655449 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename deployment @ 07/22/25 09:26:39.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:39.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:39.669
  I0722 09:26:39.671463 22 deployment.go:1664] Creating simple deployment test-new-deployment
  I0722 09:26:39.683339 22 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  E0722 09:26:39.704199      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:40.704495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 07/22/25 09:26:41.699
  STEP: updating a scale subresource @ 07/22/25 09:26:41.702
  E0722 09:26:41.705373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the deployment Spec.Replicas was modified @ 07/22/25 09:26:41.709
  STEP: Patch a scale subresource @ 07/22/25 09:26:41.711
  I0722 09:26:41.724955 22 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c86a211-7652-4ae9-b753-efa72081fa91",
      ResourceVersion: (string) (len=5) "24752",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888773199,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 09:26:41.729195 22 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9c624f2-b06d-47f9-aacd-86236ecec925",
      ResourceVersion: (string) (len=5) "24755",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888773199,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "3c86a211-7652-4ae9-b753-efa72081fa91",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 63 38 36 61 32  31 31 2d 37 36 35 32 2d  |\"3c86a211-7652-|
              00000120  34 61 65 39 2d 62 37 35  33 2d 65 66 61 37 32 30  |4ae9-b753-efa720|
              00000130  38 31 66 61 39 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |81fa91\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 09:26:41.734589 22 deployment.go:68] Pod "test-new-deployment-685b768f58-lf474" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-lf474",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b86daecc-95b5-4468-9be7-648d632cd2f7",
      ResourceVersion: (string) (len=5) "24757",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888773201,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "e9c624f2-b06d-47f9-aacd-86236ecec925",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  63 36 32 34 66 32 2d 62  |d\":\"e9c624f2-b|
              00000090  30 36 64 2d 34 37 66 39  2d 61 61 63 64 2d 38 36  |06d-47f9-aacd-86|
              000000a0  32 33 36 65 63 65 63 39  32 35 5c 22 7d 22 3a 7b  |236ecec925\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cc976",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cc976",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 09:26:41.735919 22 deployment.go:68] Pod "test-new-deployment-685b768f58-svtrg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-svtrg",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b574d8e-fe81-484a-baef-dca594ab153f",
      ResourceVersion: (string) (len=5) "24743",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888773199,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "814e1c4e8347ef8e4315406faddece4b8814770e9f36d902b8e7a045f8fd5d28",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.110/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.110/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "e9c624f2-b06d-47f9-aacd-86236ecec925",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  63 36 32 34 66 32 2d 62  |d\":\"e9c624f2-b|
              00000090  30 36 64 2d 34 37 66 39  2d 61 61 63 64 2d 38 36  |06d-47f9-aacd-86|
              000000a0  32 33 36 65 63 65 63 39  32 35 5c 22 7d 22 3a 7b  |236ecec925\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 31  31 30 5c 22 7d 22 3a 7b  |.1.209.110\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tl7dp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tl7dp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888773199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=12) "10.1.209.110",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.209.110"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888773199,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888773200,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2e18e1200aad2019269ef5fa23daccf07b8163345540f417b37970b50109a0aa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tl7dp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 09:26:41.737444 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6957" for this suite. @ 07/22/25 09:26:41.751
â€¢ [2.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 07/22/25 09:26:41.858
  I0722 09:26:41.858899 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:26:41.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:41.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:41.89
  STEP: Creating a pod to test downward api env vars @ 07/22/25 09:26:41.892
  E0722 09:26:42.706784      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:43.714133      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:44.727059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:45.753654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:26:45.915
  I0722 09:26:45.917866 22 output.go:207] Trying to get logs from node cncf1 pod downward-api-eaf3f419-3cab-4fc5-b518-c2e06e624fe5 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 09:26:45.922
  I0722 09:26:45.937886 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5334" for this suite. @ 07/22/25 09:26:45.941
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 07/22/25 09:26:45.947
  I0722 09:26:45.947586 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 09:26:45.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:26:45.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:26:45.964
  STEP: Creating pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048 @ 07/22/25 09:26:45.966
  E0722 09:26:46.762691      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:47.763107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 09:26:47.98
  I0722 09:26:47.983081 22 container_probe.go:1748] Initial restart count of pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 is 0
  I0722 09:26:47.985867 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:26:48.762793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:49.764206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:26:49.993225 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:26:50.772945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:51.773158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:26:52.012181 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:26:52.777332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:53.787320      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:26:54.021222 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:26:54.787842      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:55.792351      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:26:56.025303 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:26:56.801068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:57.801111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:26:58.040544 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:26:58.805542      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:26:59.809645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:00.066068 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:00.810647      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:01.816178      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:02.082606 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:02.825845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:03.841267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:04.091285 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:04.841733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:05.865789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:06.094876 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:06.880686      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:07.885261      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:08.099648 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:08.895455      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:09.896211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:10.105676 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:10.896838      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:11.900795      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:12.117721 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:12.908097      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:13.910099      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:14.148604 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:14.913405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:15.918708      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:16.155267 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:16.921583      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:17.925310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:18.162537 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:18.946606      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:19.948106      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:20.166239 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:20.967217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:21.967584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:22.172678 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:22.991777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:24.010200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:24.182955 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:25.014069      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:26.035394      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:26.200614 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:27.043330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:28.062755      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:28.221813 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:29.064802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:30.065113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:30.226240 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:31.065383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:32.073391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:32.238373 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:33.083386      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:34.085954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:34.249075 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:35.096807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:36.101451      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:36.262352 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:37.112476      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:38.142460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:38.268405 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:39.145161      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:40.145600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:40.273517 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:41.156850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:42.162670      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:42.287263 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:43.167175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:44.170982      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:44.293908 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:45.173925      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:46.176114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:46.298167 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:47.176080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:48.176309      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:48.305243 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:49.181919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:50.186407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:50.310720 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:51.187230      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:52.210883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:52.314371 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:53.226377      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:54.227780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:54.323473 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:55.234381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:56.242171      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:56.359085 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:57.242974      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:27:58.260156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:27:58.364331 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:27:59.260322      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:00.261711      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:00.386725 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:01.262840      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:02.263180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:02.403167 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:03.276067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:04.284917      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:04.410106 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:05.299211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:06.325379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:06.423767 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:07.335852      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:08.354760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:08.437340 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:09.367243      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:10.383596      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:10.441257 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:11.387477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:12.414204      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:12.451403 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:13.414320      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:14.416532      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:14.461019 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:15.417095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:16.420677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:16.465112 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:17.435218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:18.471589      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:18.496323 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:19.478065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:20.478314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:20.501355 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:21.490141      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:22.497702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:22.505634 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:23.506129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:24.510973      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:24.515015 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:25.525324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:26.525034 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:26.526117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:27.532801      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:28.532806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:28.534641 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:29.541843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:30.545949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:30.549000 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:31.546332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:32.551429      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:32.554604 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:33.575477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:34.558131 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:34.581446      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:35.589070      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:36.562736 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:36.589868      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:37.601126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:38.568227 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:38.611452      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:39.617963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:40.572833 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:40.620384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:41.630780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:42.578141 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:42.634975      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:43.635329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:44.620544 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:44.641344      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:45.641787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:46.626381 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:46.642418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:47.644692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:48.632409 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:48.646007      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:49.646814      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:50.644349 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:50.647517      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:51.656290      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:52.650323 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:52.670199      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:53.676971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:54.660128 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:54.680409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:55.694414      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:56.662779 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:56.695086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:57.699946      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:28:58.671414 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:28:58.700292      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:28:59.703657      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:00.687685 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:00.704713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:01.707610      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:02.695236 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:02.708506      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:03.713707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:04.699313 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:04.741565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:05.746932      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:06.724102 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:06.750804      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:07.759342      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:08.732068 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:08.770344      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:09.779147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:10.754905 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:10.779281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:11.782793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:12.764647 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:12.787600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:13.789187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:14.774888 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:14.790056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:15.790910      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:16.782471 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:16.793489      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:17.805348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:18.785743 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:18.814959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:19.833798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:20.811638 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:20.834186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:21.834924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:22.820064 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:22.856007      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:23.856275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:24.831386 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:24.856495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:25.860854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:26.843777 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:26.867211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:27.874883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:28.854379 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:28.892362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:29.894821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:30.865571 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:30.934913      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:31.935079      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:32.884493 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:32.935612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:33.935736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:34.894150 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:34.965033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:35.975211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:36.915646 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:36.979928      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:37.991322      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:38.930790 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:38.991950      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:40.003725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:40.938152 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:41.007908      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:42.010025      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:42.958752 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:43.034685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:44.042713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:44.984833 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:45.045999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:46.060617      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:47.000963 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:47.073931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:48.083931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:49.007669 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:49.084702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:50.101086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:51.012612 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:51.107457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:52.112465      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:53.023339 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:53.129002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:54.129259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:55.032749 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:55.133684      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:56.135502      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:57.036342 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:57.146162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:29:58.150932      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:29:59.052317 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:29:59.151692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:00.152018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:01.069059 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:01.162189      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:02.162370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:03.088218 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:03.163693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:04.164619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:05.091687 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:05.173413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:06.189557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:07.128085 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:07.192369      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:08.199966      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:09.133926 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:09.204477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:10.204725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:11.140271 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:11.205462      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:12.206487      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:13.148016 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:13.216593      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:14.220517      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:15.159802 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:15.230347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:16.234167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:17.169600 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:17.241424      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:18.242362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:19.174321 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:19.247289      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:20.247826      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:21.179814 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:21.247923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:22.270123      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:23.191200 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:23.279508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:24.295700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:25.205057 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:25.296755      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:26.299684      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:27.215090 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:27.327550      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:28.335877      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:29.229043 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:29.339412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:30.341875      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:31.239773 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:31.349014      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:32.352504      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:33.256583 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:33.356796      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:34.359332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:35.269899 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:35.361261      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:36.371915      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:37.273562 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:37.381090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:38.405594      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:39.288423 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:39.414687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:40.414879      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:41.296948 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:41.424226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:42.437149      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:43.306225 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:43.446431      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:44.448174      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:45.331292 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:45.459791      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:46.460342      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:30:47.347527 22 container_probe.go:1758] Get pod test-webserver-e3848ca0-c073-40a2-a742-b32449c8ea61 in namespace container-probe-9048
  E0722 09:30:47.474895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:48.475388      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/22/25 09:30:49.358
  I0722 09:30:49.389887 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9048" for this suite. @ 07/22/25 09:30:49.396
â€¢ [243.456 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 07/22/25 09:30:49.404
  I0722 09:30:49.404596 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename gc @ 07/22/25 09:30:49.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:30:49.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:30:49.446
  STEP: create the deployment @ 07/22/25 09:30:49.449
  I0722 09:30:49.455348      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/22/25 09:30:49.455
  E0722 09:30:49.478601      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 07/22/25 09:30:49.968
  STEP: wait for all rs to be garbage collected @ 07/22/25 09:30:49.982
  STEP: expected 0 pods, got 2 pods @ 07/22/25 09:30:49.986
  STEP: expected 0 rs, got 1 rs @ 07/22/25 09:30:49.991
  E0722 09:30:50.479386      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/22/25 09:30:50.489
  W0722 09:30:50.498845      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 09:30:50.498975 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 09:30:50.499116 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8406" for this suite. @ 07/22/25 09:30:50.502
â€¢ [1.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 07/22/25 09:30:50.508
  I0722 09:30:50.508240 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 09:30:50.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:30:50.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:30:50.535
  STEP: Creating service test in namespace statefulset-7191 @ 07/22/25 09:30:50.538
  STEP: Creating a new StatefulSet @ 07/22/25 09:30:50.543
  I0722 09:30:50.553224 22 wait.go:44] Found 0 stateful pods, waiting for 3
  E0722 09:30:51.493601      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:52.499976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:53.516856      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:54.517246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:55.517311      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:56.536592      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:57.550719      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:58.552950      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:30:59.556093      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:00.556374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:31:00.556920 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 09:31:00.556956 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0722 09:31:00.556967 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0722 09:31:00.565455 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-7191 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 09:31:00.683935 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 09:31:00.683979 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 09:31:00.683986 22 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0722 09:31:01.556334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:02.564924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:03.569048      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:04.576339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:05.586449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:06.600205      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:07.600955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:08.621776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:09.621926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:10.622779      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/22/25 09:31:10.702
  I0722 09:31:10.709768 22 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/22/25 09:31:10.709
  E0722 09:31:11.625430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:12.628113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:13.634914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:14.637848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:15.645309      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:16.656360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:17.657165      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:18.670481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:19.675983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:20.676401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 07/22/25 09:31:20.731
  I0722 09:31:20.733732 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-7191 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 09:31:20.825858 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 09:31:20.825904 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 09:31:20.825911 22 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0722 09:31:21.681706      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:22.697178      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:23.697336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:24.707468      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:25.707691      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:26.708028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:27.717788      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:28.717961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:29.724145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:30.724966      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 07/22/25 09:31:30.835
  I0722 09:31:30.835291 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-7191 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 09:31:30.908685 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 09:31:30.908736 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 09:31:30.908746 22 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0722 09:31:31.735283      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:32.739347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:33.740575      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:34.741151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:35.741440      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:36.741957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:37.742046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:38.755956      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:39.768919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:40.771706      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:31:40.925342 22 statefulset.go:2542] Updating stateful set ss2
  E0722 09:31:41.775605      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:42.807016      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:43.807477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:44.818794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:45.823321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:46.829209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:47.840449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:48.854066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:49.884464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:50.886336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 07/22/25 09:31:50.941
  I0722 09:31:50.944005 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-7191 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 09:31:51.036496 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 09:31:51.036585 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 09:31:51.036612 22 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0722 09:31:51.889873      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:52.899279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:53.900035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:54.902140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:55.903068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:56.903384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:57.909926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:58.926828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:31:59.931180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:00.932213      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:01.047675 22 statefulset.go:138] Deleting all statefulset in ns statefulset-7191
  I0722 09:32:01.049674 22 rest.go:153] Scaling statefulset ss2 to 0
  E0722 09:32:01.932785      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:02.933086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:03.933375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:04.933837      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:05.937814      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:06.938162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:07.952714      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:08.961817      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:09.966554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:10.980853      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:11.084779 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0722 09:32:11.087026 22 rest.go:91] Deleting statefulset ss2
  I0722 09:32:11.095986 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7191" for this suite. @ 07/22/25 09:32:11.099
â€¢ [80.599 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 07/22/25 09:32:11.12
  I0722 09:32:11.120804 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 09:32:11.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:11.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:11.134
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/22/25 09:32:11.137
  E0722 09:32:11.982169      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:12.983009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:13.990584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:15.001937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:32:15.157
  I0722 09:32:15.159306 22 output.go:207] Trying to get logs from node cncf1 pod pod-be54eb7c-59e8-4ee0-b94c-8a50f7ecdcc1 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 09:32:15.166
  I0722 09:32:15.179533 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-218" for this suite. @ 07/22/25 09:32:15.182
â€¢ [4.068 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/22/25 09:32:15.188
  I0722 09:32:15.188813 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 09:32:15.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:15.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:15.202
  I0722 09:32:15.214895 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0722 09:32:16.008835      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:17.009923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:18.015326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:19.026607      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:20.047843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:20.218052 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 09:32:20.218
  STEP: Scaling up "test-rs" replicaset @ 07/22/25 09:32:20.218
  I0722 09:32:20.226962 22 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/22/25 09:32:20.227
  I0722 09:32:20.237681 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4917 with ReadyReplicas 1, AvailableReplicas 1
  I0722 09:32:20.248892 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4917 with ReadyReplicas 1, AvailableReplicas 1
  I0722 09:32:20.267993 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4917 with ReadyReplicas 1, AvailableReplicas 1
  I0722 09:32:20.275917 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4917 with ReadyReplicas 1, AvailableReplicas 1
  E0722 09:32:21.048660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:21.710294 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4917 with ReadyReplicas 2, AvailableReplicas 2
  I0722 09:32:21.828289 22 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-4917 with ReadyReplicas 3 found true
  I0722 09:32:21.828621 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4917" for this suite. @ 07/22/25 09:32:21.832
â€¢ [6.649 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/22/25 09:32:21.838
  I0722 09:32:21.838379 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 09:32:21.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:21.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:21.851
  STEP: Creating simple DaemonSet "daemon-set" @ 07/22/25 09:32:21.866
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 09:32:21.87
  I0722 09:32:21.875660 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:32:21.875723 22 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0722 09:32:22.065698      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:22.876430 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 09:32:22.876484 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/22/25 09:32:22.878
  I0722 09:32:22.893955 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 09:32:22.894026 22 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0722 09:32:23.081585      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:23.896294 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 09:32:23.896335 22 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0722 09:32:24.081929      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:24.901844 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 09:32:24.901889 22 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0722 09:32:25.087758      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:25.901038 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 09:32:25.901148 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 09:32:25.903
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5584, will wait for the garbage collector to delete the pods @ 07/22/25 09:32:25.903
  I0722 09:32:25.980656 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.700882ms
  I0722 09:32:26.081478 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.819165ms
  E0722 09:32:26.088698      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:27.092633      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:28.093300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:28.886734 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:32:28.886763 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 09:32:28.888301 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26078"},"items":null}

  I0722 09:32:28.890550 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26078"},"items":null}

  I0722 09:32:28.897494 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5584" for this suite. @ 07/22/25 09:32:28.9
â€¢ [7.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/22/25 09:32:28.907
  I0722 09:32:28.907328 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename server-version @ 07/22/25 09:32:28.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:28.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:28.921
  STEP: Request ServerVersion @ 07/22/25 09:32:28.924
  STEP: Confirm major version @ 07/22/25 09:32:28.925
  I0722 09:32:28.925971 22 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 07/22/25 09:32:28.925
  I0722 09:32:28.925989 22 server_version.go:58] cleanMinorVersion: 33
  I0722 09:32:28.926003 22 server_version.go:62] Minor version: 33
  I0722 09:32:28.926070 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5416" for this suite. @ 07/22/25 09:32:28.929
â€¢ [0.028 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 07/22/25 09:32:28.935
  I0722 09:32:28.935702 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:32:28.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:28.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:28.95
  STEP: Setting up server cert @ 07/22/25 09:32:28.968
  E0722 09:32:29.100593      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:32:29.345
  STEP: Deploying the webhook pod @ 07/22/25 09:32:29.35
  STEP: Wait for the deployment to be ready @ 07/22/25 09:32:29.36
  I0722 09:32:29.364835 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0722 09:32:30.110714      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:31.110925      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:32:31.377
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:32:31.391
  E0722 09:32:32.124599      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:32.392974 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/22/25 09:32:32.396
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/22/25 09:32:32.407
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/22/25 09:32:32.411
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/22/25 09:32:32.419
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/22/25 09:32:32.499
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/22/25 09:32:32.505
  I0722 09:32:32.564630 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9129" for this suite. @ 07/22/25 09:32:32.567
  STEP: Destroying namespace "webhook-markers-1922" for this suite. @ 07/22/25 09:32:32.578
â€¢ [3.649 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 07/22/25 09:32:32.585
  I0722 09:32:32.585262 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 09:32:32.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:32.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:32.599
  STEP: creating a ConfigMap @ 07/22/25 09:32:32.602
  STEP: fetching the ConfigMap @ 07/22/25 09:32:32.606
  STEP: patching the ConfigMap @ 07/22/25 09:32:32.608
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/22/25 09:32:32.613
  STEP: deleting the ConfigMap by collection with a label selector @ 07/22/25 09:32:32.617
  STEP: listing all ConfigMaps in test namespace @ 07/22/25 09:32:32.624
  I0722 09:32:32.627110 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7574" for this suite. @ 07/22/25 09:32:32.63
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/22/25 09:32:32.637
  I0722 09:32:32.637739 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename endpointslice @ 07/22/25 09:32:32.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:32.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:32.653
  I0722 09:32:32.660102      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:32:32.662430 22 endpointslice.go:1045] Endpoints addresses: [192.168.105.31] , ports: [16443]
  I0722 09:32:32.662542 22 endpointslice.go:1075] EndpointSlices addresses: [192.168.105.31] , ports: [16443]
  I0722 09:32:32.662632 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8568" for this suite. @ 07/22/25 09:32:32.665
â€¢ [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 07/22/25 09:32:32.67
  I0722 09:32:32.670730 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:32:32.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:32.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:32.685
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4486 @ 07/22/25 09:32:32.687
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/22/25 09:32:32.708
  STEP: creating service externalsvc in namespace services-4486 @ 07/22/25 09:32:32.708
  I0722 09:32:32.734222 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0722 09:32:33.125483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:34.128643      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the NodePort service to type=ExternalName @ 07/22/25 09:32:34.772
  I0722 09:32:34.796933 22 resource.go:361] Creating new exec pod
  E0722 09:32:35.128490      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:36.128965      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:36.826816 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-4486 exec execpoddfgvt -- /bin/sh -x -c nslookup nodeport-service.services-4486.svc.cluster.local'
  I0722 09:32:36.994363 22 builder.go:146] stderr: "+ nslookup nodeport-service.services-4486.svc.cluster.local\n"
  I0722 09:32:36.994421 22 builder.go:147] stdout: "Server:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nnodeport-service.services-4486.svc.cluster.local\tcanonical name = externalsvc.services-4486.svc.cluster.local.\nName:\texternalsvc.services-4486.svc.cluster.local\nAddress: 10.152.183.85\n\n"
  I0722 09:32:37.035482 22 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0722 09:32:37.070597 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4486" for this suite. @ 07/22/25 09:32:37.074
â€¢ [4.409 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 07/22/25 09:32:37.079
  I0722 09:32:37.079593 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename disruption @ 07/22/25 09:32:37.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:37.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:37.092
  STEP: creating the pdb @ 07/22/25 09:32:37.095
  STEP: Waiting for the pdb to be processed @ 07/22/25 09:32:37.105
  E0722 09:32:37.134988      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:38.135196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 07/22/25 09:32:39.11
  STEP: Waiting for the pdb to be processed @ 07/22/25 09:32:39.119
  E0722 09:32:39.135538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:40.136688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 07/22/25 09:32:41.123
  STEP: Waiting for the pdb to be processed @ 07/22/25 09:32:41.131
  E0722 09:32:41.144014      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:42.145788      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:43.147419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 07/22/25 09:32:43.156
  I0722 09:32:43.158330 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9392" for this suite. @ 07/22/25 09:32:43.16
â€¢ [6.086 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 07/22/25 09:32:43.165
  I0722 09:32:43.165794 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/22/25 09:32:43.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:43.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:43.179
  STEP: getting /apis @ 07/22/25 09:32:43.185
  STEP: getting /apis/admissionregistration.k8s.io @ 07/22/25 09:32:43.189
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/22/25 09:32:43.19
  STEP: creating @ 07/22/25 09:32:43.191
  STEP: getting @ 07/22/25 09:32:43.203
  STEP: listing @ 07/22/25 09:32:43.205
  STEP: watching @ 07/22/25 09:32:43.206
  I0722 09:32:43.206889 22 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 07/22/25 09:32:43.207
  STEP: updating @ 07/22/25 09:32:43.212
  I0722 09:32:43.219066 22 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 07/22/25 09:32:43.219
  STEP: deleting a collection @ 07/22/25 09:32:43.227
  I0722 09:32:43.238771 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-427" for this suite. @ 07/22/25 09:32:43.241
â€¢ [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/22/25 09:32:43.247
  I0722 09:32:43.247149 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:32:43.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:43.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:43.26
  STEP: Creating projection with secret that has name projected-secret-test-723913a1-384e-4d3c-86b2-ecebffb472cc @ 07/22/25 09:32:43.262
  STEP: Creating a pod to test consume secrets @ 07/22/25 09:32:43.267
  E0722 09:32:44.149139      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:45.161126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:46.171076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:47.171615      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:32:47.29
  I0722 09:32:47.293214 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-dfc6f3ed-54e2-4288-8784-49a3a72d9935 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 09:32:47.297
  I0722 09:32:47.312004 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2247" for this suite. @ 07/22/25 09:32:47.315
â€¢ [4.074 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/22/25 09:32:47.321
  I0722 09:32:47.321826 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 09:32:47.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:47.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:47.337
  I0722 09:32:47.352619 22 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/22/25 09:32:47.357
  I0722 09:32:47.360209 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:32:47.360240 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/22/25 09:32:47.36
  I0722 09:32:47.377029 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:32:47.377071 22 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0722 09:32:48.173546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:48.375676 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 09:32:48.375714 22 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/22/25 09:32:48.377
  I0722 09:32:48.389335 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 09:32:48.389369 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0722 09:32:49.174477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:49.388139 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:32:49.388178 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/22/25 09:32:49.388
  I0722 09:32:49.397104 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:32:49.397148 22 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0722 09:32:50.186129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:50.407964 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:32:50.408001 22 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0722 09:32:51.193372      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:51.405869 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 09:32:51.405903 22 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 09:32:51.409
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3040, will wait for the garbage collector to delete the pods @ 07/22/25 09:32:51.409
  I0722 09:32:51.473464 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.359933ms
  I0722 09:32:51.580560 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 107.075579ms
  E0722 09:32:52.203557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:53.204062      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:54.085484 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:32:54.085528 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 09:32:54.087089 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26492"},"items":null}

  I0722 09:32:54.088637 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26492"},"items":null}

  I0722 09:32:54.099490 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3040" for this suite. @ 07/22/25 09:32:54.102
â€¢ [6.790 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 07/22/25 09:32:54.111
  I0722 09:32:54.111601 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:32:54.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:54.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:54.125
  STEP: Setting up server cert @ 07/22/25 09:32:54.142
  E0722 09:32:54.204931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:32:54.494
  STEP: Deploying the webhook pod @ 07/22/25 09:32:54.498
  STEP: Wait for the deployment to be ready @ 07/22/25 09:32:54.508
  I0722 09:32:54.512065 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0722 09:32:55.206078      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:32:56.216695      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:32:56.537
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:32:56.604
  E0722 09:32:57.229333      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:57.605128 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/22/25 09:32:57.607
  STEP: verifying the validating webhook match conditions @ 07/22/25 09:32:57.613
  STEP: updating the validating webhook match conditions @ 07/22/25 09:32:57.615
  STEP: verifying the validating webhook match conditions @ 07/22/25 09:32:57.622
  I0722 09:32:57.676774 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9009" for this suite. @ 07/22/25 09:32:57.679
  STEP: Destroying namespace "webhook-markers-6365" for this suite. @ 07/22/25 09:32:57.685
â€¢ [3.581 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 07/22/25 09:32:57.693
  I0722 09:32:57.693676 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 09:32:57.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:57.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:57.707
  STEP: Creating ReplicationController "e2e-rc-pcv7n" @ 07/22/25 09:32:57.709
  I0722 09:32:57.714102 22 rc.go:795] Get Replication Controller "e2e-rc-pcv7n" to confirm replicas
  E0722 09:32:58.235893      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:58.724182 22 rc.go:795] Get Replication Controller "e2e-rc-pcv7n" to confirm replicas
  I0722 09:32:58.726963 22 rc.go:804] Found 1 replicas for "e2e-rc-pcv7n" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-pcv7n" @ 07/22/25 09:32:58.727
  STEP: Updating a scale subresource @ 07/22/25 09:32:58.729
  STEP: Verifying replicas where modified for replication controller "e2e-rc-pcv7n" @ 07/22/25 09:32:58.734
  I0722 09:32:58.734076 22 rc.go:795] Get Replication Controller "e2e-rc-pcv7n" to confirm replicas
  E0722 09:32:59.244088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:32:59.739466 22 rc.go:795] Get Replication Controller "e2e-rc-pcv7n" to confirm replicas
  I0722 09:32:59.742762 22 rc.go:804] Found 2 replicas for "e2e-rc-pcv7n" replication controller
  I0722 09:32:59.742878 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6909" for this suite. @ 07/22/25 09:32:59.745
â€¢ [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/22/25 09:32:59.751
  I0722 09:32:59.751751 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename endpointslice @ 07/22/25 09:32:59.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:32:59.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:32:59.823
  I0722 09:32:59.839852      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0722 09:33:00.245838      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:01.246029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:33:01.854105      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:33:01.878844      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:33:01.880790 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4144" for this suite. @ 07/22/25 09:33:01.883
â€¢ [2.138 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/22/25 09:33:01.89
  I0722 09:33:01.890244 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename init-container @ 07/22/25 09:33:01.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:33:01.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:33:01.902
  STEP: creating the pod @ 07/22/25 09:33:01.904
  I0722 09:33:01.905069 22 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0722 09:33:02.259168      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:03.260059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:04.260262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:05.261010      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:06.260984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:07.269687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:08.279419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:09.279597      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:10.285374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:11.286418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:12.301793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:13.310406      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:14.325091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:15.330715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:16.342629      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:17.348853      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:18.354217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:19.364011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:20.368721      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:21.368871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:22.377792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:23.418766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:24.431357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:25.432672      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:26.449898      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:27.456142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:28.469682      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:29.469826      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:30.473908      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:31.484939      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:32.485786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:33.514512      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:34.520767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:35.524886      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:36.535418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:37.551417      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:38.551580      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:39.551787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:40.555758      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:41.559347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:42.579908      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:43.570623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:33:44.179836 22 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-bbb1f455-fa86-4c7f-8c98-ac0777878a3b", GenerateName:"", Namespace:"init-container-1664", SelfLink:"", UID:"6036e65b-2c6b-4603-9098-1d238f4c08d8", ResourceVersion:"26769", Generation:1, CreationTimestamp:time.Date(2025, time.July, 22, 9, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"905045188"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"c6b688147310c36e327dc76a01eb2f0ae39520a6e97b96ee832aae319f415ef0", "cni.projectcalico.org/podIP":"10.1.209.111/32", "cni.projectcalico.org/podIPs":"10.1.209.111/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005215248), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 33, 2, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4005215290), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 9, 33, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40052152c0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-k2bsz", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0x40039df020), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-k2bsz", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-k2bsz", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-k2bsz", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0x4003425f70), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"cncf1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0x4003aedd40), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0x4003425ff0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0x4003be8240)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0x4003be8248), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0x4003be824c), PreemptionPolicy:(*v1.PreemptionPolicy)(0x4004ce48d0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 22, 9, 33, 2, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 22, 9, 33, 1, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 22, 9, 33, 1, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 22, 9, 33, 1, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 22, 9, 33, 1, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.105.31", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.105.31"}}, PodIP:"10.1.209.111", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.1.209.111"}}, StartTime:time.Date(2025, time.July, 22, 9, 33, 1, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0x40037533b0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0x4003753420)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://a32e97f1596c298b4cec8f2f6517eaa311f19118fa77689d62ce269a32749bd9", Started:(*bool)(0x4003be842a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0x40043612c0), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-k2bsz", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0x4004ce48f0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0x40039df080), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0x4003be844d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-k2bsz", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0x4004ce4910)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0x40039df060), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0x4003be83ff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-k2bsz", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0x4004ce48e0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0722 09:33:44.180319 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1664" for this suite. @ 07/22/25 09:33:44.184
â€¢ [42.299 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/22/25 09:33:44.19
  I0722 09:33:44.190724 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/22/25 09:33:44.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:33:44.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:33:44.206
  STEP: mirroring a new custom Endpoint @ 07/22/25 09:33:44.22
  I0722 09:33:44.241516      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:33:44.247084 22 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0722 09:33:44.574699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:45.580537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 07/22/25 09:33:46.251
  I0722 09:33:46.257545      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:33:46.260542 22 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0722 09:33:46.597119      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:47.606534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 07/22/25 09:33:48.27
  I0722 09:33:48.278865      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:33:48.282141 22 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E0722 09:33:48.608085      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:49.608505      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:33:50.291698 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-7474" for this suite. @ 07/22/25 09:33:50.295
â€¢ [6.111 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/22/25 09:33:50.301
  I0722 09:33:50.301725 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/22/25 09:33:50.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:33:50.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:33:50.318
  STEP: getting /apis @ 07/22/25 09:33:50.321
  STEP: getting /apis/storage.k8s.io @ 07/22/25 09:33:50.325
  STEP: getting /apis/storage.k8s.io/v1 @ 07/22/25 09:33:50.326
  STEP: creating @ 07/22/25 09:33:50.327
  STEP: watching @ 07/22/25 09:33:50.342
  I0722 09:33:50.342666 22 csistoragecapacity.go:143] starting watch
  STEP: getting @ 07/22/25 09:33:50.349
  STEP: listing in namespace @ 07/22/25 09:33:50.352
  STEP: listing across namespaces @ 07/22/25 09:33:50.355
  STEP: patching @ 07/22/25 09:33:50.357
  STEP: updating @ 07/22/25 09:33:50.363
  I0722 09:33:50.367641 22 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0722 09:33:50.367757 22 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/22/25 09:33:50.367
  STEP: deleting a collection @ 07/22/25 09:33:50.377
  I0722 09:33:50.387485 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5107" for this suite. @ 07/22/25 09:33:50.389
â€¢ [0.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/22/25 09:33:50.394
  I0722 09:33:50.394730 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:33:50.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:33:50.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:33:50.407
  STEP: Creating configMap with name configmap-projected-all-test-volume-1235b5ed-ac90-40ea-9052-06a3b93c6415 @ 07/22/25 09:33:50.41
  STEP: Creating secret with name secret-projected-all-test-volume-fe590862-7ca8-4ac4-adf4-94b44effa248 @ 07/22/25 09:33:50.416
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/22/25 09:33:50.421
  I0722 09:33:50.428063      22 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E0722 09:33:50.622959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:51.629242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:52.629863      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:53.634955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:33:54.465
  I0722 09:33:54.467005 22 output.go:207] Trying to get logs from node cncf1 pod projected-volume-c4d25385-b315-4bd0-b7a7-54aaefb640e7 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 09:33:54.482
  I0722 09:33:54.495330 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8084" for this suite. @ 07/22/25 09:33:54.497
â€¢ [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 07/22/25 09:33:54.504
  I0722 09:33:54.504219 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename gc @ 07/22/25 09:33:54.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:33:54.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:33:54.518
  STEP: create the rc @ 07/22/25 09:33:54.523
  E0722 09:33:54.654184      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:33:54.662320      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0722 09:33:55.654932      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:56.655475      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:57.655859      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:33:58.657013      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/22/25 09:33:58.7
  STEP: wait for the rc to be deleted @ 07/22/25 09:33:58.771
  E0722 09:33:59.662420      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:33:59.811741 22 garbage_collector.go:678] 80 pods remaining
  I0722 09:33:59.811815 22 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0722 09:33:59.811823 22 garbage_collector.go:686] 
  E0722 09:34:00.666978      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:00.853221 22 garbage_collector.go:678] 74 pods remaining
  I0722 09:34:00.853285 22 garbage_collector.go:685] 73 pods has nil DeletionTimestamp
  I0722 09:34:00.853297 22 garbage_collector.go:686] 
  E0722 09:34:01.667539      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:01.828696 22 garbage_collector.go:678] 60 pods remaining
  I0722 09:34:01.828736 22 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0722 09:34:01.828740 22 garbage_collector.go:686] 
  E0722 09:34:02.668448      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:02.795431 22 garbage_collector.go:678] 40 pods remaining
  I0722 09:34:02.795561 22 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0722 09:34:02.795582 22 garbage_collector.go:686] 
  E0722 09:34:03.668408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:03.814112 22 garbage_collector.go:678] 34 pods remaining
  I0722 09:34:03.814327 22 garbage_collector.go:685] 33 pods has nil DeletionTimestamp
  I0722 09:34:03.814348 22 garbage_collector.go:686] 
  E0722 09:34:04.671824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:04.782518 22 garbage_collector.go:678] 20 pods remaining
  I0722 09:34:04.782550 22 garbage_collector.go:685] 20 pods has nil DeletionTimestamp
  I0722 09:34:04.782555 22 garbage_collector.go:686] 
  E0722 09:34:05.672105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:05.780912 22 garbage_collector.go:678] 0 pods remaining
  I0722 09:34:05.781006 22 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0722 09:34:05.781015 22 garbage_collector.go:686] 
  E0722 09:34:06.672683      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/22/25 09:34:06.778
  W0722 09:34:06.787962      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 09:34:06.788334 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 09:34:06.790053 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9397" for this suite. @ 07/22/25 09:34:06.793
â€¢ [12.301 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/22/25 09:34:06.807
  I0722 09:34:06.807213 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename svc-latency @ 07/22/25 09:34:06.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:34:06.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:34:06.828
  I0722 09:34:06.831767 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  I0722 09:34:06.854489 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0722 09:34:07.672591      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:08.672816      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:08.869974 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 9, 34, 6, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 9, 34, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 9, 34, 6, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 9, 34, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"svc-latency-rc-846dbb995\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 09:34:09.675717      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:10.689524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:10.859987      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:34:10.861142      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:34:10.992206 22 service_latency.go:351] Created: latency-svc-khj2m
  I0722 09:34:10.999504 22 service_latency.go:358] Got endpoints: latency-svc-khj2m [23.801127ms]
  I0722 09:34:11.014622 22 service_latency.go:351] Created: latency-svc-nv78c
  I0722 09:34:11.024721 22 service_latency.go:351] Created: latency-svc-7vmpf
  I0722 09:34:11.027302 22 service_latency.go:358] Got endpoints: latency-svc-nv78c [26.946444ms]
  I0722 09:34:11.034675 22 service_latency.go:358] Got endpoints: latency-svc-7vmpf [34.526529ms]
  I0722 09:34:11.044557 22 service_latency.go:351] Created: latency-svc-kkm57
  I0722 09:34:11.048099 22 service_latency.go:351] Created: latency-svc-2r68z
  I0722 09:34:11.059416 22 service_latency.go:358] Got endpoints: latency-svc-kkm57 [59.774899ms]
  I0722 09:34:11.062551 22 service_latency.go:358] Got endpoints: latency-svc-2r68z [62.268178ms]
  I0722 09:34:11.071712 22 service_latency.go:351] Created: latency-svc-wslbx
  I0722 09:34:11.074362 22 service_latency.go:351] Created: latency-svc-87t5t
  I0722 09:34:11.082388 22 service_latency.go:358] Got endpoints: latency-svc-wslbx [81.779576ms]
  I0722 09:34:11.089666 22 service_latency.go:358] Got endpoints: latency-svc-87t5t [89.196872ms]
  I0722 09:34:11.092213 22 service_latency.go:351] Created: latency-svc-nz8g6
  I0722 09:34:11.100538 22 service_latency.go:358] Got endpoints: latency-svc-nz8g6 [100.08994ms]
  I0722 09:34:11.102658 22 service_latency.go:351] Created: latency-svc-xm9v4
  I0722 09:34:11.113526 22 service_latency.go:358] Got endpoints: latency-svc-xm9v4 [112.955373ms]
  I0722 09:34:11.116028 22 service_latency.go:351] Created: latency-svc-4xg5l
  I0722 09:34:11.122036 22 service_latency.go:358] Got endpoints: latency-svc-4xg5l [121.390329ms]
  I0722 09:34:11.126976 22 service_latency.go:351] Created: latency-svc-z477r
  I0722 09:34:11.134588 22 service_latency.go:358] Got endpoints: latency-svc-z477r [133.916806ms]
  I0722 09:34:11.138768 22 service_latency.go:351] Created: latency-svc-xssfm
  I0722 09:34:11.145961 22 service_latency.go:358] Got endpoints: latency-svc-xssfm [145.228372ms]
  I0722 09:34:11.152333 22 service_latency.go:351] Created: latency-svc-9qg4s
  I0722 09:34:11.160649 22 service_latency.go:358] Got endpoints: latency-svc-9qg4s [159.887172ms]
  I0722 09:34:11.174063 22 service_latency.go:351] Created: latency-svc-frsrd
  I0722 09:34:11.177331 22 service_latency.go:358] Got endpoints: latency-svc-frsrd [176.497878ms]
  I0722 09:34:11.180935 22 service_latency.go:351] Created: latency-svc-c969h
  I0722 09:34:11.188021 22 service_latency.go:358] Got endpoints: latency-svc-c969h [187.147822ms]
  I0722 09:34:11.196011 22 service_latency.go:351] Created: latency-svc-45zxd
  I0722 09:34:11.230623 22 service_latency.go:351] Created: latency-svc-rbqw5
  I0722 09:34:11.234078 22 service_latency.go:358] Got endpoints: latency-svc-45zxd [233.268667ms]
  I0722 09:34:11.239533 22 service_latency.go:351] Created: latency-svc-9jb27
  I0722 09:34:11.254146 22 service_latency.go:358] Got endpoints: latency-svc-rbqw5 [226.798908ms]
  I0722 09:34:11.259959 22 service_latency.go:358] Got endpoints: latency-svc-9jb27 [225.243166ms]
  I0722 09:34:11.270964 22 service_latency.go:351] Created: latency-svc-zphcz
  I0722 09:34:11.278481 22 service_latency.go:351] Created: latency-svc-q77w6
  I0722 09:34:11.284067 22 service_latency.go:358] Got endpoints: latency-svc-zphcz [224.600878ms]
  I0722 09:34:11.287763 22 service_latency.go:351] Created: latency-svc-j9x5k
  I0722 09:34:11.294276 22 service_latency.go:358] Got endpoints: latency-svc-q77w6 [231.690092ms]
  I0722 09:34:11.300911 22 service_latency.go:358] Got endpoints: latency-svc-j9x5k [218.468202ms]
  I0722 09:34:11.303537 22 service_latency.go:351] Created: latency-svc-78ddf
  I0722 09:34:11.317646 22 service_latency.go:358] Got endpoints: latency-svc-78ddf [227.91832ms]
  I0722 09:34:11.320030 22 service_latency.go:351] Created: latency-svc-rhvcw
  I0722 09:34:11.330850 22 service_latency.go:358] Got endpoints: latency-svc-rhvcw [230.25539ms]
  I0722 09:34:11.335705 22 service_latency.go:351] Created: latency-svc-k6zhp
  I0722 09:34:11.342887 22 service_latency.go:358] Got endpoints: latency-svc-k6zhp [229.303188ms]
  I0722 09:34:11.347433 22 service_latency.go:351] Created: latency-svc-gsg9v
  I0722 09:34:11.356588 22 service_latency.go:358] Got endpoints: latency-svc-gsg9v [234.514327ms]
  I0722 09:34:11.359118 22 service_latency.go:351] Created: latency-svc-ns49b
  I0722 09:34:11.369560 22 service_latency.go:358] Got endpoints: latency-svc-ns49b [234.9227ms]
  I0722 09:34:11.371289 22 service_latency.go:351] Created: latency-svc-g57ws
  I0722 09:34:11.378972 22 service_latency.go:358] Got endpoints: latency-svc-g57ws [232.857002ms]
  I0722 09:34:11.384693 22 service_latency.go:351] Created: latency-svc-gn5vl
  I0722 09:34:11.392795 22 service_latency.go:358] Got endpoints: latency-svc-gn5vl [232.092256ms]
  I0722 09:34:11.397449 22 service_latency.go:351] Created: latency-svc-ld6j7
  I0722 09:34:11.405139 22 service_latency.go:358] Got endpoints: latency-svc-ld6j7 [227.761029ms]
  I0722 09:34:11.410268 22 service_latency.go:351] Created: latency-svc-lfngn
  I0722 09:34:11.419204 22 service_latency.go:358] Got endpoints: latency-svc-lfngn [231.138386ms]
  I0722 09:34:11.421816 22 service_latency.go:351] Created: latency-svc-57wfx
  I0722 09:34:11.431754 22 service_latency.go:358] Got endpoints: latency-svc-57wfx [197.527435ms]
  I0722 09:34:11.437325 22 service_latency.go:351] Created: latency-svc-z8ggs
  I0722 09:34:11.444233 22 service_latency.go:358] Got endpoints: latency-svc-z8ggs [190.033391ms]
  I0722 09:34:11.454528 22 service_latency.go:351] Created: latency-svc-gqmkk
  I0722 09:34:11.458143 22 service_latency.go:351] Created: latency-svc-pt5dt
  I0722 09:34:11.463310 22 service_latency.go:358] Got endpoints: latency-svc-gqmkk [203.30053ms]
  I0722 09:34:11.470476 22 service_latency.go:358] Got endpoints: latency-svc-pt5dt [186.334702ms]
  I0722 09:34:11.479757 22 service_latency.go:351] Created: latency-svc-jmrk7
  I0722 09:34:11.482124 22 service_latency.go:351] Created: latency-svc-qjhls
  I0722 09:34:11.489146 22 service_latency.go:358] Got endpoints: latency-svc-jmrk7 [194.824157ms]
  I0722 09:34:11.497060 22 service_latency.go:358] Got endpoints: latency-svc-qjhls [196.099901ms]
  I0722 09:34:11.499739 22 service_latency.go:351] Created: latency-svc-x4jjh
  I0722 09:34:11.508746 22 service_latency.go:358] Got endpoints: latency-svc-x4jjh [191.044136ms]
  I0722 09:34:11.511811 22 service_latency.go:351] Created: latency-svc-fmf7q
  I0722 09:34:11.519146 22 service_latency.go:358] Got endpoints: latency-svc-fmf7q [188.250608ms]
  I0722 09:34:11.527796 22 service_latency.go:351] Created: latency-svc-rlnt9
  I0722 09:34:11.530333 22 service_latency.go:351] Created: latency-svc-wwhh5
  I0722 09:34:11.540272 22 service_latency.go:358] Got endpoints: latency-svc-rlnt9 [197.320145ms]
  I0722 09:34:11.545207 22 service_latency.go:358] Got endpoints: latency-svc-wwhh5 [188.578856ms]
  I0722 09:34:11.547573 22 service_latency.go:351] Created: latency-svc-pmz88
  I0722 09:34:11.557648 22 service_latency.go:358] Got endpoints: latency-svc-pmz88 [188.041651ms]
  I0722 09:34:11.559144 22 service_latency.go:351] Created: latency-svc-4jfh6
  I0722 09:34:11.565509 22 service_latency.go:351] Created: latency-svc-mxpf6
  I0722 09:34:11.572000 22 service_latency.go:351] Created: latency-svc-qf2rb
  I0722 09:34:11.581473 22 service_latency.go:351] Created: latency-svc-z5bsc
  I0722 09:34:11.588004 22 service_latency.go:351] Created: latency-svc-vrggz
  I0722 09:34:11.594278 22 service_latency.go:351] Created: latency-svc-4dbnr
  I0722 09:34:11.603288 22 service_latency.go:358] Got endpoints: latency-svc-4jfh6 [224.265421ms]
  I0722 09:34:11.607232 22 service_latency.go:351] Created: latency-svc-n8hcp
  I0722 09:34:11.619367 22 service_latency.go:351] Created: latency-svc-sb79r
  I0722 09:34:11.628696 22 service_latency.go:351] Created: latency-svc-x7zdr
  I0722 09:34:11.629933 22 service_latency.go:351] Created: latency-svc-hslnj
  I0722 09:34:11.640711 22 service_latency.go:351] Created: latency-svc-2sz7w
  I0722 09:34:11.642877 22 service_latency.go:351] Created: latency-svc-bmsbj
  I0722 09:34:11.651243 22 service_latency.go:358] Got endpoints: latency-svc-mxpf6 [258.40137ms]
  I0722 09:34:11.655501 22 service_latency.go:351] Created: latency-svc-2ccn2
  I0722 09:34:11.662976 22 service_latency.go:351] Created: latency-svc-c5skc
  I0722 09:34:11.673074 22 service_latency.go:351] Created: latency-svc-b8g4w
  I0722 09:34:11.679362 22 service_latency.go:351] Created: latency-svc-wdr8x
  I0722 09:34:11.686318 22 service_latency.go:351] Created: latency-svc-wxjlw
  E0722 09:34:11.689572      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:11.696562 22 service_latency.go:358] Got endpoints: latency-svc-qf2rb [291.379449ms]
  I0722 09:34:11.710595 22 service_latency.go:351] Created: latency-svc-ksl5b
  I0722 09:34:11.752487 22 service_latency.go:358] Got endpoints: latency-svc-z5bsc [333.230357ms]
  I0722 09:34:11.763763 22 service_latency.go:351] Created: latency-svc-sb8tg
  I0722 09:34:11.798914 22 service_latency.go:358] Got endpoints: latency-svc-vrggz [367.117641ms]
  I0722 09:34:11.810984 22 service_latency.go:351] Created: latency-svc-6wxmn
  I0722 09:34:11.850051 22 service_latency.go:358] Got endpoints: latency-svc-4dbnr [405.702899ms]
  I0722 09:34:11.867073 22 service_latency.go:351] Created: latency-svc-2s5vp
  I0722 09:34:11.900172 22 service_latency.go:358] Got endpoints: latency-svc-n8hcp [436.787321ms]
  I0722 09:34:11.915430 22 service_latency.go:351] Created: latency-svc-dnnbj
  I0722 09:34:11.949905 22 service_latency.go:358] Got endpoints: latency-svc-sb79r [479.391892ms]
  I0722 09:34:11.966033 22 service_latency.go:351] Created: latency-svc-wbzf4
  I0722 09:34:12.000933 22 service_latency.go:358] Got endpoints: latency-svc-x7zdr [511.6976ms]
  I0722 09:34:12.017743 22 service_latency.go:351] Created: latency-svc-7mrbr
  I0722 09:34:12.194125 22 service_latency.go:358] Got endpoints: latency-svc-hslnj [696.967889ms]
  I0722 09:34:12.203704 22 service_latency.go:358] Got endpoints: latency-svc-2sz7w [694.905983ms]
  I0722 09:34:12.219961 22 service_latency.go:358] Got endpoints: latency-svc-bmsbj [700.717328ms]
  I0722 09:34:12.229172 22 service_latency.go:358] Got endpoints: latency-svc-2ccn2 [688.859014ms]
  I0722 09:34:12.258230 22 service_latency.go:351] Created: latency-svc-qh2dj
  I0722 09:34:12.267172 22 service_latency.go:358] Got endpoints: latency-svc-c5skc [721.911551ms]
  I0722 09:34:12.272495 22 service_latency.go:351] Created: latency-svc-wdqrk
  I0722 09:34:12.279717 22 service_latency.go:351] Created: latency-svc-mjsgl
  I0722 09:34:12.290782 22 service_latency.go:351] Created: latency-svc-l2jb8
  I0722 09:34:12.297814 22 service_latency.go:358] Got endpoints: latency-svc-b8g4w [740.124957ms]
  I0722 09:34:12.300238 22 service_latency.go:351] Created: latency-svc-4ngh6
  I0722 09:34:12.316480 22 service_latency.go:351] Created: latency-svc-hstcm
  I0722 09:34:12.347575 22 service_latency.go:358] Got endpoints: latency-svc-wdr8x [744.239685ms]
  I0722 09:34:12.366767 22 service_latency.go:351] Created: latency-svc-pqgnz
  I0722 09:34:12.398938 22 service_latency.go:358] Got endpoints: latency-svc-wxjlw [747.654208ms]
  I0722 09:34:12.414472 22 service_latency.go:351] Created: latency-svc-7csfg
  I0722 09:34:12.448570 22 service_latency.go:358] Got endpoints: latency-svc-ksl5b [751.959978ms]
  I0722 09:34:12.465633 22 service_latency.go:351] Created: latency-svc-j7zj5
  I0722 09:34:12.497824 22 service_latency.go:358] Got endpoints: latency-svc-sb8tg [745.289553ms]
  I0722 09:34:12.513814 22 service_latency.go:351] Created: latency-svc-xvhtv
  I0722 09:34:12.549189 22 service_latency.go:358] Got endpoints: latency-svc-6wxmn [750.218695ms]
  I0722 09:34:12.563880 22 service_latency.go:351] Created: latency-svc-g8m4l
  I0722 09:34:12.599721 22 service_latency.go:358] Got endpoints: latency-svc-2s5vp [749.554698ms]
  I0722 09:34:12.620028 22 service_latency.go:351] Created: latency-svc-wpnbz
  I0722 09:34:12.646322 22 service_latency.go:358] Got endpoints: latency-svc-dnnbj [746.109757ms]
  I0722 09:34:12.663403 22 service_latency.go:351] Created: latency-svc-4w5gq
  E0722 09:34:12.690908      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:12.703221 22 service_latency.go:358] Got endpoints: latency-svc-wbzf4 [753.260178ms]
  I0722 09:34:12.720252 22 service_latency.go:351] Created: latency-svc-nw8nx
  I0722 09:34:12.749145 22 service_latency.go:358] Got endpoints: latency-svc-7mrbr [748.172996ms]
  I0722 09:34:12.763942 22 service_latency.go:351] Created: latency-svc-5c2nm
  I0722 09:34:12.800612 22 service_latency.go:358] Got endpoints: latency-svc-qh2dj [606.439189ms]
  I0722 09:34:12.814600 22 service_latency.go:351] Created: latency-svc-dc2x4
  I0722 09:34:12.849177 22 service_latency.go:358] Got endpoints: latency-svc-wdqrk [645.424571ms]
  I0722 09:34:12.867796 22 service_latency.go:351] Created: latency-svc-lw45z
  I0722 09:34:12.899623 22 service_latency.go:358] Got endpoints: latency-svc-mjsgl [679.536143ms]
  I0722 09:34:12.913365 22 service_latency.go:351] Created: latency-svc-2wkxr
  I0722 09:34:12.946398 22 service_latency.go:358] Got endpoints: latency-svc-l2jb8 [717.17449ms]
  I0722 09:34:12.960147 22 service_latency.go:351] Created: latency-svc-nm6kq
  I0722 09:34:12.998029 22 service_latency.go:358] Got endpoints: latency-svc-4ngh6 [730.751669ms]
  I0722 09:34:13.016614 22 service_latency.go:351] Created: latency-svc-46lbr
  I0722 09:34:13.052164 22 service_latency.go:358] Got endpoints: latency-svc-hstcm [754.277506ms]
  I0722 09:34:13.065077 22 service_latency.go:351] Created: latency-svc-zcqjq
  I0722 09:34:13.096341 22 service_latency.go:358] Got endpoints: latency-svc-pqgnz [748.726826ms]
  I0722 09:34:13.114472 22 service_latency.go:351] Created: latency-svc-gfdhd
  I0722 09:34:13.149852 22 service_latency.go:358] Got endpoints: latency-svc-7csfg [750.840315ms]
  I0722 09:34:13.165854 22 service_latency.go:351] Created: latency-svc-7d9t2
  I0722 09:34:13.196569 22 service_latency.go:358] Got endpoints: latency-svc-j7zj5 [747.910454ms]
  I0722 09:34:13.212139 22 service_latency.go:351] Created: latency-svc-g5vzq
  I0722 09:34:13.247590 22 service_latency.go:358] Got endpoints: latency-svc-xvhtv [749.72157ms]
  I0722 09:34:13.267317 22 service_latency.go:351] Created: latency-svc-djdwk
  I0722 09:34:13.296970 22 service_latency.go:358] Got endpoints: latency-svc-g8m4l [747.733955ms]
  I0722 09:34:13.311872 22 service_latency.go:351] Created: latency-svc-66zjh
  I0722 09:34:13.395820 22 service_latency.go:358] Got endpoints: latency-svc-wpnbz [796.016829ms]
  I0722 09:34:13.401514 22 service_latency.go:358] Got endpoints: latency-svc-4w5gq [755.135083ms]
  I0722 09:34:13.418284 22 service_latency.go:351] Created: latency-svc-jfllv
  I0722 09:34:13.427373 22 service_latency.go:351] Created: latency-svc-7tl62
  I0722 09:34:13.446500 22 service_latency.go:358] Got endpoints: latency-svc-nw8nx [743.237936ms]
  I0722 09:34:13.463435 22 service_latency.go:351] Created: latency-svc-j62p7
  I0722 09:34:13.516346 22 service_latency.go:358] Got endpoints: latency-svc-5c2nm [767.132603ms]
  I0722 09:34:13.533402 22 service_latency.go:351] Created: latency-svc-94n5f
  I0722 09:34:13.549122 22 service_latency.go:358] Got endpoints: latency-svc-dc2x4 [748.454741ms]
  I0722 09:34:13.562630 22 service_latency.go:351] Created: latency-svc-rwx8v
  I0722 09:34:13.600635 22 service_latency.go:358] Got endpoints: latency-svc-lw45z [751.406267ms]
  I0722 09:34:13.629020 22 service_latency.go:351] Created: latency-svc-p94pd
  I0722 09:34:13.647852 22 service_latency.go:358] Got endpoints: latency-svc-2wkxr [748.190326ms]
  I0722 09:34:13.664641 22 service_latency.go:351] Created: latency-svc-4w9n8
  E0722 09:34:13.696974      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:13.699268 22 service_latency.go:358] Got endpoints: latency-svc-nm6kq [752.823926ms]
  I0722 09:34:13.713439 22 service_latency.go:351] Created: latency-svc-hls5f
  I0722 09:34:13.749420 22 service_latency.go:358] Got endpoints: latency-svc-46lbr [751.319934ms]
  I0722 09:34:13.764835 22 service_latency.go:351] Created: latency-svc-zjvhl
  I0722 09:34:13.800724 22 service_latency.go:358] Got endpoints: latency-svc-zcqjq [748.498741ms]
  I0722 09:34:13.815928 22 service_latency.go:351] Created: latency-svc-7dcmg
  I0722 09:34:13.847784 22 service_latency.go:358] Got endpoints: latency-svc-gfdhd [751.347642ms]
  I0722 09:34:13.863258 22 service_latency.go:351] Created: latency-svc-x9ws6
  I0722 09:34:13.895968 22 service_latency.go:358] Got endpoints: latency-svc-7d9t2 [746.019587ms]
  I0722 09:34:13.912165 22 service_latency.go:351] Created: latency-svc-2htxm
  I0722 09:34:13.950911 22 service_latency.go:358] Got endpoints: latency-svc-g5vzq [754.304251ms]
  I0722 09:34:13.963082 22 service_latency.go:351] Created: latency-svc-g5b5p
  I0722 09:34:13.996917 22 service_latency.go:358] Got endpoints: latency-svc-djdwk [749.253778ms]
  I0722 09:34:14.012315 22 service_latency.go:351] Created: latency-svc-77qtc
  I0722 09:34:14.069447 22 service_latency.go:358] Got endpoints: latency-svc-66zjh [772.431324ms]
  I0722 09:34:14.084467 22 service_latency.go:351] Created: latency-svc-6b8zc
  I0722 09:34:14.096608 22 service_latency.go:358] Got endpoints: latency-svc-jfllv [700.741196ms]
  I0722 09:34:14.106857 22 service_latency.go:351] Created: latency-svc-ggglk
  I0722 09:34:14.146827 22 service_latency.go:358] Got endpoints: latency-svc-7tl62 [745.16734ms]
  I0722 09:34:14.159342 22 service_latency.go:351] Created: latency-svc-sp6f8
  I0722 09:34:14.211123 22 service_latency.go:358] Got endpoints: latency-svc-j62p7 [764.569156ms]
  I0722 09:34:14.222711 22 service_latency.go:351] Created: latency-svc-fldr9
  I0722 09:34:14.255958 22 service_latency.go:358] Got endpoints: latency-svc-94n5f [739.549827ms]
  I0722 09:34:14.270186 22 service_latency.go:351] Created: latency-svc-l5872
  I0722 09:34:14.299172 22 service_latency.go:358] Got endpoints: latency-svc-rwx8v [750.001564ms]
  I0722 09:34:14.309801 22 service_latency.go:351] Created: latency-svc-66nw7
  I0722 09:34:14.365526 22 service_latency.go:358] Got endpoints: latency-svc-p94pd [764.792362ms]
  I0722 09:34:14.375330 22 service_latency.go:351] Created: latency-svc-qcslg
  I0722 09:34:14.399781 22 service_latency.go:358] Got endpoints: latency-svc-4w9n8 [751.876054ms]
  I0722 09:34:14.411765 22 service_latency.go:351] Created: latency-svc-ht6jn
  I0722 09:34:14.451739 22 service_latency.go:358] Got endpoints: latency-svc-hls5f [752.395968ms]
  I0722 09:34:14.462615 22 service_latency.go:351] Created: latency-svc-8f49l
  I0722 09:34:14.510933 22 service_latency.go:358] Got endpoints: latency-svc-zjvhl [761.454295ms]
  I0722 09:34:14.522928 22 service_latency.go:351] Created: latency-svc-dwxp5
  I0722 09:34:14.550090 22 service_latency.go:358] Got endpoints: latency-svc-7dcmg [749.319567ms]
  I0722 09:34:14.561376 22 service_latency.go:351] Created: latency-svc-66klt
  I0722 09:34:14.604626 22 service_latency.go:358] Got endpoints: latency-svc-x9ws6 [756.800402ms]
  I0722 09:34:14.616367 22 service_latency.go:351] Created: latency-svc-ck7n7
  I0722 09:34:14.648857 22 service_latency.go:358] Got endpoints: latency-svc-2htxm [752.811423ms]
  I0722 09:34:14.661110 22 service_latency.go:351] Created: latency-svc-5g4dx
  E0722 09:34:14.706654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:14.713521 22 service_latency.go:358] Got endpoints: latency-svc-g5b5p [762.564164ms]
  I0722 09:34:14.725085 22 service_latency.go:351] Created: latency-svc-9lclv
  I0722 09:34:14.764940 22 service_latency.go:358] Got endpoints: latency-svc-77qtc [767.948302ms]
  I0722 09:34:14.778605 22 service_latency.go:351] Created: latency-svc-j84xn
  I0722 09:34:14.798781 22 service_latency.go:358] Got endpoints: latency-svc-6b8zc [729.28342ms]
  I0722 09:34:14.810420 22 service_latency.go:351] Created: latency-svc-rm6tw
  I0722 09:34:14.854901 22 service_latency.go:358] Got endpoints: latency-svc-ggglk [758.251352ms]
  I0722 09:34:14.865458 22 service_latency.go:351] Created: latency-svc-2djh2
  I0722 09:34:14.898016 22 service_latency.go:358] Got endpoints: latency-svc-sp6f8 [751.153598ms]
  I0722 09:34:14.909452 22 service_latency.go:351] Created: latency-svc-bdgqt
  I0722 09:34:14.960339 22 service_latency.go:358] Got endpoints: latency-svc-fldr9 [749.175483ms]
  I0722 09:34:14.970621 22 service_latency.go:351] Created: latency-svc-7tl2m
  I0722 09:34:14.996864 22 service_latency.go:358] Got endpoints: latency-svc-l5872 [740.791359ms]
  I0722 09:34:15.010063 22 service_latency.go:351] Created: latency-svc-cf776
  I0722 09:34:15.050499 22 service_latency.go:358] Got endpoints: latency-svc-66nw7 [751.277305ms]
  I0722 09:34:15.062922 22 service_latency.go:351] Created: latency-svc-x7tdn
  I0722 09:34:15.098850 22 service_latency.go:358] Got endpoints: latency-svc-qcslg [733.268023ms]
  I0722 09:34:15.114692 22 service_latency.go:351] Created: latency-svc-swlt9
  I0722 09:34:15.149376 22 service_latency.go:358] Got endpoints: latency-svc-ht6jn [749.529313ms]
  I0722 09:34:15.160289 22 service_latency.go:351] Created: latency-svc-nx6h8
  I0722 09:34:15.199531 22 service_latency.go:358] Got endpoints: latency-svc-8f49l [747.715365ms]
  I0722 09:34:15.210652 22 service_latency.go:351] Created: latency-svc-9tn28
  I0722 09:34:15.265131 22 service_latency.go:358] Got endpoints: latency-svc-dwxp5 [754.144247ms]
  I0722 09:34:15.277834 22 service_latency.go:351] Created: latency-svc-q5js7
  I0722 09:34:15.296238 22 service_latency.go:358] Got endpoints: latency-svc-66klt [746.071623ms]
  I0722 09:34:15.308239 22 service_latency.go:351] Created: latency-svc-z2pz2
  I0722 09:34:15.355129 22 service_latency.go:358] Got endpoints: latency-svc-ck7n7 [750.425224ms]
  I0722 09:34:15.366537 22 service_latency.go:351] Created: latency-svc-pnv5k
  I0722 09:34:15.396303 22 service_latency.go:358] Got endpoints: latency-svc-5g4dx [747.398656ms]
  I0722 09:34:15.408662 22 service_latency.go:351] Created: latency-svc-r2mvn
  I0722 09:34:15.458837 22 service_latency.go:358] Got endpoints: latency-svc-9lclv [745.266209ms]
  I0722 09:34:15.470716 22 service_latency.go:351] Created: latency-svc-fxnrz
  I0722 09:34:15.496847 22 service_latency.go:358] Got endpoints: latency-svc-j84xn [731.718071ms]
  I0722 09:34:15.508421 22 service_latency.go:351] Created: latency-svc-9s855
  I0722 09:34:15.574209 22 service_latency.go:358] Got endpoints: latency-svc-rm6tw [775.343094ms]
  I0722 09:34:15.583955 22 service_latency.go:351] Created: latency-svc-v2kdt
  I0722 09:34:15.596105 22 service_latency.go:358] Got endpoints: latency-svc-2djh2 [741.156938ms]
  I0722 09:34:15.609746 22 service_latency.go:351] Created: latency-svc-hptvk
  I0722 09:34:15.646855 22 service_latency.go:358] Got endpoints: latency-svc-bdgqt [748.781898ms]
  I0722 09:34:15.659787 22 service_latency.go:351] Created: latency-svc-lcn7f
  E0722 09:34:15.707224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:15.710408 22 service_latency.go:358] Got endpoints: latency-svc-7tl2m [750.028308ms]
  I0722 09:34:15.725065 22 service_latency.go:351] Created: latency-svc-ff8h6
  I0722 09:34:15.750985 22 service_latency.go:358] Got endpoints: latency-svc-cf776 [754.072453ms]
  I0722 09:34:15.763979 22 service_latency.go:351] Created: latency-svc-dzlvn
  I0722 09:34:15.800441 22 service_latency.go:358] Got endpoints: latency-svc-x7tdn [749.886891ms]
  I0722 09:34:15.811175 22 service_latency.go:351] Created: latency-svc-229f4
  I0722 09:34:15.891093 22 service_latency.go:358] Got endpoints: latency-svc-swlt9 [792.188714ms]
  I0722 09:34:15.898118 22 service_latency.go:358] Got endpoints: latency-svc-nx6h8 [748.68344ms]
  I0722 09:34:15.907693 22 service_latency.go:351] Created: latency-svc-nwzqd
  I0722 09:34:15.915007 22 service_latency.go:351] Created: latency-svc-dtdv2
  I0722 09:34:15.947055 22 service_latency.go:358] Got endpoints: latency-svc-9tn28 [747.485112ms]
  I0722 09:34:15.960405 22 service_latency.go:351] Created: latency-svc-dxngp
  I0722 09:34:16.000801 22 service_latency.go:358] Got endpoints: latency-svc-q5js7 [735.604716ms]
  I0722 09:34:16.011909 22 service_latency.go:351] Created: latency-svc-mswjk
  I0722 09:34:16.068857 22 service_latency.go:358] Got endpoints: latency-svc-z2pz2 [772.571607ms]
  I0722 09:34:16.080893 22 service_latency.go:351] Created: latency-svc-k8vwl
  I0722 09:34:16.104285 22 service_latency.go:358] Got endpoints: latency-svc-pnv5k [749.112687ms]
  I0722 09:34:16.116584 22 service_latency.go:351] Created: latency-svc-7lvtm
  I0722 09:34:16.152099 22 service_latency.go:358] Got endpoints: latency-svc-r2mvn [755.75386ms]
  I0722 09:34:16.165803 22 service_latency.go:351] Created: latency-svc-cl8ds
  I0722 09:34:16.304973 22 service_latency.go:358] Got endpoints: latency-svc-fxnrz [846.070348ms]
  I0722 09:34:16.313418 22 service_latency.go:358] Got endpoints: latency-svc-9s855 [816.526377ms]
  I0722 09:34:16.316952 22 service_latency.go:358] Got endpoints: latency-svc-v2kdt [742.692802ms]
  I0722 09:34:16.329083 22 service_latency.go:351] Created: latency-svc-bdppf
  I0722 09:34:16.336037 22 service_latency.go:351] Created: latency-svc-5ldl6
  I0722 09:34:16.342317 22 service_latency.go:351] Created: latency-svc-xz4h2
  I0722 09:34:16.346743 22 service_latency.go:358] Got endpoints: latency-svc-hptvk [750.584178ms]
  I0722 09:34:16.358889 22 service_latency.go:351] Created: latency-svc-s5csm
  I0722 09:34:16.408382 22 service_latency.go:358] Got endpoints: latency-svc-lcn7f [761.472413ms]
  I0722 09:34:16.418463 22 service_latency.go:351] Created: latency-svc-pgkk4
  I0722 09:34:16.446522 22 service_latency.go:358] Got endpoints: latency-svc-ff8h6 [735.722713ms]
  I0722 09:34:16.459534 22 service_latency.go:351] Created: latency-svc-7f2gc
  I0722 09:34:16.499927 22 service_latency.go:358] Got endpoints: latency-svc-dzlvn [748.896102ms]
  I0722 09:34:16.515647 22 service_latency.go:351] Created: latency-svc-5dldw
  I0722 09:34:16.548076 22 service_latency.go:358] Got endpoints: latency-svc-229f4 [747.539901ms]
  I0722 09:34:16.560696 22 service_latency.go:351] Created: latency-svc-2z7wr
  I0722 09:34:16.603840 22 service_latency.go:358] Got endpoints: latency-svc-nwzqd [712.685165ms]
  I0722 09:34:16.614693 22 service_latency.go:351] Created: latency-svc-lkrck
  I0722 09:34:16.648935 22 service_latency.go:358] Got endpoints: latency-svc-dtdv2 [750.772717ms]
  I0722 09:34:16.660369 22 service_latency.go:351] Created: latency-svc-hnq95
  I0722 09:34:16.697270 22 service_latency.go:358] Got endpoints: latency-svc-dxngp [750.147011ms]
  I0722 09:34:16.708790 22 service_latency.go:351] Created: latency-svc-27msm
  E0722 09:34:16.708892      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:16.749097 22 service_latency.go:358] Got endpoints: latency-svc-mswjk [748.237355ms]
  I0722 09:34:16.758591 22 service_latency.go:351] Created: latency-svc-vz9rl
  I0722 09:34:16.804441 22 service_latency.go:358] Got endpoints: latency-svc-k8vwl [735.532921ms]
  I0722 09:34:16.816187 22 service_latency.go:351] Created: latency-svc-vnp5t
  I0722 09:34:16.868019 22 service_latency.go:358] Got endpoints: latency-svc-7lvtm [763.687483ms]
  I0722 09:34:16.879171 22 service_latency.go:351] Created: latency-svc-w57lq
  I0722 09:34:16.901984 22 service_latency.go:358] Got endpoints: latency-svc-cl8ds [749.838596ms]
  I0722 09:34:16.913259 22 service_latency.go:351] Created: latency-svc-tjrbs
  I0722 09:34:16.954586 22 service_latency.go:358] Got endpoints: latency-svc-bdppf [649.551411ms]
  I0722 09:34:16.965460 22 service_latency.go:351] Created: latency-svc-dpcpg
  I0722 09:34:16.996477 22 service_latency.go:358] Got endpoints: latency-svc-5ldl6 [682.987778ms]
  I0722 09:34:17.009034 22 service_latency.go:351] Created: latency-svc-jn8zf
  I0722 09:34:17.046882 22 service_latency.go:358] Got endpoints: latency-svc-xz4h2 [729.869283ms]
  I0722 09:34:17.058766 22 service_latency.go:351] Created: latency-svc-kpkzz
  I0722 09:34:17.099092 22 service_latency.go:358] Got endpoints: latency-svc-s5csm [752.281624ms]
  I0722 09:34:17.110793 22 service_latency.go:351] Created: latency-svc-4c2ck
  I0722 09:34:17.158938 22 service_latency.go:358] Got endpoints: latency-svc-pgkk4 [750.488884ms]
  I0722 09:34:17.178658 22 service_latency.go:351] Created: latency-svc-wz2wp
  I0722 09:34:17.197201 22 service_latency.go:358] Got endpoints: latency-svc-7f2gc [750.618966ms]
  I0722 09:34:17.209785 22 service_latency.go:351] Created: latency-svc-p4tn4
  I0722 09:34:17.250448 22 service_latency.go:358] Got endpoints: latency-svc-5dldw [750.473675ms]
  I0722 09:34:17.264421 22 service_latency.go:351] Created: latency-svc-w2vr7
  I0722 09:34:17.302538 22 service_latency.go:358] Got endpoints: latency-svc-2z7wr [754.411071ms]
  I0722 09:34:17.316745 22 service_latency.go:351] Created: latency-svc-dqkcc
  I0722 09:34:17.360690 22 service_latency.go:358] Got endpoints: latency-svc-lkrck [756.808308ms]
  I0722 09:34:17.372189 22 service_latency.go:351] Created: latency-svc-b6gdf
  I0722 09:34:17.396978 22 service_latency.go:358] Got endpoints: latency-svc-hnq95 [747.964146ms]
  I0722 09:34:17.408280 22 service_latency.go:351] Created: latency-svc-shlj5
  I0722 09:34:17.446363 22 service_latency.go:358] Got endpoints: latency-svc-27msm [749.00839ms]
  I0722 09:34:17.457395 22 service_latency.go:351] Created: latency-svc-cdhqt
  I0722 09:34:17.499846 22 service_latency.go:358] Got endpoints: latency-svc-vz9rl [750.699298ms]
  I0722 09:34:17.510586 22 service_latency.go:351] Created: latency-svc-5wb68
  I0722 09:34:17.558746 22 service_latency.go:358] Got endpoints: latency-svc-vnp5t [754.24057ms]
  I0722 09:34:17.571371 22 service_latency.go:351] Created: latency-svc-9jzcn
  I0722 09:34:17.602588 22 service_latency.go:358] Got endpoints: latency-svc-w57lq [734.517923ms]
  I0722 09:34:17.615171 22 service_latency.go:351] Created: latency-svc-phs5x
  I0722 09:34:17.673769 22 service_latency.go:358] Got endpoints: latency-svc-tjrbs [771.734603ms]
  E0722 09:34:17.709776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:17.712653 22 service_latency.go:358] Got endpoints: latency-svc-dpcpg [758.003841ms]
  I0722 09:34:17.719054 22 service_latency.go:351] Created: latency-svc-pln7k
  I0722 09:34:17.732220 22 service_latency.go:351] Created: latency-svc-f2k2x
  I0722 09:34:17.751625 22 service_latency.go:358] Got endpoints: latency-svc-jn8zf [755.104899ms]
  I0722 09:34:17.764771 22 service_latency.go:351] Created: latency-svc-225js
  I0722 09:34:17.799262 22 service_latency.go:358] Got endpoints: latency-svc-kpkzz [752.340705ms]
  I0722 09:34:17.812909 22 service_latency.go:351] Created: latency-svc-gjr5h
  I0722 09:34:17.855188 22 service_latency.go:358] Got endpoints: latency-svc-4c2ck [756.052227ms]
  I0722 09:34:17.869097 22 service_latency.go:351] Created: latency-svc-bgjqz
  I0722 09:34:17.902366 22 service_latency.go:358] Got endpoints: latency-svc-wz2wp [743.340126ms]
  I0722 09:34:17.912779 22 service_latency.go:351] Created: latency-svc-fkbgj
  I0722 09:34:17.946588 22 service_latency.go:358] Got endpoints: latency-svc-p4tn4 [749.314387ms]
  I0722 09:34:17.959195 22 service_latency.go:351] Created: latency-svc-tvw8q
  I0722 09:34:17.996543 22 service_latency.go:358] Got endpoints: latency-svc-w2vr7 [746.034321ms]
  I0722 09:34:18.085967 22 service_latency.go:358] Got endpoints: latency-svc-dqkcc [783.37ms]
  I0722 09:34:18.095378 22 service_latency.go:351] Created: latency-svc-x8vhj
  I0722 09:34:18.101703 22 service_latency.go:358] Got endpoints: latency-svc-b6gdf [740.966472ms]
  I0722 09:34:18.110728 22 service_latency.go:351] Created: latency-svc-kjvtk
  I0722 09:34:18.116470 22 service_latency.go:351] Created: latency-svc-z6t8v
  I0722 09:34:18.156703 22 service_latency.go:358] Got endpoints: latency-svc-shlj5 [759.67304ms]
  I0722 09:34:18.170013 22 service_latency.go:351] Created: latency-svc-ctxjc
  I0722 09:34:18.204621 22 service_latency.go:358] Got endpoints: latency-svc-cdhqt [758.178673ms]
  I0722 09:34:18.216142 22 service_latency.go:351] Created: latency-svc-wprns
  I0722 09:34:18.247608 22 service_latency.go:358] Got endpoints: latency-svc-5wb68 [747.720811ms]
  I0722 09:34:18.260981 22 service_latency.go:351] Created: latency-svc-6lqrz
  I0722 09:34:18.309784 22 service_latency.go:358] Got endpoints: latency-svc-9jzcn [750.986294ms]
  I0722 09:34:18.320080 22 service_latency.go:351] Created: latency-svc-w5tt2
  I0722 09:34:18.366127 22 service_latency.go:358] Got endpoints: latency-svc-phs5x [763.490061ms]
  I0722 09:34:18.376765 22 service_latency.go:351] Created: latency-svc-qwzfk
  I0722 09:34:18.405315 22 service_latency.go:358] Got endpoints: latency-svc-pln7k [731.377729ms]
  I0722 09:34:18.417120 22 service_latency.go:351] Created: latency-svc-nmd8s
  I0722 09:34:18.446966 22 service_latency.go:358] Got endpoints: latency-svc-f2k2x [734.256796ms]
  I0722 09:34:18.460926 22 service_latency.go:351] Created: latency-svc-rkj6v
  I0722 09:34:18.504292 22 service_latency.go:358] Got endpoints: latency-svc-225js [752.626325ms]
  I0722 09:34:18.515350 22 service_latency.go:351] Created: latency-svc-l488c
  I0722 09:34:18.546315 22 service_latency.go:358] Got endpoints: latency-svc-gjr5h [747.012271ms]
  I0722 09:34:18.557845 22 service_latency.go:351] Created: latency-svc-mms2z
  I0722 09:34:18.599214 22 service_latency.go:358] Got endpoints: latency-svc-bgjqz [743.951286ms]
  I0722 09:34:18.610796 22 service_latency.go:351] Created: latency-svc-gjbn6
  I0722 09:34:18.663194 22 service_latency.go:358] Got endpoints: latency-svc-fkbgj [760.767407ms]
  I0722 09:34:18.676282 22 service_latency.go:351] Created: latency-svc-vhzgq
  I0722 09:34:18.703828 22 service_latency.go:358] Got endpoints: latency-svc-tvw8q [757.174884ms]
  E0722 09:34:18.710051      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:18.717171 22 service_latency.go:351] Created: latency-svc-jzcf2
  I0722 09:34:18.745946 22 service_latency.go:358] Got endpoints: latency-svc-x8vhj [749.346924ms]
  I0722 09:34:18.757406 22 service_latency.go:351] Created: latency-svc-sd6xk
  I0722 09:34:18.803652 22 service_latency.go:358] Got endpoints: latency-svc-kjvtk [717.628256ms]
  I0722 09:34:18.815805 22 service_latency.go:351] Created: latency-svc-lbfw5
  I0722 09:34:18.859484 22 service_latency.go:358] Got endpoints: latency-svc-z6t8v [757.744047ms]
  I0722 09:34:18.899320 22 service_latency.go:358] Got endpoints: latency-svc-ctxjc [742.55546ms]
  I0722 09:34:18.951786 22 service_latency.go:358] Got endpoints: latency-svc-wprns [747.123644ms]
  I0722 09:34:18.997530 22 service_latency.go:358] Got endpoints: latency-svc-6lqrz [749.842463ms]
  I0722 09:34:19.049452 22 service_latency.go:358] Got endpoints: latency-svc-w5tt2 [739.619558ms]
  I0722 09:34:19.099444 22 service_latency.go:358] Got endpoints: latency-svc-qwzfk [733.251174ms]
  I0722 09:34:19.149716 22 service_latency.go:358] Got endpoints: latency-svc-nmd8s [744.359075ms]
  I0722 09:34:19.198169 22 service_latency.go:358] Got endpoints: latency-svc-rkj6v [751.140789ms]
  I0722 09:34:19.255594 22 service_latency.go:358] Got endpoints: latency-svc-l488c [751.257288ms]
  I0722 09:34:19.331360 22 service_latency.go:358] Got endpoints: latency-svc-mms2z [784.999987ms]
  I0722 09:34:19.349334 22 service_latency.go:358] Got endpoints: latency-svc-gjbn6 [750.018752ms]
  I0722 09:34:19.403367 22 service_latency.go:358] Got endpoints: latency-svc-vhzgq [740.130471ms]
  I0722 09:34:19.450304 22 service_latency.go:358] Got endpoints: latency-svc-jzcf2 [746.387188ms]
  I0722 09:34:19.500906 22 service_latency.go:358] Got endpoints: latency-svc-sd6xk [754.906601ms]
  I0722 09:34:19.550406 22 service_latency.go:358] Got endpoints: latency-svc-lbfw5 [746.689018ms]
  I0722 09:34:19.550811 22 service_latency.go:114] Latencies: [26.946444ms 34.526529ms 59.774899ms 62.268178ms 81.779576ms 89.196872ms 100.08994ms 112.955373ms 121.390329ms 133.916806ms 145.228372ms 159.887172ms 176.497878ms 186.334702ms 187.147822ms 188.041651ms 188.250608ms 188.578856ms 190.033391ms 191.044136ms 194.824157ms 196.099901ms 197.320145ms 197.527435ms 203.30053ms 218.468202ms 224.265421ms 224.600878ms 225.243166ms 226.798908ms 227.761029ms 227.91832ms 229.303188ms 230.25539ms 231.138386ms 231.690092ms 232.092256ms 232.857002ms 233.268667ms 234.514327ms 234.9227ms 258.40137ms 291.379449ms 333.230357ms 367.117641ms 405.702899ms 436.787321ms 479.391892ms 511.6976ms 606.439189ms 645.424571ms 649.551411ms 679.536143ms 682.987778ms 688.859014ms 694.905983ms 696.967889ms 700.717328ms 700.741196ms 712.685165ms 717.17449ms 717.628256ms 721.911551ms 729.28342ms 729.869283ms 730.751669ms 731.377729ms 731.718071ms 733.251174ms 733.268023ms 734.256796ms 734.517923ms 735.532921ms 735.604716ms 735.722713ms 739.549827ms 739.619558ms 740.124957ms 740.130471ms 740.791359ms 740.966472ms 741.156938ms 742.55546ms 742.692802ms 743.237936ms 743.340126ms 743.951286ms 744.239685ms 744.359075ms 745.16734ms 745.266209ms 745.289553ms 746.019587ms 746.034321ms 746.071623ms 746.109757ms 746.387188ms 746.689018ms 747.012271ms 747.123644ms 747.398656ms 747.485112ms 747.539901ms 747.654208ms 747.715365ms 747.720811ms 747.733955ms 747.910454ms 747.964146ms 748.172996ms 748.190326ms 748.237355ms 748.454741ms 748.498741ms 748.68344ms 748.726826ms 748.781898ms 748.896102ms 749.00839ms 749.112687ms 749.175483ms 749.253778ms 749.314387ms 749.319567ms 749.346924ms 749.529313ms 749.554698ms 749.72157ms 749.838596ms 749.842463ms 749.886891ms 750.001564ms 750.018752ms 750.028308ms 750.147011ms 750.218695ms 750.425224ms 750.473675ms 750.488884ms 750.584178ms 750.618966ms 750.699298ms 750.772717ms 750.840315ms 750.986294ms 751.140789ms 751.153598ms 751.257288ms 751.277305ms 751.319934ms 751.347642ms 751.406267ms 751.876054ms 751.959978ms 752.281624ms 752.340705ms 752.395968ms 752.626325ms 752.811423ms 752.823926ms 753.260178ms 754.072453ms 754.144247ms 754.24057ms 754.277506ms 754.304251ms 754.411071ms 754.906601ms 755.104899ms 755.135083ms 755.75386ms 756.052227ms 756.800402ms 756.808308ms 757.174884ms 757.744047ms 758.003841ms 758.178673ms 758.251352ms 759.67304ms 760.767407ms 761.454295ms 761.472413ms 762.564164ms 763.490061ms 763.687483ms 764.569156ms 764.792362ms 767.132603ms 767.948302ms 771.734603ms 772.431324ms 772.571607ms 775.343094ms 783.37ms 784.999987ms 792.188714ms 796.016829ms 816.526377ms 846.070348ms]
  I0722 09:34:19.550842 22 service_latency.go:118] 50 %ile: 747.398656ms
  I0722 09:34:19.550847 22 service_latency.go:119] 90 %ile: 760.767407ms
  I0722 09:34:19.550851 22 service_latency.go:120] 99 %ile: 816.526377ms
  I0722 09:34:19.550854 22 service_latency.go:121] Total sample count: 200
  I0722 09:34:19.551022 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-850" for this suite. @ 07/22/25 09:34:19.553
â€¢ [12.752 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 07/22/25 09:34:19.562
  I0722 09:34:19.562346 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 09:34:19.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:34:19.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:34:19.575
  STEP: Creating a ResourceQuota with terminating scope @ 07/22/25 09:34:19.578
  STEP: Ensuring ResourceQuota status is calculated @ 07/22/25 09:34:19.583
  E0722 09:34:19.727368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:20.759639      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 07/22/25 09:34:21.6
  STEP: Ensuring ResourceQuota status is calculated @ 07/22/25 09:34:21.605
  E0722 09:34:21.761407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:22.766512      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 07/22/25 09:34:23.643
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/22/25 09:34:23.659
  E0722 09:34:23.781410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:24.781879      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/22/25 09:34:25.675
  E0722 09:34:25.782802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:26.783573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/22/25 09:34:27.678
  STEP: Ensuring resource quota status released the pod usage @ 07/22/25 09:34:27.694
  E0722 09:34:27.784342      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:28.784769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 07/22/25 09:34:29.698
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/22/25 09:34:29.712
  E0722 09:34:29.785586      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:30.829267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/22/25 09:34:31.727
  E0722 09:34:31.829856      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:32.878729      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/22/25 09:34:33.773
  STEP: Ensuring resource quota status released the pod usage @ 07/22/25 09:34:33.791
  E0722 09:34:33.883113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:34.883662      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:35.794560 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4346" for this suite. @ 07/22/25 09:34:35.797
â€¢ [16.241 seconds]
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 07/22/25 09:34:35.803
  I0722 09:34:35.803235 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename dns @ 07/22/25 09:34:35.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:34:35.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:34:35.816
  STEP: Creating a test externalName service @ 07/22/25 09:34:35.818
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1255.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-1255.svc.cluster.local; sleep 1; done
   @ 07/22/25 09:34:35.823
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1255.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1255.svc.cluster.local; sleep 1; done
   @ 07/22/25 09:34:35.823
  STEP: creating a pod to probe DNS @ 07/22/25 09:34:35.823
  STEP: submitting the pod to kubernetes @ 07/22/25 09:34:35.823
  E0722 09:34:35.893059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:36.894631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/22/25 09:34:37.837
  STEP: looking for the results for each expected name from probers @ 07/22/25 09:34:37.839
  I0722 09:34:37.844113 22 dns_common.go:571] DNS probes using dns-test-b6f6c8b2-34e1-40cd-bc7c-bbaff51c79a5 succeeded

  STEP: changing the externalName to bar.example.com @ 07/22/25 09:34:37.844
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1255.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-1255.svc.cluster.local; sleep 1; done
   @ 07/22/25 09:34:37.851
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1255.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1255.svc.cluster.local; sleep 1; done
   @ 07/22/25 09:34:37.851
  STEP: creating a second pod to probe DNS @ 07/22/25 09:34:37.851
  STEP: submitting the pod to kubernetes @ 07/22/25 09:34:37.851
  E0722 09:34:37.905843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:38.913789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/22/25 09:34:39.867
  STEP: looking for the results for each expected name from probers @ 07/22/25 09:34:39.87
  I0722 09:34:39.873027 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-1255.svc.cluster.local from pod  dns-1255/dns-test-718e730b-34bd-439b-9e69-5f2b94d3dc37 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0722 09:34:39.875179 22 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-1255.svc.cluster.local from pod  dns-1255/dns-test-718e730b-34bd-439b-9e69-5f2b94d3dc37 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0722 09:34:39.875290 22 dns_common.go:506] Lookups using dns-1255/dns-test-718e730b-34bd-439b-9e69-5f2b94d3dc37 failed for: [agnhost_udp@dns-test-service-3.dns-1255.svc.cluster.local jessie_udp@dns-test-service-3.dns-1255.svc.cluster.local]

  I0722 09:34:39.879128 22 dns_common.go:514] Pod client logs for webserver: 
  I0722 09:34:39.882618 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0722 09:34:39.886181 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0722 09:34:39.959090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:40.964177      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:41.964329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:42.964509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:43.999464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:44.889095 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-1255.svc.cluster.local from pod  dns-1255/dns-test-718e730b-34bd-439b-9e69-5f2b94d3dc37 contains '' instead of 'bar.example.com.'
  I0722 09:34:44.892046 22 dns_common.go:506] Lookups using dns-1255/dns-test-718e730b-34bd-439b-9e69-5f2b94d3dc37 failed for: [agnhost_udp@dns-test-service-3.dns-1255.svc.cluster.local]

  I0722 09:34:44.896597 22 dns_common.go:514] Pod client logs for webserver: 
  I0722 09:34:44.900586 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0722 09:34:44.903788 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0722 09:34:45.003787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:46.026551      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:47.080275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:48.083890      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:49.084652      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:34:49.882250 22 dns_common.go:571] DNS probes using dns-test-718e730b-34bd-439b-9e69-5f2b94d3dc37 succeeded

  STEP: changing the service to type=ClusterIP @ 07/22/25 09:34:49.882
  I0722 09:34:49.898679      22 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1255.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-1255.svc.cluster.local; sleep 1; done
   @ 07/22/25 09:34:49.898
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1255.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1255.svc.cluster.local; sleep 1; done
   @ 07/22/25 09:34:49.898
  STEP: creating a third pod to probe DNS @ 07/22/25 09:34:49.898
  STEP: submitting the pod to kubernetes @ 07/22/25 09:34:49.901
  E0722 09:34:50.099173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:51.099955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:52.113379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:53.125542      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:54.126366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:55.127613      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:56.127983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:57.128434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:58.140769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:34:59.141383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:00.141457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:01.142124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:02.142804      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:03.145893      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:04.146695      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:05.146789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:06.146864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:07.154136      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:08.168057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:09.168286      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:10.169366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:11.170685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:12.175797      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:13.181308      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:14.182009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:15.189263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:16.192736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:17.195444      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:18.196022      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:19.196171      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:20.196259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:21.196771      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:22.198507      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:23.198355      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:24.201099      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:25.202075      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:26.202469      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:27.205416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:28.207632      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:29.207952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:30.208609      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:31.208745      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/22/25 09:35:32.107
  STEP: looking for the results for each expected name from probers @ 07/22/25 09:35:32.11
  I0722 09:35:32.119037 22 dns_common.go:571] DNS probes using dns-test-6b2e5480-2284-448f-b0ac-900e9f27dd0b succeeded

  STEP: deleting the pod @ 07/22/25 09:35:32.119
  STEP: deleting the pod @ 07/22/25 09:35:32.133
  STEP: deleting the pod @ 07/22/25 09:35:32.151
  STEP: deleting the test externalName service @ 07/22/25 09:35:32.173
  E0722 09:35:32.208778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:32.208819 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1255" for this suite. @ 07/22/25 09:35:32.212
â€¢ [56.415 seconds]
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/22/25 09:35:32.218
  I0722 09:35:32.218143 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pods @ 07/22/25 09:35:32.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:35:32.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:35:32.247
  I0722 09:35:32.251829 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: creating the pod @ 07/22/25 09:35:32.252
  STEP: submitting the pod to kubernetes @ 07/22/25 09:35:32.252
  E0722 09:35:33.233866      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:34.244626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 07/22/25 09:35:34.279
  I0722 09:35:34.295929 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6620" for this suite. @ 07/22/25 09:35:34.31
â€¢ [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 07/22/25 09:35:34.319
  I0722 09:35:34.319977 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubelet-test @ 07/22/25 09:35:34.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:35:34.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:35:34.341
  E0722 09:35:35.252951      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:36.259729      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:36.393667 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7569" for this suite. @ 07/22/25 09:35:36.396
â€¢ [2.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/22/25 09:35:36.403
  I0722 09:35:36.403395 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-runtime @ 07/22/25 09:35:36.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:35:36.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:35:36.419
  STEP: create the container @ 07/22/25 09:35:36.421
  I0722 09:35:36.429111      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/22/25 09:35:36.429
  E0722 09:35:37.280382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:38.288083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/22/25 09:35:38.45
  STEP: the container should be terminated @ 07/22/25 09:35:38.453
  STEP: the termination message should be set @ 07/22/25 09:35:38.453
  I0722 09:35:38.453251 22 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/22/25 09:35:38.453
  I0722 09:35:38.465131 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7604" for this suite. @ 07/22/25 09:35:38.467
â€¢ [2.070 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 07/22/25 09:35:38.473
  I0722 09:35:38.473767 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 09:35:38.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:35:38.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:35:38.487
  STEP: create deployment with httpd image @ 07/22/25 09:35:38.489
  I0722 09:35:38.490081 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-950 create -f -'
  I0722 09:35:38.565795 22 builder.go:146] stderr: ""
  I0722 09:35:38.565833 22 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/22/25 09:35:38.565
  I0722 09:35:38.565896 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-950 diff -f -'
  I0722 09:35:38.670971 22 builder.go:135] rc: 1
  I0722 09:35:38.671133 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-950 delete -f -'
  I0722 09:35:38.710684 22 builder.go:146] stderr: ""
  I0722 09:35:38.710719 22 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0722 09:35:38.710880 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-950" for this suite. @ 07/22/25 09:35:38.714
â€¢ [0.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 07/22/25 09:35:38.721
  I0722 09:35:38.721175 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/22/25 09:35:38.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:35:38.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:35:38.738
  STEP: getting /apis @ 07/22/25 09:35:38.745
  STEP: getting /apis/admissionregistration.k8s.io @ 07/22/25 09:35:38.75
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/22/25 09:35:38.751
  STEP: creating @ 07/22/25 09:35:38.752
  STEP: getting @ 07/22/25 09:35:38.771
  STEP: listing @ 07/22/25 09:35:38.773
  STEP: watching @ 07/22/25 09:35:38.776
  I0722 09:35:38.776050 22 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 07/22/25 09:35:38.777
  STEP: updating @ 07/22/25 09:35:38.787
  I0722 09:35:38.795417 22 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0722 09:35:38.795465 22 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0722 09:35:38.795510 22 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0722 09:35:38.795532 22 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/22/25 09:35:38.795
  STEP: patching /status @ 07/22/25 09:35:38.798
  STEP: updating /status @ 07/22/25 09:35:38.804
  STEP: deleting @ 07/22/25 09:35:38.829
  STEP: deleting a collection @ 07/22/25 09:35:38.836
  I0722 09:35:38.847500 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6896" for this suite. @ 07/22/25 09:35:38.849
â€¢ [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/22/25 09:35:38.855
  I0722 09:35:38.855245 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pods @ 07/22/25 09:35:38.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:35:38.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:35:38.869
  I0722 09:35:38.871270 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: creating the pod @ 07/22/25 09:35:38.871
  STEP: submitting the pod to kubernetes @ 07/22/25 09:35:38.871
  E0722 09:35:39.290046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:40.297502      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:40.943359 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9537" for this suite. @ 07/22/25 09:35:40.946
â€¢ [2.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/22/25 09:35:40.952
  I0722 09:35:40.952432 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 09:35:40.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:35:40.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:35:40.965
  I0722 09:35:40.979021 22 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 09:35:40.983
  I0722 09:35:40.987691 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:35:40.987747 22 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0722 09:35:41.330928      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:41.991263 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:35:41.991303 22 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0722 09:35:42.305001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:42.996739 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 09:35:42.996865 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/22/25 09:35:43.008
  STEP: Check that daemon pods images are updated. @ 07/22/25 09:35:43.018
  I0722 09:35:43.022116 22 daemon_set.go:1193] Wrong image for pod: daemon-set-gmw82. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0722 09:35:43.022187 22 daemon_set.go:1193] Wrong image for pod: daemon-set-vjx5d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0722 09:35:43.308171      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:44.026140 22 daemon_set.go:1193] Wrong image for pod: daemon-set-vjx5d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0722 09:35:44.311003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:45.023801 22 daemon_set.go:1198] Pod daemon-set-kzbtw is not available
  I0722 09:35:45.023840 22 daemon_set.go:1193] Wrong image for pod: daemon-set-vjx5d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0722 09:35:45.311680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:46.024196 22 daemon_set.go:1198] Pod daemon-set-vpkkc is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/22/25 09:35:46.027
  I0722 09:35:46.032738 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 09:35:46.032776 22 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0722 09:35:46.311952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:47.038138 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 09:35:47.038187 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 09:35:47.052
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-953, will wait for the garbage collector to delete the pods @ 07/22/25 09:35:47.052
  I0722 09:35:47.128721 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.10921ms
  I0722 09:35:47.229893 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.169565ms
  E0722 09:35:47.317513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:48.317568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:49.324927      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:49.543049 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 09:35:49.543095 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 09:35:49.545731 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31603"},"items":null}

  I0722 09:35:49.548455 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31603"},"items":null}

  I0722 09:35:49.556982 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-953" for this suite. @ 07/22/25 09:35:49.56
â€¢ [8.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 07/22/25 09:35:49.568
  I0722 09:35:49.568592 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 09:35:49.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:35:49.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:35:49.591
  I0722 09:35:49.593999 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  E0722 09:35:50.325204      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:51.341037      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:52.345204      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:52.717542 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4780" for this suite. @ 07/22/25 09:35:52.721
â€¢ [3.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/22/25 09:35:52.731
  I0722 09:35:52.731386 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 09:35:52.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:35:52.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:35:52.752
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/22/25 09:35:52.756
  I0722 09:35:52.766210 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0722 09:35:53.346774      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:54.347623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:55.348538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:56.368728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:57.385063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:35:57.771103 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 09:35:57.771
  STEP: getting scale subresource @ 07/22/25 09:35:57.771
  STEP: updating a scale subresource @ 07/22/25 09:35:57.773
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/22/25 09:35:57.78
  STEP: Patch a scale subresource @ 07/22/25 09:35:57.785
  I0722 09:35:57.802228 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5737" for this suite. @ 07/22/25 09:35:57.816
â€¢ [5.114 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 07/22/25 09:35:57.845
  I0722 09:35:57.845532 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:35:57.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:35:57.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:35:57.888
  STEP: Creating configMap with name projected-configmap-test-volume-c47eb49f-f624-47bb-83d2-1c92b622ac94 @ 07/22/25 09:35:57.895
  STEP: Creating a pod to test consume configMaps @ 07/22/25 09:35:57.904
  E0722 09:35:58.386036      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:35:59.390535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:00.390581      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:01.399764      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:36:01.929
  I0722 09:36:01.931973 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-899f29cb-367c-42ba-823e-229642a0170f container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:36:01.935
  I0722 09:36:01.958496 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7329" for this suite. @ 07/22/25 09:36:01.961
â€¢ [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 07/22/25 09:36:01.967
  I0722 09:36:01.967029 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename disruption @ 07/22/25 09:36:01.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:36:01.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:36:01.983
  STEP: Waiting for the pdb to be processed @ 07/22/25 09:36:01.991
  E0722 09:36:02.406372      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:03.406828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 07/22/25 09:36:03.996
  STEP: Waiting for all pods to be running @ 07/22/25 09:36:04.003
  I0722 09:36:04.005718 22 disruption.go:691] running pods: 0 < 1
  E0722 09:36:04.410612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:05.418818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/22/25 09:36:06.008
  STEP: Waiting for the pdb to be processed @ 07/22/25 09:36:06.018
  STEP: Patching PodDisruptionBudget status @ 07/22/25 09:36:06.023
  STEP: Waiting for the pdb to be processed @ 07/22/25 09:36:06.03
  I0722 09:36:06.033514 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9241" for this suite. @ 07/22/25 09:36:06.036
â€¢ [4.075 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 07/22/25 09:36:06.042
  I0722 09:36:06.042799 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:36:06.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:36:06.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:36:06.056
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:36:06.058
  E0722 09:36:06.431375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:07.434398      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:08.437225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:09.437457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:36:10.076
  I0722 09:36:10.078451 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-c3208a7b-ad83-4227-959a-0d44cec4a7f8 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:36:10.082
  I0722 09:36:10.096576 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2658" for this suite. @ 07/22/25 09:36:10.099
â€¢ [4.067 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 07/22/25 09:36:10.11
  I0722 09:36:10.110797 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:36:10.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:36:10.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:36:10.129
  STEP: Setting up server cert @ 07/22/25 09:36:10.147
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:36:10.346
  STEP: Deploying the webhook pod @ 07/22/25 09:36:10.367
  STEP: Wait for the deployment to be ready @ 07/22/25 09:36:10.378
  I0722 09:36:10.382865 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0722 09:36:10.438261      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:11.443382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:36:12.39
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:36:12.404
  E0722 09:36:12.443607      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:13.414700 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0722 09:36:13.417960 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  E0722 09:36:13.448419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7154-crds.webhook.example.com via the AdmissionRegistration API @ 07/22/25 09:36:13.98
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/22/25 09:36:13.99
  E0722 09:36:14.452688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:15.461808      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:16.462845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:16.600730 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2503" for this suite. @ 07/22/25 09:36:16.604
  STEP: Destroying namespace "webhook-markers-2032" for this suite. @ 07/22/25 09:36:16.611
â€¢ [6.506 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 07/22/25 09:36:16.617
  I0722 09:36:16.617124 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 09:36:16.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:36:16.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:36:16.632
  STEP: Creating pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574 @ 07/22/25 09:36:16.635
  E0722 09:36:17.465046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:18.470774      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 09:36:18.648
  I0722 09:36:18.650692 22 container_probe.go:1748] Initial restart count of pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 is 0
  I0722 09:36:18.652944 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:19.472797      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:20.484313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:20.659449 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:21.493731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:22.498881      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:22.666825 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:23.516563      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:24.526459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:24.670715 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:25.526635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:26.530656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:26.675704 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:27.554836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:28.558628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:28.690013 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:29.563590      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:30.563882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:30.693551 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:31.564763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:32.574864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:32.697454 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:33.574955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:34.596016      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:34.701556 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:35.598546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:36.607307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:36.711939 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:37.609410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:38.615614      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:38.717685 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:39.617079      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:40.621020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:40.724450 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:41.624165      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:42.624234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:42.739213 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:43.634569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:44.634705      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:44.751220 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:45.635310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:46.635427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:46.760558 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:47.635555      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:48.635702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:48.776592 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:49.638065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:50.638302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:50.787328 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:51.641291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:52.648796      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:52.794012 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:53.652113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:54.653268      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:54.798733 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:55.654020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:56.657117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:56.805635 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:57.657434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:36:58.661420      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:36:58.812779 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:36:59.661488      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:00.679068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:00.817887 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:01.680647      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:02.680952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:02.822256 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:03.683239      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:04.683922      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:04.836019 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:05.695353      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:06.698701      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:06.843332 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:07.699322      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:08.700433      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:08.847228 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:09.700727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:10.708653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:10.854844 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:11.731961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:12.732510      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:12.858276 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:13.749300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:14.764005      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:14.866615 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:15.764855      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:16.775660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:16.872102 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:17.775972      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:18.777140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:18.886017 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:19.782937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:20.790644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:20.889779 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:21.811001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:22.824447      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:22.893918 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:23.824750      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:24.828934      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:24.898468 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:25.829503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:26.834201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:26.902514 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:27.850517      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:28.855196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:28.919422 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:29.857507      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:30.873817      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:30.930901 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:31.877880      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:32.901156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:32.942792 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:33.901847      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:34.920789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:34.948208 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:35.929654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:36.937644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:36.974233 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:37.950937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:38.978776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:38.984671 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:39.985658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:40.986416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:40.988636 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:42.013324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:42.993580 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:43.031557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:44.050064      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:45.003446 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:45.052380      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:46.053956      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:47.016704 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:47.066461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:48.072393      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:49.025878 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:49.073135      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:50.084413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:51.029648 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:51.085832      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:52.091744      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:53.054127 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:53.092175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:54.101502      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:55.060527 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:55.102596      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:56.109971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:57.081218 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:57.110281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:37:58.123416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:37:59.090463 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:37:59.123580      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:00.139404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:01.096791 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:01.150771      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:02.152836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:03.101435 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:03.154508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:04.154397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:05.120243 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:05.154793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:06.157158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:07.145490 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:07.159581      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:08.169769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:09.149500 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:09.170157      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:10.175787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:11.162435 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:11.177858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:12.201167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:13.189088 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:13.217053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:14.248808      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:15.203165 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:15.225851      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:16.231622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:17.206968 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:17.232391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:18.242115      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:19.211129 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:19.251109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:20.257426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:21.219478 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:21.264634      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:22.265633      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:23.234537 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:23.266642      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:24.267096      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:25.255952 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:25.279933      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:26.285219      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:27.269421 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:27.293242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:28.294194      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:29.274634 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:29.295256      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:30.295472      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:31.279553 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:31.295708      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:32.298096      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:33.324307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:33.329456 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:34.325285      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:35.326736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:35.333855 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:36.332805      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:37.333233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:37.338461 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:38.334064      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:39.334144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:39.346136 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:40.344739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:41.352815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:41.355863 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:42.352976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:43.353564      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:43.360393 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:44.361731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:45.361996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:45.364682 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:46.363036      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:47.373776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:47.382020 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:48.382211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:49.397112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:49.402079 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:50.400615      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:51.407314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:51.411783 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:52.416013      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:53.416393      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:53.417481 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:54.416892      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:55.427390      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:55.430575 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:56.428242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:57.429133      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:57.437351 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:38:58.430073      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:38:59.446095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:38:59.450652 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:00.446808      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:01.453704      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:01.458081 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:02.460780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:03.460920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:03.465370 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:04.477334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:05.472793 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:05.478157      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:06.485534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:07.486389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:07.487446 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:08.487425      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:09.492973      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:09.496352 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:10.494008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:11.502028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:11.505438 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:12.503465      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:13.516372      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:13.520874 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:14.518397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:15.520900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:15.525817 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:16.521115      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:17.522381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:17.538498 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:18.523859      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:19.532950      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:19.559179 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:20.543477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:21.555150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:21.575154 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:22.554991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:23.555944      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:23.588439 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:24.563458      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:25.563578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:25.592702 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:26.572363      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:27.572473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:27.605051 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:28.572748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:29.577975      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:29.610527 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:30.588876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:31.589594      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:31.614048 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:32.608139      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:33.614023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:33.618783 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:34.627554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:35.625864 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:35.627926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:36.630303      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:37.631222      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:37.631285 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:38.631404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:39.631494      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:39.635792 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:40.633951      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:41.639983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:41.643655 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:42.640730      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:43.641765      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:43.648384 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:44.647698      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:45.652227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:45.655780 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:46.665538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:47.668587      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:47.672962 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:48.676743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:49.677710      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:49.679849 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:50.683475      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:51.683960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:51.685055 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:52.685253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:53.685399      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:53.688753 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:54.715736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:55.705232 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:55.721256      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:56.722227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:57.713959 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:57.729523      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:39:58.737836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:39:59.726854 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:39:59.767083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:00.777389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:01.747867 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:40:01.786640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:02.787692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:03.760489 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:40:03.789330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:04.789600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:05.765207 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:40:05.803757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:06.814618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:07.772370 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:40:07.817893      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:08.818850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:09.777884 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:40:09.821381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:10.821720      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:11.783945 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:40:11.822391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:12.884612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:13.791647 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:40:13.896996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:14.911654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:15.804363 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:40:15.918487      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:16.918546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:17.811978 22 container_probe.go:1758] Get pod busybox-e4312d61-54b4-48f8-a9a4-1c5a1e88a135 in namespace container-probe-4574
  E0722 09:40:17.923556      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:18.932179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/22/25 09:40:19.817
  I0722 09:40:19.846844 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4574" for this suite. @ 07/22/25 09:40:19.861
â€¢ [243.255 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 07/22/25 09:40:19.873
  I0722 09:40:19.873832 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubelet-test @ 07/22/25 09:40:19.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:40:19.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:40:19.895
  STEP: Waiting for pod completion @ 07/22/25 09:40:19.906
  E0722 09:40:19.932543      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:20.933192      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:21.936953      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:22.938932      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:23.936605 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0722 09:40:23.940024      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubelet-test-8903" for this suite. @ 07/22/25 09:40:23.94
â€¢ [4.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 07/22/25 09:40:23.947
  I0722 09:40:23.947277 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:40:23.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:40:23.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:40:23.962
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:40:23.966
  E0722 09:40:24.973067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:25.981309      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:26.992008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:40:27.99
  E0722 09:40:27.992248      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:27.993281 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-80a2ae7e-5d10-46ea-bb0a-c9085bd891ce container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:40:27.997
  I0722 09:40:28.013666 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-160" for this suite. @ 07/22/25 09:40:28.017
â€¢ [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 07/22/25 09:40:28.023
  I0722 09:40:28.023962 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 09:40:28.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:40:28.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:40:28.042
  I0722 09:40:28.048254 22 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-3002"
  I0722 09:40:28.055867 22 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-3002"
  STEP: waiting for a new root ca configmap created @ 07/22/25 09:40:28.562
  I0722 09:40:28.566976 22 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-3002"
  I0722 09:40:28.572631 22 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-3002"
  E0722 09:40:28.992562      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 07/22/25 09:40:29.072
  I0722 09:40:29.076024 22 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-3002"
  I0722 09:40:29.076151 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3002" for this suite. @ 07/22/25 09:40:29.08
â€¢ [1.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 07/22/25 09:40:29.093
  I0722 09:40:29.093920 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename dns @ 07/22/25 09:40:29.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:40:29.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:40:29.117
  STEP: Creating a test headless service @ 07/22/25 09:40:29.122
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9332.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9332.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9332.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9332.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9332.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9332.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9332.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9332.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9332.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9332.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 46.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.46_udp@PTR;check="$$(dig +tcp +noall +answer +search 46.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.46_tcp@PTR;sleep 1; done
   @ 07/22/25 09:40:29.152
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9332.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9332.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9332.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9332.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9332.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9332.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9332.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9332.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9332.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9332.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 46.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.46_udp@PTR;check="$$(dig +tcp +noall +answer +search 46.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.46_tcp@PTR;sleep 1; done
   @ 07/22/25 09:40:29.152
  STEP: creating a pod to probe DNS @ 07/22/25 09:40:29.152
  STEP: submitting the pod to kubernetes @ 07/22/25 09:40:29.153
  E0722 09:40:29.998422      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:31.001103      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/22/25 09:40:31.183
  STEP: looking for the results for each expected name from probers @ 07/22/25 09:40:31.186
  I0722 09:40:31.189558 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9332.svc.cluster.local from pod dns-9332/dns-test-0c32078a-9981-4c33-9af1-3a4353da8700: the server could not find the requested resource (get pods dns-test-0c32078a-9981-4c33-9af1-3a4353da8700)
  I0722 09:40:31.192511 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9332.svc.cluster.local from pod dns-9332/dns-test-0c32078a-9981-4c33-9af1-3a4353da8700: the server could not find the requested resource (get pods dns-test-0c32078a-9981-4c33-9af1-3a4353da8700)
  I0722 09:40:31.194747 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local from pod dns-9332/dns-test-0c32078a-9981-4c33-9af1-3a4353da8700: the server could not find the requested resource (get pods dns-test-0c32078a-9981-4c33-9af1-3a4353da8700)
  I0722 09:40:31.197333 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local from pod dns-9332/dns-test-0c32078a-9981-4c33-9af1-3a4353da8700: the server could not find the requested resource (get pods dns-test-0c32078a-9981-4c33-9af1-3a4353da8700)
  I0722 09:40:31.212502 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9332.svc.cluster.local from pod dns-9332/dns-test-0c32078a-9981-4c33-9af1-3a4353da8700: the server could not find the requested resource (get pods dns-test-0c32078a-9981-4c33-9af1-3a4353da8700)
  I0722 09:40:31.215697 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9332.svc.cluster.local from pod dns-9332/dns-test-0c32078a-9981-4c33-9af1-3a4353da8700: the server could not find the requested resource (get pods dns-test-0c32078a-9981-4c33-9af1-3a4353da8700)
  I0722 09:40:31.218816 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local from pod dns-9332/dns-test-0c32078a-9981-4c33-9af1-3a4353da8700: the server could not find the requested resource (get pods dns-test-0c32078a-9981-4c33-9af1-3a4353da8700)
  I0722 09:40:31.221450 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local from pod dns-9332/dns-test-0c32078a-9981-4c33-9af1-3a4353da8700: the server could not find the requested resource (get pods dns-test-0c32078a-9981-4c33-9af1-3a4353da8700)
  I0722 09:40:31.234213 22 dns_common.go:506] Lookups using dns-9332/dns-test-0c32078a-9981-4c33-9af1-3a4353da8700 failed for: [agnhost_udp@dns-test-service.dns-9332.svc.cluster.local agnhost_tcp@dns-test-service.dns-9332.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local jessie_udp@dns-test-service.dns-9332.svc.cluster.local jessie_tcp@dns-test-service.dns-9332.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9332.svc.cluster.local]

  I0722 09:40:31.238374 22 dns_common.go:514] Pod client logs for webserver: 
  I0722 09:40:31.252905 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0722 09:40:31.258153 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0722 09:40:32.001259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:33.002348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:34.004116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:35.005984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:36.007147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:40:36.247775 22 dns_common.go:546] DNS probes using dns-9332/dns-test-0c32078a-9981-4c33-9af1-3a4353da8700 succeeded

  STEP: deleting the pod @ 07/22/25 09:40:36.247
  STEP: deleting the test service @ 07/22/25 09:40:36.28
  STEP: deleting the test headless service @ 07/22/25 09:40:36.352
  I0722 09:40:36.367617 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9332" for this suite. @ 07/22/25 09:40:36.373
â€¢ [7.287 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:215
  STEP: Creating a kubernetes client @ 07/22/25 09:40:36.381
  I0722 09:40:36.381528 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sched-preemption @ 07/22/25 09:40:36.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:40:36.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:40:36.395
  I0722 09:40:36.412708 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0722 09:40:37.029636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:38.047062      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:39.048103      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:40.071188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:41.084517      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:42.089370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:43.096582      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:44.096738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:45.097863      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:46.099099      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:47.117848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:48.118848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:49.118873      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:50.123461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:51.126451      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:52.143441      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:53.158659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:54.158979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:55.159602      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:56.163921      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:57.164688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:58.164955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:40:59.165666      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:00.171864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:01.172564      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:02.179292      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:03.178554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:04.185111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:05.185506      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:06.186064      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:07.198243      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:08.213341      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:09.214139      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:10.215079      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:11.215830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:12.216183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:13.224391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:14.225216      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:15.237493      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:16.242709      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:17.257458      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:18.287824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:19.288549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:20.288666      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:21.289721      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:22.293659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:23.296188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:24.319846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:25.322384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:26.323511      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:27.329839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:28.330467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:29.343421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:30.344173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:31.351764      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:32.374295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:33.377291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:34.380722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:35.388214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:36.394611      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:41:36.418544 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/22/25 09:41:36.422
  STEP: Adding a custom resource @ 07/22/25 09:41:36.422
  I0722 09:41:36.471017 22 preemption.go:256] Created pod: pod0-0-sched-preemption-low-priority
  I0722 09:41:36.496403 22 preemption.go:256] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/22/25 09:41:36.496
  I0722 09:41:36.532047 22 preemption.go:256] Created pod: pod1-0-sched-preemption-medium-priority
  I0722 09:41:36.574780 22 preemption.go:256] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/22/25 09:41:36.575
  E0722 09:41:37.395911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:38.396218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/22/25 09:41:38.616
  E0722 09:41:39.396988      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:40.400480      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:41.406172      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:42.406406      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/22/25 09:41:42.679
  STEP: Removing a custom resource @ 07/22/25 09:41:42.689
  I0722 09:41:42.699237 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9954" for this suite. @ 07/22/25 09:41:42.709
â€¢ [66.337 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 07/22/25 09:41:42.72
  I0722 09:41:42.720661 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:41:42.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:41:42.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:41:42.742
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:41:42.745
  E0722 09:41:43.422775      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:44.423439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:45.424065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:46.440626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:41:46.787
  I0722 09:41:46.790145 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-a26caf36-4923-48d3-82a0-a2402812a845 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:41:46.794
  I0722 09:41:46.824029 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8917" for this suite. @ 07/22/25 09:41:46.829
â€¢ [4.117 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 07/22/25 09:41:46.838
  I0722 09:41:46.838774 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 09:41:46.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:41:46.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:41:46.862
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/22/25 09:41:46.865
  E0722 09:41:47.443331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:48.444402      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:49.445529      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:50.451996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:41:50.899
  I0722 09:41:50.901554 22 output.go:207] Trying to get logs from node cncf1 pod pod-27c214fb-ec32-4829-a8e6-8ebeb83846f7 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 09:41:50.906
  I0722 09:41:50.922163 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-228" for this suite. @ 07/22/25 09:41:50.925
â€¢ [4.092 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 07/22/25 09:41:50.931
  I0722 09:41:50.931129 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 09:41:50.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:41:50.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:41:50.944
  STEP: Creating service test in namespace statefulset-7417 @ 07/22/25 09:41:50.946
  STEP: Creating statefulset ss in namespace statefulset-7417 @ 07/22/25 09:41:50.951
  I0722 09:41:50.961104 22 wait.go:44] Found 0 stateful pods, waiting for 1
  E0722 09:41:51.457644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:52.457838      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:53.460546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:54.473136      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:55.475163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:56.489172      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:57.519191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:58.523495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:41:59.523468      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:00.535454      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:00.981853 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/22/25 09:42:00.986
  STEP: updating a scale subresource @ 07/22/25 09:42:00.99
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/22/25 09:42:00.996
  STEP: Patch a scale subresource @ 07/22/25 09:42:00.999
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/22/25 09:42:01.006
  I0722 09:42:01.010087 22 statefulset.go:138] Deleting all statefulset in ns statefulset-7417
  I0722 09:42:01.014333 22 rest.go:153] Scaling statefulset ss to 0
  E0722 09:42:01.536639      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:02.537162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:03.537534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:04.553488      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:05.557212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:06.560080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:07.578214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:08.581113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:09.583503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:10.584531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:11.036854 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0722 09:42:11.039263 22 rest.go:91] Deleting statefulset ss
  I0722 09:42:11.049690 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7417" for this suite. @ 07/22/25 09:42:11.053
â€¢ [20.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 07/22/25 09:42:11.06
  I0722 09:42:11.060633 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename dns @ 07/22/25 09:42:11.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:42:11.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:42:11.076
  STEP: Creating a test headless service @ 07/22/25 09:42:11.079
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7235.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-7235.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7235.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-7235.svc.cluster.local;sleep 1; done
   @ 07/22/25 09:42:11.083
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7235.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7235.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7235.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7235.svc.cluster.local;sleep 1; done
   @ 07/22/25 09:42:11.084
  STEP: creating a pod to probe DNS @ 07/22/25 09:42:11.084
  STEP: submitting the pod to kubernetes @ 07/22/25 09:42:11.084
  E0722 09:42:11.589589      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:12.590609      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/22/25 09:42:13.123
  STEP: looking for the results for each expected name from probers @ 07/22/25 09:42:13.126
  I0722 09:42:13.130873 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local from pod dns-7235/dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8: the server could not find the requested resource (get pods dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8)
  I0722 09:42:13.133784 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local from pod dns-7235/dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8: the server could not find the requested resource (get pods dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8)
  I0722 09:42:13.136858 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-7235.svc.cluster.local from pod dns-7235/dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8: the server could not find the requested resource (get pods dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8)
  I0722 09:42:13.140035 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-7235.svc.cluster.local from pod dns-7235/dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8: the server could not find the requested resource (get pods dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8)
  I0722 09:42:13.142761 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local from pod dns-7235/dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8: the server could not find the requested resource (get pods dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8)
  I0722 09:42:13.145807 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local from pod dns-7235/dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8: the server could not find the requested resource (get pods dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8)
  I0722 09:42:13.149776 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-7235.svc.cluster.local from pod dns-7235/dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8: the server could not find the requested resource (get pods dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8)
  I0722 09:42:13.153094 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-7235.svc.cluster.local from pod dns-7235/dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8: the server could not find the requested resource (get pods dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8)
  I0722 09:42:13.153150 22 dns_common.go:506] Lookups using dns-7235/dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local agnhost_udp@dns-test-service-2.dns-7235.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-7235.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7235.svc.cluster.local jessie_udp@dns-test-service-2.dns-7235.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7235.svc.cluster.local]

  I0722 09:42:13.157823 22 dns_common.go:514] Pod client logs for webserver: 
  I0722 09:42:13.162534 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0722 09:42:13.168368 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0722 09:42:13.590994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:14.591230      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:15.591529      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:16.607605      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:17.607748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:18.151441 22 dns_common.go:546] DNS probes using dns-7235/dns-test-af1b32e2-f79d-4f25-b8e5-86b97921caf8 succeeded

  STEP: deleting the pod @ 07/22/25 09:42:18.151
  STEP: deleting the test headless service @ 07/22/25 09:42:18.189
  I0722 09:42:18.206483 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7235" for this suite. @ 07/22/25 09:42:18.23
â€¢ [7.178 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/22/25 09:42:18.239
  I0722 09:42:18.239214 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pod-network-test @ 07/22/25 09:42:18.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:42:18.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:42:18.255
  STEP: Performing setup for networking test in namespace pod-network-test-2905 @ 07/22/25 09:42:18.259
  STEP: creating a selector @ 07/22/25 09:42:18.259
  STEP: Creating the service pods in kubernetes @ 07/22/25 09:42:18.259
  I0722 09:42:18.259268 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0722 09:42:18.608084      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:19.618017      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:20.620065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:21.623387      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:22.624375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:23.633653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:24.634322      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:25.634766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:26.640961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:27.643862      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:28.643713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:29.653966      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:30.654233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:31.654430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/22/25 09:42:32.506
  E0722 09:42:32.654492      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:33.665693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:34.526067 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0722 09:42:34.526144 22 networking.go:42] Breadth first check of 10.1.209.76 on host 192.168.105.31...
  I0722 09:42:34.528638 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.209.75:9080/dial?request=hostname&protocol=http&host=10.1.209.76&port=8083&tries=1'] Namespace:pod-network-test-2905 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 09:42:34.528716 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 09:42:34.528863 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2905/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.209.75%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.209.76%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0722 09:42:34.576282 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 09:42:34.576418 22 utils.go:355] Waiting for responses: map[]
  I0722 09:42:34.576428 22 utils.go:359] reached 10.1.209.76 after 0/1 tries
  I0722 09:42:34.576434 22 networking.go:42] Breadth first check of 10.1.161.13 on host 192.168.105.32...
  I0722 09:42:34.579257 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.209.75:9080/dial?request=hostname&protocol=http&host=10.1.161.13&port=8083&tries=1'] Namespace:pod-network-test-2905 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 09:42:34.579288 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 09:42:34.579345 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2905/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.209.75%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.161.13%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0722 09:42:34.619876 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 09:42:34.619926 22 utils.go:355] Waiting for responses: map[]
  I0722 09:42:34.619933 22 utils.go:359] reached 10.1.161.13 after 0/1 tries
  I0722 09:42:34.619938 22 networking.go:53] Going to retry 0 out of 2 pods....
  I0722 09:42:34.620409 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2905" for this suite. @ 07/22/25 09:42:34.624
â€¢ [16.392 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 07/22/25 09:42:34.631
  I0722 09:42:34.631866 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 09:42:34.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:42:34.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:42:34.65
  STEP: Creating pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113 @ 07/22/25 09:42:34.654
  E0722 09:42:34.665939      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:35.666574      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:36.670603      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 09:42:36.706
  I0722 09:42:36.709141 22 container_probe.go:1748] Initial restart count of pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 is 0
  I0722 09:42:36.713243 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:37.671016      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:38.671832      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:38.727941 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:39.673027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:40.673294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:40.736796 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:41.681933      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:42.683662      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:42.740844 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:43.683841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:44.684130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:44.746350 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:45.685220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:46.694775      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:46.756538 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:47.698632      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:48.699264      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:48.760982 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:49.703507      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:50.704134      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:50.772501 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:51.707580      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:52.709202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:52.777932 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:53.720383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:54.720548      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:54.782939 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:55.725205      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:56.731247      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:56.787017 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:57.731329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:42:58.731978      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:42:58.799358 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:42:59.733027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:00.733696      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:00.804914 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:01.745823      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:02.752802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:02.812676 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:03.758579      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:04.767997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:04.816342 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:05.770974      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:06.771185      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:06.834110 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:07.772726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:08.773578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:08.839433 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:09.780451      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:10.781460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:10.850913 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:11.785079      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:12.785532      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:12.858016 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:13.787957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:14.814702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:14.864893 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:15.816043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:16.816986      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:16.877497 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:17.821220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:18.840349      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:18.896675 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:19.854457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:20.861537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:20.911841 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:21.870929      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:22.887255      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:22.916282 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:23.887664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:24.888513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:24.922594 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:25.892993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:26.899296      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:26.928858 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:27.901081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:28.906460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:28.990474 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:29.909681      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:30.910008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:31.003991 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:31.910766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:32.910924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:33.018448 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:33.915002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:34.915087      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:35.042233 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:35.936976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:36.938109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:37.066528 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:37.939497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:38.944165      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:39.080282 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  E0722 09:43:39.948284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:40.953282      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:41.090338 22 container_probe.go:1758] Get pod test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 in namespace container-probe-7113
  I0722 09:43:41.090413 22 container_probe.go:1762] Restart count of pod container-probe-7113/test-grpc-c445fbc7-5ef2-4f9a-ae5c-8b5e7ace3c84 is now 1 (1m4.381198534s elapsed)
  STEP: deleting the pod @ 07/22/25 09:43:41.091
  I0722 09:43:41.105422 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7113" for this suite. @ 07/22/25 09:43:41.111
â€¢ [66.488 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 07/22/25 09:43:41.122
  I0722 09:43:41.122730 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:43:41.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:43:41.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:43:41.158
  STEP: Setting up server cert @ 07/22/25 09:43:41.219
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:43:41.405
  STEP: Deploying the webhook pod @ 07/22/25 09:43:41.412
  STEP: Wait for the deployment to be ready @ 07/22/25 09:43:41.426
  I0722 09:43:41.432983 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0722 09:43:41.959805      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:42.960337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:43:43.443
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:43:43.459
  E0722 09:43:43.971464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:44.462891 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0722 09:43:44.466267 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  E0722 09:43:44.971818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5865-crds.webhook.example.com via the AdmissionRegistration API @ 07/22/25 09:43:44.977
  STEP: Creating a custom resource while v1 is storage version @ 07/22/25 09:43:44.994
  E0722 09:43:45.972185      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:46.973281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/22/25 09:43:47.019
  STEP: Patching the custom resource while v2 is storage version @ 07/22/25 09:43:47.025
  I0722 09:43:47.646006 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8573" for this suite. @ 07/22/25 09:43:47.656
  STEP: Destroying namespace "webhook-markers-9871" for this suite. @ 07/22/25 09:43:47.666
â€¢ [6.551 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/22/25 09:43:47.674
  I0722 09:43:47.674886 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/22/25 09:43:47.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:43:47.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:43:47.69
  STEP: creating a target pod @ 07/22/25 09:43:47.694
  E0722 09:43:47.974555      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:48.974811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/22/25 09:43:49.714
  E0722 09:43:49.983708      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:50.983716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 07/22/25 09:43:51.743
  STEP: checking pod container endpoints @ 07/22/25 09:43:51.746
  I0722 09:43:51.747019 22 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5130 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 09:43:51.747040 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 09:43:51.747091 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-5130/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0722 09:43:51.797496 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 09:43:51.797772 22 exec_util.go:112] Exec stderr: ""
  I0722 09:43:51.806718 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5130" for this suite. @ 07/22/25 09:43:51.81
â€¢ [4.143 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 07/22/25 09:43:51.818
  I0722 09:43:51.818333 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename security-context-test @ 07/22/25 09:43:51.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:43:51.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:43:51.835
  E0722 09:43:51.984179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:52.987266      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:53.856852 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6302" for this suite. @ 07/22/25 09:43:53.86
â€¢ [2.048 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 07/22/25 09:43:53.866
  I0722 09:43:53.866570 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 09:43:53.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:43:53.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:43:53.882
  I0722 09:43:53.885206 22 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0722 09:43:53.987758      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/22/25 09:43:54.908
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/22/25 09:43:54.914
  E0722 09:43:54.988377      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/22/25 09:43:55.929
  I0722 09:43:55.940462 22 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/22/25 09:43:55.94
  E0722 09:43:55.991500      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:56.948222 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2831" for this suite. @ 07/22/25 09:43:56.951
â€¢ [3.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 07/22/25 09:43:56.958
  I0722 09:43:56.958952 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:43:56.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:43:56.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:43:56.976
  STEP: creating a Service @ 07/22/25 09:43:56.981
  E0722 09:43:56.995289      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: watching for the Service to be added @ 07/22/25 09:43:57.001
  I0722 09:43:57.004971 22 service.go:3456] Found Service test-service-9h7jm in namespace services-3472 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32399}]
  I0722 09:43:57.005014 22 service.go:3463] Service test-service-9h7jm created
  STEP: Getting /status @ 07/22/25 09:43:57.005
  I0722 09:43:57.008951 22 service.go:3474] Service test-service-9h7jm has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/22/25 09:43:57.009
  STEP: watching for the Service to be patched @ 07/22/25 09:43:57.016
  I0722 09:43:57.018382 22 service.go:3497] observed Service test-service-9h7jm in namespace services-3472 with annotations: map[] & LoadBalancer: {[]}
  I0722 09:43:57.018514 22 service.go:3500] Found Service test-service-9h7jm in namespace services-3472 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0x4003ef9970 []}]}
  I0722 09:43:57.018606 22 service.go:3507] Service test-service-9h7jm has service status patched
  STEP: updating the ServiceStatus @ 07/22/25 09:43:57.018
  I0722 09:43:57.027594 22 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/22/25 09:43:57.027
  I0722 09:43:57.029486 22 service.go:3538] Observed Service test-service-9h7jm in namespace services-3472 with annotations: map[] & Conditions: []
  I0722 09:43:57.030030 22 service.go:3549] Observed Service test-service-9h7jm in namespace services-3472 with annotations: map[patchedstatus:true] & Conditions: []
  I0722 09:43:57.030077 22 service.go:3545] Found Service test-service-9h7jm in namespace services-3472 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0722 09:43:57.030085 22 service.go:3556] Service test-service-9h7jm has service status updated
  STEP: patching the service @ 07/22/25 09:43:57.03
  STEP: watching for the Service to be patched @ 07/22/25 09:43:57.04
  I0722 09:43:57.043348 22 service.go:3579] observed Service test-service-9h7jm in namespace services-3472 with labels: map[test-service-static:true]
  I0722 09:43:57.043382 22 service.go:3579] observed Service test-service-9h7jm in namespace services-3472 with labels: map[test-service-static:true]
  I0722 09:43:57.043387 22 service.go:3579] observed Service test-service-9h7jm in namespace services-3472 with labels: map[test-service-static:true]
  I0722 09:43:57.043461 22 service.go:3582] Found Service test-service-9h7jm in namespace services-3472 with labels: map[test-service:patched test-service-static:true]
  I0722 09:43:57.043698 22 service.go:3589] Service test-service-9h7jm patched
  STEP: deleting the service @ 07/22/25 09:43:57.043
  STEP: watching for the Service to be deleted @ 07/22/25 09:43:57.064
  I0722 09:43:57.065915 22 service.go:3613] Observed event: ADDED
  I0722 09:43:57.065997 22 service.go:3613] Observed event: MODIFIED
  I0722 09:43:57.066024 22 service.go:3613] Observed event: MODIFIED
  I0722 09:43:57.066036 22 service.go:3613] Observed event: MODIFIED
  I0722 09:43:57.066277 22 service.go:3609] Found Service test-service-9h7jm in namespace services-3472 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0722 09:43:57.066298 22 service.go:3618] Service test-service-9h7jm deleted
  I0722 09:43:57.066374 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3472" for this suite. @ 07/22/25 09:43:57.069
â€¢ [0.119 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 07/22/25 09:43:57.078
  I0722 09:43:57.078510 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:43:57.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:43:57.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:43:57.116
  STEP: fetching services @ 07/22/25 09:43:57.12
  I0722 09:43:57.123676 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5376" for this suite. @ 07/22/25 09:43:57.127
â€¢ [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 07/22/25 09:43:57.135
  I0722 09:43:57.135450 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 09:43:57.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:43:57.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:43:57.164
  I0722 09:43:57.173355 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  E0722 09:43:58.001845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:43:59.024954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:43:59.726407      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0722 09:43:59.726461      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0722 09:43:59.726467      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0722 09:43:59.726471      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0722 09:43:59.726525      22 warnings.go:110] "Warning: unknown field \"gamma\""
  E0722 09:44:00.039741      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:44:00.287560 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7775" for this suite. @ 07/22/25 09:44:00.291
â€¢ [3.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 07/22/25 09:44:00.302
  I0722 09:44:00.302514 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename dns @ 07/22/25 09:44:00.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:44:00.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:44:00.324
  STEP: Creating a test headless service @ 07/22/25 09:44:00.33
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6841 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6841;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6841 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6841;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6841.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6841.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6841.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6841.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6841.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-6841.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6841.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-6841.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6841.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-6841.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6841.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-6841.svc;check="$$(dig +notcp +noall +answer +search 192.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.192_udp@PTR;check="$$(dig +tcp +noall +answer +search 192.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.192_tcp@PTR;sleep 1; done
   @ 07/22/25 09:44:00.364
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6841 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6841;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6841 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6841;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6841.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6841.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6841.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6841.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6841.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6841.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6841.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6841.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6841.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6841.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6841.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6841.svc;check="$$(dig +notcp +noall +answer +search 192.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.192_udp@PTR;check="$$(dig +tcp +noall +answer +search 192.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.192_tcp@PTR;sleep 1; done
   @ 07/22/25 09:44:00.365
  STEP: creating a pod to probe DNS @ 07/22/25 09:44:00.367
  STEP: submitting the pod to kubernetes @ 07/22/25 09:44:00.368
  E0722 09:44:01.045168      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:02.047252      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/22/25 09:44:02.404
  STEP: looking for the results for each expected name from probers @ 07/22/25 09:44:02.407
  I0722 09:44:02.411600 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.414056 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.416936 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6841 from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.419178 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6841 from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.422212 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.425696 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.428687 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.431498 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.446030 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.448709 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.450786 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6841 from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.453634 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6841 from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.456465 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.459831 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.462470 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.464670 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:02.476137 22 dns_common.go:506] Lookups using dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-6841 agnhost_tcp@dns-test-service.dns-6841 agnhost_udp@dns-test-service.dns-6841.svc agnhost_tcp@dns-test-service.dns-6841.svc agnhost_udp@_http._tcp.dns-test-service.dns-6841.svc agnhost_tcp@_http._tcp.dns-test-service.dns-6841.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6841 jessie_tcp@dns-test-service.dns-6841 jessie_udp@dns-test-service.dns-6841.svc jessie_tcp@dns-test-service.dns-6841.svc jessie_udp@_http._tcp.dns-test-service.dns-6841.svc jessie_tcp@_http._tcp.dns-test-service.dns-6841.svc]

  I0722 09:44:02.481437 22 dns_common.go:514] Pod client logs for webserver: 
  I0722 09:44:02.485340 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0722 09:44:02.488969 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0722 09:44:03.048218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:04.049337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:05.060903      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:06.065821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:07.078397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:44:07.428108 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:07.431732 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:07.435556 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6841 from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:07.439451 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6841 from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:07.442662 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:07.446354 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:07.450844 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:07.454529 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-6841.svc from pod dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0: the server could not find the requested resource (get pods dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0)
  I0722 09:44:07.506964 22 dns_common.go:506] Lookups using dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-6841 agnhost_tcp@dns-test-service.dns-6841 agnhost_udp@dns-test-service.dns-6841.svc agnhost_tcp@dns-test-service.dns-6841.svc agnhost_udp@_http._tcp.dns-test-service.dns-6841.svc agnhost_tcp@_http._tcp.dns-test-service.dns-6841.svc]

  I0722 09:44:07.514539 22 dns_common.go:514] Pod client logs for webserver: 
  I0722 09:44:07.521324 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0722 09:44:07.527673 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0722 09:44:08.075491      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:09.076162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:10.076669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:11.077427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:12.081142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:44:12.478686 22 dns_common.go:546] DNS probes using dns-6841/dns-test-2e1b1979-cca0-4d1a-afe7-0ff1d07f9ce0 succeeded

  STEP: deleting the pod @ 07/22/25 09:44:12.479
  STEP: deleting the test service @ 07/22/25 09:44:12.519
  STEP: deleting the test headless service @ 07/22/25 09:44:12.588
  I0722 09:44:12.600893 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6841" for this suite. @ 07/22/25 09:44:12.607
â€¢ [12.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 07/22/25 09:44:12.614
  I0722 09:44:12.614893 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 09:44:12.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:44:12.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:44:12.65
  STEP: Counting existing ResourceQuota @ 07/22/25 09:44:12.652
  E0722 09:44:13.082696      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:14.088685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:15.095411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:16.104939      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:17.108694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/22/25 09:44:17.655
  STEP: Ensuring resource quota status is calculated @ 07/22/25 09:44:17.662
  E0722 09:44:18.121672      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:19.121807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 07/22/25 09:44:19.678
  STEP: Ensuring resource quota status captures replication controller creation @ 07/22/25 09:44:19.691
  E0722 09:44:20.125479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:21.126203      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 07/22/25 09:44:21.702
  STEP: Ensuring resource quota status released usage @ 07/22/25 09:44:21.708
  E0722 09:44:22.133303      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:23.136473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:44:23.714315 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4562" for this suite. @ 07/22/25 09:44:23.717
â€¢ [11.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/22/25 09:44:23.725
  I0722 09:44:23.725430 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename deployment @ 07/22/25 09:44:23.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:44:23.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:44:23.74
  I0722 09:44:23.756984 22 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0722 09:44:23.770888 22 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0722 09:44:23.781273 22 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0722 09:44:24.146860      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:25.147167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:44:25.788328 22 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0722 09:44:25.790759 22 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0722 09:44:25.801301 22 deployment.go:314] Updating deployment test-recreate-deployment
  I0722 09:44:25.801363 22 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0722 09:44:25.900014 22 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd6f138e-3e98-439d-acac-f4b97d22a1c6",
      ResourceVersion: (string) (len=5) "33706",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888774263,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 09:44:25.904395 22 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "570f7374-704c-4a20-8a64-58712eeaa63a",
      ResourceVersion: (string) (len=5) "33704",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888774265,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "bd6f138e-3e98-439d-acac-f4b97d22a1c6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 64 36 66 31 33  38 65 2d 33 65 39 38 2d  |\"bd6f138e-3e98-|
              00000120  34 33 39 64 2d 61 63 61  63 2d 66 34 62 39 37 64  |439d-acac-f4b97d|
              00000130  32 32 61 31 63 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |22a1c6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 09:44:25.904743 22 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0722 09:44:25.904933 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c4c6c88-e533-45dd-a248-2752cd5dacf6",
      ResourceVersion: (string) (len=5) "33694",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888774263,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "bd6f138e-3e98-439d-acac-f4b97d22a1c6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 64 36 66 31 33  38 65 2d 33 65 39 38 2d  |\"bd6f138e-3e98-|
              00000120  34 33 39 64 2d 61 63 61  63 2d 66 34 62 39 37 64  |439d-acac-f4b97d|
              00000130  32 32 61 31 63 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |22a1c6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 09:44:25.909074 22 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-vq7wp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-vq7wp",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-7190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1e685b0-294b-4831-b1d8-9b2bf6ba3be5",
      ResourceVersion: (string) (len=5) "33705",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888774265,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "570f7374-704c-4a20-8a64-58712eeaa63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  30 66 37 33 37 34 2d 37  |d\":\"570f7374-7|
              00000090  30 34 63 2d 34 61 32 30  2d 38 61 36 34 2d 35 38  |04c-4a20-8a64-58|
              000000a0  37 31 32 65 65 61 61 36  33 61 5c 22 7d 22 3a 7b  |712eeaa63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dvj6x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dvj6x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888774265,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dvj6x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 09:44:25.909983 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7190" for this suite. @ 07/22/25 09:44:25.913
â€¢ [2.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 07/22/25 09:44:25.92
  I0722 09:44:25.920519 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename taint-single-pod @ 07/22/25 09:44:25.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:44:25.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:44:25.941
  I0722 09:44:25.944037 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0722 09:44:26.147395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:27.155403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:28.156764      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:29.158818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:30.159871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:31.161527      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:32.162139      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:33.162269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:34.166634      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:35.194421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:36.195912      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:37.198519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:38.199045      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:39.207182      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:40.214054      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:41.207733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:42.210348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:43.210587      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:44.217515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:45.218448      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:46.228460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:47.230331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:48.230478      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:49.233286      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:50.234180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:51.234716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:52.235154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:53.235822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:54.239636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:55.243298      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:56.243091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:57.248541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:58.272614      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:44:59.274521      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:00.275890      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:01.279577      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:02.288415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:03.289810      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:04.290369      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:05.290631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:06.291594      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:07.293353      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:08.300631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:09.301506      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:10.302207      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:11.303642      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:12.325622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:13.333818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:14.338855      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:15.344242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:16.354059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:17.369920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:18.372582      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:19.379193      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:20.381332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:21.381759      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:22.392768      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:23.407901      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:24.408400      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:25.417644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:45:25.944698 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0722 09:45:25.950492 22 taints.go:144] Starting informer...
  STEP: Starting pod... @ 07/22/25 09:45:25.95
  I0722 09:45:26.204849 22 taints.go:294] Pod is running on cncf1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/22/25 09:45:26.204
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/22/25 09:45:26.228
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/22/25 09:45:26.24
  I0722 09:45:26.241211 22 taints.go:313] Pod wasn't evicted. Proceeding
  I0722 09:45:26.241656 22 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/22/25 09:45:26.256
  STEP: Waiting some time to make sure that toleration time passed. @ 07/22/25 09:45:26.276
  E0722 09:45:26.422222      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:27.422514      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:28.422838      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:29.423772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:30.430021      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:31.431124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:32.434692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:33.437800      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:34.441659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:35.450471      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:36.456784      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:37.457209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:38.464243      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:39.472678      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:40.513787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:41.526304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:42.526927      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:43.533496      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:44.553381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:45.553806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:46.557979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:47.561269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:48.561796      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:49.568721      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:50.573804      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:51.574337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:52.575990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:53.587009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:54.591786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:55.606419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:56.607563      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:57.614265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:58.618263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:45:59.620242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:00.625090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:01.626793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:02.627094      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:03.631117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:04.631235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:05.631710      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:06.651044      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:07.641370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:08.642240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:09.643268      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:10.643246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:11.643862      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:12.644419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:13.648078      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:14.648561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:15.656598      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:16.656467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:17.656748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:18.663232      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:19.663599      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:20.683289      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:21.694282      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:22.698615      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:23.698960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:24.710321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:25.715246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:26.720154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:27.726103      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:28.727310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:29.731941      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:30.732500      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:31.734384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:32.738339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:33.748067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:34.748027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:35.754945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:36.755288      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:37.756164      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:38.757259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:39.760568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:40.760952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:46:41.290884 22 taints.go:329] Pod wasn't evicted. Test successful
  I0722 09:46:41.292821 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-6894" for this suite. @ 07/22/25 09:46:41.323
â€¢ [135.417 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 07/22/25 09:46:41.338
  I0722 09:46:41.338298 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 09:46:41.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:46:41.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:46:41.382
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/22/25 09:46:41.387
  E0722 09:46:41.763268      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:42.764481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:43.764359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:44.773807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:46:45.446
  I0722 09:46:45.449998 22 output.go:207] Trying to get logs from node cncf1 pod pod-517588d8-151a-4c6a-83f0-f8c704530278 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 09:46:45.46
  I0722 09:46:45.477536 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8209" for this suite. @ 07/22/25 09:46:45.482
â€¢ [4.151 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/22/25 09:46:45.489
  I0722 09:46:45.489270 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename watch @ 07/22/25 09:46:45.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:46:45.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:46:45.525
  STEP: creating a watch on configmaps @ 07/22/25 09:46:45.529
  STEP: creating a new configmap @ 07/22/25 09:46:45.531
  STEP: modifying the configmap once @ 07/22/25 09:46:45.539
  STEP: closing the watch once it receives two notifications @ 07/22/25 09:46:45.548
  I0722 09:46:45.549262 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2620  c55881be-0ef5-4bbe-9508-a75abcc6554b 33994 0 2025-07-22 09:46:45 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-22 09:46:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 09:46:45.549501 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2620  c55881be-0ef5-4bbe-9508-a75abcc6554b 33995 0 2025-07-22 09:46:45 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-22 09:46:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/22/25 09:46:45.549
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/22/25 09:46:45.558
  STEP: deleting the configmap @ 07/22/25 09:46:45.571
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/22/25 09:46:45.581
  I0722 09:46:45.581663 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2620  c55881be-0ef5-4bbe-9508-a75abcc6554b 33996 0 2025-07-22 09:46:45 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-22 09:46:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 09:46:45.581924 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2620  c55881be-0ef5-4bbe-9508-a75abcc6554b 33997 0 2025-07-22 09:46:45 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-22 09:46:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 09:46:45.582385 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2620" for this suite. @ 07/22/25 09:46:45.592
â€¢ [0.110 seconds]
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 07/22/25 09:46:45.599
  I0722 09:46:45.599195 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename disruption @ 07/22/25 09:46:45.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:46:45.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:46:45.619
  STEP: Waiting for the pdb to be processed @ 07/22/25 09:46:45.63
  E0722 09:46:45.774619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:46.775428      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/22/25 09:46:47.689
  I0722 09:46:47.695556 22 disruption.go:691] running pods: 0 < 3
  E0722 09:46:47.775544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:48.777497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:46:49.741294 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1857" for this suite. @ 07/22/25 09:46:49.748
â€¢ [4.158 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 07/22/25 09:46:49.758
  I0722 09:46:49.758545 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename containers @ 07/22/25 09:46:49.762
  E0722 09:46:49.778178      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:46:49.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:46:49.799
  STEP: Creating a pod to test override arguments @ 07/22/25 09:46:49.804
  E0722 09:46:50.779718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:51.792882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:52.794557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:53.797239      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:46:53.874
  I0722 09:46:53.882071 22 output.go:207] Trying to get logs from node cncf1 pod client-containers-956ebf49-272b-4f81-8dab-d148af70304b container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:46:53.893
  I0722 09:46:53.913662 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6971" for this suite. @ 07/22/25 09:46:53.917
â€¢ [4.167 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 07/22/25 09:46:53.925
  I0722 09:46:53.925722 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:46:53.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:46:53.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:46:53.957
  STEP: creating service in namespace services-8676 @ 07/22/25 09:46:53.961
  STEP: creating service affinity-nodeport in namespace services-8676 @ 07/22/25 09:46:53.961
  I0722 09:46:54.016406 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0722 09:46:54.799413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:55.811327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:46:56.021449 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 9, 46, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 9, 46, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 9, 46, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 9, 46, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-85dffb5fc7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 09:46:56.837292      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:57.841260      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:46:58.058529 22 resource.go:361] Creating new exec pod
  E0722 09:46:58.842133      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:46:59.842165      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:00.105397 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-8676 exec execpod-affinityt9sl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0722 09:47:00.313357 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.152.183.168) 80 port [tcp/http] succeeded!\n"
  I0722 09:47:00.313454 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:47:00.313566 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-8676 exec execpod-affinityt9sl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.168 80'
  I0722 09:47:00.409435 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.168 80\nConnection to 10.152.183.168 80 port [tcp/http] succeeded!\n"
  I0722 09:47:00.409530 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:47:00.409737 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-8676 exec execpod-affinityt9sl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.31 32147'
  I0722 09:47:00.511254 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.105.31 32147\nConnection to 192.168.105.31 32147 port [tcp/*] succeeded!\n"
  I0722 09:47:00.511398 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:47:00.511572 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-8676 exec execpod-affinityt9sl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.32 32147'
  I0722 09:47:00.592515 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.105.32 32147\nConnection to 192.168.105.32 32147 port [tcp/*] succeeded!\n"
  I0722 09:47:00.592637 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:47:00.592739 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-8676 exec execpod-affinityt9sl6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/ ; done'
  I0722 09:47:00.751077 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.105.31:32147/\n"
  I0722 09:47:00.751237 22 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2\naffinity-nodeport-85dffb5fc7-zklt2"
  I0722 09:47:00.751267 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751294 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751304 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751320 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751332 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751340 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751348 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751356 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751368 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751398 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751401 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751404 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751410 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751414 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751432 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751435 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-zklt2
  I0722 09:47:00.751842 22 service.go:4352] Cleaning up the exec pod
  E0722 09:47:00.843683      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:00.887229 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8676" for this suite. @ 07/22/25 09:47:00.898
â€¢ [6.998 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 07/22/25 09:47:00.924
  I0722 09:47:00.924220 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pods @ 07/22/25 09:47:00.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:00.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:00.975
  STEP: creating the pod @ 07/22/25 09:47:00.979
  STEP: submitting the pod to kubernetes @ 07/22/25 09:47:00.979
  STEP: verifying QOS class is set on the pod @ 07/22/25 09:47:00.988
  I0722 09:47:00.992768 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7699" for this suite. @ 07/22/25 09:47:01.016
â€¢ [0.110 seconds]
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 07/22/25 09:47:01.033
  I0722 09:47:01.033932 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename servicecidr @ 07/22/25 09:47:01.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:01.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:01.062
  STEP: creating @ 07/22/25 09:47:01.066
  STEP: patching @ 07/22/25 09:47:01.077
  STEP: updating @ 07/22/25 09:47:01.083
  STEP: getting @ 07/22/25 09:47:01.096
  STEP: listing @ 07/22/25 09:47:01.101
  STEP: watching @ 07/22/25 09:47:01.108
  STEP: deleting @ 07/22/25 09:47:01.109
  STEP: deleting a collection @ 07/22/25 09:47:01.115
  I0722 09:47:01.125736 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-2375" for this suite. @ 07/22/25 09:47:01.129
â€¢ [0.104 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 07/22/25 09:47:01.138
  I0722 09:47:01.138280 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:47:01.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:01.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:01.19
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:47:01.193
  E0722 09:47:01.848885      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:02.853596      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:03.859854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:04.867088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:47:05.219
  I0722 09:47:05.224642 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-7c16a9de-91a4-4148-97c3-4d162c42ec25 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:47:05.231
  I0722 09:47:05.247664 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4483" for this suite. @ 07/22/25 09:47:05.251
â€¢ [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 07/22/25 09:47:05.258
  I0722 09:47:05.258503 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename cronjob @ 07/22/25 09:47:05.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:05.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:05.276
  STEP: Creating a cronjob @ 07/22/25 09:47:05.279
  STEP: creating @ 07/22/25 09:47:05.28
  STEP: getting @ 07/22/25 09:47:05.287
  STEP: listing @ 07/22/25 09:47:05.29
  STEP: watching @ 07/22/25 09:47:05.292
  I0722 09:47:05.292979 22 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 07/22/25 09:47:05.294
  STEP: cluster-wide watching @ 07/22/25 09:47:05.296
  I0722 09:47:05.296884 22 cronjob.go:407] starting watch
  STEP: patching @ 07/22/25 09:47:05.298
  STEP: updating @ 07/22/25 09:47:05.304
  I0722 09:47:05.313784 22 cronjob.go:431] waiting for watch events with expected annotations
  I0722 09:47:05.313831 22 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 07/22/25 09:47:05.313
  STEP: updating /status @ 07/22/25 09:47:05.32
  STEP: get /status @ 07/22/25 09:47:05.326
  STEP: deleting @ 07/22/25 09:47:05.33
  STEP: deleting a collection @ 07/22/25 09:47:05.344
  I0722 09:47:05.354047 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4156" for this suite. @ 07/22/25 09:47:05.358
â€¢ [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 07/22/25 09:47:05.364
  I0722 09:47:05.364407 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 09:47:05.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:05.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:05.379
  STEP: validating cluster-info @ 07/22/25 09:47:05.382
  I0722 09:47:05.382758 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-6445 cluster-info'
  I0722 09:47:05.456423 22 builder.go:146] stderr: ""
  I0722 09:47:05.456497 22 builder.go:147] stdout: "Kubernetes control plane is running at https://10.152.183.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0722 09:47:05.456618 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6445" for this suite. @ 07/22/25 09:47:05.46
â€¢ [0.103 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 07/22/25 09:47:05.467
  I0722 09:47:05.467344 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 09:47:05.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:05.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:05.487
  E0722 09:47:05.870046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:06.876366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:07.508057 22 delete.go:62] Deleting pod "var-expansion-70ad3c4d-7ba8-41e7-a761-a2dee3037cb7" in namespace "var-expansion-2436"
  I0722 09:47:07.517173 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-70ad3c4d-7ba8-41e7-a761-a2dee3037cb7" to be fully deleted
  E0722 09:47:07.877225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:08.889814      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:09.527862 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2436" for this suite. @ 07/22/25 09:47:09.532
â€¢ [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 07/22/25 09:47:09.541
  I0722 09:47:09.541353 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 09:47:09.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:09.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:09.556
  STEP: Creating a ResourceQuota @ 07/22/25 09:47:09.56
  STEP: Getting a ResourceQuota @ 07/22/25 09:47:09.566
  STEP: Updating a ResourceQuota @ 07/22/25 09:47:09.569
  STEP: Verifying a ResourceQuota was modified @ 07/22/25 09:47:09.578
  STEP: Deleting a ResourceQuota @ 07/22/25 09:47:09.582
  STEP: Verifying the deleted ResourceQuota @ 07/22/25 09:47:09.587
  I0722 09:47:09.590791 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3208" for this suite. @ 07/22/25 09:47:09.594
â€¢ [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 07/22/25 09:47:09.601
  I0722 09:47:09.601106 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 09:47:09.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:09.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:09.614
  STEP: Creating Pod @ 07/22/25 09:47:09.617
  E0722 09:47:09.890164      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:10.892897      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 07/22/25 09:47:11.649
  I0722 09:47:11.649216 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4779 PodName:pod-sharedvolume-9ab6ba46-25a5-4ce2-9199-7028a62edbcc ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 09:47:11.649277 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 09:47:11.649918 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/emptydir-4779/pods/pod-sharedvolume-9ab6ba46-25a5-4ce2-9199-7028a62edbcc/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0722 09:47:11.711586 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 09:47:11.711628 22 exec_util.go:112] Exec stderr: ""
  I0722 09:47:11.711734 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4779" for this suite. @ 07/22/25 09:47:11.715
â€¢ [2.122 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 07/22/25 09:47:11.724
  I0722 09:47:11.724035 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:47:11.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:11.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:11.742
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:47:11.744
  E0722 09:47:11.914438      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:12.925074      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:13.925370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:14.926536      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:47:15.777
  I0722 09:47:15.782670 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-4a6a1b13-7c95-45cf-a8b0-1c4ef06923e3 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:47:15.79
  I0722 09:47:15.809525 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2229" for this suite. @ 07/22/25 09:47:15.814
â€¢ [4.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 07/22/25 09:47:15.825
  I0722 09:47:15.825534 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 09:47:15.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:15.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:15.847
  STEP: Creating configMap with name configmap-test-volume-map-30c6bef0-9aae-47f2-8d93-ac8d1c4620c2 @ 07/22/25 09:47:15.85
  STEP: Creating a pod to test consume configMaps @ 07/22/25 09:47:15.856
  E0722 09:47:15.927510      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:16.928075      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:17.928201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:18.928517      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:47:19.887
  I0722 09:47:19.891440 22 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-22ec565f-b420-4e68-b8a8-a511724eff9e container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:47:19.904
  E0722 09:47:19.929826      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:19.933169 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6896" for this suite. @ 07/22/25 09:47:19.937
â€¢ [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/22/25 09:47:19.949
  I0722 09:47:19.949027 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:47:20.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:20.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:20.034
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:47:20.043
  E0722 09:47:20.929963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:21.930589      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:22.943159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:23.948549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:47:24.127
  I0722 09:47:24.130098 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-91673371-5ab0-4ed4-8565-1c2021205073 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:47:24.134
  I0722 09:47:24.151032 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5149" for this suite. @ 07/22/25 09:47:24.157
â€¢ [4.215 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 07/22/25 09:47:24.164
  I0722 09:47:24.165186 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 09:47:24.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:24.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:24.188
  STEP: Creating configMap with name configmap-test-upd-40220dd8-582b-4583-a2bd-81b540092b62 @ 07/22/25 09:47:24.196
  STEP: Creating the pod @ 07/22/25 09:47:24.202
  E0722 09:47:24.949114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:25.949566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 07/22/25 09:47:26.218
  STEP: Waiting for pod with binary data @ 07/22/25 09:47:26.222
  I0722 09:47:26.227485 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7142" for this suite. @ 07/22/25 09:47:26.231
â€¢ [2.075 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 07/22/25 09:47:26.239
  I0722 09:47:26.239742 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 09:47:26.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:47:26.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:47:26.256
  STEP: Creating service test in namespace statefulset-1928 @ 07/22/25 09:47:26.259
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/22/25 09:47:26.264
  STEP: Creating stateful set ss in namespace statefulset-1928 @ 07/22/25 09:47:26.267
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1928 @ 07/22/25 09:47:26.275
  I0722 09:47:26.279380 22 wait.go:44] Found 0 stateful pods, waiting for 1
  E0722 09:47:26.950686      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:27.956278      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:28.956950      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:29.961043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:30.963659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:31.966746      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:32.979663      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:33.981566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:34.988783      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:35.990132      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:36.280672 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/22/25 09:47:36.28
  I0722 09:47:36.283889 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-1928 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 09:47:36.408256 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 09:47:36.408303 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 09:47:36.408312 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 09:47:36.412857 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0722 09:47:36.992524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:37.992490      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:38.993356      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:40.007040      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:41.008743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:42.012081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:43.022842      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:44.023110      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:45.037141      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:46.038881      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:46.429923 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0722 09:47:46.430047 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0722 09:47:46.462543 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.9999995s
  E0722 09:47:47.038844      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:47.478095 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.979834428s
  E0722 09:47:48.048754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:48.483443 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.97440846s
  E0722 09:47:49.048963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:49.498863 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.963432925s
  E0722 09:47:50.059736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:50.510077 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.948173083s
  E0722 09:47:51.064907      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:51.534778 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.923587102s
  E0722 09:47:52.066659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:52.559580 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.898691682s
  E0722 09:47:53.073771      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:53.563866 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.893884742s
  E0722 09:47:54.086063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:54.568038 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.889521368s
  E0722 09:47:55.088505      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:47:55.579593 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 878.641044ms
  E0722 09:47:56.093057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1928 @ 07/22/25 09:47:56.582
  I0722 09:47:56.591144 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-1928 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 09:47:56.753119 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 09:47:56.753288 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 09:47:56.753347 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 09:47:56.757988 22 wait.go:44] Found 1 stateful pods, waiting for 3
  E0722 09:47:57.097989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:58.098235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:47:59.098992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:00.099369      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:01.102776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:02.103580      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:03.106473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:04.118497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:05.119811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:06.125327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:06.762971 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 09:48:06.763118 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0722 09:48:06.763128 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/22/25 09:48:06.763
  STEP: Scale down will halt with unhealthy stateful pod @ 07/22/25 09:48:06.763
  I0722 09:48:06.770979 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-1928 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 09:48:06.885193 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 09:48:06.885233 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 09:48:06.885241 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 09:48:06.885324 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-1928 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 09:48:06.981431 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 09:48:06.981474 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 09:48:06.981493 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 09:48:06.981564 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-1928 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 09:48:07.065127 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 09:48:07.065216 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 09:48:07.065224 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 09:48:07.065248 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0722 09:48:07.068379 22 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0722 09:48:07.129227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:08.130019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:09.131885      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:10.134156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:11.135481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:12.138179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:13.142080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:14.143129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:15.144673      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:16.149707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:17.100755 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0722 09:48:17.100821 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0722 09:48:17.100829 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0722 09:48:17.114481 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999625s
  E0722 09:48:17.157376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:18.130832 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.983816261s
  E0722 09:48:18.160828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:19.136298 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.978312624s
  E0722 09:48:19.161266      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:20.141760 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.972846634s
  E0722 09:48:20.161866      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:21.147203 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.967495706s
  E0722 09:48:21.162302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:22.152807 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.961215915s
  E0722 09:48:22.162919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:23.158446 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.955567774s
  E0722 09:48:23.163477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:24.174782      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:24.178980 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.935454791s
  E0722 09:48:25.175466      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:25.188850 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.926276538s
  E0722 09:48:26.189720      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:26.196875 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 920.531373ms
  E0722 09:48:27.189908      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1928 @ 07/22/25 09:48:27.2
  I0722 09:48:27.205170 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-1928 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 09:48:27.327231 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 09:48:27.327332 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 09:48:27.327353 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 09:48:27.327411 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-1928 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 09:48:27.441777 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 09:48:27.441863 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 09:48:27.441895 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 09:48:27.441931 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=statefulset-1928 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 09:48:27.532869 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 09:48:27.532988 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 09:48:27.533006 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 09:48:27.533013 22 rest.go:153] Scaling statefulset ss to 0
  E0722 09:48:28.196881      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:29.198777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:30.199443      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:31.199899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:32.211649      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:33.216080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:34.216766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:35.217366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:36.222854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:37.238176      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/22/25 09:48:37.562
  I0722 09:48:37.563271 22 statefulset.go:138] Deleting all statefulset in ns statefulset-1928
  I0722 09:48:37.566215 22 rest.go:153] Scaling statefulset ss to 0
  I0722 09:48:37.570078 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0722 09:48:37.572053 22 rest.go:91] Deleting statefulset ss
  I0722 09:48:37.583586 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1928" for this suite. @ 07/22/25 09:48:37.587
â€¢ [71.354 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 07/22/25 09:48:37.594
  I0722 09:48:37.594415 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:48:37.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:48:37.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:48:37.63
  STEP: Setting up server cert @ 07/22/25 09:48:37.65
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:48:38.004
  STEP: Deploying the webhook pod @ 07/22/25 09:48:38.011
  STEP: Wait for the deployment to be ready @ 07/22/25 09:48:38.023
  I0722 09:48:38.030377 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0722 09:48:38.241360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:39.242094      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:48:40.04
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:48:40.054
  E0722 09:48:40.242144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:41.063447 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/22/25 09:48:41.066
  STEP: create a pod that should be updated by the webhook @ 07/22/25 09:48:41.08
  I0722 09:48:41.154055 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2755" for this suite. @ 07/22/25 09:48:41.158
  STEP: Destroying namespace "webhook-markers-8139" for this suite. @ 07/22/25 09:48:41.166
â€¢ [3.579 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 07/22/25 09:48:41.173
  I0722 09:48:41.173969 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename volumeattachment @ 07/22/25 09:48:41.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:48:41.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:48:41.212
  STEP: Create VolumeAttachment "va-e2e-d2tl7" on node "cncf2" @ 07/22/25 09:48:41.22
  STEP: Get VolumeAttachment "va-e2e-d2tl7" on node "cncf2" @ 07/22/25 09:48:41.226
  STEP: Patch VolumeAttachment "va-e2e-d2tl7" on node "cncf2" @ 07/22/25 09:48:41.229
  STEP: List VolumeAttachments with "va-e2e-d2tl7=patched" label @ 07/22/25 09:48:41.236
  STEP: Delete VolumeAttachment "va-e2e-d2tl7" on node "cncf2" @ 07/22/25 09:48:41.239
  E0722 09:48:41.242653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Confirm deletion of VolumeAttachment "va-e2e-d2tl7" on node "cncf2" @ 07/22/25 09:48:41.245
  STEP: Create VolumeAttachment "va-e2e-zwk2m" on node "cncf1" @ 07/22/25 09:48:41.251
  STEP: Update the VolumeAttachment "va-e2e-zwk2m" on node "cncf1" with label "va-e2e=updated" @ 07/22/25 09:48:41.27
  STEP: Create VolumeAttachment "va-e2e-b9dhv" on node "cncf2" @ 07/22/25 09:48:41.292
  STEP: Update the VolumeAttachment "va-e2e-b9dhv" on node "cncf2" with label "va-e2e=updated" @ 07/22/25 09:48:41.298
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/22/25 09:48:41.309
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/22/25 09:48:41.321
  I0722 09:48:41.323999 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9063" for this suite. @ 07/22/25 09:48:41.328
â€¢ [0.163 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 07/22/25 09:48:41.336
  I0722 09:48:41.336770 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:48:41.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:48:41.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:48:41.358
  STEP: Setting up server cert @ 07/22/25 09:48:41.382
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:48:41.74
  STEP: Deploying the webhook pod @ 07/22/25 09:48:41.745
  STEP: Wait for the deployment to be ready @ 07/22/25 09:48:41.757
  I0722 09:48:41.762107 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0722 09:48:42.244640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:43.244991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:48:43.778
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:48:43.82
  E0722 09:48:44.250729      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:48:44.821270 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/22/25 09:48:44.824
  I0722 09:48:44.846527 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  STEP: create a namespace for the webhook @ 07/22/25 09:48:44.954
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/22/25 09:48:44.972
  I0722 09:48:45.049476 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2447" for this suite. @ 07/22/25 09:48:45.053
  STEP: Destroying namespace "webhook-markers-2172" for this suite. @ 07/22/25 09:48:45.062
  STEP: Destroying namespace "fail-closed-namespace-8666" for this suite. @ 07/22/25 09:48:45.067
â€¢ [3.740 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 07/22/25 09:48:45.076
  I0722 09:48:45.076856 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 09:48:45.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:48:45.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:48:45.09
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 07/22/25 09:48:45.092
  STEP: Awaiting for the job to fail as there are failed indexes @ 07/22/25 09:48:45.099
  E0722 09:48:45.257769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:46.257940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:47.259027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:48.259042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:49.259899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:50.260240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:51.275987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:52.277964      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:53.278330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:54.287890      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:55.307510      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:56.314769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:57.321642      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:58.321929      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:48:59.326293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:00.336616      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:01.343043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:02.356106      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:03.361324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:04.365438      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 07/22/25 09:49:05.215
  I0722 09:49:05.226407 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7806" for this suite. @ 07/22/25 09:49:05.233
â€¢ [20.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 07/22/25 09:49:05.243
  I0722 09:49:05.243319 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:49:05.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:49:05.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:49:05.266
  STEP: creating service multiprotocol-test in namespace services-392 @ 07/22/25 09:49:05.273
  STEP: creating pod pod1 in namespace services-392 @ 07/22/25 09:49:05.3
  STEP: Creating pod pod1 in namespace services-392 @ 07/22/25 09:49:05.3
  E0722 09:49:05.367780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:06.380721      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-392 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/22/25 09:49:07.355
  I0722 09:49:07.359837      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:49:07.364036 22 service.go:4729] successfully validated that service multiprotocol-test in namespace services-392 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/22/25 09:49:07.364
  I0722 09:49:07.364103 22 resource.go:361] Creating new exec pod
  E0722 09:49:07.382136      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:08.389391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:09.392656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:49:09.396398 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.127 80'
  I0722 09:49:09.486615 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.127 80\nConnection to 10.152.183.127 80 port [tcp/http] succeeded!\n"
  I0722 09:49:09.486655 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:49:09.486730 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.127 80'
  E0722 09:49:10.403607      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:11.411158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:49:11.594226 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.127 80\n"
  I0722 09:49:11.594267 22 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/22/25 09:49:11.594
  I0722 09:49:11.603314 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.127 80'
  I0722 09:49:11.685832 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.127 80\nConnection to 10.152.183.127 80 port [tcp/http] succeeded!\n"
  I0722 09:49:11.685929 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:49:11.686110 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.127 80'
  E0722 09:49:12.421582      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:13.421773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:49:13.767074 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.127 80\n"
  I0722 09:49:13.767149 22 builder.go:147] stdout: ""
  I0722 09:49:13.767472 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.127 80'
  E0722 09:49:14.422473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:15.429204      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:49:15.866412 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.127 80\n"
  I0722 09:49:15.866458 22 builder.go:147] stdout: ""
  I0722 09:49:15.866514 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.127 80'
  E0722 09:49:16.437491      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:17.445112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:49:18.067058 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.127 80\n"
  I0722 09:49:18.067121 22 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/22/25 09:49:18.067
  I0722 09:49:18.077366 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.127 80'
  E0722 09:49:18.445858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:19.451100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:49:20.179783 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.127 80\n"
  I0722 09:49:20.179849 22 builder.go:147] stdout: "pod1"
  I0722 09:49:20.179990 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.127 80'
  E0722 09:49:20.465198      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:21.465932      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:49:22.280764 22 builder.go:135] rc: 1
  I0722 09:49:22.280870 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.127 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.127 80
  nc: connect to 10.152.183.127 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0722 09:49:22.280961 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.127 80'
  E0722 09:49:22.473295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:23.475063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:49:24.367105 22 builder.go:135] rc: 1
  I0722 09:49:24.367190 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.127 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.127 80
  nc: connect to 10.152.183.127 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0722 09:49:24.367238 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.127 80'
  E0722 09:49:24.475376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:25.476567      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:49:26.442536 22 builder.go:135] rc: 1
  I0722 09:49:26.442642 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-392 exec execpod2rndp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.127 80:
  Command stdout:

  stderr:
  + + echonc hostName -v
   -t -w 2 10.152.183.127 80
  nc: connect to 10.152.183.127 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0722 09:49:26.442789 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-392" for this suite. @ 07/22/25 09:49:26.447
â€¢ [21.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 07/22/25 09:49:26.454
  I0722 09:49:26.454431 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 09:49:26.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:49:26.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:49:26.468
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/22/25 09:49:26.471
  I0722 09:49:26.471515 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-1510 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  E0722 09:49:26.477422      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:49:26.515065 22 builder.go:146] stderr: ""
  I0722 09:49:26.515102 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/22/25 09:49:26.515
  I0722 09:49:26.519380 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-1510 delete pods e2e-test-httpd-pod'
  E0722 09:49:27.477872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:49:27.873397 22 builder.go:146] stderr: ""
  I0722 09:49:27.873486 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0722 09:49:27.873592 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1510" for this suite. @ 07/22/25 09:49:27.877
â€¢ [1.431 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/22/25 09:49:27.885
  I0722 09:49:27.885585 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sysctl @ 07/22/25 09:49:27.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:49:27.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:49:27.903
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/22/25 09:49:27.907
  STEP: Watching for error events or started pod @ 07/22/25 09:49:27.914
  E0722 09:49:28.481456      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:29.490566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 07/22/25 09:49:29.959
  E0722 09:49:30.494570      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:31.500038      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 07/22/25 09:49:31.978
  STEP: Getting logs from the pod @ 07/22/25 09:49:31.978
  STEP: Checking that the sysctl is actually updated @ 07/22/25 09:49:31.985
  I0722 09:49:31.985423 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-187" for this suite. @ 07/22/25 09:49:31.988
â€¢ [4.111 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:935
  STEP: Creating a kubernetes client @ 07/22/25 09:49:31.996
  I0722 09:49:31.996474 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sched-preemption @ 07/22/25 09:49:31.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:49:32.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:49:32.012
  I0722 09:49:32.031548 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0722 09:49:32.502164      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:33.502371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:34.502607      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:35.503911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:36.505269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:37.505599      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:38.508145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:39.508277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:40.512464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:41.516820      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:42.524914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:43.525308      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:44.526471      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:45.538768      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:46.538942      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:47.539058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:48.539845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:49.544688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:50.550558      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:51.552964      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:52.558846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:53.560037      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:54.560992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:55.561602      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:56.561779      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:57.562941      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:58.563565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:49:59.568393      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:00.583116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:01.598161      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:02.607884      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:03.608945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:04.609422      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:05.609702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:06.612996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:07.615878      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:08.627181      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:09.630911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:10.631040      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:11.631493      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:12.631527      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:13.632778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:14.634305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:15.637785      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:16.639240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:17.640530      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:18.641631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:19.642167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:20.661851      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:21.670177      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:22.676945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:23.681592      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:24.703197      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:25.712159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:26.725835      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:27.726527      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:28.731660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:29.734574      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:30.743713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:31.746867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:50:32.045272 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/22/25 09:50:32.051
  I0722 09:50:32.051171 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/22/25 09:50:32.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:50:32.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:50:32.12
  I0722 09:50:32.149482 22 preemption.go:941] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0722 09:50:32.155464 22 preemption.go:947] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 07/22/25 09:50:32.241
  STEP: Removing a custom resource @ 07/22/25 09:50:32.254
  I0722 09:50:32.267552 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2239" for this suite. @ 07/22/25 09:50:32.271
  I0722 09:50:32.279972 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5127" for this suite. @ 07/22/25 09:50:32.285
â€¢ [60.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/22/25 09:50:32.295
  I0722 09:50:32.295259 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename chunking @ 07/22/25 09:50:32.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:50:32.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:50:32.342
  STEP: creating a large number of resources @ 07/22/25 09:50:32.348
  E0722 09:50:32.754610      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:33.766211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:50:33.766392      22 request.go:752] "Waited before sending request" delay="1.004955334s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.152.183.1:443/api/v1/namespaces/chunking-7154/podtemplates"
  E0722 09:50:34.766275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:35.776235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:36.776625      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:37.779839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:38.780485      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:39.782266      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:40.782483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:41.783414      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:42.785525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:43.800445      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:50:43.860248      22 request.go:752] "Waited before sending request" delay="1.002936922s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.152.183.1:443/api/v1/namespaces/chunking-7154/podtemplates"
  E0722 09:50:44.800858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:45.801838      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:46.802706      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:47.803621      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:48.804727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:49.805325      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 07/22/25 09:50:50.005
  I0722 09:50:50.053806 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0722 09:50:50.110521 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0722 09:50:50.153130 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0722 09:50:50.203553 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0722 09:50:50.251613 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0722 09:50:50.301206 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0722 09:50:50.358545 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0722 09:50:50.403108 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0722 09:50:50.461134 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0722 09:50:50.501405 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0722 09:50:50.552492 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0722 09:50:50.606329 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0722 09:50:50.658186 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0722 09:50:50.707695 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0722 09:50:50.764958 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  E0722 09:50:50.805805      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:50:50.806748 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0722 09:50:50.865499 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0722 09:50:50.908479 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0722 09:50:50.961091 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0722 09:50:51.013749 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0722 09:50:51.053584 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0722 09:50:51.103210 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0722 09:50:51.160121 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0722 09:50:51.206177 22 chunking.go:98] Retrieved 9/17 results with rv 36091 and continue 
  I0722 09:50:51.256054 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0722 09:50:51.308238 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0722 09:50:51.372873 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0722 09:50:51.411494 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0722 09:50:51.459091 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0722 09:50:51.507462 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0722 09:50:51.559805 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0722 09:50:51.604804 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0722 09:50:51.654264 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0722 09:50:51.701359 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0722 09:50:51.754496 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0722 09:50:51.802211 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  E0722 09:50:51.807083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:50:51.875142 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0722 09:50:51.901831 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0722 09:50:51.950274 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0722 09:50:52.001522 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0722 09:50:52.056189 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0722 09:50:52.118666 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0722 09:50:52.156121 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0722 09:50:52.201541 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0722 09:50:52.250371 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0722 09:50:52.323278 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0722 09:50:52.370715 22 chunking.go:98] Retrieved 17/17 results with rv 36091 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0722 09:50:52.401028 22 chunking.go:98] Retrieved 9/17 results with rv 36091 and continue 
  I0722 09:50:52.452158 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0722 09:50:52.506547 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0722 09:50:52.555247 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0722 09:50:52.616891 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0722 09:50:52.653380 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0722 09:50:52.703354 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0722 09:50:52.754488 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  E0722 09:50:52.807440      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:50:52.808585 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0722 09:50:52.852869 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0722 09:50:52.924175 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0722 09:50:52.952672 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0722 09:50:53.027053 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0722 09:50:53.056499 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0722 09:50:53.114512 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0722 09:50:53.158675 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0722 09:50:53.206510 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0722 09:50:53.254080 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0722 09:50:53.315238 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0722 09:50:53.351244 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0722 09:50:53.402846 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0722 09:50:53.484398 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0722 09:50:53.502461 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0722 09:50:53.551639 22 chunking.go:98] Retrieved 17/17 results with rv 36094 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYwOTQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0722 09:50:53.622593 22 chunking.go:98] Retrieved 9/17 results with rv 36094 and continue 
  STEP: retrieving those results all at once @ 07/22/25 09:50:53.622
  I0722 09:50:53.670076 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7154" for this suite. @ 07/22/25 09:50:53.715
â€¢ [21.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 07/22/25 09:50:53.756
  I0722 09:50:53.756632 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:50:53.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:50:53.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:50:53.806
  E0722 09:50:53.807610      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating configMap with name projected-configmap-test-volume-map-986d4bd3-742d-41e0-90b2-809983c99bbb @ 07/22/25 09:50:53.809
  STEP: Creating a pod to test consume configMaps @ 07/22/25 09:50:53.815
  E0722 09:50:54.808010      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:55.811467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:56.815972      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:57.816892      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:50:57.852
  I0722 09:50:57.856525 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-756d18a7-1817-4deb-88c4-8111d0ab900e container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:50:57.862
  I0722 09:50:57.879973 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5699" for this suite. @ 07/22/25 09:50:57.883
â€¢ [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 07/22/25 09:50:57.89
  I0722 09:50:57.890808 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 09:50:57.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:50:57.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:50:57.912
  STEP: Given a ReplicationController is created @ 07/22/25 09:50:57.915
  STEP: When the matched label of one of its pods change @ 07/22/25 09:50:57.921
  I0722 09:50:57.923951 22 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  E0722 09:50:58.817574      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:50:59.818031      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:00.820307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:01.821677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:02.830599      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:02.938553 22 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/22/25 09:51:02.949
  E0722 09:51:03.831442      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:03.966550 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-865" for this suite. @ 07/22/25 09:51:03.973
â€¢ [6.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 07/22/25 09:51:03.982
  I0722 09:51:03.982457 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 09:51:03.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:51:03.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:51:04.002
  STEP: creating Agnhost RC @ 07/22/25 09:51:04.007
  I0722 09:51:04.007325 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-3198 create -f -'
  I0722 09:51:04.188907 22 builder.go:146] stderr: ""
  I0722 09:51:04.188963 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/22/25 09:51:04.188
  E0722 09:51:04.832624      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:05.197919 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 09:51:05.197950 22 framework.go:733] Found 0 / 1
  E0722 09:51:05.832620      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:06.201316 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 09:51:06.201809 22 framework.go:733] Found 1 / 1
  I0722 09:51:06.201879 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/22/25 09:51:06.202
  I0722 09:51:06.212831 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 09:51:06.213148 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0722 09:51:06.213270 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-3198 patch pod agnhost-primary-jbwjj -p {"metadata":{"annotations":{"x":"y"}}}'
  I0722 09:51:06.277998 22 builder.go:146] stderr: ""
  I0722 09:51:06.278038 22 builder.go:147] stdout: "pod/agnhost-primary-jbwjj patched\n"
  STEP: checking annotations @ 07/22/25 09:51:06.278
  I0722 09:51:06.283563 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 09:51:06.283602 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0722 09:51:06.283772 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3198" for this suite. @ 07/22/25 09:51:06.288
â€¢ [2.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 07/22/25 09:51:06.299
  I0722 09:51:06.299813 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:51:06.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:51:06.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:51:06.322
  STEP: Creating the pod @ 07/22/25 09:51:06.327
  E0722 09:51:06.832782      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:07.848383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:08.848172      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:08.882594 22 pod_client.go:173] Successfully updated pod "annotationupdateb446d826-810b-4835-a04f-4758611057bd"
  E0722 09:51:09.856401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:10.858195      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:10.906073 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9829" for this suite. @ 07/22/25 09:51:10.909
â€¢ [4.616 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 07/22/25 09:51:10.916
  I0722 09:51:10.916802 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 09:51:10.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:51:10.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:51:10.933
  STEP: Creating pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458 @ 07/22/25 09:51:10.936
  E0722 09:51:11.860367      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:12.868713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 09:51:12.981
  I0722 09:51:12.983968 22 container_probe.go:1748] Initial restart count of pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 is 0
  I0722 09:51:12.986649 22 container_probe.go:1758] Get pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458
  E0722 09:51:13.883195      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:14.883350      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:15.005535 22 container_probe.go:1758] Get pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458
  E0722 09:51:15.884564      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:16.887424      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:17.011070 22 container_probe.go:1758] Get pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458
  E0722 09:51:17.909050      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:18.913711      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:19.017789 22 container_probe.go:1758] Get pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458
  E0722 09:51:19.930411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:20.935224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:21.143204 22 container_probe.go:1758] Get pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458
  E0722 09:51:21.939020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:22.939366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:23.152580 22 container_probe.go:1758] Get pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458
  E0722 09:51:23.940313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:24.951144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:25.175362 22 container_probe.go:1758] Get pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458
  E0722 09:51:25.956795      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:26.957278      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:27.183235 22 container_probe.go:1758] Get pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458
  E0722 09:51:27.960484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:28.966400      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:29.193030 22 container_probe.go:1758] Get pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458
  E0722 09:51:29.969919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:30.977009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:31.204609 22 container_probe.go:1758] Get pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458
  E0722 09:51:31.983329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:32.984050      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:33.215672 22 container_probe.go:1758] Get pod liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 in namespace container-probe-2458
  I0722 09:51:33.215814 22 container_probe.go:1762] Restart count of pod container-probe-2458/liveness-2b8a69e6-d0e5-49bf-a2d2-202b701fdfe4 is now 1 (20.23175252s elapsed)
  STEP: deleting the pod @ 07/22/25 09:51:33.216
  I0722 09:51:33.257054 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2458" for this suite. @ 07/22/25 09:51:33.287
â€¢ [22.383 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 07/22/25 09:51:33.3
  I0722 09:51:33.300866 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:51:33.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:51:33.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:51:33.377
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:51:33.385
  E0722 09:51:33.986803      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:34.999973      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:36.003372      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:37.009409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:51:37.521
  I0722 09:51:37.524388 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-0312f4f7-2ce7-4729-9828-ca11348fb847 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:51:37.531
  I0722 09:51:37.553887 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2575" for this suite. @ 07/22/25 09:51:37.557
â€¢ [4.264 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 07/22/25 09:51:37.565
  I0722 09:51:37.565256 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:51:37.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:51:37.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:51:37.622
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:51:37.625
  E0722 09:51:38.017126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:39.028108      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:40.029159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:41.043154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:51:41.719
  I0722 09:51:41.722710 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-e8404541-1168-4c40-b57c-988b674b7e54 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:51:41.726
  I0722 09:51:41.744366 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1808" for this suite. @ 07/22/25 09:51:41.748
â€¢ [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 07/22/25 09:51:41.755
  I0722 09:51:41.755819 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 09:51:41.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:51:41.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:51:41.774
  STEP: Creating configMap with name projected-configmap-test-volume-a2e97365-47c6-4c55-86c9-01bea56e4116 @ 07/22/25 09:51:41.777
  STEP: Creating a pod to test consume configMaps @ 07/22/25 09:51:41.783
  E0722 09:51:42.043329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:43.052006      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:44.060266      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:45.062218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:51:45.82
  I0722 09:51:45.823997 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-b0320728-f79e-47bc-aa67-7ce9444289bb container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 09:51:45.828
  I0722 09:51:45.846502 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1360" for this suite. @ 07/22/25 09:51:45.85
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 07/22/25 09:51:45.856
  I0722 09:51:45.856738 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 09:51:45.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:51:45.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:51:45.875
  STEP: Creating a job @ 07/22/25 09:51:45.878
  STEP: Ensuring active pods == parallelism @ 07/22/25 09:51:45.883
  E0722 09:51:46.068197      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:47.070206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 07/22/25 09:51:47.892
  STEP: deleting Job.batch foo in namespace job-7020, will wait for the garbage collector to delete the pods @ 07/22/25 09:51:47.892
  I0722 09:51:47.957740 22 resources.go:139] Deleting Job.batch foo took: 5.621942ms
  I0722 09:51:48.058126 22 resources.go:163] Terminating Job.batch foo pods took: 100.382194ms
  E0722 09:51:48.084804      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:49.085097      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 07/22/25 09:51:49.986
  I0722 09:51:50.019833 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7020" for this suite. @ 07/22/25 09:51:50.026
â€¢ [4.181 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/22/25 09:51:50.038
  I0722 09:51:50.038577 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename deployment @ 07/22/25 09:51:50.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:51:50.082
  E0722 09:51:50.085541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:51:50.096
  I0722 09:51:50.173094 22 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  E0722 09:51:51.089655      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:52.102483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:53.104053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:54.111100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:55.119281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:55.182473 22 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 09:51:55.182
  I0722 09:51:55.182554 22 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/22/25 09:51:55.195
  I0722 09:51:55.209888 22 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-283",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50deed07-3c60-4111-ac58-949534e7521c",
      ResourceVersion: (string) (len=5) "36970",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888774715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 09:51:55.214963 22 deployment.go:42] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0722 09:51:55.215021 22 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0722 09:51:55.215384 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-283",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "214baf25-ccea-4242-be85-80a26559760a",
      ResourceVersion: (string) (len=5) "36971",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888774710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "50deed07-3c60-4111-ac58-949534e7521c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 35 30 64 65 65 64 30  |"uid\":\"50deed0|
              00000040  37 2d 33 63 36 30 2d 34  31 31 31 2d 61 63 35 38  |7-3c60-4111-ac58|
              00000050  2d 39 34 39 35 33 34 65  37 35 32 31 63 5c 22 7d  |-949534e7521c\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 09:51:55.255375 22 deployment.go:68] Pod "test-cleanup-controller-mpf4w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-mpf4w",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=14) "deployment-283",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "177d2fbf-5730-4833-a687-1e967a29931a",
      ResourceVersion: (string) (len=5) "36939",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888774710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.104/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.104/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1122596e3ef3391109b68b1b862ae87c922669478fee014bd6e76ec5bf72dde3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "214baf25-ccea-4242-be85-80a26559760a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  32 31 34 62 61 66 32 35  |uid\":\"214baf25|
              00000080  2d 63 63 65 61 2d 34 32  34 32 2d 62 65 38 35 2d  |-ccea-4242-be85-|
              00000090  38 30 61 32 36 35 35 39  37 36 30 61 5c 22 7d 22  |80a26559760a\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 31  30 34 5c 22 7d 22 3a 7b  |.1.209.104\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pm7hd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pm7hd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888774710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=12) "10.1.209.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.209.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888774710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888774710,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://727bf1bff804ef5506d6ec90fbe441398f8b61202f366a8a92b78b4ae13653ee",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pm7hd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 09:51:55.256274 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-283" for this suite. @ 07/22/25 09:51:55.264
â€¢ [5.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 07/22/25 09:51:55.284
  I0722 09:51:55.284321 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename csinodes @ 07/22/25 09:51:55.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:51:55.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:51:55.343
  STEP: Creating initial csiNode "e2e-csinode-tp98n" @ 07/22/25 09:51:55.348
  STEP: Getting initial csiNode "e2e-csinode-tp98n" @ 07/22/25 09:51:55.356
  STEP: Patching initial csiNode: "e2e-csinode-tp98n" @ 07/22/25 09:51:55.36
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-tp98n=patched" @ 07/22/25 09:51:55.368
  STEP: Delete initial csiNode: "e2e-csinode-tp98n" @ 07/22/25 09:51:55.371
  STEP: Confirm deletion of csiNode "e2e-csinode-tp98n" @ 07/22/25 09:51:55.378
  STEP: Creating replacement csiNode "e2e-csinode-vsvd5" @ 07/22/25 09:51:55.381
  STEP: Getting replacement csiNode "e2e-csinode-vsvd5" @ 07/22/25 09:51:55.389
  STEP: Updating replacement csiNode "e2e-csinode-vsvd5" @ 07/22/25 09:51:55.391
  STEP: DeleteCollection of CSINodes with "e2e-csinode-vsvd5=updated" label @ 07/22/25 09:51:55.399
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-vsvd5=updated" @ 07/22/25 09:51:55.407
  I0722 09:51:55.409816 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-3907" for this suite. @ 07/22/25 09:51:55.413
â€¢ [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 07/22/25 09:51:55.421
  I0722 09:51:55.421632 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename security-context-test @ 07/22/25 09:51:55.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:51:55.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:51:55.444
  E0722 09:51:56.143261      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:57.146247      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:58.149304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:51:59.150389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:51:59.481179 22 security_context.go:619] Got logs for pod "busybox-privileged-false-8b0c90e1-187d-4978-bbdf-a1c4e2f510e8": "ip: RTNETLINK answers: Operation not permitted\n"
  I0722 09:51:59.481671 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6277" for this suite. @ 07/22/25 09:51:59.486
â€¢ [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 07/22/25 09:51:59.495
  I0722 09:51:59.495845 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename containers @ 07/22/25 09:51:59.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:51:59.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:51:59.512
  E0722 09:52:00.151412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:01.160976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:52:01.550425 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7105" for this suite. @ 07/22/25 09:52:01.553
â€¢ [2.065 seconds]
------------------------------
SSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/22/25 09:52:01.561
  I0722 09:52:01.561353 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename conformance-tests @ 07/22/25 09:52:01.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:52:01.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:52:01.588
  STEP: Getting node addresses @ 07/22/25 09:52:01.593
  I0722 09:52:01.594087 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0722 09:52:01.602712 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6129" for this suite. @ 07/22/25 09:52:01.606
â€¢ [0.053 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 07/22/25 09:52:01.614
  I0722 09:52:01.614257 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 09:52:01.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:52:01.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:52:01.629
  STEP: Creating a ResourceQuota @ 07/22/25 09:52:01.632
  STEP: Getting a ResourceQuota @ 07/22/25 09:52:01.638
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/22/25 09:52:01.641
  STEP: Patching the ResourceQuota @ 07/22/25 09:52:01.643
  STEP: Deleting a Collection of ResourceQuotas @ 07/22/25 09:52:01.65
  STEP: Verifying the deleted ResourceQuota @ 07/22/25 09:52:01.66
  I0722 09:52:01.663252 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-297" for this suite. @ 07/22/25 09:52:01.666
â€¢ [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/22/25 09:52:01.713
  I0722 09:52:01.713592 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename lease-test @ 07/22/25 09:52:01.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:52:01.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:52:01.737
  I0722 09:52:01.789880 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7628" for this suite. @ 07/22/25 09:52:01.792
â€¢ [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 07/22/25 09:52:01.798
  I0722 09:52:01.798706 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/22/25 09:52:01.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:52:01.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:52:01.816
  I0722 09:52:01.823495 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9692" for this suite. @ 07/22/25 09:52:01.826
â€¢ [0.034 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 07/22/25 09:52:01.832
  I0722 09:52:01.832646 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/22/25 09:52:01.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:52:01.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:52:01.847
  STEP: Creating 50 configmaps @ 07/22/25 09:52:01.85
  STEP: Creating RC which spawns configmap-volume pods @ 07/22/25 09:52:02.088
  E0722 09:52:02.161595      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:52:02.210592 22 resource.go:81] Pod name wrapped-volume-race-7151b99f-ff8e-4f8b-ab3d-9f1644cf2223: Found 2 pods out of 5
  E0722 09:52:03.163338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:04.163626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:05.173018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:06.173211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:07.176155      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:52:07.226703 22 resource.go:81] Pod name wrapped-volume-race-7151b99f-ff8e-4f8b-ab3d-9f1644cf2223: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/22/25 09:52:07.226
  STEP: Creating RC which spawns configmap-volume pods @ 07/22/25 09:52:07.246
  I0722 09:52:07.278879 22 resource.go:81] Pod name wrapped-volume-race-2c60fbad-b7c5-41b6-a08d-89452f509d98: Found 0 pods out of 5
  E0722 09:52:08.176994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:09.177265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:10.189485      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:11.189785      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:12.195938      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:52:12.315596 22 resource.go:81] Pod name wrapped-volume-race-2c60fbad-b7c5-41b6-a08d-89452f509d98: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/22/25 09:52:12.315
  STEP: Creating RC which spawns configmap-volume pods @ 07/22/25 09:52:12.334
  I0722 09:52:12.348668 22 resource.go:81] Pod name wrapped-volume-race-fcdc13c5-88d5-4445-9156-979179cb2789: Found 0 pods out of 5
  E0722 09:52:13.202239      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:14.202767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:15.202523      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:16.227059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:17.243352      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:52:17.371456 22 resource.go:81] Pod name wrapped-volume-race-fcdc13c5-88d5-4445-9156-979179cb2789: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/22/25 09:52:17.371
  STEP: deleting ReplicationController wrapped-volume-race-fcdc13c5-88d5-4445-9156-979179cb2789 in namespace emptydir-wrapper-8230, will wait for the garbage collector to delete the pods @ 07/22/25 09:52:17.402
  I0722 09:52:17.474565 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-fcdc13c5-88d5-4445-9156-979179cb2789 took: 8.181033ms
  I0722 09:52:17.576657 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-fcdc13c5-88d5-4445-9156-979179cb2789 pods took: 102.104622ms
  E0722 09:52:18.245172      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:19.245402      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-2c60fbad-b7c5-41b6-a08d-89452f509d98 in namespace emptydir-wrapper-8230, will wait for the garbage collector to delete the pods @ 07/22/25 09:52:19.577
  I0722 09:52:19.660105 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-2c60fbad-b7c5-41b6-a08d-89452f509d98 took: 14.106974ms
  I0722 09:52:19.775316 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-2c60fbad-b7c5-41b6-a08d-89452f509d98 pods took: 115.208672ms
  E0722 09:52:20.250829      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:21.255179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-7151b99f-ff8e-4f8b-ab3d-9f1644cf2223 in namespace emptydir-wrapper-8230, will wait for the garbage collector to delete the pods @ 07/22/25 09:52:21.479
  I0722 09:52:21.544970 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-7151b99f-ff8e-4f8b-ab3d-9f1644cf2223 took: 5.824732ms
  I0722 09:52:21.654229 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-7151b99f-ff8e-4f8b-ab3d-9f1644cf2223 pods took: 109.255603ms
  E0722 09:52:22.262509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 07/22/25 09:52:22.764
  I0722 09:52:23.161194 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8230" for this suite. @ 07/22/25 09:52:23.166
â€¢ [21.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 07/22/25 09:52:23.174
  I0722 09:52:23.174815 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:52:23.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:52:23.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:52:23.192
  STEP: Setting up server cert @ 07/22/25 09:52:23.237
  E0722 09:52:23.263115      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:52:23.485
  STEP: Deploying the webhook pod @ 07/22/25 09:52:23.49
  STEP: Wait for the deployment to be ready @ 07/22/25 09:52:23.5
  I0722 09:52:23.506082 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0722 09:52:24.288144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:25.288812      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:52:25.519
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:52:25.533
  E0722 09:52:26.299318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:52:26.535951 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0722 09:52:26.539525 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/22/25 09:52:27.054
  STEP: Creating a custom resource that should be denied by the webhook @ 07/22/25 09:52:27.085
  E0722 09:52:27.303092      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:28.305416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/22/25 09:52:29.124
  STEP: Updating the custom resource with disallowed data should be denied @ 07/22/25 09:52:29.132
  STEP: Deleting the custom resource should be denied @ 07/22/25 09:52:29.142
  STEP: Remove the offending key and value from the custom resource data @ 07/22/25 09:52:29.15
  STEP: Deleting the updated custom resource should be successful @ 07/22/25 09:52:29.162
  E0722 09:52:29.317192      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:52:29.807584 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3096" for this suite. @ 07/22/25 09:52:29.811
  STEP: Destroying namespace "webhook-markers-2180" for this suite. @ 07/22/25 09:52:29.818
â€¢ [6.653 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 07/22/25 09:52:29.827
  I0722 09:52:29.827782 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 09:52:29.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:52:29.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:52:29.858
  I0722 09:52:29.903047 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7013" for this suite. @ 07/22/25 09:52:29.906
â€¢ [0.085 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/22/25 09:52:29.913
  I0722 09:52:29.913055 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename subpath @ 07/22/25 09:52:29.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:52:29.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:52:29.929
  STEP: Setting up data @ 07/22/25 09:52:29.933
  STEP: Creating pod pod-subpath-test-downwardapi-s7b6 @ 07/22/25 09:52:29.952
  STEP: Creating a pod to test atomic-volume-subpath @ 07/22/25 09:52:29.952
  E0722 09:52:30.317417      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:31.330111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:32.347270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:33.348508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:34.360941      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:35.361450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:36.364925      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:37.372154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:38.393738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:39.406986      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:40.408147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:41.414200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:42.432429      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:43.434598      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:44.441333      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:45.441888      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:46.442126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:47.452665      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:48.463078      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:49.464613      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:50.467231      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:51.472935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:52.485723      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:53.486234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:52:54.153
  I0722 09:52:54.155865 22 output.go:207] Trying to get logs from node cncf1 pod pod-subpath-test-downwardapi-s7b6 container test-container-subpath-downwardapi-s7b6: <nil>
  STEP: delete the pod @ 07/22/25 09:52:54.161
  STEP: Deleting pod pod-subpath-test-downwardapi-s7b6 @ 07/22/25 09:52:54.175
  I0722 09:52:54.175427 22 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-s7b6" in namespace "subpath-8581"
  I0722 09:52:54.177892 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8581" for this suite. @ 07/22/25 09:52:54.18
â€¢ [24.274 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 07/22/25 09:52:54.188
  I0722 09:52:54.188123 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/22/25 09:52:54.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:52:54.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:52:54.206
  E0722 09:52:54.492633      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:55.493437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 07/22/25 09:52:56.245
  STEP: Cleaning up the configmap @ 07/22/25 09:52:56.257
  STEP: Cleaning up the pod @ 07/22/25 09:52:56.265
  I0722 09:52:56.279976 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7719" for this suite. @ 07/22/25 09:52:56.285
â€¢ [2.105 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 07/22/25 09:52:56.293
  I0722 09:52:56.293337 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 09:52:56.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:52:56.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:52:56.311
  STEP: Creating pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305 @ 07/22/25 09:52:56.315
  E0722 09:52:56.493872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:57.507108      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 09:52:58.342
  I0722 09:52:58.345192 22 container_probe.go:1748] Initial restart count of pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 is 0
  I0722 09:52:58.347167 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:52:58.507722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:52:59.519254      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:00.366248 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:00.522570      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:01.526889      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:02.374336 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:02.535439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:03.536179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:04.389263 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:04.545726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:05.549902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:06.404223 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:06.552499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:07.553685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:08.408161 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:08.561026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:09.563616      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:10.416715 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:10.563894      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:11.567178      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:12.433923 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:12.568203      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:13.569830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:14.438239 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:14.575314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:15.595745      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:16.458084 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:16.601802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:17.601793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:18.470286 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:18.606525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:19.611404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:20.480967 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:20.624874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:21.634723      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:22.498129 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:22.636416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:23.639806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:24.510402 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:24.640595      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:25.646193      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:26.513563 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:26.646607      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:27.647032      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:28.540950 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:28.648237      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:29.656728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:30.552187 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:30.656874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:31.661628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:32.556044 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:32.662602      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:33.663870      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:34.560299 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:34.673867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:35.677025      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:36.572066 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:36.680974      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:37.681353      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:38.584462 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:38.689014      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:39.689236      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:40.593450 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:40.691804      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:41.697407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:42.600914 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:42.697591      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:43.717466      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:44.627705 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:44.719156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:45.728817      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:46.635507 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:46.732175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:47.742535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:48.706280 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  E0722 09:53:48.741925      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:49.742788      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:50.726510 22 container_probe.go:1758] Get pod busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 in namespace container-probe-3305
  I0722 09:53:50.726650 22 container_probe.go:1762] Restart count of pod container-probe-3305/busybox-055883a6-1217-443f-a8f9-2df8aac0dab2 is now 1 (52.381365281s elapsed)
  STEP: deleting the pod @ 07/22/25 09:53:50.727
  E0722 09:53:50.743618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:53:50.751883 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3305" for this suite. @ 07/22/25 09:53:50.757
â€¢ [54.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 07/22/25 09:53:50.768
  I0722 09:53:50.768416 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 09:53:50.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:53:50.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:53:50.818
  STEP: Creating service test in namespace statefulset-2135 @ 07/22/25 09:53:50.822
  STEP: Creating statefulset ss in namespace statefulset-2135 @ 07/22/25 09:53:50.838
  I0722 09:53:50.862887 22 wait.go:44] Found 0 stateful pods, waiting for 1
  E0722 09:53:51.754849      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:52.755062      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:53.755056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:54.757932      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:55.759245      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:56.776653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:57.777497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:58.777830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:53:59.783896      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:00.786323      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:54:00.873389 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/22/25 09:54:00.879
  STEP: Getting /status @ 07/22/25 09:54:00.888
  I0722 09:54:00.893837 22 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/22/25 09:54:00.893
  I0722 09:54:00.904449 22 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/22/25 09:54:00.904
  I0722 09:54:00.917502 22 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0722 09:54:00.917736 22 statefulset.go:1126] Found Statefulset ss in namespace statefulset-2135 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 09:54:00.917767 22 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/22/25 09:54:00.917
  I0722 09:54:00.917883 22 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0722 09:54:00.926438 22 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/22/25 09:54:00.926
  I0722 09:54:00.928322 22 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0722 09:54:00.928519 22 statefulset.go:138] Deleting all statefulset in ns statefulset-2135
  I0722 09:54:00.931664 22 rest.go:153] Scaling statefulset ss to 0
  E0722 09:54:01.787913      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:02.793908      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:03.803477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:04.803713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:05.806985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:06.820307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:07.815246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:08.815273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:09.817441      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:10.819267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:54:10.958632 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0722 09:54:10.961381 22 rest.go:91] Deleting statefulset ss
  I0722 09:54:10.972364 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2135" for this suite. @ 07/22/25 09:54:10.988
â€¢ [20.227 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 07/22/25 09:54:10.995
  I0722 09:54:10.995055 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 09:54:10.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:54:11.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:54:11.012
  STEP: Setting up server cert @ 07/22/25 09:54:11.033
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 09:54:11.421
  STEP: Deploying the webhook pod @ 07/22/25 09:54:11.437
  STEP: Wait for the deployment to be ready @ 07/22/25 09:54:11.459
  I0722 09:54:11.464567 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0722 09:54:11.831260      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:12.837565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 09:54:13.473
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 09:54:13.485
  E0722 09:54:13.839588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:54:14.487137 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/22/25 09:54:14.49
  STEP: create a pod @ 07/22/25 09:54:14.502
  E0722 09:54:14.840564      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:15.852457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/22/25 09:54:16.535
  I0722 09:54:16.536070 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=webhook-3035 attach --namespace=webhook-3035 to-be-attached-pod -i -c=container1'
  I0722 09:54:16.597366 22 builder.go:135] rc: 1
  I0722 09:54:16.654226 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3035" for this suite. @ 07/22/25 09:54:16.658
  STEP: Destroying namespace "webhook-markers-9680" for this suite. @ 07/22/25 09:54:16.664
â€¢ [5.703 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 07/22/25 09:54:16.697
  I0722 09:54:16.697990 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 09:54:16.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:54:16.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:54:16.723
  STEP: Creating replication controller my-hostname-basic-acd0527b-e967-4120-9a1d-dbc2e5d83b5d @ 07/22/25 09:54:16.727
  I0722 09:54:16.736159 22 resource.go:81] Pod name my-hostname-basic-acd0527b-e967-4120-9a1d-dbc2e5d83b5d: Found 0 pods out of 1
  E0722 09:54:16.852859      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:17.853985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:18.870899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:19.871430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:20.871776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:54:21.746445 22 resource.go:81] Pod name my-hostname-basic-acd0527b-e967-4120-9a1d-dbc2e5d83b5d: Found 1 pods out of 1
  I0722 09:54:21.746537 22 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-acd0527b-e967-4120-9a1d-dbc2e5d83b5d" are running
  I0722 09:54:21.751034 22 rc.go:525] Pod "my-hostname-basic-acd0527b-e967-4120-9a1d-dbc2e5d83b5d-xq6qp" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 09:54:18 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 09:54:16 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 09:54:18 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 09:54:18 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 09:54:16 +0000 UTC Reason: Message:}])
  I0722 09:54:21.751082 22 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/22/25 09:54:21.751
  I0722 09:54:21.760971 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6467" for this suite. @ 07/22/25 09:54:21.763
â€¢ [5.078 seconds]
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 07/22/25 09:54:21.775
  I0722 09:54:21.775908 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 09:54:21.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:54:21.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:54:21.798
  STEP: Creating projection with secret that has name secret-emptykey-test-24ab9607-7489-44a7-bf4d-56adc4ad6e4b @ 07/22/25 09:54:21.802
  I0722 09:54:21.805354 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3984" for this suite. @ 07/22/25 09:54:21.809
â€¢ [0.043 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/22/25 09:54:21.819
  I0722 09:54:21.819082 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/22/25 09:54:21.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:54:21.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:54:21.866
  E0722 09:54:21.872875      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:54:21.873303 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  E0722 09:54:22.898083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:54:23.302955 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2718" for this suite. @ 07/22/25 09:54:23.312
â€¢ [1.518 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/22/25 09:54:23.338
  I0722 09:54:23.338920 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename secrets @ 07/22/25 09:54:23.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:54:23.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:54:23.459
  STEP: Creating secret with name secret-test-6dc5bf4e-5679-476d-82dd-1cf32aa7de4e @ 07/22/25 09:54:23.599
  STEP: Creating a pod to test consume secrets @ 07/22/25 09:54:23.632
  E0722 09:54:23.923481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:24.912403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:25.914797      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:26.931494      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:54:27.719
  I0722 09:54:27.721598 22 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-73201f26-9d57-4401-8190-c40c214ad287 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 09:54:27.729
  I0722 09:54:27.744402 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5787" for this suite. @ 07/22/25 09:54:27.748
  STEP: Destroying namespace "secret-namespace-1092" for this suite. @ 07/22/25 09:54:27.753
â€¢ [4.422 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 07/22/25 09:54:27.761
  I0722 09:54:27.761104 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 09:54:27.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:54:27.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:54:27.776
  STEP: creating the pod with failed condition @ 07/22/25 09:54:27.78
  E0722 09:54:27.931655      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:28.932284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:29.932351      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:30.932705      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:31.935727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:32.939398      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:33.939947      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:34.942661      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:35.944209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:36.945396      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:37.950754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:38.956268      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:39.956967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:40.959740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:41.960303      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:42.967125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:43.971753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:44.972227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:45.973329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:46.986515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:47.990239      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:48.997409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:50.005627      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:51.006148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:52.017913      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:53.021833      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:54.027613      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:55.027949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:56.028719      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:57.029296      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:58.029985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:54:59.034326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:00.035730      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:01.035916      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:02.036812      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:03.042080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:04.054391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:05.054703      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:06.064601      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:07.067161      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:08.071018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:09.071196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:10.072145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:11.073437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:12.074234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:13.075432      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:14.091460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:15.091865      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:16.092857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:17.097631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:18.102920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:19.103509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:20.104166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:21.118288      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:22.118940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:23.132406      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:24.141218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:25.143333      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:26.147302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:27.149836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:28.149263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:29.150313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:30.150836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:31.151855      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:32.152504      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:33.152793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:34.153486      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:35.162151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:36.162778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:37.163251      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:38.170549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:39.170802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:40.172235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:41.173763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:42.183261      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:43.187844      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:44.188315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:45.196798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:46.197960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:47.198914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:48.206377      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:49.221498      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:50.222258      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:51.222501      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:52.223458      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:53.223715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:54.223845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:55.235626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:56.240343      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:57.241387      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:58.242016      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:55:59.253758      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:00.261057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:01.268088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:02.277524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:03.278646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:04.281403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:05.283302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:06.284359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:07.293217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:08.294187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:09.301695      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:10.301929      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:11.309550      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:12.311635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:13.311836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:14.312790      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:15.315416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:16.325294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:17.327576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:18.327789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:19.331846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:20.332464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:21.333929      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:22.334031      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:23.337358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:24.337870      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:25.364610      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:26.362123      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:27.369013      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 07/22/25 09:56:27.789
  I0722 09:56:28.308838 22 pod_client.go:173] Successfully updated pod "var-expansion-a4cd68cc-e00b-4352-9c75-17766607ad10"
  STEP: waiting for pod running @ 07/22/25 09:56:28.308
  E0722 09:56:28.369519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:29.369584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/22/25 09:56:30.338
  I0722 09:56:30.338886 22 delete.go:62] Deleting pod "var-expansion-a4cd68cc-e00b-4352-9c75-17766607ad10" in namespace "var-expansion-4201"
  I0722 09:56:30.346134 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-a4cd68cc-e00b-4352-9c75-17766607ad10" to be fully deleted
  E0722 09:56:30.373519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:31.373926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:32.376773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:33.377409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:34.381378      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:35.384462      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:36.386210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:37.388719      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:38.391923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:39.396324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:40.406138      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:41.409870      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:42.410406      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:43.422082      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:44.423088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:45.424115      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:46.429654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:47.431790      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:48.432494      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:49.433509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:50.455740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:51.469898      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:52.470354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:53.485054      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:54.491272      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:55.500877      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:56.501049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:57.502101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:58.505434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:56:59.505693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:00.513839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:01.518952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:02.521926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:57:02.554164 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4201" for this suite. @ 07/22/25 09:57:02.558
â€¢ [154.804 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/22/25 09:57:02.565
  I0722 09:57:02.565933 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/22/25 09:57:02.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:57:02.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:57:02.583
  STEP: fetching the /apis discovery document @ 07/22/25 09:57:02.585
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/22/25 09:57:02.586
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/22/25 09:57:02.586
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/22/25 09:57:02.586
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/22/25 09:57:02.587
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/22/25 09:57:02.587
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/22/25 09:57:02.589
  I0722 09:57:02.589276 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8010" for this suite. @ 07/22/25 09:57:02.592
â€¢ [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 07/22/25 09:57:02.601
  I0722 09:57:02.601551 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:57:02.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:57:02.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:57:02.629
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 09:57:02.632
  E0722 09:57:03.522777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:04.527764      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:05.528060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:06.542273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:57:06.651
  I0722 09:57:06.653738 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-2d1a7d7e-cfc5-4eba-97e1-7d1ff0d5d4f9 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 09:57:06.661
  I0722 09:57:06.674638 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9800" for this suite. @ 07/22/25 09:57:06.678
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:470
  STEP: Creating a kubernetes client @ 07/22/25 09:57:06.685
  I0722 09:57:06.685236 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sched-preemption @ 07/22/25 09:57:06.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:57:06.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:57:06.698
  I0722 09:57:06.714062 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0722 09:57:07.542504      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:08.551238      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:09.556410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:10.556971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:11.557993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:12.558200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:13.567992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:14.572892      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:15.573023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:16.581991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:17.582394      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:18.585640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:19.591808      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:20.596817      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:21.604450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:22.612822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:23.613980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:24.614029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:25.614284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:26.617320      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:27.617768      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:28.621012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:29.624526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:30.655573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:31.656123      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:32.660394      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:33.660880      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:34.661112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:35.663348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:36.663271      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:37.663987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:38.664112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:39.665124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:40.666123      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:41.667098      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:42.667495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:43.668806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:44.671238      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:45.671375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:46.681332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:47.681726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:48.685409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:49.689285      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:50.689792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:51.701103      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:52.705796      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:53.715380      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:54.717341      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:55.718437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:56.719245      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:57.719458      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:58.720077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:57:59.722276      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:00.723104      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:01.741823      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:02.748549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:03.751459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:04.753899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:05.758891      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:06.719167 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 07/22/25 09:58:06.721
  STEP: Adding a custom resource @ 07/22/25 09:58:06.721
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 07/22/25 09:58:06.728
  I0722 09:58:06.737927 22 preemption.go:504] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 07/22/25 09:58:06.738
  E0722 09:58:06.763545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:07.775678      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 07/22/25 09:58:08.765
  I0722 09:58:08.773090 22 preemption.go:522] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 07/22/25 09:58:08.773
  E0722 09:58:08.775847      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:09.778045      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:10.782776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 07/22/25 09:58:10.785
  I0722 09:58:10.788531 22 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0722 09:58:11.317379 22 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 07/22/25 09:58:11.333
  STEP: Removing a custom resource @ 07/22/25 09:58:11.341
  I0722 09:58:11.348297 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7850" for this suite. @ 07/22/25 09:58:11.351
â€¢ [64.672 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/22/25 09:58:11.357
  I0722 09:58:11.357815 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename deployment @ 07/22/25 09:58:11.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:58:11.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:58:11.372
  STEP: creating a Deployment @ 07/22/25 09:58:11.377
  STEP: waiting for Deployment to be created @ 07/22/25 09:58:11.382
  STEP: waiting for all Replicas to be Ready @ 07/22/25 09:58:11.384
  I0722 09:58:11.385287 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 09:58:11.385316 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 09:58:11.395043 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 09:58:11.395088 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 09:58:11.407233 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 09:58:11.407265 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 09:58:11.437746 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 09:58:11.437785 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0722 09:58:11.782840      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:12.784754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:12.810977 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0722 09:58:12.811023 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0722 09:58:12.927059 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/22/25 09:58:12.927
  I0722 09:58:12.934288 22 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/22/25 09:58:12.934
  I0722 09:58:12.936065 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0
  I0722 09:58:12.936092 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0
  I0722 09:58:12.936100 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0
  I0722 09:58:12.936103 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0
  I0722 09:58:12.936109 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0
  I0722 09:58:12.936131 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0
  I0722 09:58:12.936276 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0
  I0722 09:58:12.936309 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 0
  I0722 09:58:12.936326 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  I0722 09:58:12.936332 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  I0722 09:58:12.936336 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:12.936339 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:12.936408 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:12.936419 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:12.945750 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:12.945789 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:12.964500 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:12.964563 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:12.978630 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  I0722 09:58:12.978697 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  I0722 09:58:13.004721 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  I0722 09:58:13.004758 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  E0722 09:58:13.784883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:13.946784 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:13.946837 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:13.969109 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  STEP: listing Deployments @ 07/22/25 09:58:13.969
  I0722 09:58:13.973138 22 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/22/25 09:58:13.973
  I0722 09:58:13.998682 22 deployment.go:360] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/22/25 09:58:13.998
  I0722 09:58:14.004765 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 09:58:14.013924 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 09:58:14.047662 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 09:58:14.063376 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 09:58:14.081227 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0722 09:58:14.786083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:14.817884 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 09:58:15.005180 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 09:58:15.055529 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 09:58:15.095745 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0722 09:58:15.789394      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:15.839406 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/22/25 09:58:15.869
  STEP: fetching the DeploymentStatus @ 07/22/25 09:58:15.88
  I0722 09:58:15.885264 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  I0722 09:58:15.885637 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  I0722 09:58:15.885734 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  I0722 09:58:15.885844 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  I0722 09:58:15.885860 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 1
  I0722 09:58:15.885957 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:15.886053 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 3
  I0722 09:58:15.886061 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:15.886113 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 2
  I0722 09:58:15.886351 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-1370 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/22/25 09:58:15.886
  I0722 09:58:15.894940 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.895486 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.895565 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.895570 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.895613 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.895640 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.895659 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.895887 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.895973 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.895980 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.896019 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.896147 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.896153 22 deployment.go:474] observed event type MODIFIED
  I0722 09:58:15.898494 22 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0722 09:58:15.901654 22 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1370",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d164da69-e54c-491d-a48a-a3f4dfc300a3",
      ResourceVersion: (string) (len=5) "38887",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "ff500903-3b0d-4102-8962-4af820a67779",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 66 35 30  30 39 30 33 2d 33 62 30  |":\"ff500903-3b0|
              00000130  64 2d 34 31 30 32 2d 38  39 36 32 2d 34 61 66 38  |d-4102-8962-4af8|
              00000140  32 30 61 36 37 37 37 39  5c 22 7d 22 3a 7b 7d 7d  |20a67779\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0722 09:58:15.905836 22 deployment.go:668] pod: "test-deployment-564597bcc-gmlhb":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-564597bcc-gmlhb",
      GenerateName: (string) (len=26) "test-deployment-564597bcc-",
      Namespace: (string) (len=15) "deployment-1370",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4751f1f5-f766-4056-9a3e-5fcddfdc71f8",
      ResourceVersion: (string) (len=5) "38959",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) "",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) "",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c0ad87cef2cc13597e2ad461b8a7ff0a8bbac039e3a51e58d00986e1da166cae"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-564597bcc",
          UID: (types.UID) (len=36) "d164da69-e54c-491d-a48a-a3f4dfc300a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 31 36 34 64 61 36 39  |uid\":\"d164da69|
              000000a0  2d 65 35 34 63 2d 34 39  31 64 2d 61 34 38 61 2d  |-e54c-491d-a48a-|
              000000b0  61 33 66 34 64 66 63 33  30 30 61 33 5c 22 7d 22  |a3f4dfc300a3\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=688) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000100  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000110  2c 22 6b 3a 7b 5c 22 74  79 70 65 5c 22 3a 5c 22  |,"k:{\"type\":\"|
              00000120  50 6f 64 52 65 61 64 79  54 6f 53 74 61 72 74 43  |PodReadyToStartC|
              00000130  6f 6e 74 61 69 6e 65 72  73 5c 22 7d 22 3a 7b 22  |ontainers\"}":{"|
              00000140  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              00000150  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              00000160  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000170  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000180  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000190  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              000001a0  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              000001b0  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              000001c0  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              000001d0  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              000001e0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000001f0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              00000200  79 70 65 22 3a 7b 7d 7d  7d 2c 22 66 3a 63 6f 6e  |ype":{}}},"f:con|
              00000210  74 61 69 6e 65 72 53 74  61 74 75 73 65 73 22 3a  |tainerStatuses":|
              00000220  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 22 3a 7b 7d  |{},"f:hostIP":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 73 22 3a 7b 7d 2c  |,"f:hostIPs":{},|
              00000240  22 66 3a 70 68 61 73 65  22 3a 7b 7d 2c 22 66 3a  |"f:phase":{},"f:|
              00000250  70 6f 64 49 50 22 3a 7b  7d 2c 22 66 3a 70 6f 64  |podIP":{},"f:pod|
              00000260  49 50 73 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 6b 3a  |IPs":{".":{},"k:|
              00000270  7b 5c 22 69 70 5c 22 3a  5c 22 31 30 2e 31 2e 32  |{\"ip\":\"10.1.2|
              00000280  30 39 2e 37 34 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |09.74\"}":{".":{|
              00000290  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002a0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mkfr7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mkfr7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=6) "Failed",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=9) "PodFailed",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=9) "PodFailed",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=11) "10.1.209.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 2,
              Signal: (int32) 0,
              Reason: (string) (len=5) "Error",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888775091,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888775094,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://c084b7af4e9a900b8692bba5a2951269140f1d266b01914dc23c8051741d3892"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://c084b7af4e9a900b8692bba5a2951269140f1d266b01914dc23c8051741d3892",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mkfr7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0722 09:58:15.907208 22 deployment.go:656] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1370",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa167c8d-3464-4f68-b5c7-51eeb3f85a2c",
      ResourceVersion: (string) (len=5) "38968",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "ff500903-3b0d-4102-8962-4af820a67779",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 66 35 30  30 39 30 33 2d 33 62 30  |":\"ff500903-3b0|
              00000130  64 2d 34 31 30 32 2d 38  39 36 32 2d 34 61 66 38  |d-4102-8962-4af8|
              00000140  32 30 61 36 37 37 37 39  5c 22 7d 22 3a 7b 7d 7d  |20a67779\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0722 09:58:15.920623 22 deployment.go:668] pod: "test-deployment-79899bcfcc-7b96f":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-7b96f",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-1370",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ace62d98-2a55-4539-a323-6eb3d70ec18a",
      ResourceVersion: (string) (len=5) "38929",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "eeb535cb97ce362863684217dc8d57b8301836a380d6d8e928ade45d2dda81a3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.67/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.67/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "aa167c8d-3464-4f68-b5c7-51eeb3f85a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 61 31 36 37 63 38 64  |uid\":\"aa167c8d|
              000000a0  2d 33 34 36 34 2d 34 66  36 38 2d 62 35 63 37 2d  |-3464-4f68-b5c7-|
              000000b0  35 31 65 65 62 33 66 38  35 61 32 63 5c 22 7d 22  |51eeb3f85a2c\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 36  37 5c 22 7d 22 3a 7b 22  |.1.209.67\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ddtgc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ddtgc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=11) "10.1.209.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888775094,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fdb527d0236d3c648efa5e1fbc0e121c5f47660e7ce95fa2d1c0afb2951ad01c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ddtgc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0722 09:58:15.921532 22 deployment.go:668] pod: "test-deployment-79899bcfcc-lxhqz":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-lxhqz",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-1370",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ef419c4-8607-4359-9aa7-4e7920315dac",
      ResourceVersion: (string) (len=5) "38967",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bd9a635099fa758276802a97e2c510a4c25738363a02f6452b73add436f40163",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.44/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.44/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "aa167c8d-3464-4f68-b5c7-51eeb3f85a2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 61 31 36 37 63 38 64  |uid\":\"aa167c8d|
              000000a0  2d 33 34 36 34 2d 34 66  36 38 2d 62 35 63 37 2d  |-3464-4f68-b5c7-|
              000000b0  35 31 65 65 62 33 66 38  35 61 32 63 5c 22 7d 22  |51eeb3f85a2c\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 31 2e 34  34 5c 22 7d 22 3a 7b 22  |.1.161.44\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-588gd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-588gd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) (len=11) "10.1.161.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888775095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e9745b33eb6407d381d42790d4a45581da4044debab9f5feab2fd7ec251e001b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-588gd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0722 09:58:15.922873 22 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1370",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "683e432a-8b3c-46fd-8e08-b0a80a57af98",
      ResourceVersion: (string) (len=5) "38977",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "ff500903-3b0d-4102-8962-4af820a67779",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 66 35 30  30 39 30 33 2d 33 62 30  |":\"ff500903-3b0|
              00000130  64 2d 34 31 30 32 2d 38  39 36 32 2d 34 61 66 38  |d-4102-8962-4af8|
              00000140  32 30 61 36 37 37 37 39  5c 22 7d 22 3a 7b 7d 7d  |20a67779\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0722 09:58:15.937115 22 deployment.go:668] pod: "test-deployment-f78d658f9-l7n47":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-l7n47",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-1370",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ff10b86-4fd3-4ac1-abfb-1b6683f00853",
      ResourceVersion: (string) (len=5) "38974",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "16e61cf06a3680eaf9152cf227ce78e355988eedc3956e8fb8b8a3aa313cf453",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.31/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.31/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "683e432a-8b3c-46fd-8e08-b0a80a57af98",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 38 33 65 34 33 32 61  |uid\":\"683e432a|
              000000a0  2d 38 62 33 63 2d 34 36  66 64 2d 38 65 30 38 2d  |-8b3c-46fd-8e08-|
              000000b0  62 30 61 38 30 61 35 37  61 66 39 38 5c 22 7d 22  |b0a80a57af98\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 31 2e 33  31 5c 22 7d 22 3a 7b 22  |.1.161.31\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v9v9b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v9v9b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.32"
        }
      },
      PodIP: (string) (len=11) "10.1.161.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888775094,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://b48e177655f9300a7c123b68bdc7f16cbb3da203d7172365e70c4eee5b7b61d6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-v9v9b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0722 09:58:15.939528 22 deployment.go:668] pod: "test-deployment-f78d658f9-m4wpw":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-m4wpw",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-1370",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b68a3316-53fe-4222-856b-f981fa227c8f",
      ResourceVersion: (string) (len=5) "38935",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775096,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f6a6f2302ce79415fa34ef2f9d6731928988067ed708246811c941c14622812b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.83/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.83/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "683e432a-8b3c-46fd-8e08-b0a80a57af98",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 38 33 65 34 33 32 61  |uid\":\"683e432a|
              000000a0  2d 38 62 33 63 2d 34 36  66 64 2d 38 65 30 38 2d  |-8b3c-46fd-8e08-|
              000000b0  62 30 61 38 30 61 35 37  61 66 39 38 5c 22 7d 22  |b0a80a57af98\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 38  33 5c 22 7d 22 3a 7b 22  |.1.209.83\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fw48c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fw48c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=11) "10.1.209.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888775093,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://a006cbeff248c200514014a210b79bbd737e58c84ace3d807f64c58de3931bc1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fw48c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0722 09:58:15.940470 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1370" for this suite. @ 07/22/25 09:58:15.952
â€¢ [4.606 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:466
  STEP: Creating a kubernetes client @ 07/22/25 09:58:15.963
  I0722 09:58:15.963553 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename sched-pred @ 07/22/25 09:58:15.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:58:16.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:58:16.008
  I0722 09:58:16.011844 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0722 09:58:16.022547 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0722 09:58:16.025599 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node cncf1 before test
  I0722 09:58:16.034865 22 predicates.go:956] test-deployment-79899bcfcc-7b96f from deployment-1370 started at 2025-07-22 09:58:14 +0000 UTC (1 container statuses recorded)
  I0722 09:58:16.034932 22 predicates.go:958] 	Container test-deployment ready: true, restart count 0
  I0722 09:58:16.034956 22 predicates.go:956] test-deployment-f78d658f9-m4wpw from deployment-1370 started at 2025-07-22 09:58:12 +0000 UTC (1 container statuses recorded)
  I0722 09:58:16.034960 22 predicates.go:958] 	Container test-deployment ready: true, restart count 0
  I0722 09:58:16.034964 22 predicates.go:956] calico-node-swkpx from kube-system started at 2025-07-22 07:51:40 +0000 UTC (1 container statuses recorded)
  I0722 09:58:16.034967 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0722 09:58:16.034975 22 predicates.go:956] preemptor-pod from sched-preemption-7850 started at 2025-07-22 09:58:10 +0000 UTC (1 container statuses recorded)
  I0722 09:58:16.034978 22 predicates.go:958] 	Container preemptor-pod ready: true, restart count 0
  I0722 09:58:16.034981 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-13be34739e594807-rxhzv from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 09:58:16.034984 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 09:58:16.034987 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0722 09:58:16.034990 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node cncf2 before test
  I0722 09:58:16.042233 22 predicates.go:956] test-deployment-79899bcfcc-lxhqz from deployment-1370 started at 2025-07-22 09:58:15 +0000 UTC (1 container statuses recorded)
  I0722 09:58:16.042278 22 predicates.go:958] 	Container test-deployment ready: true, restart count 0
  I0722 09:58:16.042282 22 predicates.go:956] test-deployment-f78d658f9-l7n47 from deployment-1370 started at 2025-07-22 09:58:14 +0000 UTC (1 container statuses recorded)
  I0722 09:58:16.042285 22 predicates.go:958] 	Container test-deployment ready: true, restart count 0
  I0722 09:58:16.042289 22 predicates.go:956] calico-kube-controllers-79949b87d-6p5mg from kube-system started at 2025-07-22 08:41:09 +0000 UTC (1 container statuses recorded)
  I0722 09:58:16.042292 22 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0722 09:58:16.042297 22 predicates.go:956] calico-node-qdrvr from kube-system started at 2025-07-22 07:52:11 +0000 UTC (1 container statuses recorded)
  I0722 09:58:16.042299 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0722 09:58:16.042302 22 predicates.go:956] coredns-ccd8f67bc-hsmn2 from kube-system started at 2025-07-22 08:41:09 +0000 UTC (1 container statuses recorded)
  I0722 09:58:16.042305 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0722 09:58:16.042310 22 predicates.go:956] sonobuoy from sonobuoy started at 2025-07-22 08:25:01 +0000 UTC (1 container statuses recorded)
  I0722 09:58:16.042312 22 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0722 09:58:16.042315 22 predicates.go:956] sonobuoy-e2e-job-7652fcec38e04d57 from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 09:58:16.042319 22 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0722 09:58:16.042322 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 09:58:16.042324 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-13be34739e594807-nnhtr from sonobuoy started at 2025-07-22 08:25:11 +0000 UTC (2 container statuses recorded)
  I0722 09:58:16.042327 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 09:58:16.042329 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/22/25 09:58:16.042
  E0722 09:58:16.789792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:17.791311      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/22/25 09:58:18.056
  STEP: Trying to apply a random label on the found node. @ 07/22/25 09:58:18.073
  STEP: verifying the node has the label kubernetes.io/e2e-2edee8d0-c3ce-4d7a-a70a-212022b94d5f 42 @ 07/22/25 09:58:18.088
  STEP: Trying to relaunch the pod, now with labels. @ 07/22/25 09:58:18.092
  E0722 09:58:18.792496      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:19.793726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-2edee8d0-c3ce-4d7a-a70a-212022b94d5f off the node cncf1 @ 07/22/25 09:58:20.116
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2edee8d0-c3ce-4d7a-a70a-212022b94d5f @ 07/22/25 09:58:20.131
  I0722 09:58:20.137770 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2411" for this suite. @ 07/22/25 09:58:20.141
â€¢ [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 07/22/25 09:58:20.149
  I0722 09:58:20.149349 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 09:58:20.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:58:20.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:58:20.166
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/22/25 09:58:20.169
  I0722 09:58:20.170502 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  E0722 09:58:20.801021      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:21.807708      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:22.808253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:23.821844      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:24.822759      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/22/25 09:58:25.073
  I0722 09:58:25.073725 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  E0722 09:58:25.823378      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:26.276361 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  E0722 09:58:26.824280      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:27.826512      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:28.831392      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:29.831638      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:30.835585      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:31.082069 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5475" for this suite. @ 07/22/25 09:58:31.088
â€¢ [10.945 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 07/22/25 09:58:31.094
  I0722 09:58:31.094569 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 09:58:31.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:58:31.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:58:31.108
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/22/25 09:58:31.11
  E0722 09:58:31.836456      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:32.843766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:33.844731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:34.845535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:58:35.135
  I0722 09:58:35.138773 22 output.go:207] Trying to get logs from node cncf1 pod pod-fb87dc39-f5ae-43f5-81c5-e5860c256705 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 09:58:35.143
  I0722 09:58:35.159875 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4227" for this suite. @ 07/22/25 09:58:35.162
â€¢ [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 07/22/25 09:58:35.168
  I0722 09:58:35.168416 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:58:35.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:58:35.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:58:35.18
  STEP: creating service multi-endpoint-test in namespace services-5044 @ 07/22/25 09:58:35.183
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5044 to expose endpoints map[] @ 07/22/25 09:58:35.196
  I0722 09:58:35.199559      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:58:35.199616 22 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0722 09:58:35.846049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:36.201862      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:58:36.204177 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5044 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5044 @ 07/22/25 09:58:36.204
  E0722 09:58:36.851991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:37.853074      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5044 to expose endpoints map[pod1:[100]] @ 07/22/25 09:58:38.216
  I0722 09:58:38.220369      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:58:38.224041 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5044 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5044 @ 07/22/25 09:58:38.224
  E0722 09:58:38.854166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:39.866537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5044 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/22/25 09:58:40.24
  I0722 09:58:40.248360      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:58:40.252919 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5044 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/22/25 09:58:40.252
  I0722 09:58:40.252974 22 resource.go:361] Creating new exec pod
  E0722 09:58:40.876333      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:41.881373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:42.281906 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5044 exec execpodgssgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0722 09:58:42.367313 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.152.183.126) 80 port [tcp/http] succeeded!\n"
  I0722 09:58:42.367350 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:58:42.367422 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5044 exec execpodgssgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
  I0722 09:58:42.439590 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.126 80\n+ echo hostName\nConnection to 10.152.183.126 80 port [tcp/http] succeeded!\n"
  I0722 09:58:42.439636 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:58:42.439692 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5044 exec execpodgssgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0722 09:58:42.508171 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.152.183.126) 81 port [tcp/*] succeeded!\n"
  I0722 09:58:42.508214 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 09:58:42.508272 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-5044 exec execpodgssgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 81'
  I0722 09:58:42.575257 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.126 81\nConnection to 10.152.183.126 81 port [tcp/*] succeeded!\n"
  I0722 09:58:42.575355 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5044 @ 07/22/25 09:58:42.575
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5044 to expose endpoints map[pod2:[101]] @ 07/22/25 09:58:42.603
  I0722 09:58:42.610589      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:58:42.621812 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5044 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5044 @ 07/22/25 09:58:42.621
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5044 to expose endpoints map[] @ 07/22/25 09:58:42.661
  I0722 09:58:42.664359      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0722 09:58:42.882076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:43.677678      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0722 09:58:43.680867 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5044 exposes endpoints map[]
  I0722 09:58:43.699446 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5044" for this suite. @ 07/22/25 09:58:43.702
â€¢ [8.539 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 07/22/25 09:58:43.707
  I0722 09:58:43.707967 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename services @ 07/22/25 09:58:43.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:58:43.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:58:43.794
  STEP: creating service nodeport-test with type=NodePort in namespace services-9075 @ 07/22/25 09:58:43.796
  I0722 09:58:43.823564 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0722 09:58:43.886181      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:44.888689      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:45.835621 22 resource.go:361] Creating new exec pod
  E0722 09:58:45.889680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:46.890761      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:47.861946 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-9075 exec execpodzvpll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0722 09:58:47.891825      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:47.960063 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.79) 80 port [tcp/http] succeeded!\n"
  I0722 09:58:47.960182 22 builder.go:147] stdout: ""
  I0722 09:58:48.865790 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-9075 exec execpodzvpll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0722 09:58:48.892371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:48.941901 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.79) 80 port [tcp/http] succeeded!\n"
  I0722 09:58:48.941958 22 builder.go:147] stdout: ""
  I0722 09:58:49.862134 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-9075 exec execpodzvpll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0722 09:58:49.892603      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:49.928148 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.79) 80 port [tcp/http] succeeded!\n"
  I0722 09:58:49.928188 22 builder.go:147] stdout: "nodeport-test-85857fcf66-stxzn"
  I0722 09:58:49.928241 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-9075 exec execpodzvpll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.79 80'
  I0722 09:58:50.042124 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.79 80\nConnection to 10.152.183.79 80 port [tcp/http] succeeded!\n"
  I0722 09:58:50.042169 22 builder.go:147] stdout: "nodeport-test-85857fcf66-stxzn"
  I0722 09:58:50.042319 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-9075 exec execpodzvpll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.31 31648'
  I0722 09:58:50.128943 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.105.31 31648\nConnection to 192.168.105.31 31648 port [tcp/*] succeeded!\n"
  I0722 09:58:50.128987 22 builder.go:147] stdout: "nodeport-test-85857fcf66-9lv7c"
  I0722 09:58:50.129051 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-9075 exec execpodzvpll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.32 31648'
  I0722 09:58:50.216671 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.105.32 31648\nConnection to 192.168.105.32 31648 port [tcp/*] succeeded!\n"
  I0722 09:58:50.216764 22 builder.go:147] stdout: ""
  E0722 09:58:50.902789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:51.130791 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-9075 exec execpodzvpll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.32 31648'
  I0722 09:58:51.201551 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.105.32 31648\nConnection to 192.168.105.32 31648 port [tcp/*] succeeded!\n"
  I0722 09:58:51.201586 22 builder.go:147] stdout: ""
  E0722 09:58:51.905994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:52.141091 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-9075 exec execpodzvpll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.32 31648'
  I0722 09:58:52.207041 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.105.32 31648\nConnection to 192.168.105.32 31648 port [tcp/*] succeeded!\n"
  I0722 09:58:52.207080 22 builder.go:147] stdout: ""
  E0722 09:58:52.915265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:53.129408 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=services-9075 exec execpodzvpll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.105.32 31648'
  I0722 09:58:53.200762 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.105.32 31648\nConnection to 192.168.105.32 31648 port [tcp/*] succeeded!\n"
  I0722 09:58:53.200868 22 builder.go:147] stdout: "nodeport-test-85857fcf66-9lv7c"
  I0722 09:58:53.200964 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9075" for this suite. @ 07/22/25 09:58:53.203
â€¢ [9.502 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 07/22/25 09:58:53.209
  I0722 09:58:53.209654 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pods @ 07/22/25 09:58:53.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:58:53.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:58:53.226
  STEP: Create set of pods @ 07/22/25 09:58:53.228
  I0722 09:58:53.235800 22 pods.go:874] created test-pod-1
  I0722 09:58:53.245896 22 pods.go:874] created test-pod-2
  I0722 09:58:53.252399 22 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/22/25 09:58:53.252
  E0722 09:58:53.916253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:54.919332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 07/22/25 09:58:55.283
  I0722 09:58:55.286756 22 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0722 09:58:55.920368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:56.300474 22 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0722 09:58:56.936954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 09:58:57.290308 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5858" for this suite. @ 07/22/25 09:58:57.292
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 07/22/25 09:58:57.298
  I0722 09:58:57.298425 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 09:58:57.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:58:57.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:58:57.312
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 07/22/25 09:58:57.314
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 07/22/25 09:58:57.318
  E0722 09:58:57.938751      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:58.939523      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:58:59.940543      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:00.948065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 07/22/25 09:59:01.328
  I0722 09:59:01.330913 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-603" for this suite. @ 07/22/25 09:59:01.334
â€¢ [4.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 07/22/25 09:59:01.34
  I0722 09:59:01.340903 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 09:59:01.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:59:01.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:59:01.356
  STEP: Creating a test namespace @ 07/22/25 09:59:01.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:59:01.371
  STEP: Creating a pod in the namespace @ 07/22/25 09:59:01.374
  STEP: Waiting for the pod to have running status @ 07/22/25 09:59:01.381
  E0722 09:59:01.949252      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:02.957981      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 07/22/25 09:59:03.408
  STEP: Waiting for the namespace to be removed. @ 07/22/25 09:59:03.414
  E0722 09:59:03.958717      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:04.959551      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:05.960573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:06.969846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:07.971730      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:09.000698      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:10.001142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:11.013885      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:12.014375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:13.016822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:14.025569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/22/25 09:59:14.436
  STEP: Verifying there are no pods in the namespace @ 07/22/25 09:59:14.448
  I0722 09:59:14.451723 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5308" for this suite. @ 07/22/25 09:59:14.456
  STEP: Destroying namespace "nsdeletetest-3573" for this suite. @ 07/22/25 09:59:14.462
  I0722 09:59:14.464446 22 framework.go:370] Namespace nsdeletetest-3573 was already deleted
  STEP: Destroying namespace "nsdeletetest-9335" for this suite. @ 07/22/25 09:59:14.464
â€¢ [13.131 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 07/22/25 09:59:14.473
  I0722 09:59:14.473131 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename gc @ 07/22/25 09:59:14.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:59:14.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:59:14.49
  STEP: create the deployment @ 07/22/25 09:59:14.493
  I0722 09:59:14.500405      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/22/25 09:59:14.5
  STEP: delete the deployment @ 07/22/25 09:59:15.01
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/22/25 09:59:15.018
  E0722 09:59:15.026057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/22/25 09:59:15.541
  W0722 09:59:15.548893      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 09:59:15.549055 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 09:59:15.549261 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2994" for this suite. @ 07/22/25 09:59:15.552
â€¢ [1.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/22/25 09:59:15.56
  I0722 09:59:15.560885 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename ingressclass @ 07/22/25 09:59:15.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:59:15.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:59:15.579
  STEP: getting /apis @ 07/22/25 09:59:15.582
  STEP: getting /apis/networking.k8s.io @ 07/22/25 09:59:15.586
  STEP: getting /apis/networking.k8s.iov1 @ 07/22/25 09:59:15.587
  STEP: creating @ 07/22/25 09:59:15.589
  STEP: getting @ 07/22/25 09:59:15.603
  STEP: listing @ 07/22/25 09:59:15.606
  STEP: watching @ 07/22/25 09:59:15.608
  I0722 09:59:15.608632 22 ingressclass.go:348] starting watch
  STEP: patching @ 07/22/25 09:59:15.609
  STEP: updating @ 07/22/25 09:59:15.614
  I0722 09:59:15.621033 22 ingressclass.go:364] waiting for watch events with expected annotations
  I0722 09:59:15.621092 22 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 07/22/25 09:59:15.621
  STEP: deleting a collection @ 07/22/25 09:59:15.633
  I0722 09:59:15.647652 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1594" for this suite. @ 07/22/25 09:59:15.65
â€¢ [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 07/22/25 09:59:15.656
  I0722 09:59:15.656488 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 09:59:15.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:59:15.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:59:15.672
  STEP: Creating a pod to test downward api env vars @ 07/22/25 09:59:15.691
  E0722 09:59:16.027735      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:17.028151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:59:17.722
  I0722 09:59:17.725317 22 output.go:207] Trying to get logs from node cncf1 pod downward-api-fde1962d-a55c-4f52-9d04-9678f82d30fd container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 09:59:17.731
  I0722 09:59:17.748594 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6975" for this suite. @ 07/22/25 09:59:17.751
â€¢ [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 07/22/25 09:59:17.759
  I0722 09:59:17.759265 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename containers @ 07/22/25 09:59:17.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:59:17.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:59:17.775
  STEP: Creating a pod to test override command @ 07/22/25 09:59:17.778
  E0722 09:59:18.028484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:19.036628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:20.037251      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:21.037967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:59:21.812
  I0722 09:59:21.815434 22 output.go:207] Trying to get logs from node cncf1 pod client-containers-21d87dae-a40c-4b0f-a733-be0b471cfe08 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 09:59:21.82
  I0722 09:59:21.837378 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6558" for this suite. @ 07/22/25 09:59:21.841
â€¢ [4.090 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 07/22/25 09:59:21.849
  I0722 09:59:21.849266 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 09:59:21.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:59:21.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:59:21.867
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/22/25 09:59:21.884
  E0722 09:59:22.042340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:23.073111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:24.073786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:25.083692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:59:25.909
  I0722 09:59:25.914202 22 output.go:207] Trying to get logs from node cncf1 pod pod-1f050a53-9018-4333-8b08-3f89ab3ee2d1 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 09:59:25.919
  I0722 09:59:25.936799 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4758" for this suite. @ 07/22/25 09:59:25.941
â€¢ [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 07/22/25 09:59:25.951
  I0722 09:59:25.951926 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 09:59:25.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:59:25.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:59:25.975
  STEP: Creating a pod to test substitution in container's command @ 07/22/25 09:59:25.978
  E0722 09:59:26.085133      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:27.085625      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:28.094888      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:29.095752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 09:59:30.021
  I0722 09:59:30.023337 22 output.go:207] Trying to get logs from node cncf1 pod var-expansion-15247355-fe09-47bb-a6b6-c4314c79b5fd container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 09:59:30.027
  I0722 09:59:30.040414 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2310" for this suite. @ 07/22/25 09:59:30.043
â€¢ [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 07/22/25 09:59:30.049
  I0722 09:59:30.049954 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 09:59:30.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:59:30.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:59:30.093
  E0722 09:59:30.096520      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a suspended job @ 07/22/25 09:59:30.097
  STEP: Patching the Job @ 07/22/25 09:59:30.102
  STEP: Watching for Job to be patched @ 07/22/25 09:59:30.115
  I0722 09:59:30.117537 22 job.go:1369] Event ADDED observed for Job e2e-htpzf in namespace job-4721 with labels: map[e2e-job-label:e2e-htpzf] and annotations: map[]
  I0722 09:59:30.117666 22 job.go:1369] Event MODIFIED observed for Job e2e-htpzf in namespace job-4721 with labels: map[e2e-job-label:e2e-htpzf] and annotations: map[]
  I0722 09:59:30.117721 22 job.go:1372] Event MODIFIED found for Job e2e-htpzf in namespace job-4721 with labels: map[e2e-htpzf:patched e2e-job-label:e2e-htpzf] and annotations: map[]
  STEP: Updating the job @ 07/22/25 09:59:30.117
  STEP: Watching for Job to be updated @ 07/22/25 09:59:30.126
  I0722 09:59:30.127441 22 job.go:1372] Event MODIFIED found for Job e2e-htpzf in namespace job-4721 with labels: map[e2e-htpzf:patched e2e-job-label:e2e-htpzf] and annotations: map[updated:true]
  I0722 09:59:30.127521 22 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/22/25 09:59:30.127
  I0722 09:59:30.130016 22 job.go:1247] Job: e2e-htpzf as labels: map[e2e-htpzf:patched e2e-job-label:e2e-htpzf]
  STEP: Waiting for job to complete @ 07/22/25 09:59:30.13
  E0722 09:59:31.098784      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:32.099493      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:33.099608      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:34.102715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:35.105144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:36.106047      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:37.113143      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:38.119156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 07/22/25 09:59:38.156
  STEP: Watching for Job to be deleted @ 07/22/25 09:59:38.162
  I0722 09:59:38.163999 22 job.go:1369] Event MODIFIED observed for Job e2e-htpzf in namespace job-4721 with labels: map[e2e-htpzf:patched e2e-job-label:e2e-htpzf] and annotations: map[updated:true]
  I0722 09:59:38.164037 22 job.go:1369] Event MODIFIED observed for Job e2e-htpzf in namespace job-4721 with labels: map[e2e-htpzf:patched e2e-job-label:e2e-htpzf] and annotations: map[updated:true]
  I0722 09:59:38.164045 22 job.go:1369] Event MODIFIED observed for Job e2e-htpzf in namespace job-4721 with labels: map[e2e-htpzf:patched e2e-job-label:e2e-htpzf] and annotations: map[updated:true]
  I0722 09:59:38.164258 22 job.go:1369] Event MODIFIED observed for Job e2e-htpzf in namespace job-4721 with labels: map[e2e-htpzf:patched e2e-job-label:e2e-htpzf] and annotations: map[updated:true]
  I0722 09:59:38.164318 22 job.go:1369] Event MODIFIED observed for Job e2e-htpzf in namespace job-4721 with labels: map[e2e-htpzf:patched e2e-job-label:e2e-htpzf] and annotations: map[updated:true]
  I0722 09:59:38.164363 22 job.go:1372] Event DELETED found for Job e2e-htpzf in namespace job-4721 with labels: map[e2e-htpzf:patched e2e-job-label:e2e-htpzf] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/22/25 09:59:38.164
  I0722 09:59:38.166161 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4721" for this suite. @ 07/22/25 09:59:38.168
â€¢ [8.134 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/22/25 09:59:38.184
  I0722 09:59:38.184704 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename cronjob @ 07/22/25 09:59:38.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 09:59:38.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 09:59:38.209
  STEP: Creating a suspended cronjob @ 07/22/25 09:59:38.211
  STEP: Ensuring no jobs are scheduled @ 07/22/25 09:59:38.216
  E0722 09:59:39.119622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:40.119874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:41.121076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:42.125255      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:43.125428      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:44.125547      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:45.132216      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:46.141127      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:47.150893      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:48.154227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:49.155144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:50.159626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:51.176144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:52.182401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:53.191081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:54.191191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:55.204167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:56.213415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:57.216864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:58.218339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 09:59:59.228899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:00.229271      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:01.241333      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:02.244439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:03.251441      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:04.251829      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:05.272747      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:06.289304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:07.298805      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:08.321383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:09.325558      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:10.326183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:11.332405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:12.332869      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:13.336983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:14.340347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:15.344361      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:16.348552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:17.353326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:18.356029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:19.363511      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:20.374680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:21.379900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:22.387214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:23.387673      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:24.391412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:25.392180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:26.392413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:27.392430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:28.403605      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:29.404775      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:30.404990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:31.412652      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:32.413195      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:33.425848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:34.426734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:35.427976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:36.431159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:37.431786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:38.453268      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:39.453439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:40.457763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:41.461835      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:42.472453      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:43.473349      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:44.489883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:45.490226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:46.498786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:47.503053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:48.503094      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:49.505763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:50.507994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:51.525711      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:52.531570      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:53.538854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:54.541637      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:55.542580      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:56.545794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:57.562027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:58.562975      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:00:59.564356      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:00.565180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:01.566913      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:02.567423      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:03.568778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:04.575955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:05.581744      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:06.597286      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:07.602411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:08.602691      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:09.615042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:10.615246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:11.615406      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:12.615676      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:13.616363      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:14.635267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:15.636071      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:16.641550      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:17.641591      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:18.646515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:19.646448      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:20.651056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:21.651807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:22.651892      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:23.652623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:24.652974      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:25.654675      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:26.657321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:27.659949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:28.660562      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:29.660637      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:30.670522      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:31.673849      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:32.676744      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:33.677307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:34.679510      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:35.680017      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:36.690219      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:37.694898      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:38.695576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:39.699156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:40.714086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:41.722806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:42.723107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:43.730418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:44.731518      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:45.736012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:46.757925      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:47.761571      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:48.768233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:49.789214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:50.789461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:51.802101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:52.802516      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:53.803901      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:54.804074      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:55.804788      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:56.805689      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:57.805794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:58.812288      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:01:59.813954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:00.815651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:01.841088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:02.860911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:03.871321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:04.871588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:05.872043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:06.876204      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:07.879416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:08.908574      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:09.909590      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:10.929753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:11.946538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:12.948983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:13.958451      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:14.960173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:15.971295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:16.972006      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:17.984299      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:19.005813      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:20.006602      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:21.007575      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:22.009425      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:23.009675      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:24.023205      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:25.026473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:26.038792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:27.059315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:28.061279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:29.061294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:30.061772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:31.063779      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:32.069729      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:33.075630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:34.086512      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:35.087744      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:36.099018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:37.099701      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:38.112753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:39.113738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:40.121416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:41.123519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:42.150020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:43.151018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:44.151150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:45.152665      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:46.155526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:47.173230      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:48.173636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:49.173798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:50.174846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:51.186810      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:52.190090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:53.191427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:54.198699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:55.209063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:56.209125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:57.211840      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:58.212697      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:02:59.220636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:00.221003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:01.222696      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:02.222912      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:03.227288      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:04.228500      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:05.231919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:06.237741      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:07.241866      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:08.242125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:09.251062      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:10.250875      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:11.260153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:12.277836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:13.279545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:14.282846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:15.283130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:16.294965      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:17.305117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:18.311948      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:19.327035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:20.334676      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:21.355837      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:22.358589      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:23.367432      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:24.368512      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:25.382046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:26.387711      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:27.401777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:28.409632      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:29.416849      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:30.417248      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:31.427323      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:32.441306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:33.441242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:34.442263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:35.449098      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:36.449174      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:37.456054      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:38.464293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:39.466467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:40.466829      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:41.467306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:42.477573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:43.484275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:44.488936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:45.490532      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:46.494205      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:47.494361      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:48.497285      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:49.523415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:50.527288      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:51.529397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:52.542762      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:53.543424      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:54.546017      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:55.558570      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:56.575316      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:57.580132      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:58.586433      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:03:59.599436      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:00.620760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:01.621815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:02.624263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:03.624824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:04.628532      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:05.629624      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:06.637908      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:07.645355      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:08.645552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:09.649576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:10.657177      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:11.657953      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:12.665722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:13.666858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:14.667181      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:15.669009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:16.670048      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:17.670525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:18.671224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:19.674554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:20.690722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:21.690949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:22.691151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:23.707250      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:24.715702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:25.716569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:26.725556      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:27.727061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:28.735621      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:29.742444      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:30.750193      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:31.756312      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:32.756534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:33.757392      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:34.757205      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:35.757381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:36.757828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:37.757969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/22/25 10:04:38.229
  STEP: Removing cronjob @ 07/22/25 10:04:38.232
  I0722 10:04:38.241578 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-505" for this suite. @ 07/22/25 10:04:38.246
â€¢ [300.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 07/22/25 10:04:38.254
  I0722 10:04:38.254364 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pods @ 07/22/25 10:04:38.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:04:38.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:04:38.303
  STEP: Create a pod @ 07/22/25 10:04:38.306
  E0722 10:04:38.758317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:39.769863      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/22/25 10:04:40.325
  I0722 10:04:40.333309 22 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0722 10:04:40.333455 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8722" for this suite. @ 07/22/25 10:04:40.336
â€¢ [2.089 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 07/22/25 10:04:40.343
  I0722 10:04:40.343802 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 10:04:40.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:04:40.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:04:40.36
  STEP: creating all guestbook components @ 07/22/25 10:04:40.377
  I0722 10:04:40.377191 22 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0722 10:04:40.377293 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 create -f -'
  I0722 10:04:40.468497 22 builder.go:146] stderr: ""
  I0722 10:04:40.468580 22 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0722 10:04:40.468641 22 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0722 10:04:40.468737 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 create -f -'
  I0722 10:04:40.554738 22 builder.go:146] stderr: ""
  I0722 10:04:40.554793 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0722 10:04:40.555153 22 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0722 10:04:40.555211 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 create -f -'
  I0722 10:04:40.640204 22 builder.go:146] stderr: ""
  I0722 10:04:40.640240 22 builder.go:147] stdout: "service/frontend created\n"
  I0722 10:04:40.640602 22 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0722 10:04:40.640675 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 create -f -'
  I0722 10:04:40.696739 22 builder.go:146] stderr: ""
  I0722 10:04:40.696777 22 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0722 10:04:40.696832 22 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0722 10:04:40.696899 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 create -f -'
  I0722 10:04:40.768155 22 builder.go:146] stderr: ""
  I0722 10:04:40.768190 22 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0722 10:04:40.768251 22 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0722 10:04:40.768320 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 create -f -'
  E0722 10:04:40.770681      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:04:40.829998 22 builder.go:146] stderr: ""
  I0722 10:04:40.830071 22 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/22/25 10:04:40.83
  I0722 10:04:40.830137 22 kubectl.go:2275] Waiting for all frontend pods to be Running.
  E0722 10:04:41.771105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:42.772959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:43.785015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:44.785175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:45.785312      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:04:45.887487 22 kubectl.go:2279] Waiting for frontend to serve content.
  I0722 10:04:45.896053 22 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0722 10:04:45.905857 22 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/22/25 10:04:45.912
  I0722 10:04:45.912634 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 delete --grace-period=0 --force -f -'
  I0722 10:04:45.977629 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 10:04:45.977672 22 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/22/25 10:04:45.977
  I0722 10:04:45.977793 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 delete --grace-period=0 --force -f -'
  I0722 10:04:46.172507 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 10:04:46.172604 22 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/22/25 10:04:46.172
  I0722 10:04:46.173021 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 delete --grace-period=0 --force -f -'
  I0722 10:04:46.234466 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 10:04:46.234513 22 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/22/25 10:04:46.234
  I0722 10:04:46.234651 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 delete --grace-period=0 --force -f -'
  I0722 10:04:46.277202 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 10:04:46.277259 22 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/22/25 10:04:46.277
  I0722 10:04:46.277385 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 delete --grace-period=0 --force -f -'
  I0722 10:04:46.369084 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 10:04:46.369133 22 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/22/25 10:04:46.369
  I0722 10:04:46.369268 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-8549 delete --grace-period=0 --force -f -'
  I0722 10:04:46.444112 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 10:04:46.444158 22 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0722 10:04:46.444294 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8549" for this suite. @ 07/22/25 10:04:46.448
â€¢ [6.133 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 07/22/25 10:04:46.476
  I0722 10:04:46.476776 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 10:04:46.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:04:46.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:04:46.503
  E0722 10:04:46.787840      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:47.797567      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:48.798695      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:49.803557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:50.811381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:51.818754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:52.822511      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:53.825979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:54.828823      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:55.837526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:56.840525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:57.841894      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:58.842923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:04:59.843546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:00.845882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:01.859890      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:02.863385      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/22/25 10:05:03.517
  E0722 10:05:03.869821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:04.877856      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:05.878382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:06.880264      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:07.885538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/22/25 10:05:08.535
  STEP: Ensuring resource quota status is calculated @ 07/22/25 10:05:08.541
  E0722 10:05:08.886529      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:09.894694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 07/22/25 10:05:10.545
  STEP: Ensuring resource quota status captures configMap creation @ 07/22/25 10:05:10.556
  E0722 10:05:10.912859      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:11.916705      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 07/22/25 10:05:12.56
  STEP: Ensuring resource quota status released usage @ 07/22/25 10:05:12.566
  E0722 10:05:12.918574      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:13.926917      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:05:14.583807 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7795" for this suite. @ 07/22/25 10:05:14.587
â€¢ [28.117 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/22/25 10:05:14.594
  I0722 10:05:14.594286 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename controllerrevisions @ 07/22/25 10:05:14.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:05:14.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:05:14.613
  STEP: Creating DaemonSet "e2e-9sfqt-daemon-set" @ 07/22/25 10:05:14.628
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 10:05:14.634
  I0722 10:05:14.639007 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-9sfqt-daemon-set: 0
  I0722 10:05:14.639074 22 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0722 10:05:14.936537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:05:15.645084 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-9sfqt-daemon-set: 2
  I0722 10:05:15.645125 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-9sfqt-daemon-set
  STEP: Confirm DaemonSet "e2e-9sfqt-daemon-set" successfully created with "daemonset-name=e2e-9sfqt-daemon-set" label @ 07/22/25 10:05:15.647
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-9sfqt-daemon-set" @ 07/22/25 10:05:15.653
  I0722 10:05:15.656929 22 controller_revision.go:162] Located ControllerRevision: "e2e-9sfqt-daemon-set-7b47b46dcc"
  STEP: Patching ControllerRevision "e2e-9sfqt-daemon-set-7b47b46dcc" @ 07/22/25 10:05:15.658
  I0722 10:05:15.665981 22 controller_revision.go:173] e2e-9sfqt-daemon-set-7b47b46dcc has been patched
  STEP: Create a new ControllerRevision @ 07/22/25 10:05:15.666
  I0722 10:05:15.671780 22 controller_revision.go:191] Created ControllerRevision: e2e-9sfqt-daemon-set-57c57c4b7c
  STEP: Confirm that there are two ControllerRevisions @ 07/22/25 10:05:15.671
  I0722 10:05:15.671852 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0722 10:05:15.674364 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-9sfqt-daemon-set-7b47b46dcc" @ 07/22/25 10:05:15.674
  STEP: Confirm that there is only one ControllerRevision @ 07/22/25 10:05:15.679
  I0722 10:05:15.679789 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0722 10:05:15.681947 22 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-9sfqt-daemon-set-57c57c4b7c" @ 07/22/25 10:05:15.684
  I0722 10:05:15.691715 22 controller_revision.go:220] e2e-9sfqt-daemon-set-57c57c4b7c has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/22/25 10:05:15.691
  I0722 10:05:15.697331      22 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 07/22/25 10:05:15.697
  I0722 10:05:15.697490 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0722 10:05:15.944232      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:05:16.707553 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0722 10:05:16.710955 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-9sfqt-daemon-set-57c57c4b7c=updated" @ 07/22/25 10:05:16.711
  STEP: Confirm that there is only one ControllerRevision @ 07/22/25 10:05:16.717
  I0722 10:05:16.717694 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0722 10:05:16.719957 22 controller_revision.go:265] Found 1 ControllerRevisions
  I0722 10:05:16.721827 22 controller_revision.go:246] ControllerRevision "e2e-9sfqt-daemon-set-7c47488b64" has revision 3
  STEP: Deleting DaemonSet "e2e-9sfqt-daemon-set" @ 07/22/25 10:05:16.724
  STEP: deleting DaemonSet.extensions e2e-9sfqt-daemon-set in namespace controllerrevisions-4384, will wait for the garbage collector to delete the pods @ 07/22/25 10:05:16.724
  I0722 10:05:16.789012 22 resources.go:139] Deleting DaemonSet.extensions e2e-9sfqt-daemon-set took: 7.752701ms
  I0722 10:05:16.898189 22 resources.go:163] Terminating DaemonSet.extensions e2e-9sfqt-daemon-set pods took: 109.175404ms
  E0722 10:05:16.944485      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:17.945813      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:05:18.711711 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-9sfqt-daemon-set: 0
  I0722 10:05:18.711748 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-9sfqt-daemon-set
  I0722 10:05:18.714989 22 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40887"},"items":null}

  I0722 10:05:18.717141 22 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40887"},"items":null}

  I0722 10:05:18.725786 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-4384" for this suite. @ 07/22/25 10:05:18.728
â€¢ [4.140 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 07/22/25 10:05:18.735
  I0722 10:05:18.735454 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 10:05:18.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:05:18.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:05:18.75
  STEP: creating a Namespace @ 07/22/25 10:05:18.752
  STEP: patching the Namespace @ 07/22/25 10:05:18.765
  STEP: get the Namespace and ensuring it has the label @ 07/22/25 10:05:18.77
  I0722 10:05:18.773267 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5449" for this suite. @ 07/22/25 10:05:18.775
  STEP: Destroying namespace "nspatchtest-6da4d312-97d7-4617-b3c2-1418f6475020-331" for this suite. @ 07/22/25 10:05:18.781
â€¢ [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 07/22/25 10:05:18.789
  I0722 10:05:18.789215 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 10:05:18.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:05:18.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:05:18.807
  STEP: starting the proxy server @ 07/22/25 10:05:18.811
  I0722 10:05:18.811290 22 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3871980464 --namespace=kubectl-7672 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/22/25 10:05:18.848
  I0722 10:05:18.856061 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0722 10:05:18.857291 22 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:35207

  I0722 10:05:18.857295 22 kubectl.go:2232] kubectl proxy stderr: W0722 10:05:18.846536    1463 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-7672" for this suite. @ 07/22/25 10:05:18.859
â€¢ [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 07/22/25 10:05:18.867
  I0722 10:05:18.867728 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename security-context-test @ 07/22/25 10:05:18.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:05:18.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:05:18.881
  E0722 10:05:18.954734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:19.958795      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:05:20.898500 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6629" for this suite. @ 07/22/25 10:05:20.901
â€¢ [2.041 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 07/22/25 10:05:20.908
  I0722 10:05:20.908486 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/22/25 10:05:20.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:05:20.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:05:20.923
  STEP: Setting up the test @ 07/22/25 10:05:20.925
  STEP: Creating hostNetwork=false pod @ 07/22/25 10:05:20.925
  E0722 10:05:20.968618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:21.978819      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 07/22/25 10:05:22.943
  E0722 10:05:22.982540      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:23.982792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 07/22/25 10:05:24.959
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/22/25 10:05:24.959
  I0722 10:05:24.959889 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5223 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 10:05:24.959919 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 10:05:24.959962 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5223/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  E0722 10:05:24.983716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:05:24.997081 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 10:05:24.997150 22 exec_util.go:112] Exec stderr: ""
  I0722 10:05:24.997171 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5223 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 10:05:24.997175 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 10:05:24.997215 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5223/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0722 10:05:25.027822 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 10:05:25.027919 22 exec_util.go:112] Exec stderr: ""
  I0722 10:05:25.027935 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5223 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 10:05:25.027940 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 10:05:25.027976 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5223/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0722 10:05:25.062798 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 10:05:25.062889 22 exec_util.go:112] Exec stderr: ""
  I0722 10:05:25.062906 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5223 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 10:05:25.062911 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 10:05:25.062963 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5223/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0722 10:05:25.096338 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 10:05:25.096376 22 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/22/25 10:05:25.096
  I0722 10:05:25.096446 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5223 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 10:05:25.096468 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 10:05:25.096536 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5223/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0722 10:05:25.128845 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 10:05:25.128886 22 exec_util.go:112] Exec stderr: ""
  I0722 10:05:25.128904 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5223 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 10:05:25.128908 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 10:05:25.128944 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5223/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0722 10:05:25.182247 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 10:05:25.182284 22 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/22/25 10:05:25.182
  I0722 10:05:25.182327 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5223 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 10:05:25.182331 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 10:05:25.182369 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5223/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0722 10:05:25.217885 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 10:05:25.217932 22 exec_util.go:112] Exec stderr: ""
  I0722 10:05:25.218022 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5223 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 10:05:25.218027 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 10:05:25.218065 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5223/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0722 10:05:25.248584 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 10:05:25.248631 22 exec_util.go:112] Exec stderr: ""
  I0722 10:05:25.248646 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5223 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 10:05:25.248650 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 10:05:25.248688 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5223/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0722 10:05:25.282296 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 10:05:25.282336 22 exec_util.go:112] Exec stderr: ""
  I0722 10:05:25.282349 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5223 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 10:05:25.282353 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 10:05:25.282389 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5223/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0722 10:05:25.315270 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 10:05:25.315330 22 exec_util.go:112] Exec stderr: ""
  I0722 10:05:25.315426 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5223" for this suite. @ 07/22/25 10:05:25.318
â€¢ [4.416 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/22/25 10:05:25.324
  I0722 10:05:25.324614 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename cronjob @ 07/22/25 10:05:25.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:05:25.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:05:25.338
  STEP: Creating a cronjob @ 07/22/25 10:05:25.34
  STEP: Ensuring more than one job is running at a time @ 07/22/25 10:05:25.345
  E0722 10:05:25.987483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:26.987664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:28.058095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:29.066246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:30.066175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:31.076291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:32.080058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:33.080435      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:34.080821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:35.105253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:36.108116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:37.110057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:38.112044      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:39.112286      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:40.119923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:41.131842      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:42.137015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:43.136996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:44.142336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:45.147156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:46.147183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:47.158337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:48.169902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:49.178014      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:50.184443      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:51.185312      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:52.196487      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:53.205725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:54.212011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:55.213352      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:56.219407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:57.251026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:58.259416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:05:59.287907      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:00.299241      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:01.299328      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:02.319391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:03.357085      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:04.361327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:05.363687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:06.364389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:07.364492      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:08.375683      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:09.377212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:10.377685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:11.377983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:12.381712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:13.397991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:14.401878      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:15.421601      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:16.425654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:17.436634      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:18.454566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:19.463219      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:20.463348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:21.463759      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:22.476768      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:23.478273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:24.479903      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:25.484559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:26.494578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:27.500623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:28.506402      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:29.515841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:30.526609      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:31.531200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:32.536206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:33.536557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:34.540993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:35.545923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:36.554933      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:37.561560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:38.562245      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:39.565876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:40.566689      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:41.578133      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:42.580020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:43.583316      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:44.586536      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:45.590977      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:46.596269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:47.611853      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:48.615563      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:49.615987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:50.625384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:51.625767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:52.626573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:53.634856      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:54.639476      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:55.644190      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:56.645255      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:57.650365      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:58.656439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:06:59.657743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:00.658147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/22/25 10:07:01.348
  STEP: Removing cronjob @ 07/22/25 10:07:01.352
  I0722 10:07:01.388371 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2184" for this suite. @ 07/22/25 10:07:01.393
â€¢ [96.074 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/22/25 10:07:01.399
  I0722 10:07:01.399941 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename events @ 07/22/25 10:07:01.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:07:01.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:07:01.425
  STEP: creating a test event @ 07/22/25 10:07:01.43
  STEP: listing events in all namespaces @ 07/22/25 10:07:01.446
  STEP: listing events in test namespace @ 07/22/25 10:07:01.455
  STEP: listing events with field selection filtering on source @ 07/22/25 10:07:01.461
  STEP: listing events with field selection filtering on reportingController @ 07/22/25 10:07:01.464
  STEP: getting the test event @ 07/22/25 10:07:01.467
  STEP: patching the test event @ 07/22/25 10:07:01.469
  STEP: getting the test event @ 07/22/25 10:07:01.477
  STEP: updating the test event @ 07/22/25 10:07:01.48
  STEP: getting the test event @ 07/22/25 10:07:01.486
  STEP: deleting the test event @ 07/22/25 10:07:01.488
  STEP: listing events in all namespaces @ 07/22/25 10:07:01.494
  STEP: listing events in test namespace @ 07/22/25 10:07:01.496
  I0722 10:07:01.498241 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9237" for this suite. @ 07/22/25 10:07:01.501
â€¢ [0.108 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 07/22/25 10:07:01.507
  I0722 10:07:01.507976 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/22/25 10:07:01.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:07:01.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:07:01.543
  STEP: creating a target pod @ 07/22/25 10:07:01.546
  E0722 10:07:01.658930      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:02.664302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/22/25 10:07:03.58
  E0722 10:07:03.683418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:04.684127      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 07/22/25 10:07:05.598
  STEP: checking pod container endpoints @ 07/22/25 10:07:05.601
  I0722 10:07:05.601975 22 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8706 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 10:07:05.602002 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0722 10:07:05.602032 22 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-8706/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0722 10:07:05.635763 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0722 10:07:05.635811 22 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/22/25 10:07:05.644
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/22/25 10:07:05.649
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/22/25 10:07:05.66
  I0722 10:07:05.664379 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8706" for this suite. @ 07/22/25 10:07:05.667
â€¢ [4.166 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/22/25 10:07:05.674
  I0722 10:07:05.674630 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 10:07:05.675
  E0722 10:07:05.684132      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:07:05.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:07:05.689
  STEP: Creating projection with secret that has name projected-secret-test-026b0905-3a4f-4dd9-8907-0abdbfc1811d @ 07/22/25 10:07:05.691
  STEP: Creating a pod to test consume secrets @ 07/22/25 10:07:05.696
  E0722 10:07:06.688289      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:07.690482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 10:07:07.709
  I0722 10:07:07.712367 22 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-89d89a24-e27e-4f26-9b2b-c79647404416 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 10:07:07.716
  I0722 10:07:07.729966 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4492" for this suite. @ 07/22/25 10:07:07.734
â€¢ [2.065 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 07/22/25 10:07:07.739
  I0722 10:07:07.739653 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename gc @ 07/22/25 10:07:07.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:07:07.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:07:07.753
  STEP: create the rc1 @ 07/22/25 10:07:07.759
  STEP: create the rc2 @ 07/22/25 10:07:07.763
  E0722 10:07:08.692837      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:09.692692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:10.693560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:11.693783      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:12.694000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:13.695124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/22/25 10:07:13.782
  E0722 10:07:14.699475      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:15.700226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/22/25 10:07:15.995
  STEP: wait for the rc to be deleted @ 07/22/25 10:07:16.083
  E0722 10:07:16.700420      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:17.701970      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:18.702238      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:19.702075      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:20.703541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:21.114017 22 garbage_collector.go:770] 72 pods remaining
  I0722 10:07:21.114171 22 garbage_collector.go:777] 72 pods has nil DeletionTimestamp
  I0722 10:07:21.114181 22 garbage_collector.go:778] 
  E0722 10:07:21.703389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:22.703374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:23.703648      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:24.704297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:25.704545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/22/25 10:07:26.104
  W0722 10:07:26.109208      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 10:07:26.109352 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 10:07:26.109408 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2jfkp" in namespace "gc-193"
  I0722 10:07:26.121727 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2jxtb" in namespace "gc-193"
  I0722 10:07:26.139227 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2m86r" in namespace "gc-193"
  I0722 10:07:26.161339 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2sczx" in namespace "gc-193"
  I0722 10:07:26.198646 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4647s" in namespace "gc-193"
  I0722 10:07:26.243030 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-46628" in namespace "gc-193"
  I0722 10:07:26.323868 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4dsjm" in namespace "gc-193"
  I0722 10:07:26.348809 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4g5ls" in namespace "gc-193"
  I0722 10:07:26.375760 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4gbn9" in namespace "gc-193"
  I0722 10:07:26.405538 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4zzhr" in namespace "gc-193"
  I0722 10:07:26.447086 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5jq6s" in namespace "gc-193"
  I0722 10:07:26.477032 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-69298" in namespace "gc-193"
  I0722 10:07:26.504875 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6ftm6" in namespace "gc-193"
  I0722 10:07:26.528095 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6gwmx" in namespace "gc-193"
  I0722 10:07:26.546550 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6j4zg" in namespace "gc-193"
  I0722 10:07:26.570277 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lbjl" in namespace "gc-193"
  I0722 10:07:26.622558 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6mv8x" in namespace "gc-193"
  I0722 10:07:26.678460 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6p2p5" in namespace "gc-193"
  E0722 10:07:26.705497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:26.743878 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6w886" in namespace "gc-193"
  I0722 10:07:26.765778 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6wr8n" in namespace "gc-193"
  I0722 10:07:26.885505 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-79pqj" in namespace "gc-193"
  I0722 10:07:26.915104 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7kkl8" in namespace "gc-193"
  I0722 10:07:26.955594 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7mp2d" in namespace "gc-193"
  I0722 10:07:27.019358 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7phn7" in namespace "gc-193"
  I0722 10:07:27.075734 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qdjf" in namespace "gc-193"
  I0722 10:07:27.135498 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qhqc" in namespace "gc-193"
  I0722 10:07:27.199021 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7r648" in namespace "gc-193"
  I0722 10:07:27.248225 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7sdlf" in namespace "gc-193"
  I0722 10:07:27.324738 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88tw8" in namespace "gc-193"
  I0722 10:07:27.430812 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8z7pr" in namespace "gc-193"
  I0722 10:07:27.498391 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-97gvc" in namespace "gc-193"
  I0722 10:07:27.552670 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9sh5s" in namespace "gc-193"
  I0722 10:07:27.591676 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6lph" in namespace "gc-193"
  I0722 10:07:27.664486 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bpzbw" in namespace "gc-193"
  E0722 10:07:27.706853      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:27.733030 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bwtj8" in namespace "gc-193"
  I0722 10:07:27.787066 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d57kd" in namespace "gc-193"
  I0722 10:07:27.835279 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d6dtj" in namespace "gc-193"
  I0722 10:07:27.896645 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d8wf4" in namespace "gc-193"
  I0722 10:07:27.920865 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dmmr5" in namespace "gc-193"
  I0722 10:07:27.981338 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dtt6g" in namespace "gc-193"
  I0722 10:07:28.027217 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dvpzz" in namespace "gc-193"
  I0722 10:07:28.066704 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f4n5c" in namespace "gc-193"
  I0722 10:07:28.099398 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fk47k" in namespace "gc-193"
  I0722 10:07:28.129290 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fmxjc" in namespace "gc-193"
  I0722 10:07:28.238394 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fwj46" in namespace "gc-193"
  I0722 10:07:28.295911 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g4wps" in namespace "gc-193"
  I0722 10:07:28.397592 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gpzvd" in namespace "gc-193"
  I0722 10:07:28.454550 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h52v7" in namespace "gc-193"
  I0722 10:07:28.496123 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hc57r" in namespace "gc-193"
  I0722 10:07:28.546083 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hw995" in namespace "gc-193"
  I0722 10:07:28.582496 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-193" for this suite. @ 07/22/25 10:07:28.65
â€¢ [20.922 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/22/25 10:07:28.662
  I0722 10:07:28.662484 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename deployment @ 07/22/25 10:07:28.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:07:28.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:07:28.702
  E0722 10:07:28.706781      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:28.722300 22 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  E0722 10:07:29.707585      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:30.709779      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:31.747534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:32.748362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:33.726606 22 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 10:07:33.726
  I0722 10:07:33.726696 22 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0722 10:07:33.748660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:34.748737      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:35.730327 22 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0722 10:07:35.741582 22 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0722 10:07:35.749049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:36.749825      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:37.749415 22 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  E0722 10:07:37.750439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:37.754561 22 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0722 10:07:37.759554 22 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0722 10:07:37.769128 22 deployment.go:314] Updating deployment test-rollover-deployment
  I0722 10:07:37.769226 22 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0722 10:07:38.756815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:39.757208      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:39.792079 22 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0722 10:07:39.796405 22 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0722 10:07:39.800311 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0722 10:07:39.800415 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 10, 7, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 10:07:40.785382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:41.763778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:41.820909 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0722 10:07:41.820982 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 10, 7, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 10:07:42.767135      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:43.770449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:43.827003 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0722 10:07:43.827053 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 10, 7, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 10:07:44.773095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:45.775664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:45.812043 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0722 10:07:45.812113 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 10, 7, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 10:07:46.779811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:47.790215      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:47.826495 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0722 10:07:47.826561 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 10, 7, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 10, 7, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 10:07:48.806058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:49.806890      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:49.811899 22 deployment.go:95] 
  I0722 10:07:49.812117 22 deployment.go:993] Ensure that both old replica sets have no replicas
  I0722 10:07:49.822106 22 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6571",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0281d56e-9066-48b7-8abf-ef1ebff0a35b",
      ResourceVersion: (string) (len=5) "43883",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775655,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775657,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 10:07:49.825694 22 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6571",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44332435-2ff4-4b8b-8f52-bda80ba3df29",
      ResourceVersion: (string) (len=5) "43873",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775657,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0281d56e-9066-48b7-8abf-ef1ebff0a35b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775657,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 32 38 31 64 35  36 65 2d 39 30 36 36 2d  |\"0281d56e-9066-|
              00000120  34 38 62 37 2d 38 61 62  66 2d 65 66 31 65 62 66  |48b7-8abf-ef1ebf|
              00000130  66 30 61 33 35 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f0a35b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 10:07:49.826044 22 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0722 10:07:49.826302 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6571",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f42c2d8-69b1-4a0b-87ce-8a8c92c3f177",
      ResourceVersion: (string) (len=5) "43882",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0281d56e-9066-48b7-8abf-ef1ebff0a35b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  30 32 38 31 64 35 36 65  2d 39 30 36 36 2d 34 38  |0281d56e-9066-48|
              000000c0  62 37 2d 38 61 62 66 2d  65 66 31 65 62 66 66 30  |b7-8abf-ef1ebff0|
              000000d0  61 33 35 62 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |a35b\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 10:07:49.826953 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6571",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dad6a194-123f-4ef4-b80a-b545448fe284",
      ResourceVersion: (string) (len=5) "43810",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775655,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0281d56e-9066-48b7-8abf-ef1ebff0a35b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775657,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 32 38 31 64 35  36 65 2d 39 30 36 36 2d  |\"0281d56e-9066-|
              00000120  34 38 62 37 2d 38 61 62  66 2d 65 66 31 65 62 66  |48b7-8abf-ef1ebf|
              00000130  66 30 61 33 35 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f0a35b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775657,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 10:07:49.831767 22 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-2rsg7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-2rsg7",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-6571",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3fa2193-6a34-4992-825a-5241d8023979",
      ResourceVersion: (string) (len=5) "43821",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775657,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e1078a0c269549d3a8c4b3f241fca7727b8caf34dee93140af8ec9e080e6b8e7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.106/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.106/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "44332435-2ff4-4b8b-8f52-bda80ba3df29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775657,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 34  33 33 32 34 33 35 2d 32  |d\":\"44332435-2|
              00000090  66 66 34 2d 34 62 38 62  2d 38 66 35 32 2d 62 64  |ff4-4b8b-8f52-bd|
              000000a0  61 38 30 62 61 33 64 66  32 39 5c 22 7d 22 3a 7b  |a80ba3df29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 30 39 2e 31  30 36 5c 22 7d 22 3a 7b  |.1.209.106\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cf4n7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cf4n7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775657,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888775657,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.105.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.105.31"
        }
      },
      PodIP: (string) (len=12) "10.1.209.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.209.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888775657,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888775658,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://32701c40c0026e464390a1ba009d1be9f939e7c9984c3cf69fa4e520a5aa6493",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cf4n7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 10:07:49.832637 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6571" for this suite. @ 07/22/25 10:07:49.837
â€¢ [21.183 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 07/22/25 10:07:49.845
  I0722 10:07:49.845864 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 10:07:49.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:07:49.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:07:49.861
  STEP: Creating configMap with name cm-test-opt-del-ac0da632-0432-4701-9d1e-e983e6648d24 @ 07/22/25 10:07:49.866
  STEP: Creating configMap with name cm-test-opt-upd-f05df744-4ee4-44fe-ba3a-6776e69fbea6 @ 07/22/25 10:07:49.872
  STEP: Creating the pod @ 07/22/25 10:07:49.878
  E0722 10:07:50.807045      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:51.807301      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-ac0da632-0432-4701-9d1e-e983e6648d24 @ 07/22/25 10:07:51.936
  STEP: Updating configmap cm-test-opt-upd-f05df744-4ee4-44fe-ba3a-6776e69fbea6 @ 07/22/25 10:07:51.945
  STEP: Creating configMap with name cm-test-opt-create-92ed9868-eac7-4050-8dde-a1d0f5d5c4ca @ 07/22/25 10:07:51.951
  STEP: waiting to observe update in volume @ 07/22/25 10:07:51.956
  E0722 10:07:52.825503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:53.825976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:54.827963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:55.841441      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:07:55.996142 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1343" for this suite. @ 07/22/25 10:07:55.999
â€¢ [6.161 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 07/22/25 10:07:56.006
  I0722 10:07:56.007027 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 10:07:56.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:07:56.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:07:56.027
  STEP: Creating configMap with name configmap-test-volume-085a055a-f622-4cc0-823e-c7294d8d2ac4 @ 07/22/25 10:07:56.03
  STEP: Creating a pod to test consume configMaps @ 07/22/25 10:07:56.035
  E0722 10:07:56.846994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:57.847886      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 10:07:58.057
  I0722 10:07:58.060070 22 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-d4cacb4e-bfea-4fcc-87ae-c641962193c3 container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 10:07:58.063
  I0722 10:07:58.076376 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8207" for this suite. @ 07/22/25 10:07:58.079
â€¢ [2.078 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 07/22/25 10:07:58.085
  I0722 10:07:58.085129 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename runtimeclass @ 07/22/25 10:07:58.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:07:58.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:07:58.1
  E0722 10:07:58.848473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:07:59.851635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:08:00.126311 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3451" for this suite. @ 07/22/25 10:08:00.13
â€¢ [2.051 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 07/22/25 10:08:00.137
  I0722 10:08:00.137223 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename projected @ 07/22/25 10:08:00.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:08:00.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:08:00.154
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 10:08:00.157
  E0722 10:08:00.877757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:01.878025      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:02.892426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:03.902491      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 10:08:04.187
  I0722 10:08:04.190005 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-f130b91e-91ff-446f-ab56-6307638f769d container client-container: <nil>
  STEP: delete the pod @ 07/22/25 10:08:04.194
  I0722 10:08:04.210280 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7080" for this suite. @ 07/22/25 10:08:04.215
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/22/25 10:08:04.221
  I0722 10:08:04.221634 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename pods @ 07/22/25 10:08:04.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:08:04.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:08:04.236
  STEP: creating the pod @ 07/22/25 10:08:04.239
  STEP: submitting the pod to kubernetes @ 07/22/25 10:08:04.239
  E0722 10:08:04.908882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:05.910277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/22/25 10:08:06.272
  STEP: updating the pod @ 07/22/25 10:08:06.275
  I0722 10:08:06.798006 22 pod_client.go:173] Successfully updated pod "pod-update-3d39b1c9-3675-4eee-8ca4-bd4b51d18d3a"
  STEP: verifying the updated pod is in kubernetes @ 07/22/25 10:08:06.8
  I0722 10:08:06.803140 22 pods.go:391] Pod update OK
  I0722 10:08:06.803254 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6477" for this suite. @ 07/22/25 10:08:06.806
â€¢ [2.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 07/22/25 10:08:06.811
  I0722 10:08:06.811638 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename job @ 07/22/25 10:08:06.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:08:06.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:08:06.826
  STEP: Creating a job @ 07/22/25 10:08:06.828
  STEP: Ensuring active pods == parallelism @ 07/22/25 10:08:06.833
  E0722 10:08:06.924784      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:07.937784      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 07/22/25 10:08:08.872
  E0722 10:08:08.938529      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:08:09.392249 22 pod_client.go:173] Successfully updated pod "adopt-release-88wrq"
  STEP: Checking that the Job readopts the Pod @ 07/22/25 10:08:09.392
  E0722 10:08:09.954498      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:10.955051      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 07/22/25 10:08:11.406
  I0722 10:08:11.919304 22 pod_client.go:173] Successfully updated pod "adopt-release-88wrq"
  STEP: Checking that the Job releases the Pod @ 07/22/25 10:08:11.919
  E0722 10:08:11.957664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:12.960213      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:08:13.934376 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8904" for this suite. @ 07/22/25 10:08:13.936
â€¢ [7.132 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 07/22/25 10:08:13.944
  I0722 10:08:13.944299 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 10:08:13.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:08:13.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:08:13.957
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 10:08:13.959
  E0722 10:08:13.960866      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:14.969684      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:15.970111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:16.970389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:17.975623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 10:08:17.979
  I0722 10:08:17.982797 22 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-fb8c6c01-5cbe-4c36-8a20-935b7fd97621 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 10:08:17.989
  I0722 10:08:18.007170 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5797" for this suite. @ 07/22/25 10:08:18.011
â€¢ [4.076 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 07/22/25 10:08:18.02
  I0722 10:08:18.020659 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename webhook @ 07/22/25 10:08:18.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:08:18.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:08:18.046
  STEP: Setting up server cert @ 07/22/25 10:08:18.075
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 10:08:18.265
  STEP: Deploying the webhook pod @ 07/22/25 10:08:18.274
  STEP: Wait for the deployment to be ready @ 07/22/25 10:08:18.291
  I0722 10:08:18.302727 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0722 10:08:18.976112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:19.985153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 10:08:20.32
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 10:08:20.334
  E0722 10:08:20.985874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:08:21.335228 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/22/25 10:08:21.338
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/22/25 10:08:21.349
  STEP: Creating a dummy validating-webhook-configuration object @ 07/22/25 10:08:21.36
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/22/25 10:08:21.366
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/22/25 10:08:21.373
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/22/25 10:08:21.383
  I0722 10:08:21.447401 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7338" for this suite. @ 07/22/25 10:08:21.45
  STEP: Destroying namespace "webhook-markers-4096" for this suite. @ 07/22/25 10:08:21.456
â€¢ [3.442 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 07/22/25 10:08:21.463
  I0722 10:08:21.463422 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename configmap @ 07/22/25 10:08:21.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:08:21.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:08:21.476
  STEP: Creating configMap configmap-9100/configmap-test-6c9c9067-aaa4-4bac-ab39-0de1c25cf2da @ 07/22/25 10:08:21.478
  STEP: Creating a pod to test consume configMaps @ 07/22/25 10:08:21.518
  E0722 10:08:21.989430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:22.989748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:23.990081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:25.012331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 10:08:25.574
  I0722 10:08:25.578190 22 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-7dcbcf67-120e-4076-a5dc-9887d06c5639 container env-test: <nil>
  STEP: delete the pod @ 07/22/25 10:08:25.583
  I0722 10:08:25.597345 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9100" for this suite. @ 07/22/25 10:08:25.599
â€¢ [4.142 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/22/25 10:08:25.605
  I0722 10:08:25.605369 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename podtemplate @ 07/22/25 10:08:25.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:08:25.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:08:25.622
  STEP: Create set of pod templates @ 07/22/25 10:08:25.624
  I0722 10:08:25.629949 22 podtemplates.go:143] created test-podtemplate-1
  I0722 10:08:25.634449 22 podtemplates.go:143] created test-podtemplate-2
  I0722 10:08:25.639058 22 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/22/25 10:08:25.639
  STEP: delete collection of pod templates @ 07/22/25 10:08:25.643
  I0722 10:08:25.643165 22 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/22/25 10:08:25.656
  I0722 10:08:25.656849 22 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0722 10:08:25.741208 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2556" for this suite. @ 07/22/25 10:08:25.744
â€¢ [0.145 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 07/22/25 10:08:25.75
  I0722 10:08:25.750938 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 10:08:25.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:08:25.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:08:25.765
  STEP: Counting existing ResourceQuota @ 07/22/25 10:08:25.768
  E0722 10:08:26.012488      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:27.017162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:28.026595      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:29.033568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:30.040228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/22/25 10:08:30.791
  STEP: Ensuring resource quota status is calculated @ 07/22/25 10:08:30.799
  E0722 10:08:31.043972      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:32.055812      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 07/22/25 10:08:32.805
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/22/25 10:08:32.82
  E0722 10:08:33.057533      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:34.061757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/22/25 10:08:34.825
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/22/25 10:08:34.827
  STEP: Ensuring a pod cannot update its resource requirements @ 07/22/25 10:08:34.829
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/22/25 10:08:34.832
  E0722 10:08:35.063337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:36.114557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/22/25 10:08:36.843
  STEP: Ensuring resource quota status released the pod usage @ 07/22/25 10:08:36.855
  E0722 10:08:37.121977      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:38.123137      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0722 10:08:38.860405 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8919" for this suite. @ 07/22/25 10:08:38.863
â€¢ [13.118 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 07/22/25 10:08:38.869
  I0722 10:08:38.869422 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename disruption @ 07/22/25 10:08:38.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:08:38.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:08:38.884
  STEP: Creating a kubernetes client @ 07/22/25 10:08:38.886
  I0722 10:08:38.886896 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3871980464
  STEP: Building a namespace api object, basename disruption-2 @ 07/22/25 10:08:38.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 10:08:38.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 10:08:38.901
  STEP: Waiting for the pdb to be processed @ 07/22/25 10:08:38.909
  E0722 10:08:39.123306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:40.136975      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/22/25 10:08:40.927
  E0722 10:08:41.139949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:42.153525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/22/25 10:08:42.941
  E0722 10:08:43.154621      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0722 10:08:44.172091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 07/22/25 10:08:44.962
  STEP: listing a collection of PDBs in namespace disruption-4513 @ 07/22/25 10:08:44.967
  STEP: deleting a collection of PDBs @ 07/22/25 10:08:44.97
  STEP: Waiting for the PDB collection to be deleted @ 07/22/25 10:08:44.981
  I0722 10:08:44.984696 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7095" for this suite. @ 07/22/25 10:08:44.988
  I0722 10:08:44.994843 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4513" for this suite. @ 07/22/25 10:08:45.004
â€¢ [6.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0722 10:08:45.010099 22 suites.go:34] Running AfterSuite actions on node 1
  I0722 10:08:45.010123 22 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.047 seconds]
------------------------------

Ran 419 of 6731 Specs in 6163.971 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h42m44.605322176s
Test Suite Passed
